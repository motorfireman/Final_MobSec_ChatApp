.class public Lezvcard/io/scribe/ImppScribe;
.super Lezvcard/io/scribe/VCardPropertyScribe;
.source "ImppScribe.java"


# annotations
.annotation system Ldalvik/annotation/MemberClasses;
    value = {
        Lezvcard/io/scribe/ImppScribe$HtmlLinkFormat;
    }
.end annotation

.annotation system Ldalvik/annotation/Signature;
    value = {
        "Lezvcard/io/scribe/VCardPropertyScribe<",
        "Lezvcard/property/Impp;",
        ">;"
    }
.end annotation


# static fields
.field public static final AIM:Ljava/lang/String; = "aim"

.field public static final ICQ:Ljava/lang/String; = "icq"

.field public static final IRC:Ljava/lang/String; = "irc"

.field public static final MSN:Ljava/lang/String; = "msnim"

.field public static final SIP:Ljava/lang/String; = "sip"

.field public static final SKYPE:Ljava/lang/String; = "skype"

.field public static final XMPP:Ljava/lang/String; = "xmpp"

.field public static final YAHOO:Ljava/lang/String; = "ymsgr"

.field private static final htmlLinkFormats:Ljava/util/List;
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "Ljava/util/List<",
            "Lezvcard/io/scribe/ImppScribe$HtmlLinkFormat;",
            ">;"
        }
    .end annotation
.end field


# direct methods
.method static constructor <clinit>()V
    .locals 8

    .line 155
    new-instance v0, Ljava/util/ArrayList;

    invoke-direct {v0}, Ljava/util/ArrayList;-><init>()V

    .line 158
    .local v0, "list":Ljava/util/List;, "Ljava/util/List<Lezvcard/io/scribe/ImppScribe$HtmlLinkFormat;>;"
    new-instance v1, Lezvcard/io/scribe/ImppScribe$HtmlLinkFormat;

    const-string v2, "aim"

    const-string v3, "(goim|addbuddy)\\?.*?\\bscreenname=(.*?)(&|$)"

    const/4 v4, 0x2

    const-string v5, "goim?screenname=%s"

    invoke-direct {v1, v2, v3, v4, v5}, Lezvcard/io/scribe/ImppScribe$HtmlLinkFormat;-><init>(Ljava/lang/String;Ljava/lang/String;ILjava/lang/String;)V

    invoke-interface {v0, v1}, Ljava/util/List;->add(Ljava/lang/Object;)Z

    .line 161
    new-instance v1, Lezvcard/io/scribe/ImppScribe$HtmlLinkFormat;

    const-string/jumbo v2, "ymsgr"

    const-string v3, "(sendim|addfriend|sendfile|call)\\?(.*)"

    const-string v5, "sendim?%s"

    invoke-direct {v1, v2, v3, v4, v5}, Lezvcard/io/scribe/ImppScribe$HtmlLinkFormat;-><init>(Ljava/lang/String;Ljava/lang/String;ILjava/lang/String;)V

    invoke-interface {v0, v1}, Ljava/util/List;->add(Ljava/lang/Object;)Z

    .line 164
    new-instance v1, Lezvcard/io/scribe/ImppScribe$HtmlLinkFormat;

    const-string v2, "skype"

    const-string v3, "(.*?)(\\?|$)"

    const/4 v5, 0x1

    const-string v6, "%s"

    invoke-direct {v1, v2, v3, v5, v6}, Lezvcard/io/scribe/ImppScribe$HtmlLinkFormat;-><init>(Ljava/lang/String;Ljava/lang/String;ILjava/lang/String;)V

    invoke-interface {v0, v1}, Ljava/util/List;->add(Ljava/lang/Object;)Z

    .line 167
    new-instance v1, Lezvcard/io/scribe/ImppScribe$HtmlLinkFormat;

    const-string v2, "msnim"

    const-string v6, "(chat|add|voice|video)\\?contact=(.*?)(&|$)"

    const-string v7, "chat?contact=%s"

    invoke-direct {v1, v2, v6, v4, v7}, Lezvcard/io/scribe/ImppScribe$HtmlLinkFormat;-><init>(Ljava/lang/String;Ljava/lang/String;ILjava/lang/String;)V

    invoke-interface {v0, v1}, Ljava/util/List;->add(Ljava/lang/Object;)Z

    .line 170
    new-instance v1, Lezvcard/io/scribe/ImppScribe$HtmlLinkFormat;

    const-string/jumbo v2, "xmpp"

    const-string v4, "%s?message"

    invoke-direct {v1, v2, v3, v5, v4}, Lezvcard/io/scribe/ImppScribe$HtmlLinkFormat;-><init>(Ljava/lang/String;Ljava/lang/String;ILjava/lang/String;)V

    invoke-interface {v0, v1}, Ljava/util/List;->add(Ljava/lang/Object;)Z

    .line 173
    new-instance v1, Lezvcard/io/scribe/ImppScribe$HtmlLinkFormat;

    const-string v2, "icq"

    const-string v3, "message\\?uin=(\\d+)"

    const-string v4, "message?uin=%s"

    invoke-direct {v1, v2, v3, v5, v4}, Lezvcard/io/scribe/ImppScribe$HtmlLinkFormat;-><init>(Ljava/lang/String;Ljava/lang/String;ILjava/lang/String;)V

    invoke-interface {v0, v1}, Ljava/util/List;->add(Ljava/lang/Object;)Z

    .line 177
    new-instance v1, Lezvcard/io/scribe/ImppScribe$HtmlLinkFormat;

    const-string v2, "sip"

    invoke-direct {v1, v2}, Lezvcard/io/scribe/ImppScribe$HtmlLinkFormat;-><init>(Ljava/lang/String;)V

    invoke-interface {v0, v1}, Ljava/util/List;->add(Ljava/lang/Object;)Z

    .line 181
    new-instance v1, Lezvcard/io/scribe/ImppScribe$HtmlLinkFormat;

    const-string v2, "irc"

    invoke-direct {v1, v2}, Lezvcard/io/scribe/ImppScribe$HtmlLinkFormat;-><init>(Ljava/lang/String;)V

    invoke-interface {v0, v1}, Ljava/util/List;->add(Ljava/lang/Object;)Z

    .line 183
    invoke-static {v0}, Ljava/util/Collections;->unmodifiableList(Ljava/util/List;)Ljava/util/List;

    move-result-object v1

    sput-object v1, Lezvcard/io/scribe/ImppScribe;->htmlLinkFormats:Ljava/util/List;

    .line 184
    .end local v0    # "list":Ljava/util/List;, "Ljava/util/List<Lezvcard/io/scribe/ImppScribe$HtmlLinkFormat;>;"
    return-void
.end method

.method public constructor <init>()V
    .locals 2

    .line 65
    const-class v0, Lezvcard/property/Impp;

    const-string v1, "IMPP"

    invoke-direct {p0, v0, v1}, Lezvcard/io/scribe/VCardPropertyScribe;-><init>(Ljava/lang/Class;Ljava/lang/String;)V

    .line 66
    return-void
.end method

.method private parse(Ljava/lang/String;)Lezvcard/property/Impp;
    .locals 6
    .param p1, "value"    # Ljava/lang/String;

    .line 138
    if-eqz p1, :cond_1

    invoke-virtual {p1}, Ljava/lang/String;->length()I

    move-result v0

    if-nez v0, :cond_0

    goto :goto_0

    .line 143
    :cond_0
    :try_start_0
    new-instance v0, Lezvcard/property/Impp;

    invoke-direct {v0, p1}, Lezvcard/property/Impp;-><init>(Ljava/lang/String;)V
    :try_end_0
    .catch Ljava/lang/IllegalArgumentException; {:try_start_0 .. :try_end_0} :catch_0

    return-object v0

    .line 144
    :catch_0
    move-exception v0

    .line 145
    .local v0, "e":Ljava/lang/IllegalArgumentException;
    new-instance v1, Lezvcard/io/CannotParseException;

    const/16 v2, 0xf

    const/4 v3, 0x2

    new-array v3, v3, [Ljava/lang/Object;

    const/4 v4, 0x0

    aput-object p1, v3, v4

    const/4 v4, 0x1

    invoke-virtual {v0}, Ljava/lang/IllegalArgumentException;->getMessage()Ljava/lang/String;

    move-result-object v5

    aput-object v5, v3, v4

    invoke-direct {v1, v2, v3}, Lezvcard/io/CannotParseException;-><init>(I[Ljava/lang/Object;)V

    throw v1

    .line 139
    .end local v0    # "e":Ljava/lang/IllegalArgumentException;
    :cond_1
    :goto_0
    new-instance v0, Lezvcard/property/Impp;

    const/4 v1, 0x0

    move-object v2, v1

    check-cast v2, Ljava/net/URI;

    invoke-direct {v0, v1}, Lezvcard/property/Impp;-><init>(Ljava/net/URI;)V

    return-object v0
.end method

.method private write(Lezvcard/property/Impp;)Ljava/lang/String;
    .locals 2
    .param p1, "property"    # Lezvcard/property/Impp;

    .line 133
    invoke-virtual {p1}, Lezvcard/property/Impp;->getUri()Ljava/net/URI;

    move-result-object v0

    .line 134
    .local v0, "uri":Ljava/net/URI;
    if-nez v0, :cond_0

    const-string v1, ""

    goto :goto_0

    :cond_0
    invoke-virtual {v0}, Ljava/net/URI;->toASCIIString()Ljava/lang/String;

    move-result-object v1

    :goto_0
    return-object v1
.end method


# virtual methods
.method protected _defaultDataType(Lezvcard/VCardVersion;)Lezvcard/VCardDataType;
    .locals 1
    .param p1, "version"    # Lezvcard/VCardVersion;

    .line 75
    sget-object v0, Lezvcard/VCardDataType;->URI:Lezvcard/VCardDataType;

    return-object v0
.end method

.method protected _parseHtml(Lezvcard/io/html/HCardElement;Lezvcard/io/ParseContext;)Lezvcard/property/Impp;
    .locals 6
    .param p1, "element"    # Lezvcard/io/html/HCardElement;
    .param p2, "context"    # Lezvcard/io/ParseContext;

    .line 106
    const-string v0, "href"

    invoke-virtual {p1, v0}, Lezvcard/io/html/HCardElement;->attr(Ljava/lang/String;)Ljava/lang/String;

    move-result-object v0

    .line 107
    .local v0, "href":Ljava/lang/String;
    invoke-virtual {v0}, Ljava/lang/String;->length()I

    move-result v1

    if-nez v1, :cond_0

    .line 108
    invoke-virtual {p1}, Lezvcard/io/html/HCardElement;->value()Ljava/lang/String;

    move-result-object v0

    .line 112
    :cond_0
    :try_start_0
    invoke-virtual {p0, v0}, Lezvcard/io/scribe/ImppScribe;->parseHtmlLink(Ljava/lang/String;)Ljava/net/URI;

    move-result-object v1

    .line 113
    .local v1, "uri":Ljava/net/URI;
    if-eqz v1, :cond_1

    .line 116
    new-instance v2, Lezvcard/property/Impp;

    invoke-direct {v2, v1}, Lezvcard/property/Impp;-><init>(Ljava/net/URI;)V

    return-object v2

    .line 114
    :cond_1
    new-instance v2, Ljava/lang/IllegalArgumentException;

    invoke-direct {v2}, Ljava/lang/IllegalArgumentException;-><init>()V

    .end local v0    # "href":Ljava/lang/String;
    .end local p1    # "element":Lezvcard/io/html/HCardElement;
    .end local p2    # "context":Lezvcard/io/ParseContext;
    throw v2
    :try_end_0
    .catch Ljava/lang/IllegalArgumentException; {:try_start_0 .. :try_end_0} :catch_0

    .line 117
    .end local v1    # "uri":Ljava/net/URI;
    .restart local v0    # "href":Ljava/lang/String;
    .restart local p1    # "element":Lezvcard/io/html/HCardElement;
    .restart local p2    # "context":Lezvcard/io/ParseContext;
    :catch_0
    move-exception v1

    .line 118
    .local v1, "e":Ljava/lang/IllegalArgumentException;
    new-instance v2, Lezvcard/io/CannotParseException;

    const/16 v3, 0xe

    const/4 v4, 0x1

    new-array v4, v4, [Ljava/lang/Object;

    const/4 v5, 0x0

    aput-object v0, v4, v5

    invoke-direct {v2, v3, v4}, Lezvcard/io/CannotParseException;-><init>(I[Ljava/lang/Object;)V

    throw v2
.end method

.method protected bridge synthetic _parseHtml(Lezvcard/io/html/HCardElement;Lezvcard/io/ParseContext;)Lezvcard/property/VCardProperty;
    .locals 1
    .param p1, "x0"    # Lezvcard/io/html/HCardElement;
    .param p2, "x1"    # Lezvcard/io/ParseContext;

    .line 54
    invoke-virtual {p0, p1, p2}, Lezvcard/io/scribe/ImppScribe;->_parseHtml(Lezvcard/io/html/HCardElement;Lezvcard/io/ParseContext;)Lezvcard/property/Impp;

    move-result-object v0

    return-object v0
.end method

.method protected _parseJson(Lezvcard/io/json/JCardValue;Lezvcard/VCardDataType;Lezvcard/parameter/VCardParameters;Lezvcard/io/ParseContext;)Lezvcard/property/Impp;
    .locals 1
    .param p1, "value"    # Lezvcard/io/json/JCardValue;
    .param p2, "dataType"    # Lezvcard/VCardDataType;
    .param p3, "parameters"    # Lezvcard/parameter/VCardParameters;
    .param p4, "context"    # Lezvcard/io/ParseContext;

    .line 129
    invoke-virtual {p1}, Lezvcard/io/json/JCardValue;->asSingle()Ljava/lang/String;

    move-result-object v0

    invoke-direct {p0, v0}, Lezvcard/io/scribe/ImppScribe;->parse(Ljava/lang/String;)Lezvcard/property/Impp;

    move-result-object v0

    return-object v0
.end method

.method protected bridge synthetic _parseJson(Lezvcard/io/json/JCardValue;Lezvcard/VCardDataType;Lezvcard/parameter/VCardParameters;Lezvcard/io/ParseContext;)Lezvcard/property/VCardProperty;
    .locals 1
    .param p1, "x0"    # Lezvcard/io/json/JCardValue;
    .param p2, "x1"    # Lezvcard/VCardDataType;
    .param p3, "x2"    # Lezvcard/parameter/VCardParameters;
    .param p4, "x3"    # Lezvcard/io/ParseContext;

    .line 54
    invoke-virtual {p0, p1, p2, p3, p4}, Lezvcard/io/scribe/ImppScribe;->_parseJson(Lezvcard/io/json/JCardValue;Lezvcard/VCardDataType;Lezvcard/parameter/VCardParameters;Lezvcard/io/ParseContext;)Lezvcard/property/Impp;

    move-result-object v0

    return-object v0
.end method

.method protected _parseText(Ljava/lang/String;Lezvcard/VCardDataType;Lezvcard/parameter/VCardParameters;Lezvcard/io/ParseContext;)Lezvcard/property/Impp;
    .locals 1
    .param p1, "value"    # Ljava/lang/String;
    .param p2, "dataType"    # Lezvcard/VCardDataType;
    .param p3, "parameters"    # Lezvcard/parameter/VCardParameters;
    .param p4, "context"    # Lezvcard/io/ParseContext;

    .line 85
    invoke-static {p1}, Lcom/github/mangstadt/vinnie/io/VObjectPropertyValues;->unescape(Ljava/lang/String;)Ljava/lang/String;

    move-result-object p1

    .line 86
    invoke-direct {p0, p1}, Lezvcard/io/scribe/ImppScribe;->parse(Ljava/lang/String;)Lezvcard/property/Impp;

    move-result-object v0

    return-object v0
.end method

.method protected bridge synthetic _parseText(Ljava/lang/String;Lezvcard/VCardDataType;Lezvcard/parameter/VCardParameters;Lezvcard/io/ParseContext;)Lezvcard/property/VCardProperty;
    .locals 1
    .param p1, "x0"    # Ljava/lang/String;
    .param p2, "x1"    # Lezvcard/VCardDataType;
    .param p3, "x2"    # Lezvcard/parameter/VCardParameters;
    .param p4, "x3"    # Lezvcard/io/ParseContext;

    .line 54
    invoke-virtual {p0, p1, p2, p3, p4}, Lezvcard/io/scribe/ImppScribe;->_parseText(Ljava/lang/String;Lezvcard/VCardDataType;Lezvcard/parameter/VCardParameters;Lezvcard/io/ParseContext;)Lezvcard/property/Impp;

    move-result-object v0

    return-object v0
.end method

.method protected _parseXml(Lezvcard/io/xml/XCardElement;Lezvcard/parameter/VCardParameters;Lezvcard/io/ParseContext;)Lezvcard/property/Impp;
    .locals 4
    .param p1, "element"    # Lezvcard/io/xml/XCardElement;
    .param p2, "parameters"    # Lezvcard/parameter/VCardParameters;
    .param p3, "context"    # Lezvcard/io/ParseContext;

    .line 96
    const/4 v0, 0x1

    new-array v1, v0, [Lezvcard/VCardDataType;

    sget-object v2, Lezvcard/VCardDataType;->URI:Lezvcard/VCardDataType;

    const/4 v3, 0x0

    aput-object v2, v1, v3

    invoke-virtual {p1, v1}, Lezvcard/io/xml/XCardElement;->first([Lezvcard/VCardDataType;)Ljava/lang/String;

    move-result-object v1

    .line 97
    .local v1, "value":Ljava/lang/String;
    if-eqz v1, :cond_0

    .line 98
    invoke-direct {p0, v1}, Lezvcard/io/scribe/ImppScribe;->parse(Ljava/lang/String;)Lezvcard/property/Impp;

    move-result-object v0

    return-object v0

    .line 101
    :cond_0
    new-array v0, v0, [Lezvcard/VCardDataType;

    sget-object v2, Lezvcard/VCardDataType;->URI:Lezvcard/VCardDataType;

    aput-object v2, v0, v3

    invoke-static {v0}, Lezvcard/io/scribe/ImppScribe;->missingXmlElements([Lezvcard/VCardDataType;)Lezvcard/io/CannotParseException;

    move-result-object v0

    throw v0
.end method

.method protected bridge synthetic _parseXml(Lezvcard/io/xml/XCardElement;Lezvcard/parameter/VCardParameters;Lezvcard/io/ParseContext;)Lezvcard/property/VCardProperty;
    .locals 1
    .param p1, "x0"    # Lezvcard/io/xml/XCardElement;
    .param p2, "x1"    # Lezvcard/parameter/VCardParameters;
    .param p3, "x2"    # Lezvcard/io/ParseContext;

    .line 54
    invoke-virtual {p0, p1, p2, p3}, Lezvcard/io/scribe/ImppScribe;->_parseXml(Lezvcard/io/xml/XCardElement;Lezvcard/parameter/VCardParameters;Lezvcard/io/ParseContext;)Lezvcard/property/Impp;

    move-result-object v0

    return-object v0
.end method

.method protected _prepareParameters(Lezvcard/property/Impp;Lezvcard/parameter/VCardParameters;Lezvcard/VCardVersion;Lezvcard/VCard;)V
    .locals 0
    .param p1, "property"    # Lezvcard/property/Impp;
    .param p2, "copy"    # Lezvcard/parameter/VCardParameters;
    .param p3, "version"    # Lezvcard/VCardVersion;
    .param p4, "vcard"    # Lezvcard/VCard;

    .line 70
    invoke-static {p1, p2, p3, p4}, Lezvcard/io/scribe/ImppScribe;->handlePrefParam(Lezvcard/property/VCardProperty;Lezvcard/parameter/VCardParameters;Lezvcard/VCardVersion;Lezvcard/VCard;)V

    .line 71
    return-void
.end method

.method protected bridge synthetic _prepareParameters(Lezvcard/property/VCardProperty;Lezvcard/parameter/VCardParameters;Lezvcard/VCardVersion;Lezvcard/VCard;)V
    .locals 1
    .param p1, "x0"    # Lezvcard/property/VCardProperty;
    .param p2, "x1"    # Lezvcard/parameter/VCardParameters;
    .param p3, "x2"    # Lezvcard/VCardVersion;
    .param p4, "x3"    # Lezvcard/VCard;

    .line 54
    move-object v0, p1

    check-cast v0, Lezvcard/property/Impp;

    invoke-virtual {p0, v0, p2, p3, p4}, Lezvcard/io/scribe/ImppScribe;->_prepareParameters(Lezvcard/property/Impp;Lezvcard/parameter/VCardParameters;Lezvcard/VCardVersion;Lezvcard/VCard;)V

    return-void
.end method

.method protected _writeJson(Lezvcard/property/Impp;)Lezvcard/io/json/JCardValue;
    .locals 1
    .param p1, "property"    # Lezvcard/property/Impp;

    .line 124
    invoke-direct {p0, p1}, Lezvcard/io/scribe/ImppScribe;->write(Lezvcard/property/Impp;)Ljava/lang/String;

    move-result-object v0

    invoke-static {v0}, Lezvcard/io/json/JCardValue;->single(Ljava/lang/Object;)Lezvcard/io/json/JCardValue;

    move-result-object v0

    return-object v0
.end method

.method protected bridge synthetic _writeJson(Lezvcard/property/VCardProperty;)Lezvcard/io/json/JCardValue;
    .locals 1
    .param p1, "x0"    # Lezvcard/property/VCardProperty;

    .line 54
    move-object v0, p1

    check-cast v0, Lezvcard/property/Impp;

    invoke-virtual {p0, v0}, Lezvcard/io/scribe/ImppScribe;->_writeJson(Lezvcard/property/Impp;)Lezvcard/io/json/JCardValue;

    move-result-object v0

    return-object v0
.end method

.method protected _writeText(Lezvcard/property/Impp;Lezvcard/io/text/WriteContext;)Ljava/lang/String;
    .locals 1
    .param p1, "property"    # Lezvcard/property/Impp;
    .param p2, "context"    # Lezvcard/io/text/WriteContext;

    .line 80
    invoke-direct {p0, p1}, Lezvcard/io/scribe/ImppScribe;->write(Lezvcard/property/Impp;)Ljava/lang/String;

    move-result-object v0

    return-object v0
.end method

.method protected bridge synthetic _writeText(Lezvcard/property/VCardProperty;Lezvcard/io/text/WriteContext;)Ljava/lang/String;
    .locals 1
    .param p1, "x0"    # Lezvcard/property/VCardProperty;
    .param p2, "x1"    # Lezvcard/io/text/WriteContext;

    .line 54
    move-object v0, p1

    check-cast v0, Lezvcard/property/Impp;

    invoke-virtual {p0, v0, p2}, Lezvcard/io/scribe/ImppScribe;->_writeText(Lezvcard/property/Impp;Lezvcard/io/text/WriteContext;)Ljava/lang/String;

    move-result-object v0

    return-object v0
.end method

.method protected _writeXml(Lezvcard/property/Impp;Lezvcard/io/xml/XCardElement;)V
    .locals 2
    .param p1, "property"    # Lezvcard/property/Impp;
    .param p2, "parent"    # Lezvcard/io/xml/XCardElement;

    .line 91
    sget-object v0, Lezvcard/VCardDataType;->URI:Lezvcard/VCardDataType;

    invoke-direct {p0, p1}, Lezvcard/io/scribe/ImppScribe;->write(Lezvcard/property/Impp;)Ljava/lang/String;

    move-result-object v1

    invoke-virtual {p2, v0, v1}, Lezvcard/io/xml/XCardElement;->append(Lezvcard/VCardDataType;Ljava/lang/String;)Lorg/w3c/dom/Element;

    .line 92
    return-void
.end method

.method protected bridge synthetic _writeXml(Lezvcard/property/VCardProperty;Lezvcard/io/xml/XCardElement;)V
    .locals 1
    .param p1, "x0"    # Lezvcard/property/VCardProperty;
    .param p2, "x1"    # Lezvcard/io/xml/XCardElement;

    .line 54
    move-object v0, p1

    check-cast v0, Lezvcard/property/Impp;

    invoke-virtual {p0, v0, p2}, Lezvcard/io/scribe/ImppScribe;->_writeXml(Lezvcard/property/Impp;Lezvcard/io/xml/XCardElement;)V

    return-void
.end method

.method public parseHtmlLink(Ljava/lang/String;)Ljava/net/URI;
    .locals 6
    .param p1, "linkUri"    # Ljava/lang/String;

    .line 192
    sget-object v0, Lezvcard/io/scribe/ImppScribe;->htmlLinkFormats:Ljava/util/List;

    invoke-interface {v0}, Ljava/util/List;->iterator()Ljava/util/Iterator;

    move-result-object v0

    .local v0, "i$":Ljava/util/Iterator;
    :goto_0
    invoke-interface {v0}, Ljava/util/Iterator;->hasNext()Z

    move-result v1

    const/4 v2, 0x0

    if-eqz v1, :cond_1

    invoke-interface {v0}, Ljava/util/Iterator;->next()Ljava/lang/Object;

    move-result-object v1

    check-cast v1, Lezvcard/io/scribe/ImppScribe$HtmlLinkFormat;

    .line 193
    .local v1, "format":Lezvcard/io/scribe/ImppScribe$HtmlLinkFormat;
    invoke-virtual {v1, p1}, Lezvcard/io/scribe/ImppScribe$HtmlLinkFormat;->parseHandle(Ljava/lang/String;)Ljava/lang/String;

    move-result-object v3

    .line 194
    .local v3, "handle":Ljava/lang/String;
    if-nez v3, :cond_0

    .line 195
    goto :goto_0

    .line 199
    :cond_0
    :try_start_0
    new-instance v4, Ljava/net/URI;

    invoke-virtual {v1}, Lezvcard/io/scribe/ImppScribe$HtmlLinkFormat;->getProtocol()Ljava/lang/String;

    move-result-object v5

    invoke-direct {v4, v5, v3, v2}, Ljava/net/URI;-><init>(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
    :try_end_0
    .catch Ljava/net/URISyntaxException; {:try_start_0 .. :try_end_0} :catch_0

    return-object v4

    .line 200
    :catch_0
    move-exception v2

    .line 201
    .local v2, "e":Ljava/net/URISyntaxException;
    new-instance v4, Ljava/lang/IllegalArgumentException;

    invoke-direct {v4, v2}, Ljava/lang/IllegalArgumentException;-><init>(Ljava/lang/Throwable;)V

    throw v4

    .line 204
    .end local v0    # "i$":Ljava/util/Iterator;
    .end local v1    # "format":Lezvcard/io/scribe/ImppScribe$HtmlLinkFormat;
    .end local v2    # "e":Ljava/net/URISyntaxException;
    .end local v3    # "handle":Ljava/lang/String;
    :cond_1
    return-object v2
.end method

.method public writeHtmlLink(Lezvcard/property/Impp;)Ljava/lang/String;
    .locals 6
    .param p1, "property"    # Lezvcard/property/Impp;

    .line 214
    invoke-virtual {p1}, Lezvcard/property/Impp;->getUri()Ljava/net/URI;

    move-result-object v0

    .line 215
    .local v0, "uri":Ljava/net/URI;
    if-nez v0, :cond_0

    .line 216
    const/4 v1, 0x0

    return-object v1

    .line 219
    :cond_0
    invoke-virtual {v0}, Ljava/net/URI;->getScheme()Ljava/lang/String;

    move-result-object v1

    .line 220
    .local v1, "protocol":Ljava/lang/String;
    invoke-virtual {v0}, Ljava/net/URI;->getSchemeSpecificPart()Ljava/lang/String;

    move-result-object v2

    .line 222
    .local v2, "handle":Ljava/lang/String;
    sget-object v3, Lezvcard/io/scribe/ImppScribe;->htmlLinkFormats:Ljava/util/List;

    invoke-interface {v3}, Ljava/util/List;->iterator()Ljava/util/Iterator;

    move-result-object v3

    .local v3, "i$":Ljava/util/Iterator;
    :goto_0
    invoke-interface {v3}, Ljava/util/Iterator;->hasNext()Z

    move-result v4

    if-eqz v4, :cond_2

    invoke-interface {v3}, Ljava/util/Iterator;->next()Ljava/lang/Object;

    move-result-object v4

    check-cast v4, Lezvcard/io/scribe/ImppScribe$HtmlLinkFormat;

    .line 223
    .local v4, "format":Lezvcard/io/scribe/ImppScribe$HtmlLinkFormat;
    invoke-virtual {v4}, Lezvcard/io/scribe/ImppScribe$HtmlLinkFormat;->getProtocol()Ljava/lang/String;

    move-result-object v5

    invoke-virtual {v1, v5}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v5

    if-eqz v5, :cond_1

    .line 224
    invoke-virtual {v4, v2}, Lezvcard/io/scribe/ImppScribe$HtmlLinkFormat;->buildLink(Ljava/lang/String;)Ljava/lang/String;

    move-result-object v5

    return-object v5

    .line 226
    .end local v4    # "format":Lezvcard/io/scribe/ImppScribe$HtmlLinkFormat;
    :cond_1
    goto :goto_0

    .line 227
    .end local v3    # "i$":Ljava/util/Iterator;
    :cond_2
    invoke-virtual {v0}, Ljava/net/URI;->toASCIIString()Ljava/lang/String;

    move-result-object v3

    return-object v3
.end method
