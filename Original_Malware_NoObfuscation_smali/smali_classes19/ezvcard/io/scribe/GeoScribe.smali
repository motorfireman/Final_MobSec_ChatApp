.class public Lezvcard/io/scribe/GeoScribe;
.super Lezvcard/io/scribe/VCardPropertyScribe;
.source "GeoScribe.java"


# annotations
.annotation system Ldalvik/annotation/Signature;
    value = {
        "Lezvcard/io/scribe/VCardPropertyScribe<",
        "Lezvcard/property/Geo;",
        ">;"
    }
.end annotation


# direct methods
.method public constructor <init>()V
    .locals 2

    .line 49
    const-class v0, Lezvcard/property/Geo;

    const-string v1, "GEO"

    invoke-direct {p0, v0, v1}, Lezvcard/io/scribe/VCardPropertyScribe;-><init>(Ljava/lang/Class;Ljava/lang/String;)V

    .line 50
    return-void
.end method

.method private parseGeoUri(Ljava/lang/String;)Lezvcard/property/Geo;
    .locals 4
    .param p1, "value"    # Ljava/lang/String;

    .line 171
    :try_start_0
    new-instance v0, Lezvcard/property/Geo;

    invoke-static {p1}, Lezvcard/util/GeoUri;->parse(Ljava/lang/String;)Lezvcard/util/GeoUri;

    move-result-object v1

    invoke-direct {v0, v1}, Lezvcard/property/Geo;-><init>(Lezvcard/util/GeoUri;)V
    :try_end_0
    .catch Ljava/lang/IllegalArgumentException; {:try_start_0 .. :try_end_0} :catch_0

    return-object v0

    .line 172
    :catch_0
    move-exception v0

    .line 173
    .local v0, "e":Ljava/lang/IllegalArgumentException;
    new-instance v1, Lezvcard/io/CannotParseException;

    const/16 v2, 0xc

    const/4 v3, 0x0

    new-array v3, v3, [Ljava/lang/Object;

    invoke-direct {v1, v2, v3}, Lezvcard/io/CannotParseException;-><init>(I[Ljava/lang/Object;)V

    throw v1
.end method

.method private write(Lezvcard/property/Geo;Lezvcard/VCardVersion;)Ljava/lang/String;
    .locals 5
    .param p1, "property"    # Lezvcard/property/Geo;
    .param p2, "version"    # Lezvcard/VCardVersion;

    .line 178
    invoke-virtual {p1}, Lezvcard/property/Geo;->getGeoUri()Lezvcard/util/GeoUri;

    move-result-object v0

    if-nez v0, :cond_0

    .line 179
    const-string v0, ""

    return-object v0

    .line 182
    :cond_0
    sget-object v0, Lezvcard/io/scribe/GeoScribe$1;->$SwitchMap$ezvcard$VCardVersion:[I

    invoke-virtual {p2}, Lezvcard/VCardVersion;->ordinal()I

    move-result v1

    aget v0, v0, v1

    const/4 v1, 0x6

    const/4 v2, 0x0

    packed-switch v0, :pswitch_data_0

    .line 192
    return-object v2

    .line 182
    :pswitch_0
    move-object v0, v2

    .local v0, "latitudeStr":Ljava/lang/String;
    move-object v3, v2

    .line 190
    .local v2, "longitudeStr":Ljava/lang/String;
    .local v3, "formatter":Lezvcard/util/VCardFloatFormatter;
    invoke-virtual {p1}, Lezvcard/property/Geo;->getGeoUri()Lezvcard/util/GeoUri;

    move-result-object v4

    invoke-virtual {v4, v1}, Lezvcard/util/GeoUri;->toString(I)Ljava/lang/String;

    move-result-object v1

    return-object v1

    .line 185
    .end local v0    # "latitudeStr":Ljava/lang/String;
    .end local v2    # "longitudeStr":Ljava/lang/String;
    .end local v3    # "formatter":Lezvcard/util/VCardFloatFormatter;
    :pswitch_1
    new-instance v0, Lezvcard/util/VCardFloatFormatter;

    invoke-direct {v0, v1}, Lezvcard/util/VCardFloatFormatter;-><init>(I)V

    .line 186
    .local v0, "formatter":Lezvcard/util/VCardFloatFormatter;
    invoke-virtual {p1}, Lezvcard/property/Geo;->getLatitude()Ljava/lang/Double;

    move-result-object v1

    invoke-virtual {v0, v1}, Lezvcard/util/VCardFloatFormatter;->format(Ljava/lang/Object;)Ljava/lang/String;

    move-result-object v1

    .line 187
    .local v1, "latitudeStr":Ljava/lang/String;
    invoke-virtual {p1}, Lezvcard/property/Geo;->getLongitude()Ljava/lang/Double;

    move-result-object v2

    invoke-virtual {v0, v2}, Lezvcard/util/VCardFloatFormatter;->format(Ljava/lang/Object;)Ljava/lang/String;

    move-result-object v2

    .line 188
    .restart local v2    # "longitudeStr":Ljava/lang/String;
    new-instance v3, Ljava/lang/StringBuilder;

    invoke-direct {v3}, Ljava/lang/StringBuilder;-><init>()V

    invoke-virtual {v3, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v3

    const/16 v4, 0x3b

    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(C)Ljava/lang/StringBuilder;

    move-result-object v3

    invoke-virtual {v3, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v3

    invoke-virtual {v3}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v3

    return-object v3

    nop

    :pswitch_data_0
    .packed-switch 0x1
        :pswitch_1
        :pswitch_1
        :pswitch_0
    .end packed-switch
.end method


# virtual methods
.method protected _defaultDataType(Lezvcard/VCardVersion;)Lezvcard/VCardDataType;
    .locals 2
    .param p1, "version"    # Lezvcard/VCardVersion;

    .line 54
    sget-object v0, Lezvcard/io/scribe/GeoScribe$1;->$SwitchMap$ezvcard$VCardVersion:[I

    invoke-virtual {p1}, Lezvcard/VCardVersion;->ordinal()I

    move-result v1

    aget v0, v0, v1

    const/4 v1, 0x0

    packed-switch v0, :pswitch_data_0

    .line 61
    return-object v1

    .line 59
    :pswitch_0
    sget-object v0, Lezvcard/VCardDataType;->URI:Lezvcard/VCardDataType;

    return-object v0

    .line 57
    :pswitch_1
    return-object v1

    nop

    :pswitch_data_0
    .packed-switch 0x1
        :pswitch_1
        :pswitch_1
        :pswitch_0
    .end packed-switch
.end method

.method protected _parseHtml(Lezvcard/io/html/HCardElement;Lezvcard/io/ParseContext;)Lezvcard/property/Geo;
    .locals 9
    .param p1, "element"    # Lezvcard/io/html/HCardElement;
    .param p2, "context"    # Lezvcard/io/ParseContext;

    .line 128
    const-string v0, "latitude"

    invoke-virtual {p1, v0}, Lezvcard/io/html/HCardElement;->firstValue(Ljava/lang/String;)Ljava/lang/String;

    move-result-object v0

    .line 129
    .local v0, "latitudeStr":Ljava/lang/String;
    const/4 v1, 0x0

    if-eqz v0, :cond_1

    .line 135
    const/4 v2, 0x1

    const/4 v3, 0x0

    :try_start_0
    invoke-static {v0}, Ljava/lang/Double;->parseDouble(Ljava/lang/String;)D

    move-result-wide v4

    invoke-static {v4, v5}, Ljava/lang/Double;->valueOf(D)Ljava/lang/Double;

    move-result-object v4
    :try_end_0
    .catch Ljava/lang/NumberFormatException; {:try_start_0 .. :try_end_0} :catch_1

    .line 138
    .local v4, "latitude":Ljava/lang/Double;
    nop

    .line 140
    const-string v5, "longitude"

    invoke-virtual {p1, v5}, Lezvcard/io/html/HCardElement;->firstValue(Ljava/lang/String;)Ljava/lang/String;

    move-result-object v5

    .line 141
    .local v5, "longitudeStr":Ljava/lang/String;
    if-eqz v5, :cond_0

    .line 147
    :try_start_1
    invoke-static {v5}, Ljava/lang/Double;->parseDouble(Ljava/lang/String;)D

    move-result-wide v6

    invoke-static {v6, v7}, Ljava/lang/Double;->valueOf(D)Ljava/lang/Double;

    move-result-object v1
    :try_end_1
    .catch Ljava/lang/NumberFormatException; {:try_start_1 .. :try_end_1} :catch_0

    .line 150
    .local v1, "longitude":Ljava/lang/Double;
    nop

    .line 152
    new-instance v2, Lezvcard/property/Geo;

    invoke-direct {v2, v4, v1}, Lezvcard/property/Geo;-><init>(Ljava/lang/Double;Ljava/lang/Double;)V

    return-object v2

    .line 148
    .end local v1    # "longitude":Ljava/lang/Double;
    :catch_0
    move-exception v6

    .line 149
    .local v3, "longitude":Ljava/lang/Double;
    .local v6, "e":Ljava/lang/NumberFormatException;
    new-instance v7, Lezvcard/io/CannotParseException;

    const/16 v8, 0xa

    new-array v2, v2, [Ljava/lang/Object;

    aput-object v5, v2, v1

    invoke-direct {v7, v8, v2}, Lezvcard/io/CannotParseException;-><init>(I[Ljava/lang/Object;)V

    throw v7

    .line 142
    .end local v3    # "longitude":Ljava/lang/Double;
    .end local v6    # "e":Ljava/lang/NumberFormatException;
    :cond_0
    new-instance v2, Lezvcard/io/CannotParseException;

    const/16 v3, 0x9

    new-array v1, v1, [Ljava/lang/Object;

    invoke-direct {v2, v3, v1}, Lezvcard/io/CannotParseException;-><init>(I[Ljava/lang/Object;)V

    throw v2

    .line 136
    .end local v4    # "latitude":Ljava/lang/Double;
    .end local v5    # "longitudeStr":Ljava/lang/String;
    :catch_1
    move-exception v4

    .line 137
    .local v3, "latitude":Ljava/lang/Double;
    .local v4, "e":Ljava/lang/NumberFormatException;
    new-instance v5, Lezvcard/io/CannotParseException;

    const/16 v6, 0x8

    new-array v2, v2, [Ljava/lang/Object;

    aput-object v0, v2, v1

    invoke-direct {v5, v6, v2}, Lezvcard/io/CannotParseException;-><init>(I[Ljava/lang/Object;)V

    throw v5

    .line 130
    .end local v3    # "latitude":Ljava/lang/Double;
    .end local v4    # "e":Ljava/lang/NumberFormatException;
    :cond_1
    new-instance v2, Lezvcard/io/CannotParseException;

    const/4 v3, 0x7

    new-array v1, v1, [Ljava/lang/Object;

    invoke-direct {v2, v3, v1}, Lezvcard/io/CannotParseException;-><init>(I[Ljava/lang/Object;)V

    throw v2
.end method

.method protected bridge synthetic _parseHtml(Lezvcard/io/html/HCardElement;Lezvcard/io/ParseContext;)Lezvcard/property/VCardProperty;
    .locals 1
    .param p1, "x0"    # Lezvcard/io/html/HCardElement;
    .param p2, "x1"    # Lezvcard/io/ParseContext;

    .line 47
    invoke-virtual {p0, p1, p2}, Lezvcard/io/scribe/GeoScribe;->_parseHtml(Lezvcard/io/html/HCardElement;Lezvcard/io/ParseContext;)Lezvcard/property/Geo;

    move-result-object v0

    return-object v0
.end method

.method protected _parseJson(Lezvcard/io/json/JCardValue;Lezvcard/VCardDataType;Lezvcard/parameter/VCardParameters;Lezvcard/io/ParseContext;)Lezvcard/property/Geo;
    .locals 4
    .param p1, "value"    # Lezvcard/io/json/JCardValue;
    .param p2, "dataType"    # Lezvcard/VCardDataType;
    .param p3, "parameters"    # Lezvcard/parameter/VCardParameters;
    .param p4, "context"    # Lezvcard/io/ParseContext;

    .line 162
    invoke-virtual {p1}, Lezvcard/io/json/JCardValue;->asSingle()Ljava/lang/String;

    move-result-object v0

    .line 163
    .local v0, "valueStr":Ljava/lang/String;
    invoke-virtual {v0}, Ljava/lang/String;->length()I

    move-result v1

    if-nez v1, :cond_0

    .line 164
    new-instance v1, Lezvcard/property/Geo;

    const/4 v2, 0x0

    move-object v3, v2

    check-cast v3, Lezvcard/util/GeoUri;

    invoke-direct {v1, v2}, Lezvcard/property/Geo;-><init>(Lezvcard/util/GeoUri;)V

    return-object v1

    .line 166
    :cond_0
    invoke-direct {p0, v0}, Lezvcard/io/scribe/GeoScribe;->parseGeoUri(Ljava/lang/String;)Lezvcard/property/Geo;

    move-result-object v1

    return-object v1
.end method

.method protected bridge synthetic _parseJson(Lezvcard/io/json/JCardValue;Lezvcard/VCardDataType;Lezvcard/parameter/VCardParameters;Lezvcard/io/ParseContext;)Lezvcard/property/VCardProperty;
    .locals 1
    .param p1, "x0"    # Lezvcard/io/json/JCardValue;
    .param p2, "x1"    # Lezvcard/VCardDataType;
    .param p3, "x2"    # Lezvcard/parameter/VCardParameters;
    .param p4, "x3"    # Lezvcard/io/ParseContext;

    .line 47
    invoke-virtual {p0, p1, p2, p3, p4}, Lezvcard/io/scribe/GeoScribe;->_parseJson(Lezvcard/io/json/JCardValue;Lezvcard/VCardDataType;Lezvcard/parameter/VCardParameters;Lezvcard/io/ParseContext;)Lezvcard/property/Geo;

    move-result-object v0

    return-object v0
.end method

.method protected _parseText(Ljava/lang/String;Lezvcard/VCardDataType;Lezvcard/parameter/VCardParameters;Lezvcard/io/ParseContext;)Lezvcard/property/Geo;
    .locals 10
    .param p1, "value"    # Ljava/lang/String;
    .param p2, "dataType"    # Lezvcard/VCardDataType;
    .param p3, "parameters"    # Lezvcard/parameter/VCardParameters;
    .param p4, "context"    # Lezvcard/io/ParseContext;

    .line 71
    invoke-virtual {p1}, Ljava/lang/String;->length()I

    move-result v0

    const/4 v1, 0x0

    if-nez v0, :cond_0

    .line 72
    new-instance v0, Lezvcard/property/Geo;

    move-object v2, v1

    check-cast v2, Lezvcard/util/GeoUri;

    invoke-direct {v0, v1}, Lezvcard/property/Geo;-><init>(Lezvcard/util/GeoUri;)V

    return-object v0

    .line 75
    :cond_0
    sget-object v0, Lezvcard/io/scribe/GeoScribe$1;->$SwitchMap$ezvcard$VCardVersion:[I

    invoke-virtual {p4}, Lezvcard/io/ParseContext;->getVersion()Lezvcard/VCardVersion;

    move-result-object v2

    invoke-virtual {v2}, Lezvcard/VCardVersion;->ordinal()I

    move-result v2

    aget v0, v0, v2

    const/4 v2, 0x0

    packed-switch v0, :pswitch_data_0

    .line 105
    return-object v1

    .line 75
    :pswitch_0
    move-object v0, v1

    .local v0, "latitudeStr":Ljava/lang/String;
    move-object v3, v1

    .local v3, "latitude":Ljava/lang/Double;
    move-object v4, v1

    .line 102
    .local v1, "longitudeStr":Ljava/lang/String;
    .local v2, "pos":I
    .local v4, "longitude":Ljava/lang/Double;
    invoke-static {p1}, Lcom/github/mangstadt/vinnie/io/VObjectPropertyValues;->unescape(Ljava/lang/String;)Ljava/lang/String;

    move-result-object p1

    .line 103
    invoke-direct {p0, p1}, Lezvcard/io/scribe/GeoScribe;->parseGeoUri(Ljava/lang/String;)Lezvcard/property/Geo;

    move-result-object v5

    return-object v5

    .line 78
    .end local v0    # "latitudeStr":Ljava/lang/String;
    .end local v1    # "longitudeStr":Ljava/lang/String;
    .end local v2    # "pos":I
    .end local v3    # "latitude":Ljava/lang/Double;
    .end local v4    # "longitude":Ljava/lang/Double;
    :pswitch_1
    const/16 v0, 0x3b

    invoke-virtual {p1, v0}, Ljava/lang/String;->indexOf(I)I

    move-result v0

    .line 79
    .local v0, "pos":I
    if-ltz v0, :cond_1

    .line 83
    invoke-virtual {p1, v2, v0}, Ljava/lang/String;->substring(II)Ljava/lang/String;

    move-result-object v3

    .line 84
    .local v3, "latitudeStr":Ljava/lang/String;
    add-int/lit8 v4, v0, 0x1

    invoke-virtual {p1, v4}, Ljava/lang/String;->substring(I)Ljava/lang/String;

    move-result-object v4

    .line 88
    .local v4, "longitudeStr":Ljava/lang/String;
    const/4 v5, 0x1

    :try_start_0
    invoke-static {v3}, Ljava/lang/Double;->valueOf(Ljava/lang/String;)Ljava/lang/Double;

    move-result-object v6
    :try_end_0
    .catch Ljava/lang/NumberFormatException; {:try_start_0 .. :try_end_0} :catch_1

    .line 91
    .local v6, "latitude":Ljava/lang/Double;
    nop

    .line 95
    :try_start_1
    invoke-static {v4}, Ljava/lang/Double;->valueOf(Ljava/lang/String;)Ljava/lang/Double;

    move-result-object v1
    :try_end_1
    .catch Ljava/lang/NumberFormatException; {:try_start_1 .. :try_end_1} :catch_0

    .line 98
    .local v1, "longitude":Ljava/lang/Double;
    nop

    .line 100
    new-instance v2, Lezvcard/property/Geo;

    invoke-direct {v2, v6, v1}, Lezvcard/property/Geo;-><init>(Ljava/lang/Double;Ljava/lang/Double;)V

    return-object v2

    .line 96
    .end local v1    # "longitude":Ljava/lang/Double;
    :catch_0
    move-exception v7

    .line 97
    .restart local v1    # "longitude":Ljava/lang/Double;
    .local v7, "e":Ljava/lang/NumberFormatException;
    new-instance v8, Lezvcard/io/CannotParseException;

    const/16 v9, 0xa

    new-array v5, v5, [Ljava/lang/Object;

    aput-object v4, v5, v2

    invoke-direct {v8, v9, v5}, Lezvcard/io/CannotParseException;-><init>(I[Ljava/lang/Object;)V

    throw v8

    .line 89
    .end local v1    # "longitude":Ljava/lang/Double;
    .end local v6    # "latitude":Ljava/lang/Double;
    .end local v7    # "e":Ljava/lang/NumberFormatException;
    :catch_1
    move-exception v6

    .line 90
    .local v1, "latitude":Ljava/lang/Double;
    .local v6, "e":Ljava/lang/NumberFormatException;
    new-instance v7, Lezvcard/io/CannotParseException;

    const/16 v8, 0x8

    new-array v5, v5, [Ljava/lang/Object;

    aput-object v3, v5, v2

    invoke-direct {v7, v8, v5}, Lezvcard/io/CannotParseException;-><init>(I[Ljava/lang/Object;)V

    throw v7

    .line 80
    .end local v1    # "latitude":Ljava/lang/Double;
    .end local v3    # "latitudeStr":Ljava/lang/String;
    .end local v4    # "longitudeStr":Ljava/lang/String;
    .end local v6    # "e":Ljava/lang/NumberFormatException;
    :cond_1
    new-instance v1, Lezvcard/io/CannotParseException;

    const/16 v3, 0xb

    new-array v2, v2, [Ljava/lang/Object;

    invoke-direct {v1, v3, v2}, Lezvcard/io/CannotParseException;-><init>(I[Ljava/lang/Object;)V

    throw v1

    :pswitch_data_0
    .packed-switch 0x1
        :pswitch_1
        :pswitch_1
        :pswitch_0
    .end packed-switch
.end method

.method protected bridge synthetic _parseText(Ljava/lang/String;Lezvcard/VCardDataType;Lezvcard/parameter/VCardParameters;Lezvcard/io/ParseContext;)Lezvcard/property/VCardProperty;
    .locals 1
    .param p1, "x0"    # Ljava/lang/String;
    .param p2, "x1"    # Lezvcard/VCardDataType;
    .param p3, "x2"    # Lezvcard/parameter/VCardParameters;
    .param p4, "x3"    # Lezvcard/io/ParseContext;

    .line 47
    invoke-virtual {p0, p1, p2, p3, p4}, Lezvcard/io/scribe/GeoScribe;->_parseText(Ljava/lang/String;Lezvcard/VCardDataType;Lezvcard/parameter/VCardParameters;Lezvcard/io/ParseContext;)Lezvcard/property/Geo;

    move-result-object v0

    return-object v0
.end method

.method protected _parseXml(Lezvcard/io/xml/XCardElement;Lezvcard/parameter/VCardParameters;Lezvcard/io/ParseContext;)Lezvcard/property/Geo;
    .locals 4
    .param p1, "element"    # Lezvcard/io/xml/XCardElement;
    .param p2, "parameters"    # Lezvcard/parameter/VCardParameters;
    .param p3, "context"    # Lezvcard/io/ParseContext;

    .line 115
    const/4 v0, 0x1

    new-array v1, v0, [Lezvcard/VCardDataType;

    sget-object v2, Lezvcard/VCardDataType;->URI:Lezvcard/VCardDataType;

    const/4 v3, 0x0

    aput-object v2, v1, v3

    invoke-virtual {p1, v1}, Lezvcard/io/xml/XCardElement;->first([Lezvcard/VCardDataType;)Ljava/lang/String;

    move-result-object v1

    .line 116
    .local v1, "value":Ljava/lang/String;
    if-eqz v1, :cond_1

    .line 117
    invoke-virtual {v1}, Ljava/lang/String;->length()I

    move-result v0

    if-nez v0, :cond_0

    .line 118
    new-instance v0, Lezvcard/property/Geo;

    const/4 v2, 0x0

    move-object v3, v2

    check-cast v3, Lezvcard/util/GeoUri;

    invoke-direct {v0, v2}, Lezvcard/property/Geo;-><init>(Lezvcard/util/GeoUri;)V

    return-object v0

    .line 120
    :cond_0
    invoke-direct {p0, v1}, Lezvcard/io/scribe/GeoScribe;->parseGeoUri(Ljava/lang/String;)Lezvcard/property/Geo;

    move-result-object v0

    return-object v0

    .line 123
    :cond_1
    new-array v0, v0, [Lezvcard/VCardDataType;

    sget-object v2, Lezvcard/VCardDataType;->URI:Lezvcard/VCardDataType;

    aput-object v2, v0, v3

    invoke-static {v0}, Lezvcard/io/scribe/GeoScribe;->missingXmlElements([Lezvcard/VCardDataType;)Lezvcard/io/CannotParseException;

    move-result-object v0

    throw v0
.end method

.method protected bridge synthetic _parseXml(Lezvcard/io/xml/XCardElement;Lezvcard/parameter/VCardParameters;Lezvcard/io/ParseContext;)Lezvcard/property/VCardProperty;
    .locals 1
    .param p1, "x0"    # Lezvcard/io/xml/XCardElement;
    .param p2, "x1"    # Lezvcard/parameter/VCardParameters;
    .param p3, "x2"    # Lezvcard/io/ParseContext;

    .line 47
    invoke-virtual {p0, p1, p2, p3}, Lezvcard/io/scribe/GeoScribe;->_parseXml(Lezvcard/io/xml/XCardElement;Lezvcard/parameter/VCardParameters;Lezvcard/io/ParseContext;)Lezvcard/property/Geo;

    move-result-object v0

    return-object v0
.end method

.method protected _writeJson(Lezvcard/property/Geo;)Lezvcard/io/json/JCardValue;
    .locals 1
    .param p1, "property"    # Lezvcard/property/Geo;

    .line 157
    sget-object v0, Lezvcard/VCardVersion;->V4_0:Lezvcard/VCardVersion;

    invoke-direct {p0, p1, v0}, Lezvcard/io/scribe/GeoScribe;->write(Lezvcard/property/Geo;Lezvcard/VCardVersion;)Ljava/lang/String;

    move-result-object v0

    invoke-static {v0}, Lezvcard/io/json/JCardValue;->single(Ljava/lang/Object;)Lezvcard/io/json/JCardValue;

    move-result-object v0

    return-object v0
.end method

.method protected bridge synthetic _writeJson(Lezvcard/property/VCardProperty;)Lezvcard/io/json/JCardValue;
    .locals 1
    .param p1, "x0"    # Lezvcard/property/VCardProperty;

    .line 47
    move-object v0, p1

    check-cast v0, Lezvcard/property/Geo;

    invoke-virtual {p0, v0}, Lezvcard/io/scribe/GeoScribe;->_writeJson(Lezvcard/property/Geo;)Lezvcard/io/json/JCardValue;

    move-result-object v0

    return-object v0
.end method

.method protected _writeText(Lezvcard/property/Geo;Lezvcard/io/text/WriteContext;)Ljava/lang/String;
    .locals 1
    .param p1, "property"    # Lezvcard/property/Geo;
    .param p2, "context"    # Lezvcard/io/text/WriteContext;

    .line 66
    invoke-virtual {p2}, Lezvcard/io/text/WriteContext;->getVersion()Lezvcard/VCardVersion;

    move-result-object v0

    invoke-direct {p0, p1, v0}, Lezvcard/io/scribe/GeoScribe;->write(Lezvcard/property/Geo;Lezvcard/VCardVersion;)Ljava/lang/String;

    move-result-object v0

    return-object v0
.end method

.method protected bridge synthetic _writeText(Lezvcard/property/VCardProperty;Lezvcard/io/text/WriteContext;)Ljava/lang/String;
    .locals 1
    .param p1, "x0"    # Lezvcard/property/VCardProperty;
    .param p2, "x1"    # Lezvcard/io/text/WriteContext;

    .line 47
    move-object v0, p1

    check-cast v0, Lezvcard/property/Geo;

    invoke-virtual {p0, v0, p2}, Lezvcard/io/scribe/GeoScribe;->_writeText(Lezvcard/property/Geo;Lezvcard/io/text/WriteContext;)Ljava/lang/String;

    move-result-object v0

    return-object v0
.end method

.method protected _writeXml(Lezvcard/property/Geo;Lezvcard/io/xml/XCardElement;)V
    .locals 2
    .param p1, "property"    # Lezvcard/property/Geo;
    .param p2, "parent"    # Lezvcard/io/xml/XCardElement;

    .line 110
    sget-object v0, Lezvcard/VCardDataType;->URI:Lezvcard/VCardDataType;

    invoke-virtual {p2}, Lezvcard/io/xml/XCardElement;->version()Lezvcard/VCardVersion;

    move-result-object v1

    invoke-direct {p0, p1, v1}, Lezvcard/io/scribe/GeoScribe;->write(Lezvcard/property/Geo;Lezvcard/VCardVersion;)Ljava/lang/String;

    move-result-object v1

    invoke-virtual {p2, v0, v1}, Lezvcard/io/xml/XCardElement;->append(Lezvcard/VCardDataType;Ljava/lang/String;)Lorg/w3c/dom/Element;

    .line 111
    return-void
.end method

.method protected bridge synthetic _writeXml(Lezvcard/property/VCardProperty;Lezvcard/io/xml/XCardElement;)V
    .locals 1
    .param p1, "x0"    # Lezvcard/property/VCardProperty;
    .param p2, "x1"    # Lezvcard/io/xml/XCardElement;

    .line 47
    move-object v0, p1

    check-cast v0, Lezvcard/property/Geo;

    invoke-virtual {p0, v0, p2}, Lezvcard/io/scribe/GeoScribe;->_writeXml(Lezvcard/property/Geo;Lezvcard/io/xml/XCardElement;)V

    return-void
.end method
