.class public Lfreemarker/core/_ConcurrentMapFactory;
.super Ljava/lang/Object;
.source "_ConcurrentMapFactory.java"


# static fields
.field private static final bestHashMapClass:Ljava/lang/Class;

.field private static final bestHashMapClassConstructor:Ljava/lang/reflect/Constructor;

.field private static final bestHashMapClassConstructorParamCnt:I

.field static synthetic class$java$util$HashMap:Ljava/lang/Class;

.field private static final concurrentMapClass:Ljava/lang/Class;


# direct methods
.method static constructor <clinit>()V
    .locals 10

    .line 42
    const/4 v0, 0x0

    :try_start_0
    const-string v1, "java.util.concurrent.ConcurrentMap"

    invoke-static {v1}, Lfreemarker/template/utility/ClassUtil;->forName(Ljava/lang/String;)Ljava/lang/Class;

    move-result-object v1
    :try_end_0
    .catch Ljava/lang/ClassNotFoundException; {:try_start_0 .. :try_end_0} :catch_0

    .line 45
    .local v1, "c":Ljava/lang/Class;
    goto :goto_0

    .line 43
    .end local v1    # "c":Ljava/lang/Class;
    :catch_0
    move-exception v1

    .line 44
    .local v0, "c":Ljava/lang/Class;
    .local v1, "e":Ljava/lang/ClassNotFoundException;
    const/4 v0, 0x0

    move-object v9, v1

    move-object v1, v0

    move-object v0, v9

    .line 46
    .end local v0    # "c":Ljava/lang/Class;
    .local v1, "c":Ljava/lang/Class;
    :goto_0
    sput-object v1, Lfreemarker/core/_ConcurrentMapFactory;->concurrentMapClass:Ljava/lang/Class;

    .line 57
    .end local v1    # "c":Ljava/lang/Class;
    const/4 v2, 0x1

    const/4 v3, 0x2

    const/4 v4, 0x0

    :try_start_1
    const-string v5, "java.util.concurrent.ConcurrentHashMap"

    invoke-static {v5}, Lfreemarker/template/utility/ClassUtil;->forName(Ljava/lang/String;)Ljava/lang/Class;

    move-result-object v1
    :try_end_1
    .catch Ljava/lang/ClassNotFoundException; {:try_start_1 .. :try_end_1} :catch_4

    .line 59
    .restart local v1    # "c":Ljava/lang/Class;
    const/4 v5, 0x3

    :try_start_2
    new-array v5, v5, [Ljava/lang/Class;

    sget-object v6, Ljava/lang/Integer;->TYPE:Ljava/lang/Class;

    aput-object v6, v5, v4

    sget-object v6, Ljava/lang/Float;->TYPE:Ljava/lang/Class;

    aput-object v6, v5, v2

    sget-object v6, Ljava/lang/Integer;->TYPE:Ljava/lang/Class;

    aput-object v6, v5, v3

    invoke-virtual {v1, v5}, Ljava/lang/Class;->getConstructor([Ljava/lang/Class;)Ljava/lang/reflect/Constructor;

    move-result-object v0
    :try_end_2
    .catch Ljava/lang/Exception; {:try_start_2 .. :try_end_2} :catch_2
    .catch Ljava/lang/ClassNotFoundException; {:try_start_2 .. :try_end_2} :catch_1

    .line 60
    .local v0, "constr":Ljava/lang/reflect/Constructor;
    const/4 v2, 0x3

    .line 63
    .local v2, "constrParamCnt":I
    nop

    .line 72
    goto :goto_3

    .line 64
    .end local v0    # "constr":Ljava/lang/reflect/Constructor;
    .end local v2    # "constrParamCnt":I
    :catch_1
    move-exception v5

    goto :goto_1

    .line 61
    :catch_2
    move-exception v5

    move v6, v4

    .line 62
    .restart local v0    # "constr":Ljava/lang/reflect/Constructor;
    .local v5, "e":Ljava/lang/Exception;
    .local v6, "constrParamCnt":I
    :try_start_3
    new-instance v7, Ljava/lang/RuntimeException;

    const-string v8, "Failed to get ConcurrentHashMap constructor"

    invoke-direct {v7, v8, v5}, Ljava/lang/RuntimeException;-><init>(Ljava/lang/String;Ljava/lang/Throwable;)V

    .end local v0    # "constr":Ljava/lang/reflect/Constructor;
    .end local v1    # "c":Ljava/lang/Class;
    .end local v6    # "constrParamCnt":I
    throw v7
    :try_end_3
    .catch Ljava/lang/ClassNotFoundException; {:try_start_3 .. :try_end_3} :catch_3

    .line 64
    .end local v5    # "e":Ljava/lang/Exception;
    .restart local v0    # "constr":Ljava/lang/reflect/Constructor;
    .restart local v1    # "c":Ljava/lang/Class;
    .restart local v6    # "constrParamCnt":I
    :catch_3
    move-exception v5

    goto :goto_2

    .end local v0    # "constr":Ljava/lang/reflect/Constructor;
    .end local v1    # "c":Ljava/lang/Class;
    .end local v6    # "constrParamCnt":I
    :catch_4
    move-exception v5

    .restart local v1    # "c":Ljava/lang/Class;
    :goto_1
    move v6, v4

    .line 65
    .restart local v0    # "constr":Ljava/lang/reflect/Constructor;
    .local v5, "e":Ljava/lang/ClassNotFoundException;
    .restart local v6    # "constrParamCnt":I
    :goto_2
    sget-object v7, Lfreemarker/core/_ConcurrentMapFactory;->class$java$util$HashMap:Ljava/lang/Class;

    if-nez v7, :cond_0

    const-string v7, "java.util.HashMap"

    invoke-static {v7}, Lfreemarker/core/_ConcurrentMapFactory;->class$(Ljava/lang/String;)Ljava/lang/Class;

    move-result-object v7

    sput-object v7, Lfreemarker/core/_ConcurrentMapFactory;->class$java$util$HashMap:Ljava/lang/Class;

    :cond_0
    move-object v1, v7

    .line 67
    :try_start_4
    new-array v3, v3, [Ljava/lang/Class;

    sget-object v7, Ljava/lang/Integer;->TYPE:Ljava/lang/Class;

    aput-object v7, v3, v4

    sget-object v4, Ljava/lang/Float;->TYPE:Ljava/lang/Class;

    aput-object v4, v3, v2

    invoke-virtual {v1, v3}, Ljava/lang/Class;->getConstructor([Ljava/lang/Class;)Ljava/lang/reflect/Constructor;

    move-result-object v2
    :try_end_4
    .catch Ljava/lang/Exception; {:try_start_4 .. :try_end_4} :catch_5

    move-object v0, v2

    .line 68
    const/4 v2, 0x2

    .line 71
    .end local v6    # "constrParamCnt":I
    .restart local v2    # "constrParamCnt":I
    nop

    .line 74
    .end local v5    # "e":Ljava/lang/ClassNotFoundException;
    :goto_3
    sput-object v1, Lfreemarker/core/_ConcurrentMapFactory;->bestHashMapClass:Ljava/lang/Class;

    .line 75
    sput-object v0, Lfreemarker/core/_ConcurrentMapFactory;->bestHashMapClassConstructor:Ljava/lang/reflect/Constructor;

    .line 76
    sput v2, Lfreemarker/core/_ConcurrentMapFactory;->bestHashMapClassConstructorParamCnt:I

    .line 77
    .end local v0    # "constr":Ljava/lang/reflect/Constructor;
    .end local v1    # "c":Ljava/lang/Class;
    .end local v2    # "constrParamCnt":I
    return-void

    .line 69
    .restart local v0    # "constr":Ljava/lang/reflect/Constructor;
    .restart local v1    # "c":Ljava/lang/Class;
    .restart local v5    # "e":Ljava/lang/ClassNotFoundException;
    .restart local v6    # "constrParamCnt":I
    :catch_5
    move-exception v2

    .line 70
    .local v2, "e2":Ljava/lang/Exception;
    new-instance v3, Ljava/lang/RuntimeException;

    const-string v4, "Failed to get HashMap constructor"

    invoke-direct {v3, v4, v2}, Ljava/lang/RuntimeException;-><init>(Ljava/lang/String;Ljava/lang/Throwable;)V

    throw v3
.end method

.method public constructor <init>()V
    .locals 0

    .line 37
    invoke-direct {p0}, Ljava/lang/Object;-><init>()V

    return-void
.end method

.method static synthetic class$(Ljava/lang/String;)Ljava/lang/Class;
    .locals 2
    .param p0, "x0"    # Ljava/lang/String;

    .line 65
    :try_start_0
    invoke-static {p0}, Ljava/lang/Class;->forName(Ljava/lang/String;)Ljava/lang/Class;

    move-result-object v0
    :try_end_0
    .catch Ljava/lang/ClassNotFoundException; {:try_start_0 .. :try_end_0} :catch_0

    return-object v0

    :catch_0
    move-exception v0

    new-instance v1, Ljava/lang/NoClassDefFoundError;

    invoke-direct {v1}, Ljava/lang/NoClassDefFoundError;-><init>()V

    invoke-virtual {v1, v0}, Ljava/lang/NoClassDefFoundError;->initCause(Ljava/lang/Throwable;)Ljava/lang/Throwable;

    move-result-object v0

    throw v0
.end method

.method public static concurrentMapsAvailable()Z
    .locals 1

    .line 113
    sget-object v0, Lfreemarker/core/_ConcurrentMapFactory;->concurrentMapClass:Ljava/lang/Class;

    if-eqz v0, :cond_0

    const/4 v0, 0x1

    goto :goto_0

    :cond_0
    const/4 v0, 0x0

    :goto_0
    return v0
.end method

.method public static isConcurrent(Ljava/util/Map;)Z
    .locals 1
    .param p0, "map"    # Ljava/util/Map;

    .line 120
    sget-object v0, Lfreemarker/core/_ConcurrentMapFactory;->concurrentMapClass:Ljava/lang/Class;

    if-eqz v0, :cond_0

    invoke-virtual {v0, p0}, Ljava/lang/Class;->isInstance(Ljava/lang/Object;)Z

    move-result v0

    if-eqz v0, :cond_0

    const/4 v0, 0x1

    goto :goto_0

    :cond_0
    const/4 v0, 0x0

    :goto_0
    return v0
.end method

.method public static newMaybeConcurrentHashMap()Ljava/util/Map;
    .locals 2

    .line 81
    :try_start_0
    sget-object v0, Lfreemarker/core/_ConcurrentMapFactory;->bestHashMapClass:Ljava/lang/Class;

    invoke-virtual {v0}, Ljava/lang/Class;->newInstance()Ljava/lang/Object;

    move-result-object v0

    check-cast v0, Ljava/util/Map;
    :try_end_0
    .catch Ljava/lang/Exception; {:try_start_0 .. :try_end_0} :catch_0

    return-object v0

    .line 82
    :catch_0
    move-exception v0

    .line 83
    .local v0, "e":Ljava/lang/Exception;
    new-instance v1, Lfreemarker/template/utility/UndeclaredThrowableException;

    invoke-direct {v1, v0}, Lfreemarker/template/utility/UndeclaredThrowableException;-><init>(Ljava/lang/Throwable;)V

    throw v1
.end method

.method public static newMaybeConcurrentHashMap(IFI)Ljava/util/Map;
    .locals 6
    .param p0, "initialCapacity"    # I
    .param p1, "loadFactor"    # F
    .param p2, "concurrencyLevel"    # I

    .line 89
    :try_start_0
    sget v0, Lfreemarker/core/_ConcurrentMapFactory;->bestHashMapClassConstructorParamCnt:I

    const/4 v1, 0x1

    const/4 v2, 0x0

    const/4 v3, 0x3

    const/4 v4, 0x2

    if-ne v0, v3, :cond_0

    .line 90
    sget-object v0, Lfreemarker/core/_ConcurrentMapFactory;->bestHashMapClassConstructor:Ljava/lang/reflect/Constructor;

    new-array v3, v3, [Ljava/lang/Object;

    new-instance v5, Ljava/lang/Integer;

    invoke-direct {v5, p0}, Ljava/lang/Integer;-><init>(I)V

    aput-object v5, v3, v2

    new-instance v2, Ljava/lang/Float;

    invoke-direct {v2, p1}, Ljava/lang/Float;-><init>(F)V

    aput-object v2, v3, v1

    new-instance v1, Ljava/lang/Integer;

    invoke-direct {v1, p2}, Ljava/lang/Integer;-><init>(I)V

    aput-object v1, v3, v4

    invoke-virtual {v0, v3}, Ljava/lang/reflect/Constructor;->newInstance([Ljava/lang/Object;)Ljava/lang/Object;

    move-result-object v0

    check-cast v0, Ljava/util/Map;

    return-object v0

    .line 92
    :cond_0
    if-ne v0, v4, :cond_1

    .line 93
    sget-object v0, Lfreemarker/core/_ConcurrentMapFactory;->bestHashMapClassConstructor:Ljava/lang/reflect/Constructor;

    new-array v3, v4, [Ljava/lang/Object;

    new-instance v4, Ljava/lang/Integer;

    invoke-direct {v4, p0}, Ljava/lang/Integer;-><init>(I)V

    aput-object v4, v3, v2

    new-instance v2, Ljava/lang/Float;

    invoke-direct {v2, p1}, Ljava/lang/Float;-><init>(F)V

    aput-object v2, v3, v1

    invoke-virtual {v0, v3}, Ljava/lang/reflect/Constructor;->newInstance([Ljava/lang/Object;)Ljava/lang/Object;

    move-result-object v0

    check-cast v0, Ljava/util/Map;

    return-object v0

    .line 96
    :cond_1
    new-instance v0, Lfreemarker/core/BugException;

    invoke-direct {v0}, Lfreemarker/core/BugException;-><init>()V

    .end local p0    # "initialCapacity":I
    .end local p1    # "loadFactor":F
    .end local p2    # "concurrencyLevel":I
    throw v0
    :try_end_0
    .catch Ljava/lang/Exception; {:try_start_0 .. :try_end_0} :catch_0

    .line 98
    .restart local p0    # "initialCapacity":I
    .restart local p1    # "loadFactor":F
    .restart local p2    # "concurrencyLevel":I
    :catch_0
    move-exception v0

    .line 99
    .local v0, "e":Ljava/lang/Exception;
    new-instance v1, Lfreemarker/template/utility/UndeclaredThrowableException;

    invoke-direct {v1, v0}, Lfreemarker/template/utility/UndeclaredThrowableException;-><init>(Ljava/lang/Throwable;)V

    throw v1
.end method

.method public static newThreadSafeMap()Ljava/util/Map;
    .locals 2

    .line 108
    invoke-static {}, Lfreemarker/core/_ConcurrentMapFactory;->newMaybeConcurrentHashMap()Ljava/util/Map;

    move-result-object v0

    .line 109
    .local v0, "map":Ljava/util/Map;
    invoke-static {v0}, Lfreemarker/core/_ConcurrentMapFactory;->isConcurrent(Ljava/util/Map;)Z

    move-result v1

    if-eqz v1, :cond_0

    move-object v1, v0

    goto :goto_0

    :cond_0
    invoke-static {v0}, Ljava/util/Collections;->synchronizedMap(Ljava/util/Map;)Ljava/util/Map;

    move-result-object v1

    :goto_0
    return-object v1
.end method
