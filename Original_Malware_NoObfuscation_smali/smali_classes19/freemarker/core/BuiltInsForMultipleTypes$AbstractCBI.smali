.class abstract Lfreemarker/core/BuiltInsForMultipleTypes$AbstractCBI;
.super Lfreemarker/core/BuiltIn;
.source "BuiltInsForMultipleTypes.java"


# annotations
.annotation system Ldalvik/annotation/EnclosingClass;
    value = Lfreemarker/core/BuiltInsForMultipleTypes;
.end annotation

.annotation system Ldalvik/annotation/InnerClass;
    accessFlags = 0x408
    name = "AbstractCBI"
.end annotation


# direct methods
.method constructor <init>()V
    .locals 0

    .line 627
    invoke-direct {p0}, Lfreemarker/core/BuiltIn;-><init>()V

    return-void
.end method


# virtual methods
.method _eval(Lfreemarker/core/Environment;)Lfreemarker/template/TemplateModel;
    .locals 8
    .param p1, "env"    # Lfreemarker/core/Environment;
    .annotation system Ldalvik/annotation/Throws;
        value = {
            Lfreemarker/template/TemplateException;
        }
    .end annotation

    .line 630
    iget-object v0, p0, Lfreemarker/core/BuiltInsForMultipleTypes$AbstractCBI;->target:Lfreemarker/core/Expression;

    invoke-virtual {v0, p1}, Lfreemarker/core/Expression;->eval(Lfreemarker/core/Environment;)Lfreemarker/template/TemplateModel;

    move-result-object v0

    .line 631
    .local v0, "model":Lfreemarker/template/TemplateModel;
    instance-of v1, v0, Lfreemarker/template/TemplateNumberModel;

    if-eqz v1, :cond_0

    .line 632
    invoke-virtual {p0, p1, v0}, Lfreemarker/core/BuiltInsForMultipleTypes$AbstractCBI;->formatNumber(Lfreemarker/core/Environment;Lfreemarker/template/TemplateModel;)Lfreemarker/template/TemplateModel;

    move-result-object v1

    return-object v1

    .line 633
    :cond_0
    instance-of v1, v0, Lfreemarker/template/TemplateBooleanModel;

    if-eqz v1, :cond_2

    .line 634
    new-instance v1, Lfreemarker/template/SimpleScalar;

    move-object v2, v0

    check-cast v2, Lfreemarker/template/TemplateBooleanModel;

    invoke-interface {v2}, Lfreemarker/template/TemplateBooleanModel;->getAsBoolean()Z

    move-result v2

    if-eqz v2, :cond_1

    const-string/jumbo v2, "true"

    goto :goto_0

    :cond_1
    const-string v2, "false"

    :goto_0
    invoke-direct {v1, v2}, Lfreemarker/template/SimpleScalar;-><init>(Ljava/lang/String;)V

    return-object v1

    .line 637
    :cond_2
    new-instance v7, Lfreemarker/core/UnexpectedTypeException;

    iget-object v2, p0, Lfreemarker/core/BuiltInsForMultipleTypes$AbstractCBI;->target:Lfreemarker/core/Expression;

    const/4 v1, 0x2

    new-array v5, v1, [Ljava/lang/Class;

    const/4 v1, 0x0

    sget-object v3, Lfreemarker/core/BuiltInsForMultipleTypes;->class$freemarker$template$TemplateNumberModel:Ljava/lang/Class;

    if-nez v3, :cond_3

    .line 639
    const-string v3, "freemarker.template.TemplateNumberModel"

    invoke-static {v3}, Lfreemarker/core/BuiltInsForMultipleTypes;->class$(Ljava/lang/String;)Ljava/lang/Class;

    move-result-object v3

    sput-object v3, Lfreemarker/core/BuiltInsForMultipleTypes;->class$freemarker$template$TemplateNumberModel:Ljava/lang/Class;

    goto :goto_1

    :cond_3
    sget-object v3, Lfreemarker/core/BuiltInsForMultipleTypes;->class$freemarker$template$TemplateNumberModel:Ljava/lang/Class;

    :goto_1
    aput-object v3, v5, v1

    const/4 v1, 0x1

    sget-object v3, Lfreemarker/core/BuiltInsForMultipleTypes;->class$freemarker$template$TemplateBooleanModel:Ljava/lang/Class;

    if-nez v3, :cond_4

    const-string v3, "freemarker.template.TemplateBooleanModel"

    invoke-static {v3}, Lfreemarker/core/BuiltInsForMultipleTypes;->class$(Ljava/lang/String;)Ljava/lang/Class;

    move-result-object v3

    sput-object v3, Lfreemarker/core/BuiltInsForMultipleTypes;->class$freemarker$template$TemplateBooleanModel:Ljava/lang/Class;

    goto :goto_2

    :cond_4
    sget-object v3, Lfreemarker/core/BuiltInsForMultipleTypes;->class$freemarker$template$TemplateBooleanModel:Ljava/lang/Class;

    :goto_2
    aput-object v3, v5, v1

    const-string v4, "number or boolean"

    move-object v1, v7

    move-object v3, v0

    move-object v6, p1

    invoke-direct/range {v1 .. v6}, Lfreemarker/core/UnexpectedTypeException;-><init>(Lfreemarker/core/Expression;Lfreemarker/template/TemplateModel;Ljava/lang/String;[Ljava/lang/Class;Lfreemarker/core/Environment;)V

    throw v7
.end method

.method protected abstract formatNumber(Lfreemarker/core/Environment;Lfreemarker/template/TemplateModel;)Lfreemarker/template/TemplateModel;
    .annotation system Ldalvik/annotation/Throws;
        value = {
            Lfreemarker/template/TemplateModelException;
        }
    .end annotation
.end method
