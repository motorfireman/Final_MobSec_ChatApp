.class public Lfreemarker/core/ArithmeticEngine$ConservativeEngine;
.super Lfreemarker/core/ArithmeticEngine;
.source "ArithmeticEngine.java"


# annotations
.annotation system Ldalvik/annotation/EnclosingClass;
    value = Lfreemarker/core/ArithmeticEngine;
.end annotation

.annotation system Ldalvik/annotation/InnerClass;
    accessFlags = 0x9
    name = "ConservativeEngine"
.end annotation


# static fields
.field private static final BIGDECIMAL:I = 0x5

.field private static final BIGINTEGER:I = 0x4

.field private static final DOUBLE:I = 0x3

.field private static final FLOAT:I = 0x2

.field private static final INTEGER:I = 0x0

.field private static final LONG:I = 0x1

.field private static final classCodes:Ljava/util/Map;


# direct methods
.method static constructor <clinit>()V
    .locals 1

    .line 204
    invoke-static {}, Lfreemarker/core/ArithmeticEngine$ConservativeEngine;->createClassCodesMap()Ljava/util/Map;

    move-result-object v0

    sput-object v0, Lfreemarker/core/ArithmeticEngine$ConservativeEngine;->classCodes:Ljava/util/Map;

    return-void
.end method

.method public constructor <init>()V
    .locals 0

    .line 196
    invoke-direct {p0}, Lfreemarker/core/ArithmeticEngine;-><init>()V

    return-void
.end method

.method private static createClassCodesMap()Ljava/util/Map;
    .locals 5

    .line 457
    new-instance v0, Ljava/util/HashMap;

    const/16 v1, 0x11

    invoke-direct {v0, v1}, Ljava/util/HashMap;-><init>(I)V

    .line 458
    .local v0, "map":Ljava/util/Map;
    new-instance v1, Ljava/lang/Integer;

    const/4 v2, 0x0

    invoke-direct {v1, v2}, Ljava/lang/Integer;-><init>(I)V

    .line 459
    .local v1, "intcode":Ljava/lang/Integer;
    sget-object v2, Lfreemarker/core/ArithmeticEngine;->class$java$lang$Byte:Ljava/lang/Class;

    if-nez v2, :cond_0

    const-string v2, "java.lang.Byte"

    invoke-static {v2}, Lfreemarker/core/ArithmeticEngine;->class$(Ljava/lang/String;)Ljava/lang/Class;

    move-result-object v2

    sput-object v2, Lfreemarker/core/ArithmeticEngine;->class$java$lang$Byte:Ljava/lang/Class;

    goto :goto_0

    :cond_0
    sget-object v2, Lfreemarker/core/ArithmeticEngine;->class$java$lang$Byte:Ljava/lang/Class;

    :goto_0
    invoke-interface {v0, v2, v1}, Ljava/util/Map;->put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;

    .line 460
    sget-object v2, Lfreemarker/core/ArithmeticEngine;->class$java$lang$Short:Ljava/lang/Class;

    if-nez v2, :cond_1

    const-string v2, "java.lang.Short"

    invoke-static {v2}, Lfreemarker/core/ArithmeticEngine;->class$(Ljava/lang/String;)Ljava/lang/Class;

    move-result-object v2

    sput-object v2, Lfreemarker/core/ArithmeticEngine;->class$java$lang$Short:Ljava/lang/Class;

    goto :goto_1

    :cond_1
    sget-object v2, Lfreemarker/core/ArithmeticEngine;->class$java$lang$Short:Ljava/lang/Class;

    :goto_1
    invoke-interface {v0, v2, v1}, Ljava/util/Map;->put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;

    .line 461
    sget-object v2, Lfreemarker/core/ArithmeticEngine;->class$java$lang$Integer:Ljava/lang/Class;

    if-nez v2, :cond_2

    const-string v2, "java.lang.Integer"

    invoke-static {v2}, Lfreemarker/core/ArithmeticEngine;->class$(Ljava/lang/String;)Ljava/lang/Class;

    move-result-object v2

    sput-object v2, Lfreemarker/core/ArithmeticEngine;->class$java$lang$Integer:Ljava/lang/Class;

    goto :goto_2

    :cond_2
    sget-object v2, Lfreemarker/core/ArithmeticEngine;->class$java$lang$Integer:Ljava/lang/Class;

    :goto_2
    invoke-interface {v0, v2, v1}, Ljava/util/Map;->put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;

    .line 462
    sget-object v2, Lfreemarker/core/ArithmeticEngine;->class$java$lang$Long:Ljava/lang/Class;

    if-nez v2, :cond_3

    const-string v2, "java.lang.Long"

    invoke-static {v2}, Lfreemarker/core/ArithmeticEngine;->class$(Ljava/lang/String;)Ljava/lang/Class;

    move-result-object v2

    sput-object v2, Lfreemarker/core/ArithmeticEngine;->class$java$lang$Long:Ljava/lang/Class;

    goto :goto_3

    :cond_3
    sget-object v2, Lfreemarker/core/ArithmeticEngine;->class$java$lang$Long:Ljava/lang/Class;

    :goto_3
    new-instance v3, Ljava/lang/Integer;

    const/4 v4, 0x1

    invoke-direct {v3, v4}, Ljava/lang/Integer;-><init>(I)V

    invoke-interface {v0, v2, v3}, Ljava/util/Map;->put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;

    .line 463
    sget-object v2, Lfreemarker/core/ArithmeticEngine;->class$java$lang$Float:Ljava/lang/Class;

    if-nez v2, :cond_4

    const-string v2, "java.lang.Float"

    invoke-static {v2}, Lfreemarker/core/ArithmeticEngine;->class$(Ljava/lang/String;)Ljava/lang/Class;

    move-result-object v2

    sput-object v2, Lfreemarker/core/ArithmeticEngine;->class$java$lang$Float:Ljava/lang/Class;

    goto :goto_4

    :cond_4
    sget-object v2, Lfreemarker/core/ArithmeticEngine;->class$java$lang$Float:Ljava/lang/Class;

    :goto_4
    new-instance v3, Ljava/lang/Integer;

    const/4 v4, 0x2

    invoke-direct {v3, v4}, Ljava/lang/Integer;-><init>(I)V

    invoke-interface {v0, v2, v3}, Ljava/util/Map;->put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;

    .line 464
    sget-object v2, Lfreemarker/core/ArithmeticEngine;->class$java$lang$Double:Ljava/lang/Class;

    if-nez v2, :cond_5

    const-string v2, "java.lang.Double"

    invoke-static {v2}, Lfreemarker/core/ArithmeticEngine;->class$(Ljava/lang/String;)Ljava/lang/Class;

    move-result-object v2

    sput-object v2, Lfreemarker/core/ArithmeticEngine;->class$java$lang$Double:Ljava/lang/Class;

    goto :goto_5

    :cond_5
    sget-object v2, Lfreemarker/core/ArithmeticEngine;->class$java$lang$Double:Ljava/lang/Class;

    :goto_5
    new-instance v3, Ljava/lang/Integer;

    const/4 v4, 0x3

    invoke-direct {v3, v4}, Ljava/lang/Integer;-><init>(I)V

    invoke-interface {v0, v2, v3}, Ljava/util/Map;->put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;

    .line 465
    sget-object v2, Lfreemarker/core/ArithmeticEngine;->class$java$math$BigInteger:Ljava/lang/Class;

    if-nez v2, :cond_6

    const-string v2, "java.math.BigInteger"

    invoke-static {v2}, Lfreemarker/core/ArithmeticEngine;->class$(Ljava/lang/String;)Ljava/lang/Class;

    move-result-object v2

    sput-object v2, Lfreemarker/core/ArithmeticEngine;->class$java$math$BigInteger:Ljava/lang/Class;

    goto :goto_6

    :cond_6
    sget-object v2, Lfreemarker/core/ArithmeticEngine;->class$java$math$BigInteger:Ljava/lang/Class;

    :goto_6
    new-instance v3, Ljava/lang/Integer;

    const/4 v4, 0x4

    invoke-direct {v3, v4}, Ljava/lang/Integer;-><init>(I)V

    invoke-interface {v0, v2, v3}, Ljava/util/Map;->put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;

    .line 466
    sget-object v2, Lfreemarker/core/ArithmeticEngine;->class$java$math$BigDecimal:Ljava/lang/Class;

    if-nez v2, :cond_7

    const-string v2, "java.math.BigDecimal"

    invoke-static {v2}, Lfreemarker/core/ArithmeticEngine;->class$(Ljava/lang/String;)Ljava/lang/Class;

    move-result-object v2

    sput-object v2, Lfreemarker/core/ArithmeticEngine;->class$java$math$BigDecimal:Ljava/lang/Class;

    goto :goto_7

    :cond_7
    sget-object v2, Lfreemarker/core/ArithmeticEngine;->class$java$math$BigDecimal:Ljava/lang/Class;

    :goto_7
    new-instance v3, Ljava/lang/Integer;

    const/4 v4, 0x5

    invoke-direct {v3, v4}, Ljava/lang/Integer;-><init>(I)V

    invoke-interface {v0, v2, v3}, Ljava/util/Map;->put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;

    .line 467
    return-object v0
.end method

.method private static getClassCode(Ljava/lang/Number;)I
    .locals 5
    .param p0, "num"    # Ljava/lang/Number;
    .annotation system Ldalvik/annotation/Throws;
        value = {
            Lfreemarker/template/TemplateException;
        }
    .end annotation

    .line 472
    :try_start_0
    sget-object v0, Lfreemarker/core/ArithmeticEngine$ConservativeEngine;->classCodes:Ljava/util/Map;

    invoke-virtual {p0}, Ljava/lang/Object;->getClass()Ljava/lang/Class;

    move-result-object v1

    invoke-interface {v0, v1}, Ljava/util/Map;->get(Ljava/lang/Object;)Ljava/lang/Object;

    move-result-object v0

    check-cast v0, Ljava/lang/Integer;

    invoke-virtual {v0}, Ljava/lang/Integer;->intValue()I

    move-result v0
    :try_end_0
    .catch Ljava/lang/NullPointerException; {:try_start_0 .. :try_end_0} :catch_0

    return v0

    .line 474
    :catch_0
    move-exception v0

    .line 475
    .local v0, "e":Ljava/lang/NullPointerException;
    if-nez p0, :cond_0

    .line 476
    new-instance v1, Lfreemarker/core/_MiscTemplateException;

    const-string v2, "The Number object was null."

    invoke-direct {v1, v2}, Lfreemarker/core/_MiscTemplateException;-><init>(Ljava/lang/String;)V

    throw v1

    .line 478
    :cond_0
    new-instance v1, Lfreemarker/core/_MiscTemplateException;

    const/4 v2, 0x2

    new-array v2, v2, [Ljava/lang/Object;

    const/4 v3, 0x0

    const-string v4, "Unknown number type "

    aput-object v4, v2, v3

    const/4 v3, 0x1

    .line 479
    invoke-virtual {p0}, Ljava/lang/Object;->getClass()Ljava/lang/Class;

    move-result-object v4

    invoke-virtual {v4}, Ljava/lang/Class;->getName()Ljava/lang/String;

    move-result-object v4

    aput-object v4, v2, v3

    invoke-direct {v1, v2}, Lfreemarker/core/_MiscTemplateException;-><init>([Ljava/lang/Object;)V

    throw v1
.end method

.method private static getCommonClassCode(Ljava/lang/Number;Ljava/lang/Number;)I
    .locals 6
    .param p0, "num1"    # Ljava/lang/Number;
    .param p1, "num2"    # Ljava/lang/Number;
    .annotation system Ldalvik/annotation/Throws;
        value = {
            Lfreemarker/template/TemplateException;
        }
    .end annotation

    .line 485
    invoke-static {p0}, Lfreemarker/core/ArithmeticEngine$ConservativeEngine;->getClassCode(Ljava/lang/Number;)I

    move-result v0

    .line 486
    .local v0, "c1":I
    invoke-static {p1}, Lfreemarker/core/ArithmeticEngine$ConservativeEngine;->getClassCode(Ljava/lang/Number;)I

    move-result v1

    .line 487
    .local v1, "c2":I
    if-le v0, v1, :cond_0

    move v2, v0

    goto :goto_0

    :cond_0
    move v2, v1

    .line 492
    .local v2, "c":I
    :goto_0
    const/4 v3, 0x3

    packed-switch v2, :pswitch_data_0

    :pswitch_0
    goto :goto_3

    .line 500
    :pswitch_1
    if-ge v0, v1, :cond_1

    move v4, v0

    goto :goto_1

    :cond_1
    move v4, v1

    .line 501
    .local v4, "min":I
    :goto_1
    if-eq v4, v3, :cond_2

    const/4 v3, 0x2

    if-ne v4, v3, :cond_4

    .line 502
    :cond_2
    const/4 v3, 0x5

    return v3

    .line 494
    .end local v4    # "min":I
    :pswitch_2
    if-ge v0, v1, :cond_3

    move v4, v0

    goto :goto_2

    :cond_3
    move v4, v1

    :goto_2
    const/4 v5, 0x1

    if-ne v4, v5, :cond_4

    .line 495
    return v3

    .line 507
    :cond_4
    :goto_3
    return v2

    :pswitch_data_0
    .packed-switch 0x2
        :pswitch_2
        :pswitch_0
        :pswitch_1
    .end packed-switch
.end method

.method private static toBigInteger(Ljava/lang/Number;)Ljava/math/BigInteger;
    .locals 2
    .param p0, "num"    # Ljava/lang/Number;

    .line 511
    instance-of v0, p0, Ljava/math/BigInteger;

    if-eqz v0, :cond_0

    move-object v0, p0

    check-cast v0, Ljava/math/BigInteger;

    goto :goto_0

    :cond_0
    new-instance v0, Ljava/math/BigInteger;

    invoke-virtual {p0}, Ljava/lang/Object;->toString()Ljava/lang/String;

    move-result-object v1

    invoke-direct {v0, v1}, Ljava/math/BigInteger;-><init>(Ljava/lang/String;)V

    :goto_0
    return-object v0
.end method


# virtual methods
.method public add(Ljava/lang/Number;Ljava/lang/Number;)Ljava/lang/Number;
    .locals 10
    .param p1, "first"    # Ljava/lang/Number;
    .param p2, "second"    # Ljava/lang/Number;
    .annotation system Ldalvik/annotation/Throws;
        value = {
            Lfreemarker/template/TemplateException;
        }
    .end annotation

    .line 245
    invoke-static {p1, p2}, Lfreemarker/core/ArithmeticEngine$ConservativeEngine;->getCommonClassCode(Ljava/lang/Number;Ljava/lang/Number;)I

    move-result v0

    packed-switch v0, :pswitch_data_0

    .line 283
    new-instance v0, Ljava/lang/Error;

    invoke-direct {v0}, Ljava/lang/Error;-><init>()V

    throw v0

    .line 276
    :pswitch_0
    invoke-static {p1}, Lfreemarker/core/ArithmeticEngine;->access$000(Ljava/lang/Number;)Ljava/math/BigDecimal;

    move-result-object v0

    .line 277
    .local v0, "n1":Ljava/math/BigDecimal;
    invoke-static {p2}, Lfreemarker/core/ArithmeticEngine;->access$000(Ljava/lang/Number;)Ljava/math/BigDecimal;

    move-result-object v1

    .line 278
    .local v1, "n2":Ljava/math/BigDecimal;
    invoke-virtual {v0, v1}, Ljava/math/BigDecimal;->add(Ljava/math/BigDecimal;)Ljava/math/BigDecimal;

    move-result-object v2

    return-object v2

    .line 271
    .end local v0    # "n1":Ljava/math/BigDecimal;
    .end local v1    # "n2":Ljava/math/BigDecimal;
    :pswitch_1
    invoke-static {p1}, Lfreemarker/core/ArithmeticEngine$ConservativeEngine;->toBigInteger(Ljava/lang/Number;)Ljava/math/BigInteger;

    move-result-object v0

    .line 272
    .local v0, "n1":Ljava/math/BigInteger;
    invoke-static {p2}, Lfreemarker/core/ArithmeticEngine$ConservativeEngine;->toBigInteger(Ljava/lang/Number;)Ljava/math/BigInteger;

    move-result-object v1

    .line 273
    .local v1, "n2":Ljava/math/BigInteger;
    invoke-virtual {v0, v1}, Ljava/math/BigInteger;->add(Ljava/math/BigInteger;)Ljava/math/BigInteger;

    move-result-object v2

    return-object v2

    .line 268
    .end local v0    # "n1":Ljava/math/BigInteger;
    .end local v1    # "n2":Ljava/math/BigInteger;
    :pswitch_2
    new-instance v0, Ljava/lang/Double;

    invoke-virtual {p1}, Ljava/lang/Number;->doubleValue()D

    move-result-wide v1

    invoke-virtual {p2}, Ljava/lang/Number;->doubleValue()D

    move-result-wide v3

    add-double/2addr v1, v3

    invoke-direct {v0, v1, v2}, Ljava/lang/Double;-><init>(D)V

    return-object v0

    .line 265
    :pswitch_3
    new-instance v0, Ljava/lang/Float;

    invoke-virtual {p1}, Ljava/lang/Number;->floatValue()F

    move-result v1

    invoke-virtual {p2}, Ljava/lang/Number;->floatValue()F

    move-result v2

    add-float/2addr v1, v2

    invoke-direct {v0, v1}, Ljava/lang/Float;-><init>(F)V

    return-object v0

    .line 256
    :pswitch_4
    invoke-virtual {p1}, Ljava/lang/Number;->longValue()J

    move-result-wide v0

    .line 257
    .local v0, "n1":J
    invoke-virtual {p2}, Ljava/lang/Number;->longValue()J

    move-result-wide v2

    .line 258
    .local v2, "n2":J
    add-long v4, v0, v2

    .line 259
    .local v4, "n":J
    xor-long v6, v4, v0

    const-wide/16 v8, 0x0

    cmp-long v6, v6, v8

    if-gez v6, :cond_0

    xor-long v6, v4, v2

    cmp-long v6, v6, v8

    if-gez v6, :cond_0

    .line 261
    invoke-static {p1}, Lfreemarker/core/ArithmeticEngine$ConservativeEngine;->toBigInteger(Ljava/lang/Number;)Ljava/math/BigInteger;

    move-result-object v6

    invoke-static {p2}, Lfreemarker/core/ArithmeticEngine$ConservativeEngine;->toBigInteger(Ljava/lang/Number;)Ljava/math/BigInteger;

    move-result-object v7

    invoke-virtual {v6, v7}, Ljava/math/BigInteger;->add(Ljava/math/BigInteger;)Ljava/math/BigInteger;

    move-result-object v6

    goto :goto_0

    :cond_0
    new-instance v6, Ljava/lang/Long;

    invoke-direct {v6, v4, v5}, Ljava/lang/Long;-><init>(J)V

    :goto_0
    return-object v6

    .line 247
    .end local v0    # "n1":J
    .end local v2    # "n2":J
    .end local v4    # "n":J
    :pswitch_5
    invoke-virtual {p1}, Ljava/lang/Number;->intValue()I

    move-result v0

    .line 248
    .local v0, "n1":I
    invoke-virtual {p2}, Ljava/lang/Number;->intValue()I

    move-result v1

    .line 249
    .local v1, "n2":I
    add-int v2, v0, v1

    .line 250
    .local v2, "n":I
    xor-int v3, v2, v0

    if-gez v3, :cond_1

    xor-int v3, v2, v1

    if-gez v3, :cond_1

    new-instance v3, Ljava/lang/Long;

    int-to-long v4, v0

    int-to-long v6, v1

    add-long/2addr v4, v6

    invoke-direct {v3, v4, v5}, Ljava/lang/Long;-><init>(J)V

    goto :goto_1

    :cond_1
    new-instance v3, Ljava/lang/Integer;

    invoke-direct {v3, v2}, Ljava/lang/Integer;-><init>(I)V

    :goto_1
    return-object v3

    nop

    :pswitch_data_0
    .packed-switch 0x0
        :pswitch_5
        :pswitch_4
        :pswitch_3
        :pswitch_2
        :pswitch_1
        :pswitch_0
    .end packed-switch
.end method

.method public compareNumbers(Ljava/lang/Number;Ljava/lang/Number;)I
    .locals 8
    .param p1, "first"    # Ljava/lang/Number;
    .param p2, "second"    # Ljava/lang/Number;
    .annotation system Ldalvik/annotation/Throws;
        value = {
            Lfreemarker/template/TemplateException;
        }
    .end annotation

    .line 207
    invoke-static {p1, p2}, Lfreemarker/core/ArithmeticEngine$ConservativeEngine;->getCommonClassCode(Ljava/lang/Number;Ljava/lang/Number;)I

    move-result v0

    const/4 v1, 0x0

    const/4 v2, 0x1

    const/4 v3, -0x1

    packed-switch v0, :pswitch_data_0

    .line 241
    new-instance v0, Ljava/lang/Error;

    invoke-direct {v0}, Ljava/lang/Error;-><init>()V

    throw v0

    .line 234
    :pswitch_0
    invoke-static {p1}, Lfreemarker/core/ArithmeticEngine;->access$000(Ljava/lang/Number;)Ljava/math/BigDecimal;

    move-result-object v0

    .line 235
    .local v0, "n1":Ljava/math/BigDecimal;
    invoke-static {p2}, Lfreemarker/core/ArithmeticEngine;->access$000(Ljava/lang/Number;)Ljava/math/BigDecimal;

    move-result-object v1

    .line 236
    .local v1, "n2":Ljava/math/BigDecimal;
    invoke-virtual {v0, v1}, Ljava/math/BigDecimal;->compareTo(Ljava/math/BigDecimal;)I

    move-result v2

    return v2

    .line 229
    .end local v0    # "n1":Ljava/math/BigDecimal;
    .end local v1    # "n2":Ljava/math/BigDecimal;
    :pswitch_1
    invoke-static {p1}, Lfreemarker/core/ArithmeticEngine$ConservativeEngine;->toBigInteger(Ljava/lang/Number;)Ljava/math/BigInteger;

    move-result-object v0

    .line 230
    .local v0, "n1":Ljava/math/BigInteger;
    invoke-static {p2}, Lfreemarker/core/ArithmeticEngine$ConservativeEngine;->toBigInteger(Ljava/lang/Number;)Ljava/math/BigInteger;

    move-result-object v1

    .line 231
    .local v1, "n2":Ljava/math/BigInteger;
    invoke-virtual {v0, v1}, Ljava/math/BigInteger;->compareTo(Ljava/math/BigInteger;)I

    move-result v2

    return v2

    .line 224
    .end local v0    # "n1":Ljava/math/BigInteger;
    .end local v1    # "n2":Ljava/math/BigInteger;
    :pswitch_2
    invoke-virtual {p1}, Ljava/lang/Number;->doubleValue()D

    move-result-wide v4

    .line 225
    .local v4, "n1":D
    invoke-virtual {p2}, Ljava/lang/Number;->doubleValue()D

    move-result-wide v6

    .line 226
    .local v6, "n2":D
    cmpg-double v0, v4, v6

    if-gez v0, :cond_0

    move v1, v3

    goto :goto_0

    :cond_0
    cmpl-double v0, v4, v6

    if-nez v0, :cond_1

    goto :goto_0

    :cond_1
    move v1, v2

    :goto_0
    return v1

    .line 219
    .end local v4    # "n1":D
    .end local v6    # "n2":D
    :pswitch_3
    invoke-virtual {p1}, Ljava/lang/Number;->floatValue()F

    move-result v0

    .line 220
    .local v0, "n1":F
    invoke-virtual {p2}, Ljava/lang/Number;->floatValue()F

    move-result v4

    .line 221
    .local v4, "n2":F
    cmpg-float v5, v0, v4

    if-gez v5, :cond_2

    move v1, v3

    goto :goto_1

    :cond_2
    cmpl-float v3, v0, v4

    if-nez v3, :cond_3

    goto :goto_1

    :cond_3
    move v1, v2

    :goto_1
    return v1

    .line 214
    .end local v0    # "n1":F
    .end local v4    # "n2":F
    :pswitch_4
    invoke-virtual {p1}, Ljava/lang/Number;->longValue()J

    move-result-wide v4

    .line 215
    .local v4, "n1":J
    invoke-virtual {p2}, Ljava/lang/Number;->longValue()J

    move-result-wide v6

    .line 216
    .local v6, "n2":J
    cmp-long v0, v4, v6

    if-gez v0, :cond_4

    move v1, v3

    goto :goto_2

    :cond_4
    cmp-long v0, v4, v6

    if-nez v0, :cond_5

    goto :goto_2

    :cond_5
    move v1, v2

    :goto_2
    return v1

    .line 209
    .end local v4    # "n1":J
    .end local v6    # "n2":J
    :pswitch_5
    invoke-virtual {p1}, Ljava/lang/Number;->intValue()I

    move-result v0

    .line 210
    .local v0, "n1":I
    invoke-virtual {p2}, Ljava/lang/Number;->intValue()I

    move-result v4

    .line 211
    .local v4, "n2":I
    if-ge v0, v4, :cond_6

    move v1, v3

    goto :goto_3

    :cond_6
    if-ne v0, v4, :cond_7

    goto :goto_3

    :cond_7
    move v1, v2

    :goto_3
    return v1

    :pswitch_data_0
    .packed-switch 0x0
        :pswitch_5
        :pswitch_4
        :pswitch_3
        :pswitch_2
        :pswitch_1
        :pswitch_0
    .end packed-switch
.end method

.method public divide(Ljava/lang/Number;Ljava/lang/Number;)Ljava/lang/Number;
    .locals 9
    .param p1, "first"    # Ljava/lang/Number;
    .param p2, "second"    # Ljava/lang/Number;
    .annotation system Ldalvik/annotation/Throws;
        value = {
            Lfreemarker/template/TemplateException;
        }
    .end annotation

    .line 372
    invoke-static {p1, p2}, Lfreemarker/core/ArithmeticEngine$ConservativeEngine;->getCommonClassCode(Ljava/lang/Number;Ljava/lang/Number;)I

    move-result v0

    packed-switch v0, :pswitch_data_0

    .line 420
    new-instance v0, Ljava/lang/Error;

    invoke-direct {v0}, Ljava/lang/Error;-><init>()V

    throw v0

    .line 409
    :pswitch_0
    invoke-static {p1}, Lfreemarker/core/ArithmeticEngine;->access$000(Ljava/lang/Number;)Ljava/math/BigDecimal;

    move-result-object v0

    .line 410
    .local v0, "n1":Ljava/math/BigDecimal;
    invoke-static {p2}, Lfreemarker/core/ArithmeticEngine;->access$000(Ljava/lang/Number;)Ljava/math/BigDecimal;

    move-result-object v1

    .line 411
    .local v1, "n2":Ljava/math/BigDecimal;
    invoke-virtual {v0}, Ljava/math/BigDecimal;->scale()I

    move-result v2

    .line 412
    .local v2, "scale1":I
    invoke-virtual {v1}, Ljava/math/BigDecimal;->scale()I

    move-result v3

    .line 413
    .local v3, "scale2":I
    invoke-static {v2, v3}, Ljava/lang/Math;->max(II)I

    move-result v4

    .line 414
    .local v4, "scale":I
    iget v5, p0, Lfreemarker/core/ArithmeticEngine$ConservativeEngine;->minScale:I

    invoke-static {v5, v4}, Ljava/lang/Math;->max(II)I

    move-result v4

    .line 415
    iget v5, p0, Lfreemarker/core/ArithmeticEngine$ConservativeEngine;->roundingPolicy:I

    invoke-virtual {v0, v1, v4, v5}, Ljava/math/BigDecimal;->divide(Ljava/math/BigDecimal;II)Ljava/math/BigDecimal;

    move-result-object v5

    return-object v5

    .line 396
    .end local v0    # "n1":Ljava/math/BigDecimal;
    .end local v1    # "n2":Ljava/math/BigDecimal;
    .end local v2    # "scale1":I
    .end local v3    # "scale2":I
    .end local v4    # "scale":I
    :pswitch_1
    invoke-static {p1}, Lfreemarker/core/ArithmeticEngine$ConservativeEngine;->toBigInteger(Ljava/lang/Number;)Ljava/math/BigInteger;

    move-result-object v0

    .line 397
    .local v0, "n1":Ljava/math/BigInteger;
    invoke-static {p2}, Lfreemarker/core/ArithmeticEngine$ConservativeEngine;->toBigInteger(Ljava/lang/Number;)Ljava/math/BigInteger;

    move-result-object v1

    .line 398
    .local v1, "n2":Ljava/math/BigInteger;
    invoke-virtual {v0, v1}, Ljava/math/BigInteger;->divideAndRemainder(Ljava/math/BigInteger;)[Ljava/math/BigInteger;

    move-result-object v2

    .line 399
    .local v2, "divmod":[Ljava/math/BigInteger;
    const/4 v3, 0x1

    aget-object v3, v2, v3

    sget-object v4, Ljava/math/BigInteger;->ZERO:Ljava/math/BigInteger;

    invoke-virtual {v3, v4}, Ljava/math/BigInteger;->equals(Ljava/lang/Object;)Z

    move-result v3

    if-eqz v3, :cond_0

    .line 400
    const/4 v3, 0x0

    aget-object v3, v2, v3

    return-object v3

    .line 403
    :cond_0
    new-instance v3, Ljava/math/BigDecimal;

    invoke-direct {v3, v0}, Ljava/math/BigDecimal;-><init>(Ljava/math/BigInteger;)V

    .line 404
    .local v3, "bd1":Ljava/math/BigDecimal;
    new-instance v4, Ljava/math/BigDecimal;

    invoke-direct {v4, v1}, Ljava/math/BigDecimal;-><init>(Ljava/math/BigInteger;)V

    .line 405
    .local v4, "bd2":Ljava/math/BigDecimal;
    iget v5, p0, Lfreemarker/core/ArithmeticEngine$ConservativeEngine;->minScale:I

    iget v6, p0, Lfreemarker/core/ArithmeticEngine$ConservativeEngine;->roundingPolicy:I

    invoke-virtual {v3, v4, v5, v6}, Ljava/math/BigDecimal;->divide(Ljava/math/BigDecimal;II)Ljava/math/BigDecimal;

    move-result-object v5

    return-object v5

    .line 393
    .end local v0    # "n1":Ljava/math/BigInteger;
    .end local v1    # "n2":Ljava/math/BigInteger;
    .end local v2    # "divmod":[Ljava/math/BigInteger;
    .end local v3    # "bd1":Ljava/math/BigDecimal;
    .end local v4    # "bd2":Ljava/math/BigDecimal;
    :pswitch_2
    new-instance v0, Ljava/lang/Double;

    invoke-virtual {p1}, Ljava/lang/Number;->doubleValue()D

    move-result-wide v1

    invoke-virtual {p2}, Ljava/lang/Number;->doubleValue()D

    move-result-wide v3

    div-double/2addr v1, v3

    invoke-direct {v0, v1, v2}, Ljava/lang/Double;-><init>(D)V

    return-object v0

    .line 390
    :pswitch_3
    new-instance v0, Ljava/lang/Float;

    invoke-virtual {p1}, Ljava/lang/Number;->floatValue()F

    move-result v1

    invoke-virtual {p2}, Ljava/lang/Number;->floatValue()F

    move-result v2

    div-float/2addr v1, v2

    invoke-direct {v0, v1}, Ljava/lang/Float;-><init>(F)V

    return-object v0

    .line 382
    :pswitch_4
    invoke-virtual {p1}, Ljava/lang/Number;->longValue()J

    move-result-wide v0

    .line 383
    .local v0, "n1":J
    invoke-virtual {p2}, Ljava/lang/Number;->longValue()J

    move-result-wide v2

    .line 384
    .local v2, "n2":J
    rem-long v4, v0, v2

    const-wide/16 v6, 0x0

    cmp-long v4, v4, v6

    if-nez v4, :cond_1

    .line 385
    new-instance v4, Ljava/lang/Long;

    div-long v5, v0, v2

    invoke-direct {v4, v5, v6}, Ljava/lang/Long;-><init>(J)V

    return-object v4

    .line 387
    :cond_1
    new-instance v4, Ljava/lang/Double;

    long-to-double v5, v0

    long-to-double v7, v2

    div-double/2addr v5, v7

    invoke-direct {v4, v5, v6}, Ljava/lang/Double;-><init>(D)V

    return-object v4

    .line 374
    .end local v0    # "n1":J
    .end local v2    # "n2":J
    :pswitch_5
    invoke-virtual {p1}, Ljava/lang/Number;->intValue()I

    move-result v0

    .line 375
    .local v0, "n1":I
    invoke-virtual {p2}, Ljava/lang/Number;->intValue()I

    move-result v1

    .line 376
    .local v1, "n2":I
    rem-int v2, v0, v1

    if-nez v2, :cond_2

    .line 377
    new-instance v2, Ljava/lang/Integer;

    div-int v3, v0, v1

    invoke-direct {v2, v3}, Ljava/lang/Integer;-><init>(I)V

    return-object v2

    .line 379
    :cond_2
    new-instance v2, Ljava/lang/Double;

    int-to-double v3, v0

    int-to-double v5, v1

    div-double/2addr v3, v5

    invoke-direct {v2, v3, v4}, Ljava/lang/Double;-><init>(D)V

    return-object v2

    :pswitch_data_0
    .packed-switch 0x0
        :pswitch_5
        :pswitch_4
        :pswitch_3
        :pswitch_2
        :pswitch_1
        :pswitch_0
    .end packed-switch
.end method

.method public modulus(Ljava/lang/Number;Ljava/lang/Number;)Ljava/lang/Number;
    .locals 5
    .param p1, "first"    # Ljava/lang/Number;
    .param p2, "second"    # Ljava/lang/Number;
    .annotation system Ldalvik/annotation/Throws;
        value = {
            Lfreemarker/template/TemplateException;
        }
    .end annotation

    .line 424
    invoke-static {p1, p2}, Lfreemarker/core/ArithmeticEngine$ConservativeEngine;->getCommonClassCode(Ljava/lang/Number;Ljava/lang/Number;)I

    move-result v0

    packed-switch v0, :pswitch_data_0

    .line 448
    new-instance v0, Lfreemarker/core/BugException;

    invoke-direct {v0}, Lfreemarker/core/BugException;-><init>()V

    throw v0

    .line 443
    :pswitch_0
    new-instance v0, Lfreemarker/core/_MiscTemplateException;

    const-string v1, "Can\'t calculate remainder on BigDecimals"

    invoke-direct {v0, v1}, Lfreemarker/core/_MiscTemplateException;-><init>(Ljava/lang/String;)V

    throw v0

    .line 438
    :pswitch_1
    invoke-static {p1}, Lfreemarker/core/ArithmeticEngine$ConservativeEngine;->toBigInteger(Ljava/lang/Number;)Ljava/math/BigInteger;

    move-result-object v0

    .line 439
    .local v0, "n1":Ljava/math/BigInteger;
    invoke-static {p2}, Lfreemarker/core/ArithmeticEngine$ConservativeEngine;->toBigInteger(Ljava/lang/Number;)Ljava/math/BigInteger;

    move-result-object v1

    .line 440
    .local v1, "n2":Ljava/math/BigInteger;
    invoke-virtual {v0, v1}, Ljava/math/BigInteger;->mod(Ljava/math/BigInteger;)Ljava/math/BigInteger;

    move-result-object v2

    return-object v2

    .line 435
    .end local v0    # "n1":Ljava/math/BigInteger;
    .end local v1    # "n2":Ljava/math/BigInteger;
    :pswitch_2
    new-instance v0, Ljava/lang/Double;

    invoke-virtual {p1}, Ljava/lang/Number;->doubleValue()D

    move-result-wide v1

    invoke-virtual {p2}, Ljava/lang/Number;->doubleValue()D

    move-result-wide v3

    rem-double/2addr v1, v3

    invoke-direct {v0, v1, v2}, Ljava/lang/Double;-><init>(D)V

    return-object v0

    .line 432
    :pswitch_3
    new-instance v0, Ljava/lang/Float;

    invoke-virtual {p1}, Ljava/lang/Number;->floatValue()F

    move-result v1

    invoke-virtual {p2}, Ljava/lang/Number;->floatValue()F

    move-result v2

    rem-float/2addr v1, v2

    invoke-direct {v0, v1}, Ljava/lang/Float;-><init>(F)V

    return-object v0

    .line 429
    :pswitch_4
    new-instance v0, Ljava/lang/Long;

    invoke-virtual {p1}, Ljava/lang/Number;->longValue()J

    move-result-wide v1

    invoke-virtual {p2}, Ljava/lang/Number;->longValue()J

    move-result-wide v3

    rem-long/2addr v1, v3

    invoke-direct {v0, v1, v2}, Ljava/lang/Long;-><init>(J)V

    return-object v0

    .line 426
    :pswitch_5
    new-instance v0, Ljava/lang/Integer;

    invoke-virtual {p1}, Ljava/lang/Number;->intValue()I

    move-result v1

    invoke-virtual {p2}, Ljava/lang/Number;->intValue()I

    move-result v2

    rem-int/2addr v1, v2

    invoke-direct {v0, v1}, Ljava/lang/Integer;-><init>(I)V

    return-object v0

    :pswitch_data_0
    .packed-switch 0x0
        :pswitch_5
        :pswitch_4
        :pswitch_3
        :pswitch_2
        :pswitch_1
        :pswitch_0
    .end packed-switch
.end method

.method public multiply(Ljava/lang/Number;Ljava/lang/Number;)Ljava/lang/Number;
    .locals 8
    .param p1, "first"    # Ljava/lang/Number;
    .param p2, "second"    # Ljava/lang/Number;
    .annotation system Ldalvik/annotation/Throws;
        value = {
            Lfreemarker/template/TemplateException;
        }
    .end annotation

    .line 329
    invoke-static {p1, p2}, Lfreemarker/core/ArithmeticEngine$ConservativeEngine;->getCommonClassCode(Ljava/lang/Number;Ljava/lang/Number;)I

    move-result v0

    packed-switch v0, :pswitch_data_0

    .line 368
    new-instance v0, Ljava/lang/Error;

    invoke-direct {v0}, Ljava/lang/Error;-><init>()V

    throw v0

    .line 360
    :pswitch_0
    invoke-static {p1}, Lfreemarker/core/ArithmeticEngine;->access$000(Ljava/lang/Number;)Ljava/math/BigDecimal;

    move-result-object v0

    .line 361
    .local v0, "n1":Ljava/math/BigDecimal;
    invoke-static {p2}, Lfreemarker/core/ArithmeticEngine;->access$000(Ljava/lang/Number;)Ljava/math/BigDecimal;

    move-result-object v1

    .line 362
    .local v1, "n2":Ljava/math/BigDecimal;
    invoke-virtual {v0, v1}, Ljava/math/BigDecimal;->multiply(Ljava/math/BigDecimal;)Ljava/math/BigDecimal;

    move-result-object v2

    .line 363
    .local v2, "r":Ljava/math/BigDecimal;
    invoke-virtual {v2}, Ljava/math/BigDecimal;->scale()I

    move-result v3

    iget v4, p0, Lfreemarker/core/ArithmeticEngine$ConservativeEngine;->maxScale:I

    if-le v3, v4, :cond_0

    iget v3, p0, Lfreemarker/core/ArithmeticEngine$ConservativeEngine;->maxScale:I

    iget v4, p0, Lfreemarker/core/ArithmeticEngine$ConservativeEngine;->roundingPolicy:I

    invoke-virtual {v2, v3, v4}, Ljava/math/BigDecimal;->setScale(II)Ljava/math/BigDecimal;

    move-result-object v3

    goto :goto_0

    :cond_0
    move-object v3, v2

    :goto_0
    return-object v3

    .line 355
    .end local v0    # "n1":Ljava/math/BigDecimal;
    .end local v1    # "n2":Ljava/math/BigDecimal;
    .end local v2    # "r":Ljava/math/BigDecimal;
    :pswitch_1
    invoke-static {p1}, Lfreemarker/core/ArithmeticEngine$ConservativeEngine;->toBigInteger(Ljava/lang/Number;)Ljava/math/BigInteger;

    move-result-object v0

    .line 356
    .local v0, "n1":Ljava/math/BigInteger;
    invoke-static {p2}, Lfreemarker/core/ArithmeticEngine$ConservativeEngine;->toBigInteger(Ljava/lang/Number;)Ljava/math/BigInteger;

    move-result-object v1

    .line 357
    .local v1, "n2":Ljava/math/BigInteger;
    invoke-virtual {v0, v1}, Ljava/math/BigInteger;->multiply(Ljava/math/BigInteger;)Ljava/math/BigInteger;

    move-result-object v2

    return-object v2

    .line 352
    .end local v0    # "n1":Ljava/math/BigInteger;
    .end local v1    # "n2":Ljava/math/BigInteger;
    :pswitch_2
    new-instance v0, Ljava/lang/Double;

    invoke-virtual {p1}, Ljava/lang/Number;->doubleValue()D

    move-result-wide v1

    invoke-virtual {p2}, Ljava/lang/Number;->doubleValue()D

    move-result-wide v3

    mul-double/2addr v1, v3

    invoke-direct {v0, v1, v2}, Ljava/lang/Double;-><init>(D)V

    return-object v0

    .line 349
    :pswitch_3
    new-instance v0, Ljava/lang/Float;

    invoke-virtual {p1}, Ljava/lang/Number;->floatValue()F

    move-result v1

    invoke-virtual {p2}, Ljava/lang/Number;->floatValue()F

    move-result v2

    mul-float/2addr v1, v2

    invoke-direct {v0, v1}, Ljava/lang/Float;-><init>(F)V

    return-object v0

    .line 340
    :pswitch_4
    invoke-virtual {p1}, Ljava/lang/Number;->longValue()J

    move-result-wide v0

    .line 341
    .local v0, "n1":J
    invoke-virtual {p2}, Ljava/lang/Number;->longValue()J

    move-result-wide v2

    .line 342
    .local v2, "n2":J
    mul-long v4, v0, v2

    .line 343
    .local v4, "n":J
    const-wide/16 v6, 0x0

    cmp-long v6, v0, v6

    if-eqz v6, :cond_2

    div-long v6, v4, v0

    cmp-long v6, v6, v2

    if-nez v6, :cond_1

    goto :goto_1

    .line 346
    :cond_1
    invoke-static {p1}, Lfreemarker/core/ArithmeticEngine$ConservativeEngine;->toBigInteger(Ljava/lang/Number;)Ljava/math/BigInteger;

    move-result-object v6

    invoke-static {p2}, Lfreemarker/core/ArithmeticEngine$ConservativeEngine;->toBigInteger(Ljava/lang/Number;)Ljava/math/BigInteger;

    move-result-object v7

    invoke-virtual {v6, v7}, Ljava/math/BigInteger;->multiply(Ljava/math/BigInteger;)Ljava/math/BigInteger;

    move-result-object v6

    goto :goto_2

    .line 343
    :cond_2
    :goto_1
    new-instance v6, Ljava/lang/Long;

    invoke-direct {v6, v4, v5}, Ljava/lang/Long;-><init>(J)V

    .line 346
    :goto_2
    return-object v6

    .line 331
    .end local v0    # "n1":J
    .end local v2    # "n2":J
    .end local v4    # "n":J
    :pswitch_5
    invoke-virtual {p1}, Ljava/lang/Number;->intValue()I

    move-result v0

    .line 332
    .local v0, "n1":I
    invoke-virtual {p2}, Ljava/lang/Number;->intValue()I

    move-result v1

    .line 333
    .local v1, "n2":I
    mul-int v2, v0, v1

    .line 334
    .local v2, "n":I
    if-eqz v0, :cond_4

    div-int v3, v2, v0

    if-ne v3, v1, :cond_3

    goto :goto_3

    :cond_3
    new-instance v3, Ljava/lang/Long;

    int-to-long v4, v0

    int-to-long v6, v1

    mul-long/2addr v4, v6

    invoke-direct {v3, v4, v5}, Ljava/lang/Long;-><init>(J)V

    goto :goto_4

    :cond_4
    :goto_3
    new-instance v3, Ljava/lang/Integer;

    invoke-direct {v3, v2}, Ljava/lang/Integer;-><init>(I)V

    :goto_4
    return-object v3

    nop

    :pswitch_data_0
    .packed-switch 0x0
        :pswitch_5
        :pswitch_4
        :pswitch_3
        :pswitch_2
        :pswitch_1
        :pswitch_0
    .end packed-switch
.end method

.method public subtract(Ljava/lang/Number;Ljava/lang/Number;)Ljava/lang/Number;
    .locals 10
    .param p1, "first"    # Ljava/lang/Number;
    .param p2, "second"    # Ljava/lang/Number;
    .annotation system Ldalvik/annotation/Throws;
        value = {
            Lfreemarker/template/TemplateException;
        }
    .end annotation

    .line 287
    invoke-static {p1, p2}, Lfreemarker/core/ArithmeticEngine$ConservativeEngine;->getCommonClassCode(Ljava/lang/Number;Ljava/lang/Number;)I

    move-result v0

    packed-switch v0, :pswitch_data_0

    .line 325
    new-instance v0, Ljava/lang/Error;

    invoke-direct {v0}, Ljava/lang/Error;-><init>()V

    throw v0

    .line 318
    :pswitch_0
    invoke-static {p1}, Lfreemarker/core/ArithmeticEngine;->access$000(Ljava/lang/Number;)Ljava/math/BigDecimal;

    move-result-object v0

    .line 319
    .local v0, "n1":Ljava/math/BigDecimal;
    invoke-static {p2}, Lfreemarker/core/ArithmeticEngine;->access$000(Ljava/lang/Number;)Ljava/math/BigDecimal;

    move-result-object v1

    .line 320
    .local v1, "n2":Ljava/math/BigDecimal;
    invoke-virtual {v0, v1}, Ljava/math/BigDecimal;->subtract(Ljava/math/BigDecimal;)Ljava/math/BigDecimal;

    move-result-object v2

    return-object v2

    .line 313
    .end local v0    # "n1":Ljava/math/BigDecimal;
    .end local v1    # "n2":Ljava/math/BigDecimal;
    :pswitch_1
    invoke-static {p1}, Lfreemarker/core/ArithmeticEngine$ConservativeEngine;->toBigInteger(Ljava/lang/Number;)Ljava/math/BigInteger;

    move-result-object v0

    .line 314
    .local v0, "n1":Ljava/math/BigInteger;
    invoke-static {p2}, Lfreemarker/core/ArithmeticEngine$ConservativeEngine;->toBigInteger(Ljava/lang/Number;)Ljava/math/BigInteger;

    move-result-object v1

    .line 315
    .local v1, "n2":Ljava/math/BigInteger;
    invoke-virtual {v0, v1}, Ljava/math/BigInteger;->subtract(Ljava/math/BigInteger;)Ljava/math/BigInteger;

    move-result-object v2

    return-object v2

    .line 310
    .end local v0    # "n1":Ljava/math/BigInteger;
    .end local v1    # "n2":Ljava/math/BigInteger;
    :pswitch_2
    new-instance v0, Ljava/lang/Double;

    invoke-virtual {p1}, Ljava/lang/Number;->doubleValue()D

    move-result-wide v1

    invoke-virtual {p2}, Ljava/lang/Number;->doubleValue()D

    move-result-wide v3

    sub-double/2addr v1, v3

    invoke-direct {v0, v1, v2}, Ljava/lang/Double;-><init>(D)V

    return-object v0

    .line 307
    :pswitch_3
    new-instance v0, Ljava/lang/Float;

    invoke-virtual {p1}, Ljava/lang/Number;->floatValue()F

    move-result v1

    invoke-virtual {p2}, Ljava/lang/Number;->floatValue()F

    move-result v2

    sub-float/2addr v1, v2

    invoke-direct {v0, v1}, Ljava/lang/Float;-><init>(F)V

    return-object v0

    .line 298
    :pswitch_4
    invoke-virtual {p1}, Ljava/lang/Number;->longValue()J

    move-result-wide v0

    .line 299
    .local v0, "n1":J
    invoke-virtual {p2}, Ljava/lang/Number;->longValue()J

    move-result-wide v2

    .line 300
    .local v2, "n2":J
    sub-long v4, v0, v2

    .line 301
    .local v4, "n":J
    xor-long v6, v4, v0

    const-wide/16 v8, 0x0

    cmp-long v6, v6, v8

    if-gez v6, :cond_0

    not-long v6, v2

    xor-long/2addr v6, v4

    cmp-long v6, v6, v8

    if-gez v6, :cond_0

    .line 303
    invoke-static {p1}, Lfreemarker/core/ArithmeticEngine$ConservativeEngine;->toBigInteger(Ljava/lang/Number;)Ljava/math/BigInteger;

    move-result-object v6

    invoke-static {p2}, Lfreemarker/core/ArithmeticEngine$ConservativeEngine;->toBigInteger(Ljava/lang/Number;)Ljava/math/BigInteger;

    move-result-object v7

    invoke-virtual {v6, v7}, Ljava/math/BigInteger;->subtract(Ljava/math/BigInteger;)Ljava/math/BigInteger;

    move-result-object v6

    goto :goto_0

    :cond_0
    new-instance v6, Ljava/lang/Long;

    invoke-direct {v6, v4, v5}, Ljava/lang/Long;-><init>(J)V

    :goto_0
    return-object v6

    .line 289
    .end local v0    # "n1":J
    .end local v2    # "n2":J
    .end local v4    # "n":J
    :pswitch_5
    invoke-virtual {p1}, Ljava/lang/Number;->intValue()I

    move-result v0

    .line 290
    .local v0, "n1":I
    invoke-virtual {p2}, Ljava/lang/Number;->intValue()I

    move-result v1

    .line 291
    .local v1, "n2":I
    sub-int v2, v0, v1

    .line 292
    .local v2, "n":I
    xor-int v3, v2, v0

    if-gez v3, :cond_1

    not-int v3, v1

    xor-int/2addr v3, v2

    if-gez v3, :cond_1

    new-instance v3, Ljava/lang/Long;

    int-to-long v4, v0

    int-to-long v6, v1

    sub-long/2addr v4, v6

    invoke-direct {v3, v4, v5}, Ljava/lang/Long;-><init>(J)V

    goto :goto_1

    :cond_1
    new-instance v3, Ljava/lang/Integer;

    invoke-direct {v3, v2}, Ljava/lang/Integer;-><init>(I)V

    :goto_1
    return-object v3

    nop

    :pswitch_data_0
    .packed-switch 0x0
        :pswitch_5
        :pswitch_4
        :pswitch_3
        :pswitch_2
        :pswitch_1
        :pswitch_0
    .end packed-switch
.end method

.method public toNumber(Ljava/lang/String;)Ljava/lang/Number;
    .locals 2
    .param p1, "s"    # Ljava/lang/String;

    .line 452
    invoke-static {p1}, Lfreemarker/core/ArithmeticEngine;->access$100(Ljava/lang/String;)Ljava/lang/Number;

    move-result-object v0

    .line 453
    .local v0, "n":Ljava/lang/Number;
    instance-of v1, v0, Ljava/math/BigDecimal;

    if-eqz v1, :cond_0

    invoke-static {v0}, Lfreemarker/template/utility/OptimizerUtil;->optimizeNumberRepresentation(Ljava/lang/Number;)Ljava/lang/Number;

    move-result-object v1

    goto :goto_0

    :cond_0
    move-object v1, v0

    :goto_0
    return-object v1
.end method
