.class final Lfreemarker/core/MethodCall;
.super Lfreemarker/core/Expression;
.source "MethodCall.java"


# instance fields
.field private final arguments:Lfreemarker/core/ListLiteral;

.field private final target:Lfreemarker/core/Expression;


# direct methods
.method private constructor <init>(Lfreemarker/core/Expression;Lfreemarker/core/ListLiteral;)V
    .locals 0
    .param p1, "target"    # Lfreemarker/core/Expression;
    .param p2, "arguments"    # Lfreemarker/core/ListLiteral;

    .line 48
    invoke-direct {p0}, Lfreemarker/core/Expression;-><init>()V

    .line 49
    iput-object p1, p0, Lfreemarker/core/MethodCall;->target:Lfreemarker/core/Expression;

    .line 50
    iput-object p2, p0, Lfreemarker/core/MethodCall;->arguments:Lfreemarker/core/ListLiteral;

    .line 51
    return-void
.end method

.method constructor <init>(Lfreemarker/core/Expression;Ljava/util/ArrayList;)V
    .locals 1
    .param p1, "target"    # Lfreemarker/core/Expression;
    .param p2, "arguments"    # Ljava/util/ArrayList;

    .line 45
    new-instance v0, Lfreemarker/core/ListLiteral;

    invoke-direct {v0, p2}, Lfreemarker/core/ListLiteral;-><init>(Ljava/util/ArrayList;)V

    invoke-direct {p0, p1, v0}, Lfreemarker/core/MethodCall;-><init>(Lfreemarker/core/Expression;Lfreemarker/core/ListLiteral;)V

    .line 46
    return-void
.end method


# virtual methods
.method _eval(Lfreemarker/core/Environment;)Lfreemarker/template/TemplateModel;
    .locals 9
    .param p1, "env"    # Lfreemarker/core/Environment;
    .annotation system Ldalvik/annotation/Throws;
        value = {
            Lfreemarker/template/TemplateException;
        }
    .end annotation

    .line 55
    iget-object v0, p0, Lfreemarker/core/MethodCall;->target:Lfreemarker/core/Expression;

    invoke-virtual {v0, p1}, Lfreemarker/core/Expression;->eval(Lfreemarker/core/Environment;)Lfreemarker/template/TemplateModel;

    move-result-object v0

    .line 56
    .local v0, "targetModel":Lfreemarker/template/TemplateModel;
    instance-of v1, v0, Lfreemarker/template/TemplateMethodModel;

    if-eqz v1, :cond_1

    .line 57
    move-object v1, v0

    check-cast v1, Lfreemarker/template/TemplateMethodModel;

    .line 58
    .local v1, "targetMethod":Lfreemarker/template/TemplateMethodModel;
    instance-of v2, v1, Lfreemarker/template/TemplateMethodModelEx;

    if-eqz v2, :cond_0

    iget-object v2, p0, Lfreemarker/core/MethodCall;->arguments:Lfreemarker/core/ListLiteral;

    .line 60
    invoke-virtual {v2, p1}, Lfreemarker/core/ListLiteral;->getModelList(Lfreemarker/core/Environment;)Ljava/util/List;

    move-result-object v2

    goto :goto_0

    :cond_0
    iget-object v2, p0, Lfreemarker/core/MethodCall;->arguments:Lfreemarker/core/ListLiteral;

    .line 61
    invoke-virtual {v2, p1}, Lfreemarker/core/ListLiteral;->getValueList(Lfreemarker/core/Environment;)Ljava/util/List;

    move-result-object v2

    :goto_0
    nop

    .line 62
    .local v2, "argumentStrings":Ljava/util/List;
    invoke-interface {v1, v2}, Lfreemarker/template/TemplateMethodModel;->exec(Ljava/util/List;)Ljava/lang/Object;

    move-result-object v3

    .line 63
    .local v3, "result":Ljava/lang/Object;
    invoke-virtual {p1}, Lfreemarker/core/Environment;->getObjectWrapper()Lfreemarker/template/ObjectWrapper;

    move-result-object v4

    invoke-interface {v4, v3}, Lfreemarker/template/ObjectWrapper;->wrap(Ljava/lang/Object;)Lfreemarker/template/TemplateModel;

    move-result-object v4

    return-object v4

    .line 65
    .end local v1    # "targetMethod":Lfreemarker/template/TemplateMethodModel;
    .end local v2    # "argumentStrings":Ljava/util/List;
    .end local v3    # "result":Ljava/lang/Object;
    :cond_1
    instance-of v1, v0, Lfreemarker/core/Macro;

    if-eqz v1, :cond_3

    .line 66
    move-object v1, v0

    check-cast v1, Lfreemarker/core/Macro;

    .line 67
    .local v1, "func":Lfreemarker/core/Macro;
    const/4 v2, 0x0

    invoke-virtual {p1, v2}, Lfreemarker/core/Environment;->setLastReturnValue(Lfreemarker/template/TemplateModel;)V

    .line 68
    invoke-virtual {v1}, Lfreemarker/core/Macro;->isFunction()Z

    move-result v2

    if-eqz v2, :cond_2

    .line 71
    invoke-virtual {p1}, Lfreemarker/core/Environment;->getOut()Ljava/io/Writer;

    move-result-object v8

    .line 73
    .local v8, "prevOut":Ljava/io/Writer;
    :try_start_0
    sget-object v2, Lfreemarker/template/utility/NullWriter;->INSTANCE:Lfreemarker/template/utility/NullWriter;

    invoke-virtual {p1, v2}, Lfreemarker/core/Environment;->setOut(Ljava/io/Writer;)V

    .line 74
    const/4 v4, 0x0

    iget-object v2, p0, Lfreemarker/core/MethodCall;->arguments:Lfreemarker/core/ListLiteral;

    iget-object v5, v2, Lfreemarker/core/ListLiteral;->items:Ljava/util/ArrayList;

    const/4 v6, 0x0

    const/4 v7, 0x0

    move-object v2, p1

    move-object v3, v1

    invoke-virtual/range {v2 .. v7}, Lfreemarker/core/Environment;->invoke(Lfreemarker/core/Macro;Ljava/util/Map;Ljava/util/List;Ljava/util/List;Lfreemarker/core/TemplateElement;)V
    :try_end_0
    .catch Ljava/io/IOException; {:try_start_0 .. :try_end_0} :catch_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    .line 79
    invoke-virtual {p1, v8}, Lfreemarker/core/Environment;->setOut(Ljava/io/Writer;)V

    .line 80
    nop

    .line 81
    invoke-virtual {p1}, Lfreemarker/core/Environment;->getLastReturnValue()Lfreemarker/template/TemplateModel;

    move-result-object v2

    return-object v2

    .line 79
    :catchall_0
    move-exception v2

    goto :goto_1

    .line 75
    :catch_0
    move-exception v2

    .line 77
    .local v2, "e":Ljava/io/IOException;
    :try_start_1
    new-instance v3, Lfreemarker/template/TemplateException;

    const-string v4, "Unexpected exception during function execution"

    invoke-direct {v3, v4, v2, p1}, Lfreemarker/template/TemplateException;-><init>(Ljava/lang/String;Ljava/lang/Exception;Lfreemarker/core/Environment;)V

    .end local v0    # "targetModel":Lfreemarker/template/TemplateModel;
    .end local v1    # "func":Lfreemarker/core/Macro;
    .end local v8    # "prevOut":Ljava/io/Writer;
    .end local p1    # "env":Lfreemarker/core/Environment;
    throw v3
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    .line 79
    .end local v2    # "e":Ljava/io/IOException;
    .restart local v0    # "targetModel":Lfreemarker/template/TemplateModel;
    .restart local v1    # "func":Lfreemarker/core/Macro;
    .restart local v8    # "prevOut":Ljava/io/Writer;
    .restart local p1    # "env":Lfreemarker/core/Environment;
    :goto_1
    invoke-virtual {p1, v8}, Lfreemarker/core/Environment;->setOut(Ljava/io/Writer;)V

    throw v2

    .line 69
    .end local v8    # "prevOut":Ljava/io/Writer;
    :cond_2
    new-instance v2, Lfreemarker/core/_MiscTemplateException;

    const-string v3, "A macro cannot be called in an expression. (Functions can be.)"

    invoke-direct {v2, p1, v3}, Lfreemarker/core/_MiscTemplateException;-><init>(Lfreemarker/core/Environment;Ljava/lang/String;)V

    throw v2

    .line 84
    .end local v1    # "func":Lfreemarker/core/Macro;
    :cond_3
    new-instance v1, Lfreemarker/core/NonMethodException;

    iget-object v2, p0, Lfreemarker/core/MethodCall;->target:Lfreemarker/core/Expression;

    invoke-direct {v1, v2, v0, p1}, Lfreemarker/core/NonMethodException;-><init>(Lfreemarker/core/Expression;Lfreemarker/template/TemplateModel;Lfreemarker/core/Environment;)V

    throw v1
.end method

.method protected deepCloneWithIdentifierReplaced_inner(Ljava/lang/String;Lfreemarker/core/Expression;Lfreemarker/core/Expression$ReplacemenetState;)Lfreemarker/core/Expression;
    .locals 3
    .param p1, "replacedIdentifier"    # Ljava/lang/String;
    .param p2, "replacement"    # Lfreemarker/core/Expression;
    .param p3, "replacementState"    # Lfreemarker/core/Expression$ReplacemenetState;

    .line 112
    new-instance v0, Lfreemarker/core/MethodCall;

    iget-object v1, p0, Lfreemarker/core/MethodCall;->target:Lfreemarker/core/Expression;

    .line 113
    invoke-virtual {v1, p1, p2, p3}, Lfreemarker/core/Expression;->deepCloneWithIdentifierReplaced(Ljava/lang/String;Lfreemarker/core/Expression;Lfreemarker/core/Expression$ReplacemenetState;)Lfreemarker/core/Expression;

    move-result-object v1

    iget-object v2, p0, Lfreemarker/core/MethodCall;->arguments:Lfreemarker/core/ListLiteral;

    .line 114
    invoke-virtual {v2, p1, p2, p3}, Lfreemarker/core/ListLiteral;->deepCloneWithIdentifierReplaced(Ljava/lang/String;Lfreemarker/core/Expression;Lfreemarker/core/Expression$ReplacemenetState;)Lfreemarker/core/Expression;

    move-result-object v2

    check-cast v2, Lfreemarker/core/ListLiteral;

    invoke-direct {v0, v1, v2}, Lfreemarker/core/MethodCall;-><init>(Lfreemarker/core/Expression;Lfreemarker/core/ListLiteral;)V

    return-object v0
.end method

.method public getCanonicalForm()Ljava/lang/String;
    .locals 4

    .line 89
    new-instance v0, Ljava/lang/StringBuffer;

    invoke-direct {v0}, Ljava/lang/StringBuffer;-><init>()V

    .line 90
    .local v0, "buf":Ljava/lang/StringBuffer;
    iget-object v1, p0, Lfreemarker/core/MethodCall;->target:Lfreemarker/core/Expression;

    invoke-virtual {v1}, Lfreemarker/core/Expression;->getCanonicalForm()Ljava/lang/String;

    move-result-object v1

    invoke-virtual {v0, v1}, Ljava/lang/StringBuffer;->append(Ljava/lang/String;)Ljava/lang/StringBuffer;

    .line 91
    const-string v1, "("

    invoke-virtual {v0, v1}, Ljava/lang/StringBuffer;->append(Ljava/lang/String;)Ljava/lang/StringBuffer;

    .line 92
    iget-object v1, p0, Lfreemarker/core/MethodCall;->arguments:Lfreemarker/core/ListLiteral;

    invoke-virtual {v1}, Lfreemarker/core/ListLiteral;->getCanonicalForm()Ljava/lang/String;

    move-result-object v1

    .line 93
    .local v1, "list":Ljava/lang/String;
    invoke-virtual {v1}, Ljava/lang/String;->length()I

    move-result v2

    const/4 v3, 0x1

    sub-int/2addr v2, v3

    invoke-virtual {v1, v3, v2}, Ljava/lang/String;->substring(II)Ljava/lang/String;

    move-result-object v2

    invoke-virtual {v0, v2}, Ljava/lang/StringBuffer;->append(Ljava/lang/String;)Ljava/lang/StringBuffer;

    .line 94
    const-string v2, ")"

    invoke-virtual {v0, v2}, Ljava/lang/StringBuffer;->append(Ljava/lang/String;)Ljava/lang/StringBuffer;

    .line 95
    invoke-virtual {v0}, Ljava/lang/StringBuffer;->toString()Ljava/lang/String;

    move-result-object v2

    return-object v2
.end method

.method getConstantValue()Lfreemarker/template/TemplateModel;
    .locals 1

    .line 103
    const/4 v0, 0x0

    return-object v0
.end method

.method getNodeTypeSymbol()Ljava/lang/String;
    .locals 1

    .line 99
    const-string v0, "...(...)"

    return-object v0
.end method

.method getParameterCount()I
    .locals 1

    .line 118
    iget-object v0, p0, Lfreemarker/core/MethodCall;->arguments:Lfreemarker/core/ListLiteral;

    iget-object v0, v0, Lfreemarker/core/ListLiteral;->items:Ljava/util/ArrayList;

    invoke-virtual {v0}, Ljava/util/ArrayList;->size()I

    move-result v0

    add-int/lit8 v0, v0, 0x1

    return v0
.end method

.method getParameterRole(I)Lfreemarker/core/ParameterRole;
    .locals 1
    .param p1, "idx"    # I

    .line 132
    if-nez p1, :cond_0

    .line 133
    sget-object v0, Lfreemarker/core/ParameterRole;->CALLEE:Lfreemarker/core/ParameterRole;

    return-object v0

    .line 134
    :cond_0
    invoke-virtual {p0}, Lfreemarker/core/MethodCall;->getParameterCount()I

    move-result v0

    if-ge p1, v0, :cond_1

    .line 135
    sget-object v0, Lfreemarker/core/ParameterRole;->ARGUMENT_VALUE:Lfreemarker/core/ParameterRole;

    return-object v0

    .line 137
    :cond_1
    new-instance v0, Ljava/lang/IndexOutOfBoundsException;

    invoke-direct {v0}, Ljava/lang/IndexOutOfBoundsException;-><init>()V

    throw v0
.end method

.method getParameterValue(I)Ljava/lang/Object;
    .locals 2
    .param p1, "idx"    # I

    .line 122
    if-nez p1, :cond_0

    .line 123
    iget-object v0, p0, Lfreemarker/core/MethodCall;->target:Lfreemarker/core/Expression;

    return-object v0

    .line 124
    :cond_0
    invoke-virtual {p0}, Lfreemarker/core/MethodCall;->getParameterCount()I

    move-result v0

    if-ge p1, v0, :cond_1

    .line 125
    iget-object v0, p0, Lfreemarker/core/MethodCall;->arguments:Lfreemarker/core/ListLiteral;

    iget-object v0, v0, Lfreemarker/core/ListLiteral;->items:Ljava/util/ArrayList;

    add-int/lit8 v1, p1, -0x1

    invoke-virtual {v0, v1}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    move-result-object v0

    return-object v0

    .line 127
    :cond_1
    new-instance v0, Ljava/lang/IndexOutOfBoundsException;

    invoke-direct {v0}, Ljava/lang/IndexOutOfBoundsException;-><init>()V

    throw v0
.end method

.method isLiteral()Z
    .locals 1

    .line 107
    const/4 v0, 0x0

    return v0
.end method
