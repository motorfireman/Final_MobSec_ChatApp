.class final Lfreemarker/core/CompressedBlock;
.super Lfreemarker/core/TemplateElement;
.source "CompressedBlock.java"


# direct methods
.method constructor <init>(Lfreemarker/core/TemplateElement;)V
    .locals 0
    .param p1, "nestedBlock"    # Lfreemarker/core/TemplateElement;

    .line 31
    invoke-direct {p0}, Lfreemarker/core/TemplateElement;-><init>()V

    .line 32
    invoke-virtual {p0, p1}, Lfreemarker/core/CompressedBlock;->setNestedBlock(Lfreemarker/core/TemplateElement;)V

    .line 33
    return-void
.end method


# virtual methods
.method accept(Lfreemarker/core/Environment;)V
    .locals 3
    .param p1, "env"    # Lfreemarker/core/Environment;
    .annotation system Ldalvik/annotation/Throws;
        value = {
            Lfreemarker/template/TemplateException;,
            Ljava/io/IOException;
        }
    .end annotation

    .line 36
    invoke-virtual {p0}, Lfreemarker/core/CompressedBlock;->getNestedBlock()Lfreemarker/core/TemplateElement;

    move-result-object v0

    if-eqz v0, :cond_0

    .line 37
    invoke-virtual {p0}, Lfreemarker/core/CompressedBlock;->getNestedBlock()Lfreemarker/core/TemplateElement;

    move-result-object v0

    sget-object v1, Lfreemarker/template/utility/StandardCompress;->INSTANCE:Lfreemarker/template/utility/StandardCompress;

    const/4 v2, 0x0

    invoke-virtual {p1, v0, v1, v2}, Lfreemarker/core/Environment;->visitAndTransform(Lfreemarker/core/TemplateElement;Lfreemarker/template/TemplateTransformModel;Ljava/util/Map;)V

    .line 39
    :cond_0
    return-void
.end method

.method protected dump(Z)Ljava/lang/String;
    .locals 4
    .param p1, "canonical"    # Z

    .line 42
    if-eqz p1, :cond_1

    .line 43
    invoke-virtual {p0}, Lfreemarker/core/CompressedBlock;->getNestedBlock()Lfreemarker/core/TemplateElement;

    move-result-object v0

    if-eqz v0, :cond_0

    invoke-virtual {p0}, Lfreemarker/core/CompressedBlock;->getNestedBlock()Lfreemarker/core/TemplateElement;

    move-result-object v0

    invoke-virtual {v0}, Lfreemarker/core/TemplateElement;->getCanonicalForm()Ljava/lang/String;

    move-result-object v0

    goto :goto_0

    :cond_0
    const-string v0, ""

    .line 44
    .local v0, "nested":Ljava/lang/String;
    :goto_0
    new-instance v1, Ljava/lang/StringBuffer;

    invoke-direct {v1}, Ljava/lang/StringBuffer;-><init>()V

    const-string v2, "<"

    invoke-virtual {v1, v2}, Ljava/lang/StringBuffer;->append(Ljava/lang/String;)Ljava/lang/StringBuffer;

    move-result-object v1

    invoke-virtual {p0}, Lfreemarker/core/CompressedBlock;->getNodeTypeSymbol()Ljava/lang/String;

    move-result-object v2

    invoke-virtual {v1, v2}, Ljava/lang/StringBuffer;->append(Ljava/lang/String;)Ljava/lang/StringBuffer;

    move-result-object v1

    const-string v2, ">"

    invoke-virtual {v1, v2}, Ljava/lang/StringBuffer;->append(Ljava/lang/String;)Ljava/lang/StringBuffer;

    move-result-object v1

    invoke-virtual {v1, v0}, Ljava/lang/StringBuffer;->append(Ljava/lang/String;)Ljava/lang/StringBuffer;

    move-result-object v1

    const-string v3, "</"

    invoke-virtual {v1, v3}, Ljava/lang/StringBuffer;->append(Ljava/lang/String;)Ljava/lang/StringBuffer;

    move-result-object v1

    invoke-virtual {p0}, Lfreemarker/core/CompressedBlock;->getNodeTypeSymbol()Ljava/lang/String;

    move-result-object v3

    invoke-virtual {v1, v3}, Ljava/lang/StringBuffer;->append(Ljava/lang/String;)Ljava/lang/StringBuffer;

    move-result-object v1

    invoke-virtual {v1, v2}, Ljava/lang/StringBuffer;->append(Ljava/lang/String;)Ljava/lang/StringBuffer;

    move-result-object v1

    invoke-virtual {v1}, Ljava/lang/StringBuffer;->toString()Ljava/lang/String;

    move-result-object v1

    return-object v1

    .line 46
    .end local v0    # "nested":Ljava/lang/String;
    :cond_1
    invoke-virtual {p0}, Lfreemarker/core/CompressedBlock;->getNodeTypeSymbol()Ljava/lang/String;

    move-result-object v0

    return-object v0
.end method

.method getNodeTypeSymbol()Ljava/lang/String;
    .locals 1

    .line 51
    const-string v0, "#compress"

    return-object v0
.end method

.method getParameterCount()I
    .locals 1

    .line 55
    const/4 v0, 0x0

    return v0
.end method

.method getParameterRole(I)Lfreemarker/core/ParameterRole;
    .locals 1
    .param p1, "idx"    # I

    .line 63
    new-instance v0, Ljava/lang/IndexOutOfBoundsException;

    invoke-direct {v0}, Ljava/lang/IndexOutOfBoundsException;-><init>()V

    throw v0
.end method

.method getParameterValue(I)Ljava/lang/Object;
    .locals 1
    .param p1, "idx"    # I

    .line 59
    new-instance v0, Ljava/lang/IndexOutOfBoundsException;

    invoke-direct {v0}, Ljava/lang/IndexOutOfBoundsException;-><init>()V

    throw v0
.end method

.method isIgnorable()Z
    .locals 1

    .line 67
    invoke-virtual {p0}, Lfreemarker/core/CompressedBlock;->getNestedBlock()Lfreemarker/core/TemplateElement;

    move-result-object v0

    if-eqz v0, :cond_1

    invoke-virtual {p0}, Lfreemarker/core/CompressedBlock;->getNestedBlock()Lfreemarker/core/TemplateElement;

    move-result-object v0

    invoke-virtual {v0}, Lfreemarker/core/TemplateElement;->isIgnorable()Z

    move-result v0

    if-eqz v0, :cond_0

    goto :goto_0

    :cond_0
    const/4 v0, 0x0

    goto :goto_1

    :cond_1
    :goto_0
    const/4 v0, 0x1

    :goto_1
    return v0
.end method

.method isNestedBlockRepeater()Z
    .locals 1

    .line 71
    const/4 v0, 0x0

    return v0
.end method
