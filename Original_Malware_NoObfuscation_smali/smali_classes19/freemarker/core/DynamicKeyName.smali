.class final Lfreemarker/core/DynamicKeyName;
.super Lfreemarker/core/Expression;
.source "DynamicKeyName.java"


# static fields
.field private static NUMERICAL_KEY_LHO_EXPECTED_TYPES:[Ljava/lang/Class;

.field static synthetic class$freemarker$core$Range:Ljava/lang/Class;

.field static synthetic class$freemarker$template$TemplateNumberModel:Ljava/lang/Class;

.field static synthetic class$freemarker$template$TemplateScalarModel:Ljava/lang/Class;

.field static synthetic class$freemarker$template$TemplateSequenceModel:Ljava/lang/Class;


# instance fields
.field private final keyExpression:Lfreemarker/core/Expression;

.field private final target:Lfreemarker/core/Expression;


# direct methods
.method static constructor <clinit>()V
    .locals 4

    .line 84
    sget-object v0, Lfreemarker/core/NonStringException;->STRING_COERCABLE_TYPES:[Ljava/lang/Class;

    array-length v0, v0

    add-int/lit8 v0, v0, 0x1

    new-array v0, v0, [Ljava/lang/Class;

    sput-object v0, Lfreemarker/core/DynamicKeyName;->NUMERICAL_KEY_LHO_EXPECTED_TYPES:[Ljava/lang/Class;

    .line 85
    sget-object v1, Lfreemarker/core/DynamicKeyName;->class$freemarker$template$TemplateSequenceModel:Ljava/lang/Class;

    if-nez v1, :cond_0

    const-string v1, "freemarker.template.TemplateSequenceModel"

    invoke-static {v1}, Lfreemarker/core/DynamicKeyName;->class$(Ljava/lang/String;)Ljava/lang/Class;

    move-result-object v1

    sput-object v1, Lfreemarker/core/DynamicKeyName;->class$freemarker$template$TemplateSequenceModel:Ljava/lang/Class;

    :cond_0
    const/4 v2, 0x0

    aput-object v1, v0, v2

    .line 86
    const/4 v0, 0x0

    .local v0, "i":I
    :goto_0
    sget-object v1, Lfreemarker/core/NonStringException;->STRING_COERCABLE_TYPES:[Ljava/lang/Class;

    array-length v1, v1

    if-ge v0, v1, :cond_1

    .line 87
    sget-object v1, Lfreemarker/core/DynamicKeyName;->NUMERICAL_KEY_LHO_EXPECTED_TYPES:[Ljava/lang/Class;

    add-int/lit8 v2, v0, 0x1

    sget-object v3, Lfreemarker/core/NonStringException;->STRING_COERCABLE_TYPES:[Ljava/lang/Class;

    aget-object v3, v3, v0

    aput-object v3, v1, v2

    .line 86
    add-int/lit8 v0, v0, 0x1

    goto :goto_0

    .line 89
    .end local v0    # "i":I
    :cond_1
    return-void
.end method

.method constructor <init>(Lfreemarker/core/Expression;Lfreemarker/core/Expression;)V
    .locals 0
    .param p1, "target"    # Lfreemarker/core/Expression;
    .param p2, "keyExpression"    # Lfreemarker/core/Expression;

    .line 42
    invoke-direct {p0}, Lfreemarker/core/Expression;-><init>()V

    .line 43
    iput-object p1, p0, Lfreemarker/core/DynamicKeyName;->target:Lfreemarker/core/Expression;

    .line 44
    iput-object p2, p0, Lfreemarker/core/DynamicKeyName;->keyExpression:Lfreemarker/core/Expression;

    .line 45
    return-void
.end method

.method static synthetic class$(Ljava/lang/String;)Ljava/lang/Class;
    .locals 2
    .param p0, "x0"    # Ljava/lang/String;

    .line 79
    :try_start_0
    invoke-static {p0}, Ljava/lang/Class;->forName(Ljava/lang/String;)Ljava/lang/Class;

    move-result-object v0
    :try_end_0
    .catch Ljava/lang/ClassNotFoundException; {:try_start_0 .. :try_end_0} :catch_0

    return-object v0

    :catch_0
    move-exception v0

    new-instance v1, Ljava/lang/NoClassDefFoundError;

    invoke-direct {v1}, Ljava/lang/NoClassDefFoundError;-><init>()V

    invoke-virtual {v1, v0}, Ljava/lang/NoClassDefFoundError;->initCause(Ljava/lang/Throwable;)Ljava/lang/Throwable;

    move-result-object v0

    throw v0
.end method

.method private dealWithNumericalKey(Lfreemarker/template/TemplateModel;ILfreemarker/core/Environment;)Lfreemarker/template/TemplateModel;
    .locals 10
    .param p1, "targetModel"    # Lfreemarker/template/TemplateModel;
    .param p2, "index"    # I
    .param p3, "env"    # Lfreemarker/core/Environment;
    .annotation system Ldalvik/annotation/Throws;
        value = {
            Lfreemarker/template/TemplateException;
        }
    .end annotation

    .line 96
    instance-of v0, p1, Lfreemarker/template/TemplateSequenceModel;

    const/4 v1, 0x0

    if-eqz v0, :cond_1

    .line 97
    move-object v0, p1

    check-cast v0, Lfreemarker/template/TemplateSequenceModel;

    .line 100
    .local v0, "tsm":Lfreemarker/template/TemplateSequenceModel;
    :try_start_0
    invoke-interface {v0}, Lfreemarker/template/TemplateSequenceModel;->size()I

    move-result v2
    :try_end_0
    .catch Ljava/lang/Exception; {:try_start_0 .. :try_end_0} :catch_0

    .line 103
    .local v2, "size":I
    goto :goto_0

    .line 101
    .end local v2    # "size":I
    :catch_0
    move-exception v2

    .line 102
    .local v2, "e":Ljava/lang/Exception;
    const v3, 0x7fffffff

    move v2, v3

    .line 104
    .local v2, "size":I
    :goto_0
    if-ge p2, v2, :cond_0

    invoke-interface {v0, p2}, Lfreemarker/template/TemplateSequenceModel;->get(I)Lfreemarker/template/TemplateModel;

    move-result-object v1

    :cond_0
    return-object v1

    .line 109
    .end local v0    # "tsm":Lfreemarker/template/TemplateSequenceModel;
    .end local v2    # "size":I
    :cond_1
    :try_start_1
    iget-object v0, p0, Lfreemarker/core/DynamicKeyName;->target:Lfreemarker/core/Expression;

    invoke-virtual {v0, p3}, Lfreemarker/core/Expression;->evalAndCoerceToString(Lfreemarker/core/Environment;)Ljava/lang/String;

    move-result-object v0
    :try_end_1
    .catch Lfreemarker/core/NonStringException; {:try_start_1 .. :try_end_1} :catch_2

    .line 111
    .local v0, "s":Ljava/lang/String;
    :try_start_2
    new-instance v2, Lfreemarker/template/SimpleScalar;

    add-int/lit8 v3, p2, 0x1

    invoke-virtual {v0, p2, v3}, Ljava/lang/String;->substring(II)Ljava/lang/String;

    move-result-object v3

    invoke-direct {v2, v3}, Lfreemarker/template/SimpleScalar;-><init>(Ljava/lang/String;)V
    :try_end_2
    .catch Ljava/lang/IndexOutOfBoundsException; {:try_start_2 .. :try_end_2} :catch_1
    .catch Lfreemarker/core/NonStringException; {:try_start_2 .. :try_end_2} :catch_2

    return-object v2

    .line 112
    :catch_1
    move-exception v2

    .line 113
    .local v2, "e":Ljava/lang/IndexOutOfBoundsException;
    const/4 v3, 0x0

    const/4 v4, 0x2

    const/4 v5, 0x1

    if-ltz p2, :cond_3

    .line 118
    :try_start_3
    invoke-virtual {v0}, Ljava/lang/String;->length()I

    move-result v6

    if-lt p2, v6, :cond_2

    .line 119
    new-instance v6, Lfreemarker/core/_MiscTemplateException;

    const/4 v7, 0x5

    new-array v7, v7, [Ljava/lang/Object;

    const-string v8, "String index out of range: The index was "

    aput-object v8, v7, v3

    new-instance v3, Ljava/lang/Integer;

    invoke-direct {v3, p2}, Ljava/lang/Integer;-><init>(I)V

    aput-object v3, v7, v5

    const-string v3, " (0-based), but the length of the string is only "

    aput-object v3, v7, v4

    const/4 v3, 0x3

    new-instance v4, Ljava/lang/Integer;

    .line 121
    invoke-virtual {v0}, Ljava/lang/String;->length()I

    move-result v5

    invoke-direct {v4, v5}, Ljava/lang/Integer;-><init>(I)V

    aput-object v4, v7, v3

    const/4 v3, 0x4

    const-string v4, "."

    aput-object v4, v7, v3

    invoke-direct {v6, v7}, Lfreemarker/core/_MiscTemplateException;-><init>([Ljava/lang/Object;)V

    .end local p1    # "targetModel":Lfreemarker/template/TemplateModel;
    .end local p2    # "index":I
    .end local p3    # "env":Lfreemarker/core/Environment;
    throw v6

    .line 123
    .restart local p1    # "targetModel":Lfreemarker/template/TemplateModel;
    .restart local p2    # "index":I
    .restart local p3    # "env":Lfreemarker/core/Environment;
    :cond_2
    new-instance v3, Ljava/lang/RuntimeException;

    const-string v4, "Can\'t explain exception"

    invoke-direct {v3, v4, v2}, Ljava/lang/RuntimeException;-><init>(Ljava/lang/String;Ljava/lang/Throwable;)V

    .end local p1    # "targetModel":Lfreemarker/template/TemplateModel;
    .end local p2    # "index":I
    .end local p3    # "env":Lfreemarker/core/Environment;
    throw v3

    .line 114
    .restart local p1    # "targetModel":Lfreemarker/template/TemplateModel;
    .restart local p2    # "index":I
    .restart local p3    # "env":Lfreemarker/core/Environment;
    :cond_3
    new-instance v6, Lfreemarker/core/_MiscTemplateException;

    new-array v4, v4, [Ljava/lang/Object;

    const-string v7, "Negative index not allowed: "

    aput-object v7, v4, v3

    new-instance v3, Ljava/lang/Integer;

    invoke-direct {v3, p2}, Ljava/lang/Integer;-><init>(I)V

    aput-object v3, v4, v5

    invoke-direct {v6, v4}, Lfreemarker/core/_MiscTemplateException;-><init>([Ljava/lang/Object;)V

    .end local p1    # "targetModel":Lfreemarker/template/TemplateModel;
    .end local p2    # "index":I
    .end local p3    # "env":Lfreemarker/core/Environment;
    throw v6
    :try_end_3
    .catch Lfreemarker/core/NonStringException; {:try_start_3 .. :try_end_3} :catch_2

    .line 126
    .end local v0    # "s":Ljava/lang/String;
    .end local v2    # "e":Ljava/lang/IndexOutOfBoundsException;
    .restart local p1    # "targetModel":Lfreemarker/template/TemplateModel;
    .restart local p2    # "index":I
    .restart local p3    # "env":Lfreemarker/core/Environment;
    :catch_2
    move-exception v0

    .line 128
    .local v0, "e":Lfreemarker/core/NonStringException;
    new-instance v9, Lfreemarker/core/UnexpectedTypeException;

    iget-object v3, p0, Lfreemarker/core/DynamicKeyName;->target:Lfreemarker/core/Expression;

    sget-object v6, Lfreemarker/core/DynamicKeyName;->NUMERICAL_KEY_LHO_EXPECTED_TYPES:[Ljava/lang/Class;

    instance-of v2, p1, Lfreemarker/template/TemplateHashModel;

    if-eqz v2, :cond_4

    const-string v1, "You had a numberical value inside the []. Currently that\'s only supported for sequences (lists) and strings. To get a Map item with a non-string key, use myMap?api.get(myKey)."

    :cond_4
    move-object v7, v1

    const-string v5, "sequence or string or something automatically convertible to string (number, date or boolean)"

    move-object v2, v9

    move-object v4, p1

    move-object v8, p3

    invoke-direct/range {v2 .. v8}, Lfreemarker/core/UnexpectedTypeException;-><init>(Lfreemarker/core/Expression;Lfreemarker/template/TemplateModel;Ljava/lang/String;[Ljava/lang/Class;Ljava/lang/String;Lfreemarker/core/Environment;)V

    throw v9
.end method

.method private dealWithRangeKey(Lfreemarker/template/TemplateModel;Lfreemarker/core/RangeModel;Lfreemarker/core/Environment;)Lfreemarker/template/TemplateModel;
    .locals 29
    .param p1, "targetModel"    # Lfreemarker/template/TemplateModel;
    .param p2, "range"    # Lfreemarker/core/RangeModel;
    .param p3, "env"    # Lfreemarker/core/Environment;
    .annotation system Ldalvik/annotation/Throws;
        value = {
            Lfreemarker/core/UnexpectedTypeException;,
            Lfreemarker/core/InvalidReferenceException;,
            Lfreemarker/template/TemplateException;
        }
    .end annotation

    .line 154
    move-object/from16 v1, p0

    move-object/from16 v2, p1

    move-object/from16 v9, p3

    instance-of v0, v2, Lfreemarker/template/TemplateSequenceModel;

    if-eqz v0, :cond_0

    .line 155
    move-object v0, v2

    check-cast v0, Lfreemarker/template/TemplateSequenceModel;

    .line 156
    .local v0, "targetSeq":Lfreemarker/template/TemplateSequenceModel;
    const/4 v3, 0x0

    .local v3, "targetStr":Ljava/lang/String;
    goto :goto_0

    .line 158
    .end local v0    # "targetSeq":Lfreemarker/template/TemplateSequenceModel;
    .end local v3    # "targetStr":Ljava/lang/String;
    :cond_0
    const/4 v10, 0x0

    .line 160
    .local v10, "targetSeq":Lfreemarker/template/TemplateSequenceModel;
    :try_start_0
    iget-object v0, v1, Lfreemarker/core/DynamicKeyName;->target:Lfreemarker/core/Expression;

    invoke-virtual {v0, v9}, Lfreemarker/core/Expression;->evalAndCoerceToString(Lfreemarker/core/Environment;)Ljava/lang/String;

    move-result-object v0
    :try_end_0
    .catch Lfreemarker/core/NonStringException; {:try_start_0 .. :try_end_0} :catch_0

    move-object v3, v0

    .line 166
    .restart local v3    # "targetStr":Ljava/lang/String;
    move-object v0, v10

    .line 169
    .end local v10    # "targetSeq":Lfreemarker/template/TemplateSequenceModel;
    .restart local v0    # "targetSeq":Lfreemarker/template/TemplateSequenceModel;
    :goto_0
    invoke-virtual/range {p2 .. p2}, Lfreemarker/core/RangeModel;->size()I

    move-result v4

    .line 170
    .local v4, "size":I
    invoke-virtual/range {p2 .. p2}, Lfreemarker/core/RangeModel;->isRightUnbounded()Z

    move-result v5

    .line 171
    .local v5, "rightUnbounded":Z
    invoke-virtual/range {p2 .. p2}, Lfreemarker/core/RangeModel;->isRightAdaptive()Z

    move-result v6

    .line 175
    .local v6, "rightAdaptive":Z
    const/4 v7, 0x0

    const/4 v8, 0x1

    if-nez v5, :cond_2

    if-nez v4, :cond_2

    .line 176
    if-eqz v0, :cond_1

    move v7, v8

    :cond_1
    invoke-direct {v1, v7}, Lfreemarker/core/DynamicKeyName;->emptyResult(Z)Lfreemarker/template/TemplateModel;

    move-result-object v7

    return-object v7

    .line 179
    :cond_2
    invoke-virtual/range {p2 .. p2}, Lfreemarker/core/RangeModel;->getBegining()I

    move-result v10

    .line 180
    .local v10, "firstIdx":I
    const-string v11, ") isn\'t allowed for a range used for slicing."

    if-ltz v10, :cond_15

    .line 186
    if-eqz v3, :cond_3

    invoke-virtual {v3}, Ljava/lang/String;->length()I

    move-result v14

    goto :goto_1

    :cond_3
    invoke-interface {v0}, Lfreemarker/template/TemplateSequenceModel;->size()I

    move-result v14

    .line 187
    .local v14, "targetSize":I
    :goto_1
    invoke-virtual/range {p2 .. p2}, Lfreemarker/core/RangeModel;->getStep()I

    move-result v15

    .line 194
    .local v15, "step":I
    const/16 v17, 0x8

    const-string v18, "character(s)"

    const-string v19, "element(s)"

    const/16 v20, 0x7

    const-string v21, " "

    const/16 v22, 0x6

    const/16 v23, 0x5

    const-string v24, " has only "

    const-string/jumbo v25, "string"

    const-string v26, "sequence"

    const-string v27, " is out of bounds, because the sliced "

    if-eqz v6, :cond_4

    if-ne v15, v8, :cond_4

    if-le v10, v14, :cond_7

    goto :goto_2

    :cond_4
    if-lt v10, v14, :cond_7

    .line 195
    :goto_2
    new-instance v11, Lfreemarker/core/_MiscTemplateException;

    iget-object v12, v1, Lfreemarker/core/DynamicKeyName;->keyExpression:Lfreemarker/core/Expression;

    const/16 v13, 0xa

    new-array v13, v13, [Ljava/lang/Object;

    const-string v28, "Range start index "

    aput-object v28, v13, v7

    new-instance v7, Ljava/lang/Integer;

    invoke-direct {v7, v10}, Ljava/lang/Integer;-><init>(I)V

    aput-object v7, v13, v8

    const/4 v7, 0x2

    aput-object v27, v13, v7

    if-eqz v3, :cond_5

    goto :goto_3

    :cond_5
    move-object/from16 v25, v26

    :goto_3
    const/4 v7, 0x3

    aput-object v25, v13, v7

    const/4 v7, 0x4

    aput-object v24, v13, v7

    new-instance v7, Ljava/lang/Integer;

    invoke-direct {v7, v14}, Ljava/lang/Integer;-><init>(I)V

    aput-object v7, v13, v23

    aput-object v21, v13, v22

    if-eqz v3, :cond_6

    goto :goto_4

    :cond_6
    move-object/from16 v18, v19

    :goto_4
    aput-object v18, v13, v20

    const-string v7, ". "

    aput-object v7, v13, v17

    const-string v7, "(Note that indices are 0-based)."

    const/16 v8, 0x9

    aput-object v7, v13, v8

    invoke-direct {v11, v12, v13}, Lfreemarker/core/_MiscTemplateException;-><init>(Lfreemarker/core/Expression;[Ljava/lang/Object;)V

    throw v11

    .line 203
    :cond_7
    if-nez v5, :cond_e

    .line 204
    add-int/lit8 v12, v4, -0x1

    mul-int/2addr v12, v15

    add-int/2addr v12, v10

    .line 205
    .local v12, "lastIdx":I
    if-gez v12, :cond_9

    .line 206
    if-eqz v6, :cond_8

    .line 211
    add-int/lit8 v11, v10, 0x1

    .local v11, "resultSize":I
    goto :goto_7

    .line 207
    .end local v11    # "resultSize":I
    :cond_8
    new-instance v13, Lfreemarker/core/_MiscTemplateException;

    iget-object v8, v1, Lfreemarker/core/DynamicKeyName;->keyExpression:Lfreemarker/core/Expression;

    const/4 v7, 0x3

    new-array v7, v7, [Ljava/lang/Object;

    const-string v16, "Negative range end index ("

    const/16 v17, 0x0

    aput-object v16, v7, v17

    new-instance v2, Ljava/lang/Integer;

    invoke-direct {v2, v12}, Ljava/lang/Integer;-><init>(I)V

    const/16 v16, 0x1

    aput-object v2, v7, v16

    const/4 v2, 0x2

    aput-object v11, v7, v2

    invoke-direct {v13, v8, v7}, Lfreemarker/core/_MiscTemplateException;-><init>(Lfreemarker/core/Expression;[Ljava/lang/Object;)V

    throw v13

    .line 213
    :cond_9
    if-lt v12, v14, :cond_d

    .line 214
    if-nez v6, :cond_c

    .line 215
    new-instance v2, Lfreemarker/core/_MiscTemplateException;

    iget-object v7, v1, Lfreemarker/core/DynamicKeyName;->keyExpression:Lfreemarker/core/Expression;

    const/16 v8, 0x9

    new-array v8, v8, [Ljava/lang/Object;

    const-string v11, "Range end index "

    const/4 v13, 0x0

    aput-object v11, v8, v13

    new-instance v11, Ljava/lang/Integer;

    invoke-direct {v11, v12}, Ljava/lang/Integer;-><init>(I)V

    const/4 v13, 0x1

    aput-object v11, v8, v13

    const/4 v11, 0x2

    aput-object v27, v8, v11

    if-eqz v3, :cond_a

    goto :goto_5

    :cond_a
    move-object/from16 v25, v26

    :goto_5
    const/4 v11, 0x3

    aput-object v25, v8, v11

    const/4 v11, 0x4

    aput-object v24, v8, v11

    new-instance v11, Ljava/lang/Integer;

    invoke-direct {v11, v14}, Ljava/lang/Integer;-><init>(I)V

    aput-object v11, v8, v23

    aput-object v21, v8, v22

    if-eqz v3, :cond_b

    goto :goto_6

    :cond_b
    move-object/from16 v18, v19

    :goto_6
    aput-object v18, v8, v20

    const-string v11, ". (Note that indices are 0-based)."

    aput-object v11, v8, v17

    invoke-direct {v2, v7, v8}, Lfreemarker/core/_MiscTemplateException;-><init>(Lfreemarker/core/Expression;[Ljava/lang/Object;)V

    throw v2

    .line 221
    :cond_c
    sub-int v2, v14, v10

    invoke-static {v2}, Ljava/lang/Math;->abs(I)I

    move-result v11

    .restart local v11    # "resultSize":I
    goto :goto_7

    .line 224
    .end local v11    # "resultSize":I
    :cond_d
    move v11, v4

    .line 226
    .end local v12    # "lastIdx":I
    .restart local v11    # "resultSize":I
    :goto_7
    goto :goto_8

    .line 227
    .end local v11    # "resultSize":I
    :cond_e
    sub-int v11, v14, v10

    .line 230
    .restart local v11    # "resultSize":I
    :goto_8
    if-nez v11, :cond_10

    .line 231
    if-eqz v0, :cond_f

    const/4 v7, 0x1

    goto :goto_9

    :cond_f
    const/4 v7, 0x0

    :goto_9
    invoke-direct {v1, v7}, Lfreemarker/core/DynamicKeyName;->emptyResult(Z)Lfreemarker/template/TemplateModel;

    move-result-object v2

    return-object v2

    .line 233
    :cond_10
    if-eqz v0, :cond_12

    .line 234
    new-instance v2, Ljava/util/ArrayList;

    invoke-direct {v2, v11}, Ljava/util/ArrayList;-><init>(I)V

    .line 235
    .local v2, "list":Ljava/util/ArrayList;
    move v7, v10

    .line 236
    .local v7, "srcIdx":I
    const/4 v8, 0x0

    .local v8, "i":I
    :goto_a
    if-ge v8, v11, :cond_11

    .line 237
    invoke-interface {v0, v7}, Lfreemarker/template/TemplateSequenceModel;->get(I)Lfreemarker/template/TemplateModel;

    move-result-object v12

    invoke-virtual {v2, v12}, Ljava/util/ArrayList;->add(Ljava/lang/Object;)Z

    .line 238
    add-int/2addr v7, v15

    .line 236
    add-int/lit8 v8, v8, 0x1

    goto :goto_a

    .line 241
    .end local v8    # "i":I
    :cond_11
    new-instance v8, Lfreemarker/template/SimpleSequence;

    const/4 v12, 0x0

    invoke-direct {v8, v2, v12}, Lfreemarker/template/SimpleSequence;-><init>(Ljava/util/Collection;Lfreemarker/template/ObjectWrapper;)V

    return-object v8

    .line 244
    .end local v2    # "list":Ljava/util/ArrayList;
    .end local v7    # "srcIdx":I
    :cond_12
    if-gez v15, :cond_14

    const/4 v2, 0x1

    if-le v11, v2, :cond_14

    .line 245
    invoke-virtual/range {p2 .. p2}, Lfreemarker/core/RangeModel;->isAffactedByStringSlicingBug()Z

    move-result v2

    if-eqz v2, :cond_13

    const/4 v2, 0x2

    if-ne v11, v2, :cond_13

    .line 255
    move v2, v10

    .local v2, "exclEndIdx":I
    goto :goto_b

    .line 246
    .end local v2    # "exclEndIdx":I
    :cond_13
    new-instance v2, Lfreemarker/core/_MiscTemplateException;

    iget-object v7, v1, Lfreemarker/core/DynamicKeyName;->keyExpression:Lfreemarker/core/Expression;

    const/4 v8, 0x4

    new-array v8, v8, [Ljava/lang/Object;

    const-string v12, "Decreasing ranges aren\'t allowed for slicing strings (as it would give reversed text). The index range was: first = "

    const/4 v13, 0x0

    aput-object v12, v8, v13

    new-instance v12, Ljava/lang/Integer;

    invoke-direct {v12, v10}, Ljava/lang/Integer;-><init>(I)V

    const/4 v13, 0x1

    aput-object v12, v8, v13

    const-string v12, ", last = "

    const/4 v13, 0x2

    aput-object v12, v8, v13

    new-instance v12, Ljava/lang/Integer;

    add-int/lit8 v13, v11, -0x1

    mul-int/2addr v13, v15

    add-int/2addr v13, v10

    invoke-direct {v12, v13}, Ljava/lang/Integer;-><init>(I)V

    const/4 v13, 0x3

    aput-object v12, v8, v13

    invoke-direct {v2, v7, v8}, Lfreemarker/core/_MiscTemplateException;-><init>(Lfreemarker/core/Expression;[Ljava/lang/Object;)V

    throw v2

    .line 258
    :cond_14
    add-int v2, v10, v11

    .line 261
    .restart local v2    # "exclEndIdx":I
    :goto_b
    new-instance v7, Lfreemarker/template/SimpleScalar;

    invoke-virtual {v3, v10, v2}, Ljava/lang/String;->substring(II)Ljava/lang/String;

    move-result-object v8

    invoke-direct {v7, v8}, Lfreemarker/template/SimpleScalar;-><init>(Ljava/lang/String;)V

    return-object v7

    .line 181
    .end local v2    # "exclEndIdx":I
    .end local v11    # "resultSize":I
    .end local v14    # "targetSize":I
    .end local v15    # "step":I
    :cond_15
    new-instance v2, Lfreemarker/core/_MiscTemplateException;

    iget-object v7, v1, Lfreemarker/core/DynamicKeyName;->keyExpression:Lfreemarker/core/Expression;

    const/4 v8, 0x3

    new-array v8, v8, [Ljava/lang/Object;

    const-string v12, "Negative range start index ("

    const/4 v13, 0x0

    aput-object v12, v8, v13

    new-instance v12, Ljava/lang/Integer;

    invoke-direct {v12, v10}, Ljava/lang/Integer;-><init>(I)V

    const/4 v13, 0x1

    aput-object v12, v8, v13

    const/4 v12, 0x2

    aput-object v11, v8, v12

    invoke-direct {v2, v7, v8}, Lfreemarker/core/_MiscTemplateException;-><init>(Lfreemarker/core/Expression;[Ljava/lang/Object;)V

    throw v2

    .line 161
    .end local v0    # "targetSeq":Lfreemarker/template/TemplateSequenceModel;
    .end local v3    # "targetStr":Ljava/lang/String;
    .end local v4    # "size":I
    .end local v5    # "rightUnbounded":Z
    .end local v6    # "rightAdaptive":Z
    .local v10, "targetSeq":Lfreemarker/template/TemplateSequenceModel;
    :catch_0
    move-exception v0

    .line 162
    .local v0, "e":Lfreemarker/core/NonStringException;
    new-instance v2, Lfreemarker/core/UnexpectedTypeException;

    iget-object v4, v1, Lfreemarker/core/DynamicKeyName;->target:Lfreemarker/core/Expression;

    .line 163
    invoke-virtual {v4, v9}, Lfreemarker/core/Expression;->eval(Lfreemarker/core/Environment;)Lfreemarker/template/TemplateModel;

    move-result-object v5

    sget-object v7, Lfreemarker/core/DynamicKeyName;->NUMERICAL_KEY_LHO_EXPECTED_TYPES:[Ljava/lang/Class;

    const-string v6, "sequence or string or something automatically convertible to string (number, date or boolean)"

    move-object v3, v2

    move-object/from16 v8, p3

    invoke-direct/range {v3 .. v8}, Lfreemarker/core/UnexpectedTypeException;-><init>(Lfreemarker/core/Expression;Lfreemarker/template/TemplateModel;Ljava/lang/String;[Ljava/lang/Class;Lfreemarker/core/Environment;)V

    throw v2
.end method

.method private dealWithStringKey(Lfreemarker/template/TemplateModel;Ljava/lang/String;Lfreemarker/core/Environment;)Lfreemarker/template/TemplateModel;
    .locals 2
    .param p1, "targetModel"    # Lfreemarker/template/TemplateModel;
    .param p2, "key"    # Ljava/lang/String;
    .param p3, "env"    # Lfreemarker/core/Environment;
    .annotation system Ldalvik/annotation/Throws;
        value = {
            Lfreemarker/template/TemplateException;
        }
    .end annotation

    .line 144
    instance-of v0, p1, Lfreemarker/template/TemplateHashModel;

    if-eqz v0, :cond_0

    .line 145
    move-object v0, p1

    check-cast v0, Lfreemarker/template/TemplateHashModel;

    invoke-interface {v0, p2}, Lfreemarker/template/TemplateHashModel;->get(Ljava/lang/String;)Lfreemarker/template/TemplateModel;

    move-result-object v0

    return-object v0

    .line 147
    :cond_0
    new-instance v0, Lfreemarker/core/NonHashException;

    iget-object v1, p0, Lfreemarker/core/DynamicKeyName;->target:Lfreemarker/core/Expression;

    invoke-direct {v0, v1, p1, p3}, Lfreemarker/core/NonHashException;-><init>(Lfreemarker/core/Expression;Lfreemarker/template/TemplateModel;Lfreemarker/core/Environment;)V

    throw v0
.end method

.method private emptyResult(Z)Lfreemarker/template/TemplateModel;
    .locals 3
    .param p1, "seq"    # Z

    .line 266
    if-eqz p1, :cond_1

    .line 267
    invoke-static {p0}, Lfreemarker/template/_TemplateAPI;->getTemplateLanguageVersionAsInt(Lfreemarker/core/TemplateObject;)I

    move-result v0

    sget v1, Lfreemarker/template/_TemplateAPI;->VERSION_INT_2_3_21:I

    if-ge v0, v1, :cond_0

    new-instance v0, Lfreemarker/template/SimpleSequence;

    sget-object v1, Ljava/util/Collections;->EMPTY_LIST:Ljava/util/List;

    const/4 v2, 0x0

    invoke-direct {v0, v1, v2}, Lfreemarker/template/SimpleSequence;-><init>(Ljava/util/Collection;Lfreemarker/template/ObjectWrapper;)V

    goto :goto_0

    :cond_0
    sget-object v0, Lfreemarker/template/utility/Constants;->EMPTY_SEQUENCE:Lfreemarker/template/TemplateSequenceModel;

    goto :goto_0

    :cond_1
    sget-object v0, Lfreemarker/template/TemplateScalarModel;->EMPTY_STRING:Lfreemarker/template/TemplateModel;

    :goto_0
    return-object v0
.end method


# virtual methods
.method _eval(Lfreemarker/core/Environment;)Lfreemarker/template/TemplateModel;
    .locals 10
    .param p1, "env"    # Lfreemarker/core/Environment;
    .annotation system Ldalvik/annotation/Throws;
        value = {
            Lfreemarker/template/TemplateException;
        }
    .end annotation

    .line 49
    iget-object v0, p0, Lfreemarker/core/DynamicKeyName;->target:Lfreemarker/core/Expression;

    invoke-virtual {v0, p1}, Lfreemarker/core/Expression;->eval(Lfreemarker/core/Environment;)Lfreemarker/template/TemplateModel;

    move-result-object v0

    .line 50
    .local v0, "targetModel":Lfreemarker/template/TemplateModel;
    const/4 v1, 0x0

    if-nez v0, :cond_1

    .line 51
    invoke-virtual {p1}, Lfreemarker/core/Environment;->isClassicCompatible()Z

    move-result v2

    if-eqz v2, :cond_0

    .line 52
    return-object v1

    .line 54
    :cond_0
    iget-object v1, p0, Lfreemarker/core/DynamicKeyName;->target:Lfreemarker/core/Expression;

    invoke-static {v1, p1}, Lfreemarker/core/InvalidReferenceException;->getInstance(Lfreemarker/core/Expression;Lfreemarker/core/Environment;)Lfreemarker/core/InvalidReferenceException;

    move-result-object v1

    throw v1

    .line 58
    :cond_1
    iget-object v2, p0, Lfreemarker/core/DynamicKeyName;->keyExpression:Lfreemarker/core/Expression;

    invoke-virtual {v2, p1}, Lfreemarker/core/Expression;->eval(Lfreemarker/core/Environment;)Lfreemarker/template/TemplateModel;

    move-result-object v2

    .line 59
    .local v2, "keyModel":Lfreemarker/template/TemplateModel;
    if-nez v2, :cond_3

    .line 60
    invoke-virtual {p1}, Lfreemarker/core/Environment;->isClassicCompatible()Z

    move-result v3

    if-eqz v3, :cond_2

    .line 61
    sget-object v2, Lfreemarker/template/TemplateScalarModel;->EMPTY_STRING:Lfreemarker/template/TemplateModel;

    goto :goto_0

    .line 64
    :cond_2
    iget-object v3, p0, Lfreemarker/core/DynamicKeyName;->keyExpression:Lfreemarker/core/Expression;

    invoke-virtual {v3, v1, p1}, Lfreemarker/core/Expression;->assertNonNull(Lfreemarker/template/TemplateModel;Lfreemarker/core/Environment;)V

    .line 67
    :cond_3
    :goto_0
    instance-of v1, v2, Lfreemarker/template/TemplateNumberModel;

    if-eqz v1, :cond_4

    .line 68
    iget-object v1, p0, Lfreemarker/core/DynamicKeyName;->keyExpression:Lfreemarker/core/Expression;

    invoke-virtual {v1, v2, p1}, Lfreemarker/core/Expression;->modelToNumber(Lfreemarker/template/TemplateModel;Lfreemarker/core/Environment;)Ljava/lang/Number;

    move-result-object v1

    invoke-virtual {v1}, Ljava/lang/Number;->intValue()I

    move-result v1

    .line 69
    .local v1, "index":I
    invoke-direct {p0, v0, v1, p1}, Lfreemarker/core/DynamicKeyName;->dealWithNumericalKey(Lfreemarker/template/TemplateModel;ILfreemarker/core/Environment;)Lfreemarker/template/TemplateModel;

    move-result-object v3

    return-object v3

    .line 71
    .end local v1    # "index":I
    :cond_4
    instance-of v1, v2, Lfreemarker/template/TemplateScalarModel;

    if-eqz v1, :cond_5

    .line 72
    move-object v1, v2

    check-cast v1, Lfreemarker/template/TemplateScalarModel;

    iget-object v3, p0, Lfreemarker/core/DynamicKeyName;->keyExpression:Lfreemarker/core/Expression;

    invoke-static {v1, v3, p1}, Lfreemarker/core/EvalUtil;->modelToString(Lfreemarker/template/TemplateScalarModel;Lfreemarker/core/Expression;Lfreemarker/core/Environment;)Ljava/lang/String;

    move-result-object v1

    .line 73
    .local v1, "key":Ljava/lang/String;
    invoke-direct {p0, v0, v1, p1}, Lfreemarker/core/DynamicKeyName;->dealWithStringKey(Lfreemarker/template/TemplateModel;Ljava/lang/String;Lfreemarker/core/Environment;)Lfreemarker/template/TemplateModel;

    move-result-object v3

    return-object v3

    .line 75
    .end local v1    # "key":Ljava/lang/String;
    :cond_5
    instance-of v1, v2, Lfreemarker/core/RangeModel;

    if-eqz v1, :cond_6

    .line 76
    move-object v1, v2

    check-cast v1, Lfreemarker/core/RangeModel;

    invoke-direct {p0, v0, v1, p1}, Lfreemarker/core/DynamicKeyName;->dealWithRangeKey(Lfreemarker/template/TemplateModel;Lfreemarker/core/RangeModel;Lfreemarker/core/Environment;)Lfreemarker/template/TemplateModel;

    move-result-object v1

    return-object v1

    .line 78
    :cond_6
    new-instance v1, Lfreemarker/core/UnexpectedTypeException;

    iget-object v5, p0, Lfreemarker/core/DynamicKeyName;->keyExpression:Lfreemarker/core/Expression;

    const/4 v3, 0x3

    new-array v8, v3, [Ljava/lang/Class;

    const/4 v3, 0x0

    sget-object v4, Lfreemarker/core/DynamicKeyName;->class$freemarker$template$TemplateNumberModel:Ljava/lang/Class;

    if-nez v4, :cond_7

    .line 79
    const-string v4, "freemarker.template.TemplateNumberModel"

    invoke-static {v4}, Lfreemarker/core/DynamicKeyName;->class$(Ljava/lang/String;)Ljava/lang/Class;

    move-result-object v4

    sput-object v4, Lfreemarker/core/DynamicKeyName;->class$freemarker$template$TemplateNumberModel:Ljava/lang/Class;

    goto :goto_1

    :cond_7
    nop

    :goto_1
    aput-object v4, v8, v3

    const/4 v3, 0x1

    sget-object v4, Lfreemarker/core/DynamicKeyName;->class$freemarker$template$TemplateScalarModel:Ljava/lang/Class;

    if-nez v4, :cond_8

    const-string v4, "freemarker.template.TemplateScalarModel"

    invoke-static {v4}, Lfreemarker/core/DynamicKeyName;->class$(Ljava/lang/String;)Ljava/lang/Class;

    move-result-object v4

    sput-object v4, Lfreemarker/core/DynamicKeyName;->class$freemarker$template$TemplateScalarModel:Ljava/lang/Class;

    :cond_8
    aput-object v4, v8, v3

    const/4 v3, 0x2

    sget-object v4, Lfreemarker/core/DynamicKeyName;->class$freemarker$core$Range:Ljava/lang/Class;

    if-nez v4, :cond_9

    const-string v4, "freemarker.core.Range"

    invoke-static {v4}, Lfreemarker/core/DynamicKeyName;->class$(Ljava/lang/String;)Ljava/lang/Class;

    move-result-object v4

    sput-object v4, Lfreemarker/core/DynamicKeyName;->class$freemarker$core$Range:Ljava/lang/Class;

    :cond_9
    aput-object v4, v8, v3

    const-string v7, "number, range, or string"

    move-object v4, v1

    move-object v6, v2

    move-object v9, p1

    invoke-direct/range {v4 .. v9}, Lfreemarker/core/UnexpectedTypeException;-><init>(Lfreemarker/core/Expression;Lfreemarker/template/TemplateModel;Ljava/lang/String;[Ljava/lang/Class;Lfreemarker/core/Environment;)V

    throw v1
.end method

.method protected deepCloneWithIdentifierReplaced_inner(Ljava/lang/String;Lfreemarker/core/Expression;Lfreemarker/core/Expression$ReplacemenetState;)Lfreemarker/core/Expression;
    .locals 3
    .param p1, "replacedIdentifier"    # Ljava/lang/String;
    .param p2, "replacement"    # Lfreemarker/core/Expression;
    .param p3, "replacementState"    # Lfreemarker/core/Expression$ReplacemenetState;

    .line 302
    new-instance v0, Lfreemarker/core/DynamicKeyName;

    iget-object v1, p0, Lfreemarker/core/DynamicKeyName;->target:Lfreemarker/core/Expression;

    .line 303
    invoke-virtual {v1, p1, p2, p3}, Lfreemarker/core/Expression;->deepCloneWithIdentifierReplaced(Ljava/lang/String;Lfreemarker/core/Expression;Lfreemarker/core/Expression$ReplacemenetState;)Lfreemarker/core/Expression;

    move-result-object v1

    iget-object v2, p0, Lfreemarker/core/DynamicKeyName;->keyExpression:Lfreemarker/core/Expression;

    .line 304
    invoke-virtual {v2, p1, p2, p3}, Lfreemarker/core/Expression;->deepCloneWithIdentifierReplaced(Ljava/lang/String;Lfreemarker/core/Expression;Lfreemarker/core/Expression$ReplacemenetState;)Lfreemarker/core/Expression;

    move-result-object v2

    invoke-direct {v0, v1, v2}, Lfreemarker/core/DynamicKeyName;-><init>(Lfreemarker/core/Expression;Lfreemarker/core/Expression;)V

    return-object v0
.end method

.method public getCanonicalForm()Ljava/lang/String;
    .locals 2

    .line 274
    new-instance v0, Ljava/lang/StringBuffer;

    invoke-direct {v0}, Ljava/lang/StringBuffer;-><init>()V

    iget-object v1, p0, Lfreemarker/core/DynamicKeyName;->target:Lfreemarker/core/Expression;

    invoke-virtual {v1}, Lfreemarker/core/Expression;->getCanonicalForm()Ljava/lang/String;

    move-result-object v1

    invoke-virtual {v0, v1}, Ljava/lang/StringBuffer;->append(Ljava/lang/String;)Ljava/lang/StringBuffer;

    move-result-object v0

    const-string v1, "["

    invoke-virtual {v0, v1}, Ljava/lang/StringBuffer;->append(Ljava/lang/String;)Ljava/lang/StringBuffer;

    move-result-object v0

    iget-object v1, p0, Lfreemarker/core/DynamicKeyName;->keyExpression:Lfreemarker/core/Expression;

    .line 276
    invoke-virtual {v1}, Lfreemarker/core/Expression;->getCanonicalForm()Ljava/lang/String;

    move-result-object v1

    invoke-virtual {v0, v1}, Ljava/lang/StringBuffer;->append(Ljava/lang/String;)Ljava/lang/StringBuffer;

    move-result-object v0

    const-string v1, "]"

    invoke-virtual {v0, v1}, Ljava/lang/StringBuffer;->append(Ljava/lang/String;)Ljava/lang/StringBuffer;

    move-result-object v0

    invoke-virtual {v0}, Ljava/lang/StringBuffer;->toString()Ljava/lang/String;

    move-result-object v0

    return-object v0
.end method

.method getNodeTypeSymbol()Ljava/lang/String;
    .locals 1

    .line 281
    const-string v0, "...[...]"

    return-object v0
.end method

.method getParameterCount()I
    .locals 1

    .line 289
    const/4 v0, 0x2

    return v0
.end method

.method getParameterRole(I)Lfreemarker/core/ParameterRole;
    .locals 1
    .param p1, "idx"    # I

    .line 297
    if-nez p1, :cond_0

    sget-object v0, Lfreemarker/core/ParameterRole;->LEFT_HAND_OPERAND:Lfreemarker/core/ParameterRole;

    goto :goto_0

    :cond_0
    sget-object v0, Lfreemarker/core/ParameterRole;->ENCLOSED_OPERAND:Lfreemarker/core/ParameterRole;

    :goto_0
    return-object v0
.end method

.method getParameterValue(I)Ljava/lang/Object;
    .locals 1
    .param p1, "idx"    # I

    .line 293
    if-nez p1, :cond_0

    iget-object v0, p0, Lfreemarker/core/DynamicKeyName;->target:Lfreemarker/core/Expression;

    goto :goto_0

    :cond_0
    iget-object v0, p0, Lfreemarker/core/DynamicKeyName;->keyExpression:Lfreemarker/core/Expression;

    :goto_0
    return-object v0
.end method

.method isLiteral()Z
    .locals 1

    .line 285
    iget-object v0, p0, Lfreemarker/core/DynamicKeyName;->constantValue:Lfreemarker/template/TemplateModel;

    if-nez v0, :cond_1

    iget-object v0, p0, Lfreemarker/core/DynamicKeyName;->target:Lfreemarker/core/Expression;

    invoke-virtual {v0}, Lfreemarker/core/Expression;->isLiteral()Z

    move-result v0

    if-eqz v0, :cond_0

    iget-object v0, p0, Lfreemarker/core/DynamicKeyName;->keyExpression:Lfreemarker/core/Expression;

    invoke-virtual {v0}, Lfreemarker/core/Expression;->isLiteral()Z

    move-result v0

    if-eqz v0, :cond_0

    goto :goto_0

    :cond_0
    const/4 v0, 0x0

    goto :goto_1

    :cond_1
    :goto_0
    const/4 v0, 0x1

    :goto_1
    return v0
.end method
