.class final Lfreemarker/core/Dot;
.super Lfreemarker/core/Expression;
.source "Dot.java"


# instance fields
.field private final key:Ljava/lang/String;

.field private final target:Lfreemarker/core/Expression;


# direct methods
.method constructor <init>(Lfreemarker/core/Expression;Ljava/lang/String;)V
    .locals 0
    .param p1, "target"    # Lfreemarker/core/Expression;
    .param p2, "key"    # Ljava/lang/String;

    .line 31
    invoke-direct {p0}, Lfreemarker/core/Expression;-><init>()V

    .line 32
    iput-object p1, p0, Lfreemarker/core/Dot;->target:Lfreemarker/core/Expression;

    .line 33
    iput-object p2, p0, Lfreemarker/core/Dot;->key:Ljava/lang/String;

    .line 34
    return-void
.end method


# virtual methods
.method _eval(Lfreemarker/core/Environment;)Lfreemarker/template/TemplateModel;
    .locals 3
    .param p1, "env"    # Lfreemarker/core/Environment;
    .annotation system Ldalvik/annotation/Throws;
        value = {
            Lfreemarker/template/TemplateException;
        }
    .end annotation

    .line 38
    iget-object v0, p0, Lfreemarker/core/Dot;->target:Lfreemarker/core/Expression;

    invoke-virtual {v0, p1}, Lfreemarker/core/Expression;->eval(Lfreemarker/core/Environment;)Lfreemarker/template/TemplateModel;

    move-result-object v0

    .line 39
    .local v0, "leftModel":Lfreemarker/template/TemplateModel;
    instance-of v1, v0, Lfreemarker/template/TemplateHashModel;

    if-eqz v1, :cond_0

    .line 40
    move-object v1, v0

    check-cast v1, Lfreemarker/template/TemplateHashModel;

    iget-object v2, p0, Lfreemarker/core/Dot;->key:Ljava/lang/String;

    invoke-interface {v1, v2}, Lfreemarker/template/TemplateHashModel;->get(Ljava/lang/String;)Lfreemarker/template/TemplateModel;

    move-result-object v1

    return-object v1

    .line 42
    :cond_0
    if-nez v0, :cond_1

    invoke-virtual {p1}, Lfreemarker/core/Environment;->isClassicCompatible()Z

    move-result v1

    if-eqz v1, :cond_1

    .line 43
    const/4 v1, 0x0

    return-object v1

    .line 45
    :cond_1
    new-instance v1, Lfreemarker/core/NonHashException;

    iget-object v2, p0, Lfreemarker/core/Dot;->target:Lfreemarker/core/Expression;

    invoke-direct {v1, v2, v0, p1}, Lfreemarker/core/NonHashException;-><init>(Lfreemarker/core/Expression;Lfreemarker/template/TemplateModel;Lfreemarker/core/Environment;)V

    throw v1
.end method

.method protected deepCloneWithIdentifierReplaced_inner(Ljava/lang/String;Lfreemarker/core/Expression;Lfreemarker/core/Expression$ReplacemenetState;)Lfreemarker/core/Expression;
    .locals 3
    .param p1, "replacedIdentifier"    # Ljava/lang/String;
    .param p2, "replacement"    # Lfreemarker/core/Expression;
    .param p3, "replacementState"    # Lfreemarker/core/Expression$ReplacemenetState;

    .line 62
    new-instance v0, Lfreemarker/core/Dot;

    iget-object v1, p0, Lfreemarker/core/Dot;->target:Lfreemarker/core/Expression;

    .line 63
    invoke-virtual {v1, p1, p2, p3}, Lfreemarker/core/Expression;->deepCloneWithIdentifierReplaced(Ljava/lang/String;Lfreemarker/core/Expression;Lfreemarker/core/Expression$ReplacemenetState;)Lfreemarker/core/Expression;

    move-result-object v1

    iget-object v2, p0, Lfreemarker/core/Dot;->key:Ljava/lang/String;

    invoke-direct {v0, v1, v2}, Lfreemarker/core/Dot;-><init>(Lfreemarker/core/Expression;Ljava/lang/String;)V

    return-object v0
.end method

.method public getCanonicalForm()Ljava/lang/String;
    .locals 2

    .line 49
    new-instance v0, Ljava/lang/StringBuffer;

    invoke-direct {v0}, Ljava/lang/StringBuffer;-><init>()V

    iget-object v1, p0, Lfreemarker/core/Dot;->target:Lfreemarker/core/Expression;

    invoke-virtual {v1}, Lfreemarker/core/Expression;->getCanonicalForm()Ljava/lang/String;

    move-result-object v1

    invoke-virtual {v0, v1}, Ljava/lang/StringBuffer;->append(Ljava/lang/String;)Ljava/lang/StringBuffer;

    move-result-object v0

    invoke-virtual {p0}, Lfreemarker/core/Dot;->getNodeTypeSymbol()Ljava/lang/String;

    move-result-object v1

    invoke-virtual {v0, v1}, Ljava/lang/StringBuffer;->append(Ljava/lang/String;)Ljava/lang/StringBuffer;

    move-result-object v0

    iget-object v1, p0, Lfreemarker/core/Dot;->key:Ljava/lang/String;

    invoke-static {v1}, Lfreemarker/core/_CoreStringUtils;->toFTLIdentifierReferenceAfterDot(Ljava/lang/String;)Ljava/lang/String;

    move-result-object v1

    invoke-virtual {v0, v1}, Ljava/lang/StringBuffer;->append(Ljava/lang/String;)Ljava/lang/StringBuffer;

    move-result-object v0

    invoke-virtual {v0}, Ljava/lang/StringBuffer;->toString()Ljava/lang/String;

    move-result-object v0

    return-object v0
.end method

.method getNodeTypeSymbol()Ljava/lang/String;
    .locals 1

    .line 53
    const-string v0, "."

    return-object v0
.end method

.method getParameterCount()I
    .locals 1

    .line 68
    const/4 v0, 0x2

    return v0
.end method

.method getParameterRole(I)Lfreemarker/core/ParameterRole;
    .locals 1
    .param p1, "idx"    # I

    .line 76
    invoke-static {p1}, Lfreemarker/core/ParameterRole;->forBinaryOperatorOperand(I)Lfreemarker/core/ParameterRole;

    move-result-object v0

    return-object v0
.end method

.method getParameterValue(I)Ljava/lang/Object;
    .locals 1
    .param p1, "idx"    # I

    .line 72
    if-nez p1, :cond_0

    iget-object v0, p0, Lfreemarker/core/Dot;->target:Lfreemarker/core/Expression;

    goto :goto_0

    :cond_0
    iget-object v0, p0, Lfreemarker/core/Dot;->key:Ljava/lang/String;

    :goto_0
    return-object v0
.end method

.method getRHO()Ljava/lang/String;
    .locals 1

    .line 80
    iget-object v0, p0, Lfreemarker/core/Dot;->key:Ljava/lang/String;

    return-object v0
.end method

.method isLiteral()Z
    .locals 1

    .line 57
    iget-object v0, p0, Lfreemarker/core/Dot;->target:Lfreemarker/core/Expression;

    invoke-virtual {v0}, Lfreemarker/core/Expression;->isLiteral()Z

    move-result v0

    return v0
.end method

.method onlyHasIdentifiers()Z
    .locals 2

    .line 84
    iget-object v0, p0, Lfreemarker/core/Dot;->target:Lfreemarker/core/Expression;

    instance-of v1, v0, Lfreemarker/core/Identifier;

    if-nez v1, :cond_1

    instance-of v1, v0, Lfreemarker/core/Dot;

    if-eqz v1, :cond_0

    check-cast v0, Lfreemarker/core/Dot;

    invoke-virtual {v0}, Lfreemarker/core/Dot;->onlyHasIdentifiers()Z

    move-result v0

    if-eqz v0, :cond_0

    goto :goto_0

    :cond_0
    const/4 v0, 0x0

    goto :goto_1

    :cond_1
    :goto_0
    const/4 v0, 0x1

    :goto_1
    return v0
.end method
