.class Lfreemarker/core/Macro$Context;
.super Ljava/lang/Object;
.source "Macro.java"

# interfaces
.implements Lfreemarker/core/LocalContext;


# annotations
.annotation system Ldalvik/annotation/EnclosingClass;
    value = Lfreemarker/core/Macro;
.end annotation

.annotation system Ldalvik/annotation/InnerClass;
    accessFlags = 0x0
    name = "Context"
.end annotation


# instance fields
.field final localVars:Lfreemarker/core/Environment$Namespace;

.field final nestedContent:Lfreemarker/core/TemplateElement;

.field final nestedContentNamespace:Lfreemarker/core/Environment$Namespace;

.field final nestedContentParameterNames:Ljava/util/List;

.field final prevLocalContextStack:Ljava/util/ArrayList;

.field final prevMacroContext:Lfreemarker/core/Macro$Context;

.field private final synthetic this$0:Lfreemarker/core/Macro;


# direct methods
.method constructor <init>(Lfreemarker/core/Macro;Lfreemarker/core/Environment;Lfreemarker/core/TemplateElement;Ljava/util/List;)V
    .locals 1
    .param p1, "this$0"    # Lfreemarker/core/Macro;
    .param p2, "env"    # Lfreemarker/core/Environment;
    .param p3, "nestedContent"    # Lfreemarker/core/TemplateElement;
    .param p4, "nestedContentParameterNames"    # Ljava/util/List;

    .line 166
    iput-object p1, p0, Lfreemarker/core/Macro$Context;->this$0:Lfreemarker/core/Macro;

    invoke-direct {p0}, Ljava/lang/Object;-><init>()V

    .line 167
    new-instance v0, Lfreemarker/core/Environment$Namespace;

    invoke-virtual {p2}, Ljava/lang/Object;->getClass()Ljava/lang/Class;

    invoke-direct {v0, p2}, Lfreemarker/core/Environment$Namespace;-><init>(Lfreemarker/core/Environment;)V

    iput-object v0, p0, Lfreemarker/core/Macro$Context;->localVars:Lfreemarker/core/Environment$Namespace;

    .line 168
    iput-object p3, p0, Lfreemarker/core/Macro$Context;->nestedContent:Lfreemarker/core/TemplateElement;

    .line 169
    invoke-virtual {p2}, Lfreemarker/core/Environment;->getCurrentNamespace()Lfreemarker/core/Environment$Namespace;

    move-result-object v0

    iput-object v0, p0, Lfreemarker/core/Macro$Context;->nestedContentNamespace:Lfreemarker/core/Environment$Namespace;

    .line 170
    iput-object p4, p0, Lfreemarker/core/Macro$Context;->nestedContentParameterNames:Ljava/util/List;

    .line 171
    invoke-virtual {p2}, Lfreemarker/core/Environment;->getLocalContextStack()Ljava/util/ArrayList;

    move-result-object v0

    iput-object v0, p0, Lfreemarker/core/Macro$Context;->prevLocalContextStack:Ljava/util/ArrayList;

    .line 172
    invoke-virtual {p2}, Lfreemarker/core/Environment;->getCurrentMacroContext()Lfreemarker/core/Macro$Context;

    move-result-object v0

    iput-object v0, p0, Lfreemarker/core/Macro$Context;->prevMacroContext:Lfreemarker/core/Macro$Context;

    .line 173
    return-void
.end method


# virtual methods
.method public getLocalVariable(Ljava/lang/String;)Lfreemarker/template/TemplateModel;
    .locals 1
    .param p1, "name"    # Ljava/lang/String;
    .annotation system Ldalvik/annotation/Throws;
        value = {
            Lfreemarker/template/TemplateModelException;
        }
    .end annotation

    .line 262
    iget-object v0, p0, Lfreemarker/core/Macro$Context;->localVars:Lfreemarker/core/Environment$Namespace;

    invoke-virtual {v0, p1}, Lfreemarker/core/Environment$Namespace;->get(Ljava/lang/String;)Lfreemarker/template/TemplateModel;

    move-result-object v0

    return-object v0
.end method

.method public getLocalVariableNames()Ljava/util/Collection;
    .locals 3
    .annotation system Ldalvik/annotation/Throws;
        value = {
            Lfreemarker/template/TemplateModelException;
        }
    .end annotation

    .line 277
    new-instance v0, Ljava/util/HashSet;

    invoke-direct {v0}, Ljava/util/HashSet;-><init>()V

    .line 278
    .local v0, "result":Ljava/util/HashSet;
    iget-object v1, p0, Lfreemarker/core/Macro$Context;->localVars:Lfreemarker/core/Environment$Namespace;

    invoke-virtual {v1}, Lfreemarker/core/Environment$Namespace;->keys()Lfreemarker/template/TemplateCollectionModel;

    move-result-object v1

    invoke-interface {v1}, Lfreemarker/template/TemplateCollectionModel;->iterator()Lfreemarker/template/TemplateModelIterator;

    move-result-object v1

    .local v1, "it":Lfreemarker/template/TemplateModelIterator;
    :goto_0
    invoke-interface {v1}, Lfreemarker/template/TemplateModelIterator;->hasNext()Z

    move-result v2

    if-eqz v2, :cond_0

    .line 279
    invoke-interface {v1}, Lfreemarker/template/TemplateModelIterator;->next()Lfreemarker/template/TemplateModel;

    move-result-object v2

    invoke-virtual {v2}, Ljava/lang/Object;->toString()Ljava/lang/String;

    move-result-object v2

    invoke-virtual {v0, v2}, Ljava/util/HashSet;->add(Ljava/lang/Object;)Z

    goto :goto_0

    .line 281
    .end local v1    # "it":Lfreemarker/template/TemplateModelIterator;
    :cond_0
    return-object v0
.end method

.method getLocals()Lfreemarker/core/Environment$Namespace;
    .locals 1

    .line 266
    iget-object v0, p0, Lfreemarker/core/Macro$Context;->localVars:Lfreemarker/core/Environment$Namespace;

    return-object v0
.end method

.method getMacro()Lfreemarker/core/Macro;
    .locals 1

    .line 177
    iget-object v0, p0, Lfreemarker/core/Macro$Context;->this$0:Lfreemarker/core/Macro;

    return-object v0
.end method

.method runMacro(Lfreemarker/core/Environment;)V
    .locals 1
    .param p1, "env"    # Lfreemarker/core/Environment;
    .annotation system Ldalvik/annotation/Throws;
        value = {
            Lfreemarker/template/TemplateException;,
            Ljava/io/IOException;
        }
    .end annotation

    .line 181
    invoke-virtual {p0, p1}, Lfreemarker/core/Macro$Context;->sanityCheck(Lfreemarker/core/Environment;)V

    .line 183
    iget-object v0, p0, Lfreemarker/core/Macro$Context;->this$0:Lfreemarker/core/Macro;

    invoke-virtual {v0}, Lfreemarker/core/Macro;->getNestedBlock()Lfreemarker/core/TemplateElement;

    move-result-object v0

    if-eqz v0, :cond_0

    .line 184
    iget-object v0, p0, Lfreemarker/core/Macro$Context;->this$0:Lfreemarker/core/Macro;

    invoke-virtual {v0}, Lfreemarker/core/Macro;->getNestedBlock()Lfreemarker/core/TemplateElement;

    move-result-object v0

    invoke-virtual {p1, v0}, Lfreemarker/core/Environment;->visit(Lfreemarker/core/TemplateElement;)V

    .line 186
    :cond_0
    return-void
.end method

.method sanityCheck(Lfreemarker/core/Environment;)V
    .locals 18
    .param p1, "env"    # Lfreemarker/core/Environment;
    .annotation system Ldalvik/annotation/Throws;
        value = {
            Lfreemarker/template/TemplateException;
        }
    .end annotation

    move-object/from16 v1, p0

    move-object/from16 v2, p1

    .line 194
    :cond_0
    const/4 v0, 0x0

    .line 195
    .local v0, "firstUnresolvedExpression":Lfreemarker/core/Expression;
    const/4 v3, 0x0

    .line 196
    .local v3, "firstReferenceException":Lfreemarker/core/InvalidReferenceException;
    const/4 v4, 0x0

    move v5, v4

    .local v5, "hasUnresolvedArg":Z
    move v6, v4

    .line 197
    .local v6, "resolvedAnArg":Z
    const/4 v7, 0x0

    move v8, v7

    move v7, v6

    move v6, v5

    move-object v5, v3

    move-object v3, v0

    .end local v0    # "firstUnresolvedExpression":Lfreemarker/core/Expression;
    .local v3, "firstUnresolvedExpression":Lfreemarker/core/Expression;
    .local v5, "firstReferenceException":Lfreemarker/core/InvalidReferenceException;
    .local v6, "hasUnresolvedArg":Z
    .local v7, "resolvedAnArg":Z
    .local v8, "i":I
    :goto_0
    iget-object v0, v1, Lfreemarker/core/Macro$Context;->this$0:Lfreemarker/core/Macro;

    invoke-static {v0}, Lfreemarker/core/Macro;->access$000(Lfreemarker/core/Macro;)[Ljava/lang/String;

    move-result-object v0

    array-length v0, v0

    if-ge v8, v0, :cond_8

    .line 198
    iget-object v0, v1, Lfreemarker/core/Macro$Context;->this$0:Lfreemarker/core/Macro;

    invoke-static {v0}, Lfreemarker/core/Macro;->access$000(Lfreemarker/core/Macro;)[Ljava/lang/String;

    move-result-object v0

    aget-object v9, v0, v8

    .line 199
    .local v9, "argName":Ljava/lang/String;
    iget-object v0, v1, Lfreemarker/core/Macro$Context;->localVars:Lfreemarker/core/Environment$Namespace;

    invoke-virtual {v0, v9}, Lfreemarker/core/Environment$Namespace;->get(Ljava/lang/String;)Lfreemarker/template/TemplateModel;

    move-result-object v0

    if-nez v0, :cond_7

    .line 200
    iget-object v0, v1, Lfreemarker/core/Macro$Context;->this$0:Lfreemarker/core/Macro;

    invoke-static {v0}, Lfreemarker/core/Macro;->access$100(Lfreemarker/core/Macro;)Ljava/util/Map;

    move-result-object v0

    invoke-interface {v0, v9}, Ljava/util/Map;->get(Ljava/lang/Object;)Ljava/lang/Object;

    move-result-object v0

    move-object v10, v0

    check-cast v10, Lfreemarker/core/Expression;

    .line 201
    .local v10, "valueExp":Lfreemarker/core/Expression;
    if-eqz v10, :cond_3

    .line 203
    :try_start_0
    invoke-virtual {v10, v2}, Lfreemarker/core/Expression;->eval(Lfreemarker/core/Environment;)Lfreemarker/template/TemplateModel;

    move-result-object v0

    .line 204
    .local v0, "tm":Lfreemarker/template/TemplateModel;
    if-nez v0, :cond_1

    .line 205
    if-nez v6, :cond_2

    .line 206
    move-object v3, v10

    .line 207
    const/4 v6, 0x1

    goto :goto_1

    .line 211
    :cond_1
    iget-object v11, v1, Lfreemarker/core/Macro$Context;->localVars:Lfreemarker/core/Environment$Namespace;

    invoke-virtual {v11, v9, v0}, Lfreemarker/core/Environment$Namespace;->put(Ljava/lang/String;Ljava/lang/Object;)V
    :try_end_0
    .catch Lfreemarker/core/InvalidReferenceException; {:try_start_0 .. :try_end_0} :catch_0

    .line 212
    const/4 v7, 0x1

    goto :goto_1

    .line 215
    .end local v0    # "tm":Lfreemarker/template/TemplateModel;
    :catch_0
    move-exception v0

    .line 216
    .local v0, "e":Lfreemarker/core/InvalidReferenceException;
    if-nez v6, :cond_2

    .line 217
    const/4 v6, 0x1

    .line 218
    move-object v5, v0

    .line 220
    .end local v0    # "e":Lfreemarker/core/InvalidReferenceException;
    :cond_2
    :goto_1
    move v14, v4

    goto/16 :goto_4

    .line 222
    :cond_3
    invoke-virtual/range {p1 .. p1}, Lfreemarker/core/Environment;->isClassicCompatible()Z

    move-result v0

    if-nez v0, :cond_6

    .line 223
    iget-object v0, v1, Lfreemarker/core/Macro$Context;->localVars:Lfreemarker/core/Environment$Namespace;

    invoke-virtual {v0, v9}, Lfreemarker/core/Environment$Namespace;->containsKey(Ljava/lang/String;)Z

    move-result v0

    .line 224
    .local v0, "argWasSpecified":Z
    new-instance v11, Lfreemarker/core/_MiscTemplateException;

    new-instance v12, Lfreemarker/core/_ErrorDescriptionBuilder;

    const/16 v13, 0x8

    new-array v13, v13, [Ljava/lang/Object;

    const-string v14, "When calling macro "

    aput-object v14, v13, v4

    new-instance v14, Lfreemarker/core/_DelayedJQuote;

    iget-object v15, v1, Lfreemarker/core/Macro$Context;->this$0:Lfreemarker/core/Macro;

    .line 226
    invoke-static {v15}, Lfreemarker/core/Macro;->access$200(Lfreemarker/core/Macro;)Ljava/lang/String;

    move-result-object v15

    invoke-direct {v14, v15}, Lfreemarker/core/_DelayedJQuote;-><init>(Ljava/lang/Object;)V

    const/4 v15, 0x1

    aput-object v14, v13, v15

    const-string v14, ", required parameter "

    const/16 v16, 0x2

    aput-object v14, v13, v16

    new-instance v14, Lfreemarker/core/_DelayedJQuote;

    invoke-direct {v14, v9}, Lfreemarker/core/_DelayedJQuote;-><init>(Ljava/lang/Object;)V

    const/4 v4, 0x3

    aput-object v14, v13, v4

    const/4 v14, 0x4

    const-string v17, " (parameter #"

    aput-object v17, v13, v14

    const/4 v14, 0x5

    new-instance v4, Ljava/lang/Integer;

    add-int/lit8 v15, v8, 0x1

    invoke-direct {v4, v15}, Ljava/lang/Integer;-><init>(I)V

    aput-object v4, v13, v14

    const/4 v4, 0x6

    const-string v14, ") was "

    aput-object v14, v13, v4

    const/4 v4, 0x7

    if-eqz v0, :cond_4

    const-string v14, "specified, but had null/missing value."

    goto :goto_2

    :cond_4
    const-string v14, "not specified."

    :goto_2
    aput-object v14, v13, v4

    invoke-direct {v12, v13}, Lfreemarker/core/_ErrorDescriptionBuilder;-><init>([Ljava/lang/Object;)V

    if-eqz v0, :cond_5

    const/4 v4, 0x1

    new-array v4, v4, [Ljava/lang/Object;

    const-string v13, "If the parameter value expression on the caller side is known to be legally null/missing, you may want to specify a default value for it with the \"!\" operator, like paramValue!defaultValue."

    const/4 v14, 0x0

    aput-object v13, v4, v14

    goto :goto_3

    :cond_5
    const/4 v4, 0x1

    const/4 v14, 0x0

    const/4 v13, 0x3

    new-array v13, v13, [Ljava/lang/Object;

    const-string v15, "If the omission was deliberate, you may consider making the parameter optional in the macro by specifying a default value for it, like "

    aput-object v15, v13, v14

    const-string v14, "<#macro macroName paramName=defaultExpr>"

    aput-object v14, v13, v4

    const-string v4, ")"

    aput-object v4, v13, v16

    move-object v4, v13

    .line 232
    :goto_3
    invoke-virtual {v12, v4}, Lfreemarker/core/_ErrorDescriptionBuilder;->tip([Ljava/lang/Object;)Lfreemarker/core/_ErrorDescriptionBuilder;

    move-result-object v4

    invoke-direct {v11, v2, v4}, Lfreemarker/core/_MiscTemplateException;-><init>(Lfreemarker/core/Environment;Lfreemarker/core/_ErrorDescriptionBuilder;)V

    throw v11

    .line 222
    .end local v0    # "argWasSpecified":Z
    :cond_6
    move v14, v4

    goto :goto_4

    .line 199
    .end local v10    # "valueExp":Lfreemarker/core/Expression;
    :cond_7
    move v14, v4

    .line 197
    .end local v9    # "argName":Ljava/lang/String;
    :goto_4
    add-int/lit8 v8, v8, 0x1

    move v4, v14

    goto/16 :goto_0

    .line 247
    .end local v8    # "i":I
    :cond_8
    if-eqz v7, :cond_9

    if-nez v6, :cond_0

    .line 248
    :cond_9
    if-eqz v6, :cond_c

    .line 249
    if-nez v5, :cond_b

    .line 251
    invoke-virtual/range {p1 .. p1}, Lfreemarker/core/Environment;->isClassicCompatible()Z

    move-result v0

    if-eqz v0, :cond_a

    goto :goto_5

    .line 252
    :cond_a
    invoke-static {v3, v2}, Lfreemarker/core/InvalidReferenceException;->getInstance(Lfreemarker/core/Expression;Lfreemarker/core/Environment;)Lfreemarker/core/InvalidReferenceException;

    move-result-object v0

    throw v0

    .line 250
    :cond_b
    throw v5

    .line 255
    :cond_c
    :goto_5
    return-void
.end method

.method setLocalVar(Ljava/lang/String;Lfreemarker/template/TemplateModel;)V
    .locals 1
    .param p1, "name"    # Ljava/lang/String;
    .param p2, "var"    # Lfreemarker/template/TemplateModel;

    .line 273
    iget-object v0, p0, Lfreemarker/core/Macro$Context;->localVars:Lfreemarker/core/Environment$Namespace;

    invoke-virtual {v0, p1, p2}, Lfreemarker/core/Environment$Namespace;->put(Ljava/lang/String;Ljava/lang/Object;)V

    .line 274
    return-void
.end method
