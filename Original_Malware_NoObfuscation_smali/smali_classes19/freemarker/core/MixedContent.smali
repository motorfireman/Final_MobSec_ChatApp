.class final Lfreemarker/core/MixedContent;
.super Lfreemarker/core/TemplateElement;
.source "MixedContent.java"


# direct methods
.method constructor <init>()V
    .locals 0

    .line 28
    invoke-direct {p0}, Lfreemarker/core/TemplateElement;-><init>()V

    return-void
.end method


# virtual methods
.method accept(Lfreemarker/core/Environment;)V
    .locals 3
    .param p1, "env"    # Lfreemarker/core/Environment;
    .annotation system Ldalvik/annotation/Throws;
        value = {
            Lfreemarker/template/TemplateException;,
            Ljava/io/IOException;
        }
    .end annotation

    .line 52
    invoke-virtual {p0}, Lfreemarker/core/MixedContent;->getRegulatedChildCount()I

    move-result v0

    .line 53
    .local v0, "ln":I
    const/4 v1, 0x0

    .local v1, "i":I
    :goto_0
    if-ge v1, v0, :cond_0

    .line 54
    invoke-virtual {p0, v1}, Lfreemarker/core/MixedContent;->getRegulatedChild(I)Lfreemarker/core/TemplateElement;

    move-result-object v2

    invoke-virtual {p1, v2}, Lfreemarker/core/Environment;->visit(Lfreemarker/core/TemplateElement;)V

    .line 53
    add-int/lit8 v1, v1, 0x1

    goto :goto_0

    .line 56
    .end local v1    # "i":I
    :cond_0
    return-void
.end method

.method addElement(ILfreemarker/core/TemplateElement;)V
    .locals 0
    .param p1, "index"    # I
    .param p2, "element"    # Lfreemarker/core/TemplateElement;

    .line 35
    invoke-virtual {p0, p1, p2}, Lfreemarker/core/MixedContent;->addRegulatedChild(ILfreemarker/core/TemplateElement;)V

    .line 36
    return-void
.end method

.method addElement(Lfreemarker/core/TemplateElement;)V
    .locals 0
    .param p1, "element"    # Lfreemarker/core/TemplateElement;

    .line 31
    invoke-virtual {p0, p1}, Lfreemarker/core/MixedContent;->addRegulatedChild(Lfreemarker/core/TemplateElement;)V

    .line 32
    return-void
.end method

.method protected dump(Z)Ljava/lang/String;
    .locals 4
    .param p1, "canonical"    # Z

    .line 59
    if-eqz p1, :cond_1

    .line 60
    new-instance v0, Ljava/lang/StringBuffer;

    invoke-direct {v0}, Ljava/lang/StringBuffer;-><init>()V

    .line 61
    .local v0, "buf":Ljava/lang/StringBuffer;
    invoke-virtual {p0}, Lfreemarker/core/MixedContent;->getRegulatedChildCount()I

    move-result v1

    .line 62
    .local v1, "ln":I
    const/4 v2, 0x0

    .local v2, "i":I
    :goto_0
    if-ge v2, v1, :cond_0

    .line 63
    invoke-virtual {p0, v2}, Lfreemarker/core/MixedContent;->getRegulatedChild(I)Lfreemarker/core/TemplateElement;

    move-result-object v3

    invoke-virtual {v3}, Lfreemarker/core/TemplateElement;->getCanonicalForm()Ljava/lang/String;

    move-result-object v3

    invoke-virtual {v0, v3}, Ljava/lang/StringBuffer;->append(Ljava/lang/String;)Ljava/lang/StringBuffer;

    .line 62
    add-int/lit8 v2, v2, 0x1

    goto :goto_0

    .line 65
    .end local v2    # "i":I
    :cond_0
    invoke-virtual {v0}, Ljava/lang/StringBuffer;->toString()Ljava/lang/String;

    move-result-object v2

    return-object v2

    .line 67
    .end local v0    # "buf":Ljava/lang/StringBuffer;
    .end local v1    # "ln":I
    :cond_1
    invoke-virtual {p0}, Lfreemarker/core/MixedContent;->getParentElement()Lfreemarker/core/TemplateElement;

    move-result-object v0

    if-nez v0, :cond_2

    .line 68
    const-string v0, "root"

    return-object v0

    .line 70
    :cond_2
    invoke-virtual {p0}, Lfreemarker/core/MixedContent;->getNodeTypeSymbol()Ljava/lang/String;

    move-result-object v0

    return-object v0
.end method

.method getNodeTypeSymbol()Ljava/lang/String;
    .locals 1

    .line 85
    const-string v0, "#mixed_content"

    return-object v0
.end method

.method getParameterCount()I
    .locals 1

    .line 89
    const/4 v0, 0x0

    return v0
.end method

.method getParameterRole(I)Lfreemarker/core/ParameterRole;
    .locals 1
    .param p1, "idx"    # I

    .line 97
    new-instance v0, Ljava/lang/IndexOutOfBoundsException;

    invoke-direct {v0}, Ljava/lang/IndexOutOfBoundsException;-><init>()V

    throw v0
.end method

.method getParameterValue(I)Ljava/lang/Object;
    .locals 1
    .param p1, "idx"    # I

    .line 93
    new-instance v0, Ljava/lang/IndexOutOfBoundsException;

    invoke-direct {v0}, Ljava/lang/IndexOutOfBoundsException;-><init>()V

    throw v0
.end method

.method isIgnorable()Z
    .locals 1

    .line 105
    invoke-virtual {p0}, Lfreemarker/core/MixedContent;->getRegulatedChildCount()I

    move-result v0

    if-nez v0, :cond_0

    const/4 v0, 0x1

    goto :goto_0

    :cond_0
    const/4 v0, 0x0

    :goto_0
    return v0
.end method

.method isNestedBlockRepeater()Z
    .locals 1

    .line 109
    const/4 v0, 0x0

    return v0
.end method

.method protected isOutputCacheable()Z
    .locals 3

    .line 75
    invoke-virtual {p0}, Lfreemarker/core/MixedContent;->getRegulatedChildCount()I

    move-result v0

    .line 76
    .local v0, "ln":I
    const/4 v1, 0x0

    .local v1, "i":I
    :goto_0
    if-ge v1, v0, :cond_1

    .line 77
    invoke-virtual {p0, v1}, Lfreemarker/core/MixedContent;->getRegulatedChild(I)Lfreemarker/core/TemplateElement;

    move-result-object v2

    invoke-virtual {v2}, Lfreemarker/core/TemplateElement;->isOutputCacheable()Z

    move-result v2

    if-nez v2, :cond_0

    .line 78
    const/4 v2, 0x0

    return v2

    .line 76
    :cond_0
    add-int/lit8 v1, v1, 0x1

    goto :goto_0

    .line 81
    .end local v1    # "i":I
    :cond_1
    const/4 v1, 0x1

    return v1
.end method

.method isShownInStackTrace()Z
    .locals 1

    .line 101
    const/4 v0, 0x0

    return v0
.end method

.method postParseCleanup(Z)Lfreemarker/core/TemplateElement;
    .locals 2
    .param p1, "stripWhitespace"    # Z
    .annotation system Ldalvik/annotation/Throws;
        value = {
            Lfreemarker/core/ParseException;
        }
    .end annotation

    .line 41
    invoke-super {p0, p1}, Lfreemarker/core/TemplateElement;->postParseCleanup(Z)Lfreemarker/core/TemplateElement;

    .line 42
    invoke-virtual {p0}, Lfreemarker/core/MixedContent;->getRegulatedChildCount()I

    move-result v0

    const/4 v1, 0x1

    if-ne v0, v1, :cond_0

    const/4 v0, 0x0

    invoke-virtual {p0, v0}, Lfreemarker/core/MixedContent;->getRegulatedChild(I)Lfreemarker/core/TemplateElement;

    move-result-object v0

    goto :goto_0

    :cond_0
    move-object v0, p0

    :goto_0
    return-object v0
.end method
