.class public Lfreemarker/core/ArithmeticEngine$BigDecimalEngine;
.super Lfreemarker/core/ArithmeticEngine;
.source "ArithmeticEngine.java"


# annotations
.annotation system Ldalvik/annotation/EnclosingClass;
    value = Lfreemarker/core/ArithmeticEngine;
.end annotation

.annotation system Ldalvik/annotation/InnerClass;
    accessFlags = 0x9
    name = "BigDecimalEngine"
.end annotation


# direct methods
.method public constructor <init>()V
    .locals 0

    .line 110
    invoke-direct {p0}, Lfreemarker/core/ArithmeticEngine;-><init>()V

    return-void
.end method

.method private divide(Ljava/math/BigDecimal;Ljava/math/BigDecimal;)Ljava/math/BigDecimal;
    .locals 4
    .param p1, "left"    # Ljava/math/BigDecimal;
    .param p2, "right"    # Ljava/math/BigDecimal;

    .line 170
    invoke-virtual {p1}, Ljava/math/BigDecimal;->scale()I

    move-result v0

    .line 171
    .local v0, "scale1":I
    invoke-virtual {p2}, Ljava/math/BigDecimal;->scale()I

    move-result v1

    .line 172
    .local v1, "scale2":I
    invoke-static {v0, v1}, Ljava/lang/Math;->max(II)I

    move-result v2

    .line 173
    .local v2, "scale":I
    iget v3, p0, Lfreemarker/core/ArithmeticEngine$BigDecimalEngine;->minScale:I

    invoke-static {v3, v2}, Ljava/lang/Math;->max(II)I

    move-result v2

    .line 174
    iget v3, p0, Lfreemarker/core/ArithmeticEngine$BigDecimalEngine;->roundingPolicy:I

    invoke-virtual {p1, p2, v2, v3}, Ljava/math/BigDecimal;->divide(Ljava/math/BigDecimal;II)Ljava/math/BigDecimal;

    move-result-object v3

    return-object v3
.end method


# virtual methods
.method public add(Ljava/lang/Number;Ljava/lang/Number;)Ljava/lang/Number;
    .locals 3
    .param p1, "first"    # Ljava/lang/Number;
    .param p2, "second"    # Ljava/lang/Number;

    .line 132
    invoke-static {p1}, Lfreemarker/core/ArithmeticEngine;->access$000(Ljava/lang/Number;)Ljava/math/BigDecimal;

    move-result-object v0

    .line 133
    .local v0, "left":Ljava/math/BigDecimal;
    invoke-static {p2}, Lfreemarker/core/ArithmeticEngine;->access$000(Ljava/lang/Number;)Ljava/math/BigDecimal;

    move-result-object v1

    .line 134
    .local v1, "right":Ljava/math/BigDecimal;
    invoke-virtual {v0, v1}, Ljava/math/BigDecimal;->add(Ljava/math/BigDecimal;)Ljava/math/BigDecimal;

    move-result-object v2

    return-object v2
.end method

.method public compareNumbers(Ljava/lang/Number;Ljava/lang/Number;)I
    .locals 5
    .param p1, "first"    # Ljava/lang/Number;
    .param p2, "second"    # Ljava/lang/Number;

    .line 118
    invoke-static {p1}, Lfreemarker/template/utility/NumberUtil;->getSignum(Ljava/lang/Number;)I

    move-result v0

    .line 119
    .local v0, "firstSignum":I
    invoke-static {p2}, Lfreemarker/template/utility/NumberUtil;->getSignum(Ljava/lang/Number;)I

    move-result v1

    .line 120
    .local v1, "secondSignum":I
    const/4 v2, 0x0

    if-eq v0, v1, :cond_2

    .line 121
    if-ge v0, v1, :cond_0

    const/4 v2, -0x1

    goto :goto_0

    :cond_0
    if-le v0, v1, :cond_1

    const/4 v2, 0x1

    :cond_1
    :goto_0
    return v2

    .line 122
    :cond_2
    if-nez v0, :cond_3

    if-nez v1, :cond_3

    .line 123
    return v2

    .line 125
    :cond_3
    invoke-static {p1}, Lfreemarker/core/ArithmeticEngine;->access$000(Ljava/lang/Number;)Ljava/math/BigDecimal;

    move-result-object v2

    .line 126
    .local v2, "left":Ljava/math/BigDecimal;
    invoke-static {p2}, Lfreemarker/core/ArithmeticEngine;->access$000(Ljava/lang/Number;)Ljava/math/BigDecimal;

    move-result-object v3

    .line 127
    .local v3, "right":Ljava/math/BigDecimal;
    invoke-virtual {v2, v3}, Ljava/math/BigDecimal;->compareTo(Ljava/math/BigDecimal;)I

    move-result v4

    return v4
.end method

.method public divide(Ljava/lang/Number;Ljava/lang/Number;)Ljava/lang/Number;
    .locals 3
    .param p1, "first"    # Ljava/lang/Number;
    .param p2, "second"    # Ljava/lang/Number;

    .line 154
    invoke-static {p1}, Lfreemarker/core/ArithmeticEngine;->access$000(Ljava/lang/Number;)Ljava/math/BigDecimal;

    move-result-object v0

    .line 155
    .local v0, "left":Ljava/math/BigDecimal;
    invoke-static {p2}, Lfreemarker/core/ArithmeticEngine;->access$000(Ljava/lang/Number;)Ljava/math/BigDecimal;

    move-result-object v1

    .line 156
    .local v1, "right":Ljava/math/BigDecimal;
    invoke-direct {p0, v0, v1}, Lfreemarker/core/ArithmeticEngine$BigDecimalEngine;->divide(Ljava/math/BigDecimal;Ljava/math/BigDecimal;)Ljava/math/BigDecimal;

    move-result-object v2

    return-object v2
.end method

.method public modulus(Ljava/lang/Number;Ljava/lang/Number;)Ljava/lang/Number;
    .locals 7
    .param p1, "first"    # Ljava/lang/Number;
    .param p2, "second"    # Ljava/lang/Number;

    .line 160
    invoke-virtual {p1}, Ljava/lang/Number;->longValue()J

    move-result-wide v0

    .line 161
    .local v0, "left":J
    invoke-virtual {p2}, Ljava/lang/Number;->longValue()J

    move-result-wide v2

    .line 162
    .local v2, "right":J
    new-instance v4, Ljava/lang/Long;

    rem-long v5, v0, v2

    invoke-direct {v4, v5, v6}, Ljava/lang/Long;-><init>(J)V

    return-object v4
.end method

.method public multiply(Ljava/lang/Number;Ljava/lang/Number;)Ljava/lang/Number;
    .locals 5
    .param p1, "first"    # Ljava/lang/Number;
    .param p2, "second"    # Ljava/lang/Number;

    .line 144
    invoke-static {p1}, Lfreemarker/core/ArithmeticEngine;->access$000(Ljava/lang/Number;)Ljava/math/BigDecimal;

    move-result-object v0

    .line 145
    .local v0, "left":Ljava/math/BigDecimal;
    invoke-static {p2}, Lfreemarker/core/ArithmeticEngine;->access$000(Ljava/lang/Number;)Ljava/math/BigDecimal;

    move-result-object v1

    .line 146
    .local v1, "right":Ljava/math/BigDecimal;
    invoke-virtual {v0, v1}, Ljava/math/BigDecimal;->multiply(Ljava/math/BigDecimal;)Ljava/math/BigDecimal;

    move-result-object v2

    .line 147
    .local v2, "result":Ljava/math/BigDecimal;
    invoke-virtual {v2}, Ljava/math/BigDecimal;->scale()I

    move-result v3

    iget v4, p0, Lfreemarker/core/ArithmeticEngine$BigDecimalEngine;->maxScale:I

    if-le v3, v4, :cond_0

    .line 148
    iget v3, p0, Lfreemarker/core/ArithmeticEngine$BigDecimalEngine;->maxScale:I

    iget v4, p0, Lfreemarker/core/ArithmeticEngine$BigDecimalEngine;->roundingPolicy:I

    invoke-virtual {v2, v3, v4}, Ljava/math/BigDecimal;->setScale(II)Ljava/math/BigDecimal;

    move-result-object v2

    .line 150
    :cond_0
    return-object v2
.end method

.method public subtract(Ljava/lang/Number;Ljava/lang/Number;)Ljava/lang/Number;
    .locals 3
    .param p1, "first"    # Ljava/lang/Number;
    .param p2, "second"    # Ljava/lang/Number;

    .line 138
    invoke-static {p1}, Lfreemarker/core/ArithmeticEngine;->access$000(Ljava/lang/Number;)Ljava/math/BigDecimal;

    move-result-object v0

    .line 139
    .local v0, "left":Ljava/math/BigDecimal;
    invoke-static {p2}, Lfreemarker/core/ArithmeticEngine;->access$000(Ljava/lang/Number;)Ljava/math/BigDecimal;

    move-result-object v1

    .line 140
    .local v1, "right":Ljava/math/BigDecimal;
    invoke-virtual {v0, v1}, Ljava/math/BigDecimal;->subtract(Ljava/math/BigDecimal;)Ljava/math/BigDecimal;

    move-result-object v2

    return-object v2
.end method

.method public toNumber(Ljava/lang/String;)Ljava/lang/Number;
    .locals 1
    .param p1, "s"    # Ljava/lang/String;

    .line 166
    invoke-static {p1}, Lfreemarker/core/ArithmeticEngine;->access$100(Ljava/lang/String;)Ljava/lang/Number;

    move-result-object v0

    return-object v0
.end method
