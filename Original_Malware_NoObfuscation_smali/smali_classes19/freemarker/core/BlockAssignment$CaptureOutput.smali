.class Lfreemarker/core/BlockAssignment$CaptureOutput;
.super Ljava/lang/Object;
.source "BlockAssignment.java"

# interfaces
.implements Lfreemarker/template/TemplateTransformModel;


# annotations
.annotation system Ldalvik/annotation/EnclosingClass;
    value = Lfreemarker/core/BlockAssignment;
.end annotation

.annotation system Ldalvik/annotation/InnerClass;
    accessFlags = 0x2
    name = "CaptureOutput"
.end annotation


# instance fields
.field private final env:Lfreemarker/core/Environment;

.field private final fnsModel:Lfreemarker/core/Environment$Namespace;

.field private final synthetic this$0:Lfreemarker/core/BlockAssignment;


# direct methods
.method constructor <init>(Lfreemarker/core/BlockAssignment;Lfreemarker/core/Environment;)V
    .locals 2
    .param p2, "env"    # Lfreemarker/core/Environment;
    .annotation system Ldalvik/annotation/Throws;
        value = {
            Lfreemarker/template/TemplateException;
        }
    .end annotation

    .line 67
    iput-object p1, p0, Lfreemarker/core/BlockAssignment$CaptureOutput;->this$0:Lfreemarker/core/BlockAssignment;

    invoke-direct {p0}, Ljava/lang/Object;-><init>()V

    .line 68
    iput-object p2, p0, Lfreemarker/core/BlockAssignment$CaptureOutput;->env:Lfreemarker/core/Environment;

    .line 69
    const/4 v0, 0x0

    .line 70
    .local v0, "nsModel":Lfreemarker/template/TemplateModel;
    invoke-static {p1}, Lfreemarker/core/BlockAssignment;->access$000(Lfreemarker/core/BlockAssignment;)Lfreemarker/core/Expression;

    move-result-object v1

    if-eqz v1, :cond_1

    .line 71
    invoke-static {p1}, Lfreemarker/core/BlockAssignment;->access$000(Lfreemarker/core/BlockAssignment;)Lfreemarker/core/Expression;

    move-result-object v1

    invoke-virtual {v1, p2}, Lfreemarker/core/Expression;->eval(Lfreemarker/core/Environment;)Lfreemarker/template/TemplateModel;

    move-result-object v0

    .line 72
    instance-of v1, v0, Lfreemarker/core/Environment$Namespace;

    if-eqz v1, :cond_0

    goto :goto_0

    .line 73
    :cond_0
    new-instance v1, Lfreemarker/core/NonNamespaceException;

    invoke-static {p1}, Lfreemarker/core/BlockAssignment;->access$000(Lfreemarker/core/BlockAssignment;)Lfreemarker/core/Expression;

    move-result-object p1

    invoke-direct {v1, p1, v0, p2}, Lfreemarker/core/NonNamespaceException;-><init>(Lfreemarker/core/Expression;Lfreemarker/template/TemplateModel;Lfreemarker/core/Environment;)V

    throw v1

    .line 76
    :cond_1
    :goto_0
    move-object p1, v0

    check-cast p1, Lfreemarker/core/Environment$Namespace;

    iput-object p1, p0, Lfreemarker/core/BlockAssignment$CaptureOutput;->fnsModel:Lfreemarker/core/Environment$Namespace;

    .line 77
    return-void
.end method

.method static synthetic access$100(Lfreemarker/core/BlockAssignment$CaptureOutput;)Lfreemarker/core/BlockAssignment;
    .locals 1
    .param p0, "x0"    # Lfreemarker/core/BlockAssignment$CaptureOutput;

    .line 63
    iget-object v0, p0, Lfreemarker/core/BlockAssignment$CaptureOutput;->this$0:Lfreemarker/core/BlockAssignment;

    return-object v0
.end method

.method static synthetic access$300(Lfreemarker/core/BlockAssignment$CaptureOutput;)Lfreemarker/core/Environment$Namespace;
    .locals 1
    .param p0, "x0"    # Lfreemarker/core/BlockAssignment$CaptureOutput;

    .line 63
    iget-object v0, p0, Lfreemarker/core/BlockAssignment$CaptureOutput;->fnsModel:Lfreemarker/core/Environment$Namespace;

    return-object v0
.end method

.method static synthetic access$500(Lfreemarker/core/BlockAssignment$CaptureOutput;)Lfreemarker/core/Environment;
    .locals 1
    .param p0, "x0"    # Lfreemarker/core/BlockAssignment$CaptureOutput;

    .line 63
    iget-object v0, p0, Lfreemarker/core/BlockAssignment$CaptureOutput;->env:Lfreemarker/core/Environment;

    return-object v0
.end method


# virtual methods
.method public getWriter(Ljava/io/Writer;Ljava/util/Map;)Ljava/io/Writer;
    .locals 1
    .param p1, "out"    # Ljava/io/Writer;
    .param p2, "args"    # Ljava/util/Map;

    .line 80
    new-instance v0, Lfreemarker/core/BlockAssignment$CaptureOutput$1;

    invoke-direct {v0, p0}, Lfreemarker/core/BlockAssignment$CaptureOutput$1;-><init>(Lfreemarker/core/BlockAssignment$CaptureOutput;)V

    return-object v0
.end method
