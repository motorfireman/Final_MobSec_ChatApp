.class final Lfreemarker/core/ConditionalBlock;
.super Lfreemarker/core/TemplateElement;
.source "ConditionalBlock.java"


# static fields
.field static final TYPE_ELSE:I = 0x1

.field static final TYPE_ELSE_IF:I = 0x2

.field static final TYPE_IF:I


# instance fields
.field final condition:Lfreemarker/core/Expression;

.field isLonelyIf:Z

.field private final type:I


# direct methods
.method constructor <init>(Lfreemarker/core/Expression;Lfreemarker/core/TemplateElement;I)V
    .locals 0
    .param p1, "condition"    # Lfreemarker/core/Expression;
    .param p2, "nestedBlock"    # Lfreemarker/core/TemplateElement;
    .param p3, "type"    # I

    .line 39
    invoke-direct {p0}, Lfreemarker/core/TemplateElement;-><init>()V

    .line 40
    iput-object p1, p0, Lfreemarker/core/ConditionalBlock;->condition:Lfreemarker/core/Expression;

    .line 41
    invoke-virtual {p0, p2}, Lfreemarker/core/ConditionalBlock;->setNestedBlock(Lfreemarker/core/TemplateElement;)V

    .line 42
    iput p3, p0, Lfreemarker/core/ConditionalBlock;->type:I

    .line 43
    return-void
.end method


# virtual methods
.method accept(Lfreemarker/core/Environment;)V
    .locals 1
    .param p1, "env"    # Lfreemarker/core/Environment;
    .annotation system Ldalvik/annotation/Throws;
        value = {
            Lfreemarker/template/TemplateException;,
            Ljava/io/IOException;
        }
    .end annotation

    .line 46
    iget-object v0, p0, Lfreemarker/core/ConditionalBlock;->condition:Lfreemarker/core/Expression;

    if-eqz v0, :cond_0

    invoke-virtual {v0, p1}, Lfreemarker/core/Expression;->evalToBoolean(Lfreemarker/core/Environment;)Z

    move-result v0

    if-eqz v0, :cond_1

    .line 47
    :cond_0
    invoke-virtual {p0}, Lfreemarker/core/ConditionalBlock;->getNestedBlock()Lfreemarker/core/TemplateElement;

    move-result-object v0

    if-eqz v0, :cond_1

    .line 48
    invoke-virtual {p0}, Lfreemarker/core/ConditionalBlock;->getNestedBlock()Lfreemarker/core/TemplateElement;

    move-result-object v0

    invoke-virtual {p1, v0}, Lfreemarker/core/Environment;->visitByHiddingParent(Lfreemarker/core/TemplateElement;)V

    .line 51
    :cond_1
    return-void
.end method

.method protected dump(Z)Ljava/lang/String;
    .locals 2
    .param p1, "canonical"    # Z

    .line 54
    new-instance v0, Ljava/lang/StringBuffer;

    invoke-direct {v0}, Ljava/lang/StringBuffer;-><init>()V

    .line 55
    .local v0, "buf":Ljava/lang/StringBuffer;
    if-eqz p1, :cond_0

    const/16 v1, 0x3c

    invoke-virtual {v0, v1}, Ljava/lang/StringBuffer;->append(C)Ljava/lang/StringBuffer;

    .line 56
    :cond_0
    invoke-virtual {p0}, Lfreemarker/core/ConditionalBlock;->getNodeTypeSymbol()Ljava/lang/String;

    move-result-object v1

    invoke-virtual {v0, v1}, Ljava/lang/StringBuffer;->append(Ljava/lang/String;)Ljava/lang/StringBuffer;

    .line 57
    iget-object v1, p0, Lfreemarker/core/ConditionalBlock;->condition:Lfreemarker/core/Expression;

    if-eqz v1, :cond_1

    .line 58
    const/16 v1, 0x20

    invoke-virtual {v0, v1}, Ljava/lang/StringBuffer;->append(C)Ljava/lang/StringBuffer;

    .line 59
    iget-object v1, p0, Lfreemarker/core/ConditionalBlock;->condition:Lfreemarker/core/Expression;

    invoke-virtual {v1}, Lfreemarker/core/Expression;->getCanonicalForm()Ljava/lang/String;

    move-result-object v1

    invoke-virtual {v0, v1}, Ljava/lang/StringBuffer;->append(Ljava/lang/String;)Ljava/lang/StringBuffer;

    .line 61
    :cond_1
    if-eqz p1, :cond_3

    .line 62
    const-string v1, ">"

    invoke-virtual {v0, v1}, Ljava/lang/StringBuffer;->append(Ljava/lang/String;)Ljava/lang/StringBuffer;

    .line 63
    invoke-virtual {p0}, Lfreemarker/core/ConditionalBlock;->getNestedBlock()Lfreemarker/core/TemplateElement;

    move-result-object v1

    if-eqz v1, :cond_2

    .line 64
    invoke-virtual {p0}, Lfreemarker/core/ConditionalBlock;->getNestedBlock()Lfreemarker/core/TemplateElement;

    move-result-object v1

    invoke-virtual {v1}, Lfreemarker/core/TemplateElement;->getCanonicalForm()Ljava/lang/String;

    move-result-object v1

    invoke-virtual {v0, v1}, Ljava/lang/StringBuffer;->append(Ljava/lang/String;)Ljava/lang/StringBuffer;

    .line 66
    :cond_2
    iget-boolean v1, p0, Lfreemarker/core/ConditionalBlock;->isLonelyIf:Z

    if-eqz v1, :cond_3

    .line 67
    const-string v1, "</#if>"

    invoke-virtual {v0, v1}, Ljava/lang/StringBuffer;->append(Ljava/lang/String;)Ljava/lang/StringBuffer;

    .line 70
    :cond_3
    invoke-virtual {v0}, Ljava/lang/StringBuffer;->toString()Ljava/lang/String;

    move-result-object v1

    return-object v1
.end method

.method getNodeTypeSymbol()Ljava/lang/String;
    .locals 2

    .line 74
    iget v0, p0, Lfreemarker/core/ConditionalBlock;->type:I

    const/4 v1, 0x1

    if-ne v0, v1, :cond_0

    .line 75
    const-string v0, "#else"

    return-object v0

    .line 76
    :cond_0
    if-nez v0, :cond_1

    .line 77
    const-string v0, "#if"

    return-object v0

    .line 78
    :cond_1
    const/4 v1, 0x2

    if-ne v0, v1, :cond_2

    .line 79
    const-string v0, "#elseif"

    return-object v0

    .line 81
    :cond_2
    new-instance v0, Lfreemarker/core/BugException;

    const-string v1, "Unknown type"

    invoke-direct {v0, v1}, Lfreemarker/core/BugException;-><init>(Ljava/lang/String;)V

    throw v0
.end method

.method getParameterCount()I
    .locals 1

    .line 86
    const/4 v0, 0x2

    return v0
.end method

.method getParameterRole(I)Lfreemarker/core/ParameterRole;
    .locals 1
    .param p1, "idx"    # I

    .line 98
    packed-switch p1, :pswitch_data_0

    .line 101
    new-instance v0, Ljava/lang/IndexOutOfBoundsException;

    invoke-direct {v0}, Ljava/lang/IndexOutOfBoundsException;-><init>()V

    throw v0

    .line 100
    :pswitch_0
    sget-object v0, Lfreemarker/core/ParameterRole;->AST_NODE_SUBTYPE:Lfreemarker/core/ParameterRole;

    return-object v0

    .line 99
    :pswitch_1
    sget-object v0, Lfreemarker/core/ParameterRole;->CONDITION:Lfreemarker/core/ParameterRole;

    return-object v0

    nop

    :pswitch_data_0
    .packed-switch 0x0
        :pswitch_1
        :pswitch_0
    .end packed-switch
.end method

.method getParameterValue(I)Ljava/lang/Object;
    .locals 2
    .param p1, "idx"    # I

    .line 90
    packed-switch p1, :pswitch_data_0

    .line 93
    new-instance v0, Ljava/lang/IndexOutOfBoundsException;

    invoke-direct {v0}, Ljava/lang/IndexOutOfBoundsException;-><init>()V

    throw v0

    .line 92
    :pswitch_0
    new-instance v0, Ljava/lang/Integer;

    iget v1, p0, Lfreemarker/core/ConditionalBlock;->type:I

    invoke-direct {v0, v1}, Ljava/lang/Integer;-><init>(I)V

    return-object v0

    .line 91
    :pswitch_1
    iget-object v0, p0, Lfreemarker/core/ConditionalBlock;->condition:Lfreemarker/core/Expression;

    return-object v0

    :pswitch_data_0
    .packed-switch 0x0
        :pswitch_1
        :pswitch_0
    .end packed-switch
.end method

.method isNestedBlockRepeater()Z
    .locals 1

    .line 106
    const/4 v0, 0x0

    return v0
.end method
