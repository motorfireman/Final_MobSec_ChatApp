.class final Lfreemarker/core/TrimInstruction;
.super Lfreemarker/core/TemplateElement;
.source "TrimInstruction.java"


# instance fields
.field private final TYPE_LT:I

.field private final TYPE_NT:I

.field private final TYPE_RT:I

.field private final TYPE_T:I

.field final left:Z

.field final right:Z


# direct methods
.method constructor <init>(ZZ)V
    .locals 1
    .param p1, "left"    # Z
    .param p2, "right"    # Z

    .line 32
    invoke-direct {p0}, Lfreemarker/core/TemplateElement;-><init>()V

    .line 25
    const/4 v0, 0x0

    iput v0, p0, Lfreemarker/core/TrimInstruction;->TYPE_T:I

    .line 26
    const/4 v0, 0x1

    iput v0, p0, Lfreemarker/core/TrimInstruction;->TYPE_LT:I

    .line 27
    const/4 v0, 0x2

    iput v0, p0, Lfreemarker/core/TrimInstruction;->TYPE_RT:I

    .line 28
    const/4 v0, 0x3

    iput v0, p0, Lfreemarker/core/TrimInstruction;->TYPE_NT:I

    .line 33
    iput-boolean p1, p0, Lfreemarker/core/TrimInstruction;->left:Z

    .line 34
    iput-boolean p2, p0, Lfreemarker/core/TrimInstruction;->right:Z

    .line 35
    return-void
.end method


# virtual methods
.method accept(Lfreemarker/core/Environment;)V
    .locals 0
    .param p1, "env"    # Lfreemarker/core/Environment;

    .line 39
    return-void
.end method

.method protected dump(Z)Ljava/lang/String;
    .locals 2
    .param p1, "canonical"    # Z

    .line 42
    new-instance v0, Ljava/lang/StringBuffer;

    invoke-direct {v0}, Ljava/lang/StringBuffer;-><init>()V

    .line 43
    .local v0, "sb":Ljava/lang/StringBuffer;
    if-eqz p1, :cond_0

    const/16 v1, 0x3c

    invoke-virtual {v0, v1}, Ljava/lang/StringBuffer;->append(C)Ljava/lang/StringBuffer;

    .line 44
    :cond_0
    invoke-virtual {p0}, Lfreemarker/core/TrimInstruction;->getNodeTypeSymbol()Ljava/lang/String;

    move-result-object v1

    invoke-virtual {v0, v1}, Ljava/lang/StringBuffer;->append(Ljava/lang/String;)Ljava/lang/StringBuffer;

    .line 45
    if-eqz p1, :cond_1

    const-string v1, "/>"

    invoke-virtual {v0, v1}, Ljava/lang/StringBuffer;->append(Ljava/lang/String;)Ljava/lang/StringBuffer;

    .line 46
    :cond_1
    invoke-virtual {v0}, Ljava/lang/StringBuffer;->toString()Ljava/lang/String;

    move-result-object v1

    return-object v1
.end method

.method getNodeTypeSymbol()Ljava/lang/String;
    .locals 2

    .line 50
    iget-boolean v0, p0, Lfreemarker/core/TrimInstruction;->left:Z

    if-eqz v0, :cond_0

    iget-boolean v1, p0, Lfreemarker/core/TrimInstruction;->right:Z

    if-eqz v1, :cond_0

    .line 51
    const-string v0, "#t"

    return-object v0

    .line 52
    :cond_0
    if-eqz v0, :cond_1

    .line 53
    const-string v0, "#lt"

    return-object v0

    .line 54
    :cond_1
    iget-boolean v0, p0, Lfreemarker/core/TrimInstruction;->right:Z

    if-eqz v0, :cond_2

    .line 55
    const-string v0, "#rt"

    return-object v0

    .line 57
    :cond_2
    const-string v0, "#nt"

    return-object v0
.end method

.method getParameterCount()I
    .locals 1

    .line 66
    const/4 v0, 0x1

    return v0
.end method

.method getParameterRole(I)Lfreemarker/core/ParameterRole;
    .locals 1
    .param p1, "idx"    # I

    .line 85
    if-nez p1, :cond_0

    .line 86
    sget-object v0, Lfreemarker/core/ParameterRole;->AST_NODE_SUBTYPE:Lfreemarker/core/ParameterRole;

    return-object v0

    .line 85
    :cond_0
    new-instance v0, Ljava/lang/IndexOutOfBoundsException;

    invoke-direct {v0}, Ljava/lang/IndexOutOfBoundsException;-><init>()V

    throw v0
.end method

.method getParameterValue(I)Ljava/lang/Object;
    .locals 2
    .param p1, "idx"    # I

    .line 70
    if-nez p1, :cond_3

    .line 72
    iget-boolean v0, p0, Lfreemarker/core/TrimInstruction;->left:Z

    if-eqz v0, :cond_0

    iget-boolean v1, p0, Lfreemarker/core/TrimInstruction;->right:Z

    if-eqz v1, :cond_0

    .line 73
    const/4 v0, 0x0

    .local v0, "type":I
    goto :goto_0

    .line 74
    .end local v0    # "type":I
    :cond_0
    if-eqz v0, :cond_1

    .line 75
    const/4 v0, 0x1

    .restart local v0    # "type":I
    goto :goto_0

    .line 76
    .end local v0    # "type":I
    :cond_1
    iget-boolean v0, p0, Lfreemarker/core/TrimInstruction;->right:Z

    if-eqz v0, :cond_2

    .line 77
    const/4 v0, 0x2

    .restart local v0    # "type":I
    goto :goto_0

    .line 79
    .end local v0    # "type":I
    :cond_2
    const/4 v0, 0x3

    .line 81
    .restart local v0    # "type":I
    :goto_0
    new-instance v1, Ljava/lang/Integer;

    invoke-direct {v1, v0}, Ljava/lang/Integer;-><init>(I)V

    return-object v1

    .line 70
    .end local v0    # "type":I
    :cond_3
    new-instance v0, Ljava/lang/IndexOutOfBoundsException;

    invoke-direct {v0}, Ljava/lang/IndexOutOfBoundsException;-><init>()V

    throw v0
.end method

.method isIgnorable()Z
    .locals 1

    .line 62
    const/4 v0, 0x1

    return v0
.end method

.method isNestedBlockRepeater()Z
    .locals 1

    .line 94
    const/4 v0, 0x0

    return v0
.end method

.method isOutputCacheable()Z
    .locals 1

    .line 90
    const/4 v0, 0x1

    return v0
.end method
