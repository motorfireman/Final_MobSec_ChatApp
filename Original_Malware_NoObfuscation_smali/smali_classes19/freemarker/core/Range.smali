.class final Lfreemarker/core/Range;
.super Lfreemarker/core/Expression;
.source "Range.java"


# static fields
.field static final END_EXCLUSIVE:I = 0x1

.field static final END_INCLUSIVE:I = 0x0

.field static final END_SIZE_LIMITED:I = 0x3

.field static final END_UNBOUND:I = 0x2


# instance fields
.field final endType:I

.field final lho:Lfreemarker/core/Expression;

.field final rho:Lfreemarker/core/Expression;


# direct methods
.method constructor <init>(Lfreemarker/core/Expression;Lfreemarker/core/Expression;I)V
    .locals 0
    .param p1, "lho"    # Lfreemarker/core/Expression;
    .param p2, "rho"    # Lfreemarker/core/Expression;
    .param p3, "endType"    # I

    .line 37
    invoke-direct {p0}, Lfreemarker/core/Expression;-><init>()V

    .line 38
    iput-object p1, p0, Lfreemarker/core/Range;->lho:Lfreemarker/core/Expression;

    .line 39
    iput-object p2, p0, Lfreemarker/core/Range;->rho:Lfreemarker/core/Expression;

    .line 40
    iput p3, p0, Lfreemarker/core/Range;->endType:I

    .line 41
    return-void
.end method


# virtual methods
.method _eval(Lfreemarker/core/Environment;)Lfreemarker/template/TemplateModel;
    .locals 9
    .param p1, "env"    # Lfreemarker/core/Environment;
    .annotation system Ldalvik/annotation/Throws;
        value = {
            Lfreemarker/template/TemplateException;
        }
    .end annotation

    .line 48
    iget-object v0, p0, Lfreemarker/core/Range;->lho:Lfreemarker/core/Expression;

    invoke-virtual {v0, p1}, Lfreemarker/core/Expression;->evalToNumber(Lfreemarker/core/Environment;)Ljava/lang/Number;

    move-result-object v0

    invoke-virtual {v0}, Ljava/lang/Number;->intValue()I

    move-result v0

    .line 49
    .local v0, "begin":I
    iget v1, p0, Lfreemarker/core/Range;->endType:I

    const/4 v2, 0x2

    if-eq v1, v2, :cond_3

    .line 50
    iget-object v1, p0, Lfreemarker/core/Range;->rho:Lfreemarker/core/Expression;

    invoke-virtual {v1, p1}, Lfreemarker/core/Expression;->evalToNumber(Lfreemarker/core/Environment;)Ljava/lang/Number;

    move-result-object v1

    invoke-virtual {v1}, Ljava/lang/Number;->intValue()I

    move-result v1

    .line 51
    .local v1, "lhoValue":I
    new-instance v2, Lfreemarker/core/BoundedRangeModel;

    iget v3, p0, Lfreemarker/core/Range;->endType:I

    const/4 v4, 0x3

    if-eq v3, v4, :cond_0

    move v5, v1

    goto :goto_0

    :cond_0
    add-int v5, v0, v1

    :goto_0
    const/4 v6, 0x1

    const/4 v7, 0x0

    if-nez v3, :cond_1

    move v8, v6

    goto :goto_1

    :cond_1
    move v8, v7

    :goto_1
    if-ne v3, v4, :cond_2

    goto :goto_2

    :cond_2
    move v6, v7

    :goto_2
    invoke-direct {v2, v0, v5, v8, v6}, Lfreemarker/core/BoundedRangeModel;-><init>(IIZZ)V

    return-object v2

    .line 55
    .end local v1    # "lhoValue":I
    :cond_3
    invoke-static {p0}, Lfreemarker/template/_TemplateAPI;->getTemplateLanguageVersionAsInt(Lfreemarker/core/TemplateObject;)I

    move-result v1

    sget v2, Lfreemarker/template/_TemplateAPI;->VERSION_INT_2_3_21:I

    if-lt v1, v2, :cond_4

    new-instance v1, Lfreemarker/core/ListableRightUnboundedRangeModel;

    invoke-direct {v1, v0}, Lfreemarker/core/ListableRightUnboundedRangeModel;-><init>(I)V

    goto :goto_3

    :cond_4
    new-instance v1, Lfreemarker/core/NonListableRightUnboundedRangeModel;

    invoke-direct {v1, v0}, Lfreemarker/core/NonListableRightUnboundedRangeModel;-><init>(I)V

    :goto_3
    return-object v1
.end method

.method protected deepCloneWithIdentifierReplaced_inner(Ljava/lang/String;Lfreemarker/core/Expression;Lfreemarker/core/Expression$ReplacemenetState;)Lfreemarker/core/Expression;
    .locals 4
    .param p1, "replacedIdentifier"    # Ljava/lang/String;
    .param p2, "replacement"    # Lfreemarker/core/Expression;
    .param p3, "replacementState"    # Lfreemarker/core/Expression$ReplacemenetState;

    .line 88
    new-instance v0, Lfreemarker/core/Range;

    iget-object v1, p0, Lfreemarker/core/Range;->lho:Lfreemarker/core/Expression;

    .line 89
    invoke-virtual {v1, p1, p2, p3}, Lfreemarker/core/Expression;->deepCloneWithIdentifierReplaced(Ljava/lang/String;Lfreemarker/core/Expression;Lfreemarker/core/Expression$ReplacemenetState;)Lfreemarker/core/Expression;

    move-result-object v1

    iget-object v2, p0, Lfreemarker/core/Range;->rho:Lfreemarker/core/Expression;

    .line 90
    invoke-virtual {v2, p1, p2, p3}, Lfreemarker/core/Expression;->deepCloneWithIdentifierReplaced(Ljava/lang/String;Lfreemarker/core/Expression;Lfreemarker/core/Expression$ReplacemenetState;)Lfreemarker/core/Expression;

    move-result-object v2

    iget v3, p0, Lfreemarker/core/Range;->endType:I

    invoke-direct {v0, v1, v2, v3}, Lfreemarker/core/Range;-><init>(Lfreemarker/core/Expression;Lfreemarker/core/Expression;I)V

    return-object v0
.end method

.method evalToBoolean(Lfreemarker/core/Environment;)Z
    .locals 3
    .param p1, "env"    # Lfreemarker/core/Environment;
    .annotation system Ldalvik/annotation/Throws;
        value = {
            Lfreemarker/template/TemplateException;
        }
    .end annotation

    .line 63
    new-instance v0, Lfreemarker/core/NonBooleanException;

    new-instance v1, Lfreemarker/core/BoundedRangeModel;

    const/4 v2, 0x0

    invoke-direct {v1, v2, v2, v2, v2}, Lfreemarker/core/BoundedRangeModel;-><init>(IIZZ)V

    invoke-direct {v0, p0, v1, p1}, Lfreemarker/core/NonBooleanException;-><init>(Lfreemarker/core/Expression;Lfreemarker/template/TemplateModel;Lfreemarker/core/Environment;)V

    throw v0
.end method

.method public getCanonicalForm()Ljava/lang/String;
    .locals 3

    .line 67
    iget-object v0, p0, Lfreemarker/core/Range;->rho:Lfreemarker/core/Expression;

    if-eqz v0, :cond_0

    invoke-virtual {v0}, Lfreemarker/core/Expression;->getCanonicalForm()Ljava/lang/String;

    move-result-object v0

    goto :goto_0

    :cond_0
    const-string v0, ""

    .line 68
    .local v0, "rhs":Ljava/lang/String;
    :goto_0
    new-instance v1, Ljava/lang/StringBuffer;

    invoke-direct {v1}, Ljava/lang/StringBuffer;-><init>()V

    iget-object v2, p0, Lfreemarker/core/Range;->lho:Lfreemarker/core/Expression;

    invoke-virtual {v2}, Lfreemarker/core/Expression;->getCanonicalForm()Ljava/lang/String;

    move-result-object v2

    invoke-virtual {v1, v2}, Ljava/lang/StringBuffer;->append(Ljava/lang/String;)Ljava/lang/StringBuffer;

    move-result-object v1

    invoke-virtual {p0}, Lfreemarker/core/Range;->getNodeTypeSymbol()Ljava/lang/String;

    move-result-object v2

    invoke-virtual {v1, v2}, Ljava/lang/StringBuffer;->append(Ljava/lang/String;)Ljava/lang/StringBuffer;

    move-result-object v1

    invoke-virtual {v1, v0}, Ljava/lang/StringBuffer;->append(Ljava/lang/String;)Ljava/lang/StringBuffer;

    move-result-object v1

    invoke-virtual {v1}, Ljava/lang/StringBuffer;->toString()Ljava/lang/String;

    move-result-object v1

    return-object v1
.end method

.method getEndType()I
    .locals 1

    .line 44
    iget v0, p0, Lfreemarker/core/Range;->endType:I

    return v0
.end method

.method getNodeTypeSymbol()Ljava/lang/String;
    .locals 2

    .line 72
    iget v0, p0, Lfreemarker/core/Range;->endType:I

    const-string v1, ".."

    packed-switch v0, :pswitch_data_0

    .line 77
    new-instance v0, Lfreemarker/core/BugException;

    iget v1, p0, Lfreemarker/core/Range;->endType:I

    invoke-direct {v0, v1}, Lfreemarker/core/BugException;-><init>(I)V

    throw v0

    .line 76
    :pswitch_0
    const-string v0, "..*"

    return-object v0

    .line 75
    :pswitch_1
    return-object v1

    .line 73
    :pswitch_2
    const-string v0, "..<"

    return-object v0

    .line 74
    :pswitch_3
    return-object v1

    nop

    :pswitch_data_0
    .packed-switch 0x0
        :pswitch_3
        :pswitch_2
        :pswitch_1
        :pswitch_0
    .end packed-switch
.end method

.method getParameterCount()I
    .locals 1

    .line 95
    const/4 v0, 0x2

    return v0
.end method

.method getParameterRole(I)Lfreemarker/core/ParameterRole;
    .locals 1
    .param p1, "idx"    # I

    .line 107
    invoke-static {p1}, Lfreemarker/core/ParameterRole;->forBinaryOperatorOperand(I)Lfreemarker/core/ParameterRole;

    move-result-object v0

    return-object v0
.end method

.method getParameterValue(I)Ljava/lang/Object;
    .locals 1
    .param p1, "idx"    # I

    .line 99
    packed-switch p1, :pswitch_data_0

    .line 102
    new-instance v0, Ljava/lang/IndexOutOfBoundsException;

    invoke-direct {v0}, Ljava/lang/IndexOutOfBoundsException;-><init>()V

    throw v0

    .line 101
    :pswitch_0
    iget-object v0, p0, Lfreemarker/core/Range;->rho:Lfreemarker/core/Expression;

    return-object v0

    .line 100
    :pswitch_1
    iget-object v0, p0, Lfreemarker/core/Range;->lho:Lfreemarker/core/Expression;

    return-object v0

    nop

    :pswitch_data_0
    .packed-switch 0x0
        :pswitch_1
        :pswitch_0
    .end packed-switch
.end method

.method isLiteral()Z
    .locals 4

    .line 82
    iget-object v0, p0, Lfreemarker/core/Range;->rho:Lfreemarker/core/Expression;

    const/4 v1, 0x0

    const/4 v2, 0x1

    if-eqz v0, :cond_1

    invoke-virtual {v0}, Lfreemarker/core/Expression;->isLiteral()Z

    move-result v0

    if-eqz v0, :cond_0

    goto :goto_0

    :cond_0
    move v0, v1

    goto :goto_1

    :cond_1
    :goto_0
    move v0, v2

    .line 83
    .local v0, "rightIsLiteral":Z
    :goto_1
    iget-object v3, p0, Lfreemarker/core/Range;->constantValue:Lfreemarker/template/TemplateModel;

    if-nez v3, :cond_2

    iget-object v3, p0, Lfreemarker/core/Range;->lho:Lfreemarker/core/Expression;

    invoke-virtual {v3}, Lfreemarker/core/Expression;->isLiteral()Z

    move-result v3

    if-eqz v3, :cond_3

    if-eqz v0, :cond_3

    :cond_2
    move v1, v2

    :cond_3
    return v1
.end method
