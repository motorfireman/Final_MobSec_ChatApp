.class abstract Lfreemarker/core/BuiltInsForDates$AbstractISOBI;
.super Lfreemarker/core/BuiltInForDate;
.source "BuiltInsForDates.java"


# annotations
.annotation system Ldalvik/annotation/EnclosingClass;
    value = Lfreemarker/core/BuiltInsForDates;
.end annotation

.annotation system Ldalvik/annotation/InnerClass;
    accessFlags = 0x408
    name = "AbstractISOBI"
.end annotation


# instance fields
.field protected final accuracy:I

.field protected final showOffset:Ljava/lang/Boolean;


# direct methods
.method protected constructor <init>(Ljava/lang/Boolean;I)V
    .locals 0
    .param p1, "showOffset"    # Ljava/lang/Boolean;
    .param p2, "accuracy"    # I

    .line 180
    invoke-direct {p0}, Lfreemarker/core/BuiltInForDate;-><init>()V

    .line 181
    iput-object p1, p0, Lfreemarker/core/BuiltInsForDates$AbstractISOBI;->showOffset:Ljava/lang/Boolean;

    .line 182
    iput p2, p0, Lfreemarker/core/BuiltInsForDates$AbstractISOBI;->accuracy:I

    .line 183
    return-void
.end method


# virtual methods
.method protected checkDateTypeNotUnknown(I)V
    .locals 5
    .param p1, "dateType"    # I
    .annotation system Ldalvik/annotation/Throws;
        value = {
            Lfreemarker/template/TemplateException;
        }
    .end annotation

    .line 187
    if-eqz p1, :cond_0

    .line 193
    return-void

    .line 188
    :cond_0
    new-instance v0, Lfreemarker/core/_MiscTemplateException;

    new-instance v1, Lfreemarker/core/_ErrorDescriptionBuilder;

    const/4 v2, 0x3

    new-array v2, v2, [Ljava/lang/Object;

    const/4 v3, 0x0

    const-string v4, "The value of the following has unknown date type, but ?"

    aput-object v4, v2, v3

    const/4 v3, 0x1

    iget-object v4, p0, Lfreemarker/core/BuiltInsForDates$AbstractISOBI;->key:Ljava/lang/String;

    aput-object v4, v2, v3

    const/4 v3, 0x2

    const-string v4, " needs a value where it\'s known if it\'s a date (no time part), time, or date-time value:"

    aput-object v4, v2, v3

    invoke-direct {v1, v2}, Lfreemarker/core/_ErrorDescriptionBuilder;-><init>([Ljava/lang/Object;)V

    iget-object v2, p0, Lfreemarker/core/BuiltInsForDates$AbstractISOBI;->target:Lfreemarker/core/Expression;

    .line 191
    invoke-virtual {v1, v2}, Lfreemarker/core/_ErrorDescriptionBuilder;->blame(Lfreemarker/core/Expression;)Lfreemarker/core/_ErrorDescriptionBuilder;

    move-result-object v1

    const-string v2, "Use ?date, ?time, or ?datetime to tell FreeMarker the exact type."

    invoke-virtual {v1, v2}, Lfreemarker/core/_ErrorDescriptionBuilder;->tip(Ljava/lang/String;)Lfreemarker/core/_ErrorDescriptionBuilder;

    move-result-object v1

    invoke-direct {v0, v1}, Lfreemarker/core/_MiscTemplateException;-><init>(Lfreemarker/core/_ErrorDescriptionBuilder;)V

    throw v0
.end method

.method protected shouldShowOffset(Ljava/util/Date;ILfreemarker/core/Environment;)Z
    .locals 3
    .param p1, "date"    # Ljava/util/Date;
    .param p2, "dateType"    # I
    .param p3, "env"    # Lfreemarker/core/Environment;

    .line 196
    const/4 v0, 0x0

    const/4 v1, 0x2

    if-ne p2, v1, :cond_0

    .line 197
    return v0

    .line 198
    :cond_0
    iget-object v1, p0, Lfreemarker/core/BuiltInsForDates$AbstractISOBI;->showOffset:Ljava/lang/Boolean;

    if-eqz v1, :cond_1

    .line 199
    invoke-virtual {v1}, Ljava/lang/Boolean;->booleanValue()Z

    move-result v0

    return v0

    .line 202
    :cond_1
    instance-of v1, p1, Ljava/sql/Time;

    if-eqz v1, :cond_2

    .line 203
    invoke-static {p0}, Lfreemarker/template/_TemplateAPI;->getTemplateLanguageVersionAsInt(Lfreemarker/core/TemplateObject;)I

    move-result v1

    sget v2, Lfreemarker/template/_TemplateAPI;->VERSION_INT_2_3_21:I

    if-ge v1, v2, :cond_3

    :cond_2
    const/4 v0, 0x1

    :cond_3
    return v0
.end method
