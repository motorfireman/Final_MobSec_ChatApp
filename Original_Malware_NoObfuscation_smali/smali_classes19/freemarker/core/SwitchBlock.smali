.class final Lfreemarker/core/SwitchBlock;
.super Lfreemarker/core/TemplateElement;
.source "SwitchBlock.java"


# instance fields
.field private defaultCase:Lfreemarker/core/Case;

.field private final searched:Lfreemarker/core/Expression;


# direct methods
.method constructor <init>(Lfreemarker/core/Expression;)V
    .locals 1
    .param p1, "searched"    # Lfreemarker/core/Expression;

    .line 34
    invoke-direct {p0}, Lfreemarker/core/TemplateElement;-><init>()V

    .line 35
    iput-object p1, p0, Lfreemarker/core/SwitchBlock;->searched:Lfreemarker/core/Expression;

    .line 36
    const/4 v0, 0x4

    invoke-virtual {p0, v0}, Lfreemarker/core/SwitchBlock;->setRegulatedChildBufferCapacity(I)V

    .line 37
    return-void
.end method


# virtual methods
.method accept(Lfreemarker/core/Environment;)V
    .locals 12
    .param p1, "env"    # Lfreemarker/core/Environment;
    .annotation system Ldalvik/annotation/Throws;
        value = {
            Lfreemarker/template/TemplateException;,
            Ljava/io/IOException;
        }
    .end annotation

    .line 52
    const/4 v0, 0x0

    .line 53
    .local v0, "processedCase":Z
    invoke-virtual {p0}, Lfreemarker/core/SwitchBlock;->getRegulatedChildCount()I

    move-result v1

    .line 55
    .local v1, "ln":I
    const/4 v2, 0x0

    .local v2, "i":I
    :goto_0
    if-ge v2, v1, :cond_3

    .line 56
    :try_start_0
    invoke-virtual {p0, v2}, Lfreemarker/core/SwitchBlock;->getRegulatedChild(I)Lfreemarker/core/TemplateElement;

    move-result-object v3

    check-cast v3, Lfreemarker/core/Case;

    .line 57
    .local v3, "cas":Lfreemarker/core/Case;
    const/4 v4, 0x0

    .line 60
    .local v4, "processCase":Z
    if-eqz v0, :cond_0

    .line 61
    const/4 v4, 0x1

    goto :goto_1

    .line 62
    :cond_0
    iget-object v5, v3, Lfreemarker/core/Case;->condition:Lfreemarker/core/Expression;

    if-eqz v5, :cond_1

    .line 64
    iget-object v6, p0, Lfreemarker/core/SwitchBlock;->searched:Lfreemarker/core/Expression;

    const/4 v7, 0x1

    const-string v8, "case=="

    iget-object v9, v3, Lfreemarker/core/Case;->condition:Lfreemarker/core/Expression;

    iget-object v10, v3, Lfreemarker/core/Case;->condition:Lfreemarker/core/Expression;

    move-object v11, p1

    invoke-static/range {v6 .. v11}, Lfreemarker/core/EvalUtil;->compare(Lfreemarker/core/Expression;ILjava/lang/String;Lfreemarker/core/Expression;Lfreemarker/core/Expression;Lfreemarker/core/Environment;)Z

    move-result v5

    move v4, v5

    .line 68
    :cond_1
    :goto_1
    if-eqz v4, :cond_2

    .line 69
    invoke-virtual {p1, v3}, Lfreemarker/core/Environment;->visitByHiddingParent(Lfreemarker/core/TemplateElement;)V

    .line 70
    const/4 v0, 0x1

    .line 55
    .end local v3    # "cas":Lfreemarker/core/Case;
    .end local v4    # "processCase":Z
    :cond_2
    add-int/lit8 v2, v2, 0x1

    goto :goto_0

    .line 80
    .end local v2    # "i":I
    :catch_0
    move-exception v2

    goto :goto_2

    .line 76
    :cond_3
    if-nez v0, :cond_4

    iget-object v2, p0, Lfreemarker/core/SwitchBlock;->defaultCase:Lfreemarker/core/Case;

    if-eqz v2, :cond_4

    .line 77
    invoke-virtual {p1, v2}, Lfreemarker/core/Environment;->visitByHiddingParent(Lfreemarker/core/TemplateElement;)V
    :try_end_0
    .catch Lfreemarker/core/BreakInstruction$Break; {:try_start_0 .. :try_end_0} :catch_0

    .line 80
    :cond_4
    :goto_2
    nop

    .line 81
    return-void
.end method

.method addCase(Lfreemarker/core/Case;)V
    .locals 1
    .param p1, "cas"    # Lfreemarker/core/Case;

    .line 43
    iget-object v0, p1, Lfreemarker/core/Case;->condition:Lfreemarker/core/Expression;

    if-nez v0, :cond_0

    .line 44
    iput-object p1, p0, Lfreemarker/core/SwitchBlock;->defaultCase:Lfreemarker/core/Case;

    .line 46
    :cond_0
    invoke-virtual {p0, p1}, Lfreemarker/core/SwitchBlock;->addRegulatedChild(Lfreemarker/core/TemplateElement;)V

    .line 47
    return-void
.end method

.method protected dump(Z)Ljava/lang/String;
    .locals 6
    .param p1, "canonical"    # Z

    .line 84
    new-instance v0, Ljava/lang/StringBuffer;

    invoke-direct {v0}, Ljava/lang/StringBuffer;-><init>()V

    .line 85
    .local v0, "buf":Ljava/lang/StringBuffer;
    if-eqz p1, :cond_0

    const/16 v1, 0x3c

    invoke-virtual {v0, v1}, Ljava/lang/StringBuffer;->append(C)Ljava/lang/StringBuffer;

    .line 86
    :cond_0
    invoke-virtual {p0}, Lfreemarker/core/SwitchBlock;->getNodeTypeSymbol()Ljava/lang/String;

    move-result-object v1

    invoke-virtual {v0, v1}, Ljava/lang/StringBuffer;->append(Ljava/lang/String;)Ljava/lang/StringBuffer;

    .line 87
    const/16 v1, 0x20

    invoke-virtual {v0, v1}, Ljava/lang/StringBuffer;->append(C)Ljava/lang/StringBuffer;

    .line 88
    iget-object v1, p0, Lfreemarker/core/SwitchBlock;->searched:Lfreemarker/core/Expression;

    invoke-virtual {v1}, Lfreemarker/core/Expression;->getCanonicalForm()Ljava/lang/String;

    move-result-object v1

    invoke-virtual {v0, v1}, Ljava/lang/StringBuffer;->append(Ljava/lang/String;)Ljava/lang/StringBuffer;

    .line 89
    if-eqz p1, :cond_2

    .line 90
    const/16 v1, 0x3e

    invoke-virtual {v0, v1}, Ljava/lang/StringBuffer;->append(C)Ljava/lang/StringBuffer;

    .line 91
    invoke-virtual {p0}, Lfreemarker/core/SwitchBlock;->getRegulatedChildCount()I

    move-result v2

    .line 92
    .local v2, "ln":I
    const/4 v3, 0x0

    .local v3, "i":I
    :goto_0
    if-ge v3, v2, :cond_1

    .line 93
    invoke-virtual {p0, v3}, Lfreemarker/core/SwitchBlock;->getRegulatedChild(I)Lfreemarker/core/TemplateElement;

    move-result-object v4

    check-cast v4, Lfreemarker/core/Case;

    .line 94
    .local v4, "cas":Lfreemarker/core/Case;
    invoke-virtual {v4}, Lfreemarker/core/Case;->getCanonicalForm()Ljava/lang/String;

    move-result-object v5

    invoke-virtual {v0, v5}, Ljava/lang/StringBuffer;->append(Ljava/lang/String;)Ljava/lang/StringBuffer;

    .line 92
    .end local v4    # "cas":Lfreemarker/core/Case;
    add-int/lit8 v3, v3, 0x1

    goto :goto_0

    .line 96
    .end local v3    # "i":I
    :cond_1
    const-string v3, "</"

    invoke-virtual {v0, v3}, Ljava/lang/StringBuffer;->append(Ljava/lang/String;)Ljava/lang/StringBuffer;

    move-result-object v3

    invoke-virtual {p0}, Lfreemarker/core/SwitchBlock;->getNodeTypeSymbol()Ljava/lang/String;

    move-result-object v4

    invoke-virtual {v3, v4}, Ljava/lang/StringBuffer;->append(Ljava/lang/String;)Ljava/lang/StringBuffer;

    move-result-object v3

    invoke-virtual {v3, v1}, Ljava/lang/StringBuffer;->append(C)Ljava/lang/StringBuffer;

    .line 98
    .end local v2    # "ln":I
    :cond_2
    invoke-virtual {v0}, Ljava/lang/StringBuffer;->toString()Ljava/lang/String;

    move-result-object v1

    return-object v1
.end method

.method getNodeTypeSymbol()Ljava/lang/String;
    .locals 1

    .line 102
    const-string v0, "#switch"

    return-object v0
.end method

.method getParameterCount()I
    .locals 1

    .line 106
    const/4 v0, 0x1

    return v0
.end method

.method getParameterRole(I)Lfreemarker/core/ParameterRole;
    .locals 1
    .param p1, "idx"    # I

    .line 115
    if-nez p1, :cond_0

    .line 116
    sget-object v0, Lfreemarker/core/ParameterRole;->VALUE:Lfreemarker/core/ParameterRole;

    return-object v0

    .line 115
    :cond_0
    new-instance v0, Ljava/lang/IndexOutOfBoundsException;

    invoke-direct {v0}, Ljava/lang/IndexOutOfBoundsException;-><init>()V

    throw v0
.end method

.method getParameterValue(I)Ljava/lang/Object;
    .locals 1
    .param p1, "idx"    # I

    .line 110
    if-nez p1, :cond_0

    .line 111
    iget-object v0, p0, Lfreemarker/core/SwitchBlock;->searched:Lfreemarker/core/Expression;

    return-object v0

    .line 110
    :cond_0
    new-instance v0, Ljava/lang/IndexOutOfBoundsException;

    invoke-direct {v0}, Ljava/lang/IndexOutOfBoundsException;-><init>()V

    throw v0
.end method

.method isNestedBlockRepeater()Z
    .locals 1

    .line 120
    const/4 v0, 0x0

    return v0
.end method
