.class Lfreemarker/core/EscapeBlock;
.super Lfreemarker/core/TemplateElement;
.source "EscapeBlock.java"


# instance fields
.field private escapedExpr:Lfreemarker/core/Expression;

.field private final expr:Lfreemarker/core/Expression;

.field private final variable:Ljava/lang/String;


# direct methods
.method constructor <init>(Ljava/lang/String;Lfreemarker/core/Expression;Lfreemarker/core/Expression;)V
    .locals 0
    .param p1, "variable"    # Ljava/lang/String;
    .param p2, "expr"    # Lfreemarker/core/Expression;
    .param p3, "escapedExpr"    # Lfreemarker/core/Expression;

    .line 34
    invoke-direct {p0}, Lfreemarker/core/TemplateElement;-><init>()V

    .line 35
    iput-object p1, p0, Lfreemarker/core/EscapeBlock;->variable:Ljava/lang/String;

    .line 36
    iput-object p2, p0, Lfreemarker/core/EscapeBlock;->expr:Lfreemarker/core/Expression;

    .line 37
    iput-object p3, p0, Lfreemarker/core/EscapeBlock;->escapedExpr:Lfreemarker/core/Expression;

    .line 38
    return-void
.end method


# virtual methods
.method accept(Lfreemarker/core/Environment;)V
    .locals 1
    .param p1, "env"    # Lfreemarker/core/Environment;
    .annotation system Ldalvik/annotation/Throws;
        value = {
            Lfreemarker/template/TemplateException;,
            Ljava/io/IOException;
        }
    .end annotation

    .line 47
    invoke-virtual {p0}, Lfreemarker/core/EscapeBlock;->getNestedBlock()Lfreemarker/core/TemplateElement;

    move-result-object v0

    if-eqz v0, :cond_0

    .line 48
    invoke-virtual {p0}, Lfreemarker/core/EscapeBlock;->getNestedBlock()Lfreemarker/core/TemplateElement;

    move-result-object v0

    invoke-virtual {p1, v0}, Lfreemarker/core/Environment;->visit(Lfreemarker/core/TemplateElement;)V

    .line 50
    :cond_0
    return-void
.end method

.method doEscape(Lfreemarker/core/Expression;)Lfreemarker/core/Expression;
    .locals 3
    .param p1, "expression"    # Lfreemarker/core/Expression;

    .line 53
    iget-object v0, p0, Lfreemarker/core/EscapeBlock;->escapedExpr:Lfreemarker/core/Expression;

    iget-object v1, p0, Lfreemarker/core/EscapeBlock;->variable:Ljava/lang/String;

    new-instance v2, Lfreemarker/core/Expression$ReplacemenetState;

    invoke-direct {v2}, Lfreemarker/core/Expression$ReplacemenetState;-><init>()V

    invoke-virtual {v0, v1, p1, v2}, Lfreemarker/core/Expression;->deepCloneWithIdentifierReplaced(Ljava/lang/String;Lfreemarker/core/Expression;Lfreemarker/core/Expression$ReplacemenetState;)Lfreemarker/core/Expression;

    move-result-object v0

    return-object v0
.end method

.method protected dump(Z)Ljava/lang/String;
    .locals 4
    .param p1, "canonical"    # Z

    .line 57
    new-instance v0, Ljava/lang/StringBuffer;

    invoke-direct {v0}, Ljava/lang/StringBuffer;-><init>()V

    .line 58
    .local v0, "sb":Ljava/lang/StringBuffer;
    if-eqz p1, :cond_0

    const/16 v1, 0x3c

    invoke-virtual {v0, v1}, Ljava/lang/StringBuffer;->append(C)Ljava/lang/StringBuffer;

    .line 59
    :cond_0
    invoke-virtual {p0}, Lfreemarker/core/EscapeBlock;->getNodeTypeSymbol()Ljava/lang/String;

    move-result-object v1

    invoke-virtual {v0, v1}, Ljava/lang/StringBuffer;->append(Ljava/lang/String;)Ljava/lang/StringBuffer;

    move-result-object v1

    const/16 v2, 0x20

    .line 60
    invoke-virtual {v1, v2}, Ljava/lang/StringBuffer;->append(C)Ljava/lang/StringBuffer;

    move-result-object v1

    iget-object v2, p0, Lfreemarker/core/EscapeBlock;->variable:Ljava/lang/String;

    invoke-static {v2}, Lfreemarker/core/_CoreStringUtils;->toFTLTopLevelIdentifierReference(Ljava/lang/String;)Ljava/lang/String;

    move-result-object v2

    invoke-virtual {v1, v2}, Ljava/lang/StringBuffer;->append(Ljava/lang/String;)Ljava/lang/StringBuffer;

    move-result-object v1

    .line 61
    const-string v2, " as "

    invoke-virtual {v1, v2}, Ljava/lang/StringBuffer;->append(Ljava/lang/String;)Ljava/lang/StringBuffer;

    move-result-object v1

    iget-object v2, p0, Lfreemarker/core/EscapeBlock;->expr:Lfreemarker/core/Expression;

    invoke-virtual {v2}, Lfreemarker/core/Expression;->getCanonicalForm()Ljava/lang/String;

    move-result-object v2

    invoke-virtual {v1, v2}, Ljava/lang/StringBuffer;->append(Ljava/lang/String;)Ljava/lang/StringBuffer;

    .line 62
    if-eqz p1, :cond_2

    .line 63
    const/16 v1, 0x3e

    invoke-virtual {v0, v1}, Ljava/lang/StringBuffer;->append(C)Ljava/lang/StringBuffer;

    .line 64
    invoke-virtual {p0}, Lfreemarker/core/EscapeBlock;->getNestedBlock()Lfreemarker/core/TemplateElement;

    move-result-object v2

    if-eqz v2, :cond_1

    .line 65
    invoke-virtual {p0}, Lfreemarker/core/EscapeBlock;->getNestedBlock()Lfreemarker/core/TemplateElement;

    move-result-object v2

    invoke-virtual {v2}, Lfreemarker/core/TemplateElement;->getCanonicalForm()Ljava/lang/String;

    move-result-object v2

    invoke-virtual {v0, v2}, Ljava/lang/StringBuffer;->append(Ljava/lang/String;)Ljava/lang/StringBuffer;

    .line 67
    :cond_1
    const-string v2, "</"

    invoke-virtual {v0, v2}, Ljava/lang/StringBuffer;->append(Ljava/lang/String;)Ljava/lang/StringBuffer;

    move-result-object v2

    invoke-virtual {p0}, Lfreemarker/core/EscapeBlock;->getNodeTypeSymbol()Ljava/lang/String;

    move-result-object v3

    invoke-virtual {v2, v3}, Ljava/lang/StringBuffer;->append(Ljava/lang/String;)Ljava/lang/StringBuffer;

    move-result-object v2

    invoke-virtual {v2, v1}, Ljava/lang/StringBuffer;->append(C)Ljava/lang/StringBuffer;

    .line 69
    :cond_2
    invoke-virtual {v0}, Ljava/lang/StringBuffer;->toString()Ljava/lang/String;

    move-result-object v1

    return-object v1
.end method

.method getNodeTypeSymbol()Ljava/lang/String;
    .locals 1

    .line 73
    const-string v0, "#escape"

    return-object v0
.end method

.method getParameterCount()I
    .locals 1

    .line 81
    const/4 v0, 0x2

    return v0
.end method

.method getParameterRole(I)Lfreemarker/core/ParameterRole;
    .locals 1
    .param p1, "idx"    # I

    .line 93
    packed-switch p1, :pswitch_data_0

    .line 96
    new-instance v0, Ljava/lang/IndexOutOfBoundsException;

    invoke-direct {v0}, Ljava/lang/IndexOutOfBoundsException;-><init>()V

    throw v0

    .line 95
    :pswitch_0
    sget-object v0, Lfreemarker/core/ParameterRole;->EXPRESSION_TEMPLATE:Lfreemarker/core/ParameterRole;

    return-object v0

    .line 94
    :pswitch_1
    sget-object v0, Lfreemarker/core/ParameterRole;->PLACEHOLDER_VARIABLE:Lfreemarker/core/ParameterRole;

    return-object v0

    nop

    :pswitch_data_0
    .packed-switch 0x0
        :pswitch_1
        :pswitch_0
    .end packed-switch
.end method

.method getParameterValue(I)Ljava/lang/Object;
    .locals 1
    .param p1, "idx"    # I

    .line 85
    packed-switch p1, :pswitch_data_0

    .line 88
    new-instance v0, Ljava/lang/IndexOutOfBoundsException;

    invoke-direct {v0}, Ljava/lang/IndexOutOfBoundsException;-><init>()V

    throw v0

    .line 87
    :pswitch_0
    iget-object v0, p0, Lfreemarker/core/EscapeBlock;->expr:Lfreemarker/core/Expression;

    return-object v0

    .line 86
    :pswitch_1
    iget-object v0, p0, Lfreemarker/core/EscapeBlock;->variable:Ljava/lang/String;

    return-object v0

    nop

    :pswitch_data_0
    .packed-switch 0x0
        :pswitch_1
        :pswitch_0
    .end packed-switch
.end method

.method isNestedBlockRepeater()Z
    .locals 1

    .line 105
    const/4 v0, 0x0

    return v0
.end method

.method isOutputCacheable()Z
    .locals 1

    .line 101
    const/4 v0, 0x1

    return v0
.end method

.method isShownInStackTrace()Z
    .locals 1

    .line 77
    const/4 v0, 0x0

    return v0
.end method

.method setContent(Lfreemarker/core/TemplateElement;)V
    .locals 1
    .param p1, "nestedBlock"    # Lfreemarker/core/TemplateElement;

    .line 41
    invoke-virtual {p0, p1}, Lfreemarker/core/EscapeBlock;->setNestedBlock(Lfreemarker/core/TemplateElement;)V

    .line 43
    const/4 v0, 0x0

    iput-object v0, p0, Lfreemarker/core/EscapeBlock;->escapedExpr:Lfreemarker/core/Expression;

    .line 44
    return-void
.end method
