.class Lfreemarker/core/BuiltInsForMultipleTypes$apiBI;
.super Lfreemarker/core/BuiltIn;
.source "BuiltInsForMultipleTypes.java"


# annotations
.annotation system Ldalvik/annotation/EnclosingClass;
    value = Lfreemarker/core/BuiltInsForMultipleTypes;
.end annotation

.annotation system Ldalvik/annotation/InnerClass;
    accessFlags = 0x8
    name = "apiBI"
.end annotation


# direct methods
.method constructor <init>()V
    .locals 0

    .line 232
    invoke-direct {p0}, Lfreemarker/core/BuiltIn;-><init>()V

    return-void
.end method


# virtual methods
.method _eval(Lfreemarker/core/Environment;)Lfreemarker/template/TemplateModel;
    .locals 4
    .param p1, "env"    # Lfreemarker/core/Environment;
    .annotation system Ldalvik/annotation/Throws;
        value = {
            Lfreemarker/template/TemplateException;
        }
    .end annotation

    .line 234
    invoke-virtual {p1}, Lfreemarker/core/Environment;->isAPIBuiltinEnabled()Z

    move-result v0

    if-eqz v0, :cond_1

    .line 240
    iget-object v0, p0, Lfreemarker/core/BuiltInsForMultipleTypes$apiBI;->target:Lfreemarker/core/Expression;

    invoke-virtual {v0, p1}, Lfreemarker/core/Expression;->eval(Lfreemarker/core/Environment;)Lfreemarker/template/TemplateModel;

    move-result-object v0

    .line 241
    .local v0, "tm":Lfreemarker/template/TemplateModel;
    instance-of v1, v0, Lfreemarker/template/TemplateModelWithAPISupport;

    if-eqz v1, :cond_0

    .line 245
    move-object v1, v0

    check-cast v1, Lfreemarker/template/TemplateModelWithAPISupport;

    invoke-interface {v1}, Lfreemarker/template/TemplateModelWithAPISupport;->getAPI()Lfreemarker/template/TemplateModel;

    move-result-object v1

    return-object v1

    .line 242
    :cond_0
    iget-object v1, p0, Lfreemarker/core/BuiltInsForMultipleTypes$apiBI;->target:Lfreemarker/core/Expression;

    invoke-virtual {v1, v0, p1}, Lfreemarker/core/Expression;->assertNonNull(Lfreemarker/template/TemplateModel;Lfreemarker/core/Environment;)V

    .line 243
    new-instance v1, Lfreemarker/core/APINotSupportedTemplateException;

    iget-object v2, p0, Lfreemarker/core/BuiltInsForMultipleTypes$apiBI;->target:Lfreemarker/core/Expression;

    invoke-direct {v1, p1, v2, v0}, Lfreemarker/core/APINotSupportedTemplateException;-><init>(Lfreemarker/core/Environment;Lfreemarker/core/Expression;Lfreemarker/template/TemplateModel;)V

    throw v1

    .line 235
    .end local v0    # "tm":Lfreemarker/template/TemplateModel;
    :cond_1
    new-instance v0, Lfreemarker/core/_MiscTemplateException;

    const/4 v1, 0x3

    new-array v1, v1, [Ljava/lang/Object;

    const/4 v2, 0x0

    const-string v3, "Can\'t use ?api, because the \""

    aput-object v3, v1, v2

    const/4 v2, 0x1

    const-string v3, "api_builtin_enabled"

    aput-object v3, v1, v2

    const/4 v2, 0x2

    const-string v3, "\" configuration setting is false. Think twice before you set it to true though. Especially, it shouldn\'t abussed for modifying Map-s and Collection-s."

    aput-object v3, v1, v2

    invoke-direct {v0, p0, v1}, Lfreemarker/core/_MiscTemplateException;-><init>(Lfreemarker/core/Expression;[Ljava/lang/Object;)V

    throw v0
.end method
