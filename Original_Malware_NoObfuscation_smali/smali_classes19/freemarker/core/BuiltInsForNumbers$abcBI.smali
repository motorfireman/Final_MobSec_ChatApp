.class abstract Lfreemarker/core/BuiltInsForNumbers$abcBI;
.super Lfreemarker/core/BuiltInForNumber;
.source "BuiltInsForNumbers.java"


# annotations
.annotation system Ldalvik/annotation/EnclosingClass;
    value = Lfreemarker/core/BuiltInsForNumbers;
.end annotation

.annotation system Ldalvik/annotation/InnerClass;
    accessFlags = 0x40a
    name = "abcBI"
.end annotation


# direct methods
.method private constructor <init>()V
    .locals 0

    .line 40
    invoke-direct {p0}, Lfreemarker/core/BuiltInForNumber;-><init>()V

    return-void
.end method

.method synthetic constructor <init>(Lfreemarker/core/BuiltInsForNumbers$1;)V
    .locals 0
    .param p1, "x0"    # Lfreemarker/core/BuiltInsForNumbers$1;

    .line 40
    invoke-direct {p0}, Lfreemarker/core/BuiltInsForNumbers$abcBI;-><init>()V

    return-void
.end method


# virtual methods
.method calculateResult(Ljava/lang/Number;Lfreemarker/template/TemplateModel;)Lfreemarker/template/TemplateModel;
    .locals 10
    .param p1, "num"    # Ljava/lang/Number;
    .param p2, "model"    # Lfreemarker/template/TemplateModel;
    .annotation system Ldalvik/annotation/Throws;
        value = {
            Lfreemarker/template/TemplateModelException;
        }
    .end annotation

    .line 45
    const/4 v0, 0x3

    const/4 v1, 0x2

    const/4 v2, 0x1

    const/4 v3, 0x0

    const/4 v4, 0x4

    :try_start_0
    invoke-static {p1}, Lfreemarker/template/utility/NumberUtil;->toIntExact(Ljava/lang/Number;)I

    move-result v5
    :try_end_0
    .catch Ljava/lang/ArithmeticException; {:try_start_0 .. :try_end_0} :catch_0

    .line 51
    .local v5, "n":I
    nop

    .line 52
    if-lez v5, :cond_0

    .line 57
    new-instance v0, Lfreemarker/template/SimpleScalar;

    invoke-virtual {p0, v5}, Lfreemarker/core/BuiltInsForNumbers$abcBI;->toABC(I)Ljava/lang/String;

    move-result-object v1

    invoke-direct {v0, v1}, Lfreemarker/template/SimpleScalar;-><init>(Ljava/lang/String;)V

    return-object v0

    .line 53
    :cond_0
    new-instance v6, Lfreemarker/core/_TemplateModelException;

    iget-object v7, p0, Lfreemarker/core/BuiltInsForNumbers$abcBI;->target:Lfreemarker/core/Expression;

    const/4 v8, 0x5

    new-array v8, v8, [Ljava/lang/Object;

    const-string v9, "The left side operand of to ?"

    aput-object v9, v8, v3

    iget-object v3, p0, Lfreemarker/core/BuiltInsForNumbers$abcBI;->key:Ljava/lang/String;

    aput-object v3, v8, v2

    const-string v2, " must be at least 1, but was "

    aput-object v2, v8, v1

    new-instance v1, Ljava/lang/Integer;

    invoke-direct {v1, v5}, Ljava/lang/Integer;-><init>(I)V

    aput-object v1, v8, v0

    const-string v0, "."

    aput-object v0, v8, v4

    invoke-direct {v6, v7, v8}, Lfreemarker/core/_TemplateModelException;-><init>(Lfreemarker/core/Expression;[Ljava/lang/Object;)V

    throw v6

    .line 46
    .end local v5    # "n":I
    :catch_0
    move-exception v5

    .line 47
    .local v5, "e":Ljava/lang/ArithmeticException;
    new-instance v6, Lfreemarker/core/_TemplateModelException;

    iget-object v7, p0, Lfreemarker/core/BuiltInsForNumbers$abcBI;->target:Lfreemarker/core/Expression;

    new-array v4, v4, [Ljava/lang/Object;

    const-string v8, "The left side operand value isn\'t compatible with ?"

    aput-object v8, v4, v3

    iget-object v3, p0, Lfreemarker/core/BuiltInsForNumbers$abcBI;->key:Ljava/lang/String;

    aput-object v3, v4, v2

    const-string v2, ": "

    aput-object v2, v4, v1

    .line 49
    invoke-virtual {v5}, Ljava/lang/ArithmeticException;->getMessage()Ljava/lang/String;

    move-result-object v1

    aput-object v1, v4, v0

    invoke-direct {v6, v7, v4}, Lfreemarker/core/_TemplateModelException;-><init>(Lfreemarker/core/Expression;[Ljava/lang/Object;)V

    throw v6
.end method

.method protected abstract toABC(I)Ljava/lang/String;
.end method
