.class public abstract Lfreemarker/core/TemplateElement;
.super Lfreemarker/core/TemplateObject;
.source "TemplateElement.java"

# interfaces
.implements Ljavax/swing/tree/TreeNode;


# static fields
.field private static final INITIAL_REGULATED_CHILD_BUFFER_CAPACITY:I = 0x6


# instance fields
.field private index:I

.field private nestedBlock:Lfreemarker/core/TemplateElement;

.field private parent:Lfreemarker/core/TemplateElement;

.field private regulatedChildBuffer:[Lfreemarker/core/TemplateElement;

.field private regulatedChildCount:I


# direct methods
.method public constructor <init>()V
    .locals 0

    .line 39
    invoke-direct {p0}, Lfreemarker/core/TemplateObject;-><init>()V

    return-void
.end method

.method private getFirstChild()Lfreemarker/core/TemplateElement;
    .locals 2

    .line 459
    iget-object v0, p0, Lfreemarker/core/TemplateElement;->nestedBlock:Lfreemarker/core/TemplateElement;

    if-eqz v0, :cond_0

    .line 460
    return-object v0

    .line 462
    :cond_0
    iget v0, p0, Lfreemarker/core/TemplateElement;->regulatedChildCount:I

    if-nez v0, :cond_1

    .line 463
    const/4 v0, 0x0

    return-object v0

    .line 465
    :cond_1
    iget-object v0, p0, Lfreemarker/core/TemplateElement;->regulatedChildBuffer:[Lfreemarker/core/TemplateElement;

    const/4 v1, 0x0

    aget-object v0, v0, v1

    return-object v0
.end method

.method private getFirstLeaf()Lfreemarker/core/TemplateElement;
    .locals 2

    .line 480
    move-object v0, p0

    .line 481
    .local v0, "te":Lfreemarker/core/TemplateElement;
    :goto_0
    invoke-virtual {v0}, Lfreemarker/core/TemplateElement;->isLeaf()Z

    move-result v1

    if-nez v1, :cond_0

    instance-of v1, v0, Lfreemarker/core/Macro;

    if-nez v1, :cond_0

    instance-of v1, v0, Lfreemarker/core/BlockAssignment;

    if-nez v1, :cond_0

    .line 483
    invoke-direct {v0}, Lfreemarker/core/TemplateElement;->getFirstChild()Lfreemarker/core/TemplateElement;

    move-result-object v0

    goto :goto_0

    .line 485
    :cond_0
    return-object v0
.end method

.method private getLastChild()Lfreemarker/core/TemplateElement;
    .locals 3

    .line 469
    iget-object v0, p0, Lfreemarker/core/TemplateElement;->nestedBlock:Lfreemarker/core/TemplateElement;

    if-eqz v0, :cond_0

    .line 470
    return-object v0

    .line 472
    :cond_0
    iget v0, p0, Lfreemarker/core/TemplateElement;->regulatedChildCount:I

    .line 473
    .local v0, "regulatedChildCount":I
    if-nez v0, :cond_1

    .line 474
    const/4 v1, 0x0

    return-object v1

    .line 476
    :cond_1
    iget-object v1, p0, Lfreemarker/core/TemplateElement;->regulatedChildBuffer:[Lfreemarker/core/TemplateElement;

    add-int/lit8 v2, v0, -0x1

    aget-object v1, v1, v2

    return-object v1
.end method

.method private getLastLeaf()Lfreemarker/core/TemplateElement;
    .locals 2

    .line 489
    move-object v0, p0

    .line 490
    .local v0, "te":Lfreemarker/core/TemplateElement;
    :goto_0
    invoke-virtual {v0}, Lfreemarker/core/TemplateElement;->isLeaf()Z

    move-result v1

    if-nez v1, :cond_0

    instance-of v1, v0, Lfreemarker/core/Macro;

    if-nez v1, :cond_0

    instance-of v1, v0, Lfreemarker/core/BlockAssignment;

    if-nez v1, :cond_0

    .line 492
    invoke-direct {v0}, Lfreemarker/core/TemplateElement;->getLastChild()Lfreemarker/core/TemplateElement;

    move-result-object v0

    goto :goto_0

    .line 494
    :cond_0
    return-object v0
.end method


# virtual methods
.method abstract accept(Lfreemarker/core/Environment;)V
    .annotation system Ldalvik/annotation/Throws;
        value = {
            Lfreemarker/template/TemplateException;,
            Ljava/io/IOException;
        }
    .end annotation
.end method

.method final addRegulatedChild(ILfreemarker/core/TemplateElement;)V
    .locals 4
    .param p1, "index"    # I
    .param p2, "nestedElement"    # Lfreemarker/core/TemplateElement;

    .line 296
    iget v0, p0, Lfreemarker/core/TemplateElement;->regulatedChildCount:I

    .line 298
    .local v0, "lRegulatedChildCount":I
    iget-object v1, p0, Lfreemarker/core/TemplateElement;->regulatedChildBuffer:[Lfreemarker/core/TemplateElement;

    .line 299
    .local v1, "lRegulatedChildBuffer":[Lfreemarker/core/TemplateElement;
    if-nez v1, :cond_0

    .line 300
    const/4 v2, 0x6

    new-array v1, v2, [Lfreemarker/core/TemplateElement;

    .line 301
    iput-object v1, p0, Lfreemarker/core/TemplateElement;->regulatedChildBuffer:[Lfreemarker/core/TemplateElement;

    goto :goto_1

    .line 302
    :cond_0
    array-length v2, v1

    if-ne v0, v2, :cond_2

    .line 303
    if-eqz v0, :cond_1

    mul-int/lit8 v2, v0, 0x2

    goto :goto_0

    :cond_1
    const/4 v2, 0x1

    :goto_0
    invoke-virtual {p0, v2}, Lfreemarker/core/TemplateElement;->setRegulatedChildBufferCapacity(I)V

    .line 304
    iget-object v1, p0, Lfreemarker/core/TemplateElement;->regulatedChildBuffer:[Lfreemarker/core/TemplateElement;

    .line 308
    :cond_2
    :goto_1
    move v2, v0

    .local v2, "i":I
    :goto_2
    if-le v2, p1, :cond_3

    .line 309
    add-int/lit8 v3, v2, -0x1

    aget-object v3, v1, v3

    .line 310
    .local v3, "movedElement":Lfreemarker/core/TemplateElement;
    iput v2, v3, Lfreemarker/core/TemplateElement;->index:I

    .line 311
    aput-object v3, v1, v2

    .line 308
    .end local v3    # "movedElement":Lfreemarker/core/TemplateElement;
    add-int/lit8 v2, v2, -0x1

    goto :goto_2

    .line 313
    .end local v2    # "i":I
    :cond_3
    iput p1, p2, Lfreemarker/core/TemplateElement;->index:I

    .line 314
    iput-object p0, p2, Lfreemarker/core/TemplateElement;->parent:Lfreemarker/core/TemplateElement;

    .line 315
    aput-object p2, v1, p1

    .line 316
    add-int/lit8 v2, v0, 0x1

    iput v2, p0, Lfreemarker/core/TemplateElement;->regulatedChildCount:I

    .line 317
    return-void
.end method

.method final addRegulatedChild(Lfreemarker/core/TemplateElement;)V
    .locals 1
    .param p1, "nestedElement"    # Lfreemarker/core/TemplateElement;

    .line 292
    iget v0, p0, Lfreemarker/core/TemplateElement;->regulatedChildCount:I

    invoke-virtual {p0, v0, p1}, Lfreemarker/core/TemplateElement;->addRegulatedChild(ILfreemarker/core/TemplateElement;)V

    .line 293
    return-void
.end method

.method public children()Ljava/util/Enumeration;
    .locals 3

    .line 213
    iget-object v0, p0, Lfreemarker/core/TemplateElement;->nestedBlock:Lfreemarker/core/TemplateElement;

    instance-of v1, v0, Lfreemarker/core/MixedContent;

    if-eqz v1, :cond_0

    .line 214
    invoke-virtual {v0}, Lfreemarker/core/TemplateElement;->children()Ljava/util/Enumeration;

    move-result-object v0

    return-object v0

    .line 216
    :cond_0
    if-eqz v0, :cond_1

    .line 217
    invoke-static {v0}, Ljava/util/Collections;->singletonList(Ljava/lang/Object;)Ljava/util/List;

    move-result-object v0

    invoke-static {v0}, Ljava/util/Collections;->enumeration(Ljava/util/Collection;)Ljava/util/Enumeration;

    move-result-object v0

    return-object v0

    .line 219
    :cond_1
    iget-object v0, p0, Lfreemarker/core/TemplateElement;->regulatedChildBuffer:[Lfreemarker/core/TemplateElement;

    if-eqz v0, :cond_2

    .line 220
    new-instance v0, Lfreemarker/core/_ArrayEnumeration;

    iget-object v1, p0, Lfreemarker/core/TemplateElement;->regulatedChildBuffer:[Lfreemarker/core/TemplateElement;

    iget v2, p0, Lfreemarker/core/TemplateElement;->regulatedChildCount:I

    invoke-direct {v0, v1, v2}, Lfreemarker/core/_ArrayEnumeration;-><init>([Ljava/lang/Object;I)V

    return-object v0

    .line 222
    :cond_2
    sget-object v0, Ljava/util/Collections;->EMPTY_LIST:Ljava/util/List;

    invoke-static {v0}, Ljava/util/Collections;->enumeration(Ljava/util/Collection;)Ljava/util/Enumeration;

    move-result-object v0

    return-object v0
.end method

.method protected abstract dump(Z)Ljava/lang/String;
.end method

.method public getAllowsChildren()Z
    .locals 1

    .line 174
    invoke-virtual {p0}, Lfreemarker/core/TemplateElement;->isLeaf()Z

    move-result v0

    xor-int/lit8 v0, v0, 0x1

    return v0
.end method

.method public final getCanonicalForm()Ljava/lang/String;
    .locals 1

    .line 98
    const/4 v0, 0x1

    invoke-virtual {p0, v0}, Lfreemarker/core/TemplateElement;->dump(Z)Ljava/lang/String;

    move-result-object v0

    return-object v0
.end method

.method public getChildAt(I)Ljavax/swing/tree/TreeNode;
    .locals 4
    .param p1, "index"    # I

    .line 230
    iget-object v0, p0, Lfreemarker/core/TemplateElement;->nestedBlock:Lfreemarker/core/TemplateElement;

    instance-of v1, v0, Lfreemarker/core/MixedContent;

    if-eqz v1, :cond_0

    .line 231
    invoke-virtual {v0, p1}, Lfreemarker/core/TemplateElement;->getChildAt(I)Ljavax/swing/tree/TreeNode;

    move-result-object v0

    return-object v0

    .line 233
    :cond_0
    if-eqz v0, :cond_2

    .line 234
    if-nez p1, :cond_1

    .line 235
    return-object v0

    .line 237
    :cond_1
    new-instance v0, Ljava/lang/ArrayIndexOutOfBoundsException;

    const-string v1, "invalid index"

    invoke-direct {v0, v1}, Ljava/lang/ArrayIndexOutOfBoundsException;-><init>(Ljava/lang/String;)V

    throw v0

    .line 239
    :cond_2
    iget v0, p0, Lfreemarker/core/TemplateElement;->regulatedChildCount:I

    if-eqz v0, :cond_3

    .line 241
    :try_start_0
    iget-object v0, p0, Lfreemarker/core/TemplateElement;->regulatedChildBuffer:[Lfreemarker/core/TemplateElement;

    aget-object v0, v0, p1
    :try_end_0
    .catch Ljava/lang/ArrayIndexOutOfBoundsException; {:try_start_0 .. :try_end_0} :catch_0

    return-object v0

    .line 242
    :catch_0
    move-exception v0

    .line 244
    .local v0, "e":Ljava/lang/ArrayIndexOutOfBoundsException;
    new-instance v1, Ljava/lang/IndexOutOfBoundsException;

    new-instance v2, Ljava/lang/StringBuffer;

    invoke-direct {v2}, Ljava/lang/StringBuffer;-><init>()V

    const-string v3, "Index: "

    invoke-virtual {v2, v3}, Ljava/lang/StringBuffer;->append(Ljava/lang/String;)Ljava/lang/StringBuffer;

    move-result-object v2

    invoke-virtual {v2, p1}, Ljava/lang/StringBuffer;->append(I)Ljava/lang/StringBuffer;

    move-result-object v2

    const-string v3, ", Size: "

    invoke-virtual {v2, v3}, Ljava/lang/StringBuffer;->append(Ljava/lang/String;)Ljava/lang/StringBuffer;

    move-result-object v2

    iget v3, p0, Lfreemarker/core/TemplateElement;->regulatedChildCount:I

    invoke-virtual {v2, v3}, Ljava/lang/StringBuffer;->append(I)Ljava/lang/StringBuffer;

    move-result-object v2

    invoke-virtual {v2}, Ljava/lang/StringBuffer;->toString()Ljava/lang/String;

    move-result-object v2

    invoke-direct {v1, v2}, Ljava/lang/IndexOutOfBoundsException;-><init>(Ljava/lang/String;)V

    throw v1

    .line 247
    .end local v0    # "e":Ljava/lang/ArrayIndexOutOfBoundsException;
    :cond_3
    new-instance v0, Ljava/lang/ArrayIndexOutOfBoundsException;

    const-string v1, "Template element has no children"

    invoke-direct {v0, v1}, Ljava/lang/ArrayIndexOutOfBoundsException;-><init>(Ljava/lang/String;)V

    throw v0
.end method

.method public getChildCount()I
    .locals 2

    .line 199
    iget-object v0, p0, Lfreemarker/core/TemplateElement;->nestedBlock:Lfreemarker/core/TemplateElement;

    instance-of v1, v0, Lfreemarker/core/MixedContent;

    if-eqz v1, :cond_0

    .line 200
    invoke-virtual {v0}, Lfreemarker/core/TemplateElement;->getChildCount()I

    move-result v0

    return v0

    .line 202
    :cond_0
    if-eqz v0, :cond_1

    .line 203
    const/4 v0, 0x1

    return v0

    .line 205
    :cond_1
    iget v0, p0, Lfreemarker/core/TemplateElement;->regulatedChildCount:I

    return v0
.end method

.method public getChildNodes()Lfreemarker/template/TemplateSequenceModel;
    .locals 3

    .line 144
    iget-object v0, p0, Lfreemarker/core/TemplateElement;->regulatedChildBuffer:[Lfreemarker/core/TemplateElement;

    if-eqz v0, :cond_1

    .line 145
    new-instance v0, Lfreemarker/template/SimpleSequence;

    iget v1, p0, Lfreemarker/core/TemplateElement;->regulatedChildCount:I

    invoke-direct {v0, v1}, Lfreemarker/template/SimpleSequence;-><init>(I)V

    .line 146
    .local v0, "seq":Lfreemarker/template/SimpleSequence;
    const/4 v1, 0x0

    .local v1, "i":I
    :goto_0
    iget v2, p0, Lfreemarker/core/TemplateElement;->regulatedChildCount:I

    if-ge v1, v2, :cond_0

    .line 147
    iget-object v2, p0, Lfreemarker/core/TemplateElement;->regulatedChildBuffer:[Lfreemarker/core/TemplateElement;

    aget-object v2, v2, v1

    invoke-virtual {v0, v2}, Lfreemarker/template/SimpleSequence;->add(Ljava/lang/Object;)V

    .line 146
    add-int/lit8 v1, v1, 0x1

    goto :goto_0

    .line 149
    .end local v1    # "i":I
    :cond_0
    return-object v0

    .line 151
    .end local v0    # "seq":Lfreemarker/template/SimpleSequence;
    :cond_1
    new-instance v0, Lfreemarker/template/SimpleSequence;

    const/4 v1, 0x1

    invoke-direct {v0, v1}, Lfreemarker/template/SimpleSequence;-><init>(I)V

    .line 152
    .local v0, "result":Lfreemarker/template/SimpleSequence;
    iget-object v1, p0, Lfreemarker/core/TemplateElement;->nestedBlock:Lfreemarker/core/TemplateElement;

    if-eqz v1, :cond_2

    .line 153
    invoke-virtual {v0, v1}, Lfreemarker/template/SimpleSequence;->add(Ljava/lang/Object;)V

    .line 155
    :cond_2
    return-object v0
.end method

.method public final getDescription()Ljava/lang/String;
    .locals 1

    .line 91
    const/4 v0, 0x0

    invoke-virtual {p0, v0}, Lfreemarker/core/TemplateElement;->dump(Z)Ljava/lang/String;

    move-result-object v0

    return-object v0
.end method

.method final getIndex()I
    .locals 1

    .line 328
    iget v0, p0, Lfreemarker/core/TemplateElement;->index:I

    return v0
.end method

.method public getIndex(Ljavax/swing/tree/TreeNode;)I
    .locals 2
    .param p1, "node"    # Ljavax/swing/tree/TreeNode;

    .line 181
    iget-object v0, p0, Lfreemarker/core/TemplateElement;->nestedBlock:Lfreemarker/core/TemplateElement;

    instance-of v1, v0, Lfreemarker/core/MixedContent;

    if-eqz v1, :cond_0

    .line 182
    invoke-virtual {v0, p1}, Lfreemarker/core/TemplateElement;->getIndex(Ljavax/swing/tree/TreeNode;)I

    move-result v0

    return v0

    .line 184
    :cond_0
    if-eqz v0, :cond_1

    .line 185
    if-ne p1, v0, :cond_3

    .line 186
    const/4 v0, 0x0

    return v0

    .line 189
    :cond_1
    const/4 v0, 0x0

    .local v0, "i":I
    :goto_0
    iget v1, p0, Lfreemarker/core/TemplateElement;->regulatedChildCount:I

    if-ge v0, v1, :cond_3

    .line 190
    iget-object v1, p0, Lfreemarker/core/TemplateElement;->regulatedChildBuffer:[Lfreemarker/core/TemplateElement;

    aget-object v1, v1, v0

    invoke-virtual {v1, p1}, Ljava/lang/Object;->equals(Ljava/lang/Object;)Z

    move-result v1

    if-eqz v1, :cond_2

    .line 191
    return v0

    .line 189
    :cond_2
    add-int/lit8 v0, v0, 0x1

    goto :goto_0

    .line 195
    .end local v0    # "i":I
    :cond_3
    const/4 v0, -0x1

    return v0
.end method

.method final getNestedBlock()Lfreemarker/core/TemplateElement;
    .locals 1

    .line 339
    iget-object v0, p0, Lfreemarker/core/TemplateElement;->nestedBlock:Lfreemarker/core/TemplateElement;

    return-object v0
.end method

.method public getNodeName()Ljava/lang/String;
    .locals 3

    .line 159
    invoke-virtual {p0}, Ljava/lang/Object;->getClass()Ljava/lang/Class;

    move-result-object v0

    invoke-virtual {v0}, Ljava/lang/Class;->getName()Ljava/lang/String;

    move-result-object v0

    .line 160
    .local v0, "classname":Ljava/lang/String;
    const/16 v1, 0x2e

    invoke-virtual {v0, v1}, Ljava/lang/String;->lastIndexOf(I)I

    move-result v1

    add-int/lit8 v1, v1, 0x1

    .line 161
    .local v1, "shortNameOffset":I
    invoke-virtual {v0, v1}, Ljava/lang/String;->substring(I)Ljava/lang/String;

    move-result-object v2

    return-object v2
.end method

.method public getNodeNamespace()Ljava/lang/String;
    .locals 1

    .line 136
    const/4 v0, 0x0

    return-object v0
.end method

.method public getNodeType()Ljava/lang/String;
    .locals 1

    .line 140
    const-string v0, "element"

    return-object v0
.end method

.method public getParent()Ljavax/swing/tree/TreeNode;
    .locals 1

    .line 279
    iget-object v0, p0, Lfreemarker/core/TemplateElement;->parent:Lfreemarker/core/TemplateElement;

    return-object v0
.end method

.method final getParentElement()Lfreemarker/core/TemplateElement;
    .locals 1

    .line 335
    iget-object v0, p0, Lfreemarker/core/TemplateElement;->parent:Lfreemarker/core/TemplateElement;

    return-object v0
.end method

.method public getParentNode()Lfreemarker/template/TemplateNodeModel;
    .locals 1

    .line 132
    const/4 v0, 0x0

    return-object v0
.end method

.method final getRegulatedChild(I)Lfreemarker/core/TemplateElement;
    .locals 1
    .param p1, "index"    # I

    .line 324
    iget-object v0, p0, Lfreemarker/core/TemplateElement;->regulatedChildBuffer:[Lfreemarker/core/TemplateElement;

    aget-object v0, v0, p1

    return-object v0
.end method

.method final getRegulatedChildCount()I
    .locals 1

    .line 320
    iget v0, p0, Lfreemarker/core/TemplateElement;->regulatedChildCount:I

    return v0
.end method

.method heedsOpeningWhitespace()Z
    .locals 1

    .line 511
    const/4 v0, 0x0

    return v0
.end method

.method heedsTrailingWhitespace()Z
    .locals 1

    .line 520
    const/4 v0, 0x0

    return v0
.end method

.method isIgnorable()Z
    .locals 1

    .line 416
    const/4 v0, 0x0

    return v0
.end method

.method public isLeaf()Z
    .locals 1

    .line 167
    iget-object v0, p0, Lfreemarker/core/TemplateElement;->nestedBlock:Lfreemarker/core/TemplateElement;

    if-nez v0, :cond_0

    iget v0, p0, Lfreemarker/core/TemplateElement;->regulatedChildCount:I

    if-nez v0, :cond_0

    const/4 v0, 0x1

    goto :goto_0

    :cond_0
    const/4 v0, 0x0

    :goto_0
    return v0
.end method

.method abstract isNestedBlockRepeater()Z
.end method

.method isOutputCacheable()Z
    .locals 1

    .line 502
    const/4 v0, 0x0

    return v0
.end method

.method isShownInStackTrace()Z
    .locals 1

    .line 108
    const/4 v0, 0x1

    return v0
.end method

.method nextSibling()Lfreemarker/core/TemplateElement;
    .locals 5

    .line 452
    iget-object v0, p0, Lfreemarker/core/TemplateElement;->parent:Lfreemarker/core/TemplateElement;

    const/4 v1, 0x0

    if-nez v0, :cond_0

    .line 453
    return-object v1

    .line 455
    :cond_0
    iget v2, p0, Lfreemarker/core/TemplateElement;->index:I

    add-int/lit8 v3, v2, 0x1

    iget v4, v0, Lfreemarker/core/TemplateElement;->regulatedChildCount:I

    if-ge v3, v4, :cond_1

    iget-object v0, v0, Lfreemarker/core/TemplateElement;->regulatedChildBuffer:[Lfreemarker/core/TemplateElement;

    add-int/lit8 v2, v2, 0x1

    aget-object v1, v0, v2

    :cond_1
    return-object v1
.end method

.method nextTerminalNode()Lfreemarker/core/TemplateElement;
    .locals 2

    .line 434
    invoke-virtual {p0}, Lfreemarker/core/TemplateElement;->nextSibling()Lfreemarker/core/TemplateElement;

    move-result-object v0

    .line 435
    .local v0, "next":Lfreemarker/core/TemplateElement;
    if-eqz v0, :cond_0

    .line 436
    invoke-direct {v0}, Lfreemarker/core/TemplateElement;->getFirstLeaf()Lfreemarker/core/TemplateElement;

    move-result-object v1

    return-object v1

    .line 438
    :cond_0
    iget-object v1, p0, Lfreemarker/core/TemplateElement;->parent:Lfreemarker/core/TemplateElement;

    if-eqz v1, :cond_1

    .line 439
    invoke-virtual {v1}, Lfreemarker/core/TemplateElement;->nextTerminalNode()Lfreemarker/core/TemplateElement;

    move-result-object v1

    return-object v1

    .line 441
    :cond_1
    const/4 v1, 0x0

    return-object v1
.end method

.method postParseCleanup(Z)Lfreemarker/core/TemplateElement;
    .locals 7
    .param p1, "stripWhitespace"    # Z
    .annotation system Ldalvik/annotation/Throws;
        value = {
            Lfreemarker/core/ParseException;
        }
    .end annotation

    .line 371
    iget v0, p0, Lfreemarker/core/TemplateElement;->regulatedChildCount:I

    .line 372
    .local v0, "regulatedChildCount":I
    const/4 v1, 0x0

    if-eqz v0, :cond_5

    .line 373
    const/4 v2, 0x0

    .local v2, "i":I
    :goto_0
    if-ge v2, v0, :cond_0

    .line 374
    iget-object v3, p0, Lfreemarker/core/TemplateElement;->regulatedChildBuffer:[Lfreemarker/core/TemplateElement;

    aget-object v3, v3, v2

    .line 375
    .local v3, "te":Lfreemarker/core/TemplateElement;
    invoke-virtual {v3, p1}, Lfreemarker/core/TemplateElement;->postParseCleanup(Z)Lfreemarker/core/TemplateElement;

    move-result-object v3

    .line 376
    iget-object v4, p0, Lfreemarker/core/TemplateElement;->regulatedChildBuffer:[Lfreemarker/core/TemplateElement;

    aput-object v3, v4, v2

    .line 377
    iput-object p0, v3, Lfreemarker/core/TemplateElement;->parent:Lfreemarker/core/TemplateElement;

    .line 378
    iput v2, v3, Lfreemarker/core/TemplateElement;->index:I

    .line 373
    .end local v3    # "te":Lfreemarker/core/TemplateElement;
    add-int/lit8 v2, v2, 0x1

    goto :goto_0

    .line 380
    .end local v2    # "i":I
    :cond_0
    if-eqz p1, :cond_3

    .line 381
    const/4 v2, 0x0

    .restart local v2    # "i":I
    :goto_1
    if-ge v2, v0, :cond_3

    .line 382
    iget-object v3, p0, Lfreemarker/core/TemplateElement;->regulatedChildBuffer:[Lfreemarker/core/TemplateElement;

    aget-object v3, v3, v2

    .line 383
    .restart local v3    # "te":Lfreemarker/core/TemplateElement;
    invoke-virtual {v3}, Lfreemarker/core/TemplateElement;->isIgnorable()Z

    move-result v4

    if-eqz v4, :cond_2

    .line 384
    add-int/lit8 v0, v0, -0x1

    .line 385
    move v4, v2

    .local v4, "j":I
    :goto_2
    if-ge v4, v0, :cond_1

    .line 386
    iget-object v5, p0, Lfreemarker/core/TemplateElement;->regulatedChildBuffer:[Lfreemarker/core/TemplateElement;

    add-int/lit8 v6, v4, 0x1

    aget-object v6, v5, v6

    .line 387
    .local v6, "te2":Lfreemarker/core/TemplateElement;
    aput-object v6, v5, v4

    .line 388
    iput v4, v6, Lfreemarker/core/TemplateElement;->index:I

    .line 385
    .end local v6    # "te2":Lfreemarker/core/TemplateElement;
    add-int/lit8 v4, v4, 0x1

    goto :goto_2

    .line 390
    .end local v4    # "j":I
    :cond_1
    iget-object v4, p0, Lfreemarker/core/TemplateElement;->regulatedChildBuffer:[Lfreemarker/core/TemplateElement;

    aput-object v1, v4, v0

    .line 391
    iput v0, p0, Lfreemarker/core/TemplateElement;->regulatedChildCount:I

    .line 392
    add-int/lit8 v2, v2, -0x1

    .line 381
    .end local v3    # "te":Lfreemarker/core/TemplateElement;
    :cond_2
    add-int/lit8 v2, v2, 0x1

    goto :goto_1

    .line 396
    .end local v2    # "i":I
    :cond_3
    iget-object v1, p0, Lfreemarker/core/TemplateElement;->regulatedChildBuffer:[Lfreemarker/core/TemplateElement;

    array-length v2, v1

    if-ge v0, v2, :cond_7

    array-length v1, v1

    mul-int/lit8 v1, v1, 0x3

    div-int/lit8 v1, v1, 0x4

    if-gt v0, v1, :cond_7

    .line 398
    new-array v1, v0, [Lfreemarker/core/TemplateElement;

    .line 399
    .local v1, "trimmedregulatedChildBuffer":[Lfreemarker/core/TemplateElement;
    const/4 v2, 0x0

    .restart local v2    # "i":I
    :goto_3
    if-ge v2, v0, :cond_4

    .line 400
    iget-object v3, p0, Lfreemarker/core/TemplateElement;->regulatedChildBuffer:[Lfreemarker/core/TemplateElement;

    aget-object v3, v3, v2

    aput-object v3, v1, v2

    .line 399
    add-int/lit8 v2, v2, 0x1

    goto :goto_3

    .line 402
    .end local v2    # "i":I
    :cond_4
    iput-object v1, p0, Lfreemarker/core/TemplateElement;->regulatedChildBuffer:[Lfreemarker/core/TemplateElement;

    .line 403
    .end local v1    # "trimmedregulatedChildBuffer":[Lfreemarker/core/TemplateElement;
    goto :goto_4

    .line 404
    :cond_5
    iget-object v2, p0, Lfreemarker/core/TemplateElement;->nestedBlock:Lfreemarker/core/TemplateElement;

    if-eqz v2, :cond_7

    .line 405
    invoke-virtual {v2, p1}, Lfreemarker/core/TemplateElement;->postParseCleanup(Z)Lfreemarker/core/TemplateElement;

    move-result-object v2

    iput-object v2, p0, Lfreemarker/core/TemplateElement;->nestedBlock:Lfreemarker/core/TemplateElement;

    .line 406
    invoke-virtual {v2}, Lfreemarker/core/TemplateElement;->isIgnorable()Z

    move-result v2

    if-eqz v2, :cond_6

    .line 407
    iput-object v1, p0, Lfreemarker/core/TemplateElement;->nestedBlock:Lfreemarker/core/TemplateElement;

    goto :goto_4

    .line 409
    :cond_6
    iget-object v1, p0, Lfreemarker/core/TemplateElement;->nestedBlock:Lfreemarker/core/TemplateElement;

    iput-object p0, v1, Lfreemarker/core/TemplateElement;->parent:Lfreemarker/core/TemplateElement;

    .line 412
    :cond_7
    :goto_4
    return-object p0
.end method

.method prevTerminalNode()Lfreemarker/core/TemplateElement;
    .locals 2

    .line 423
    invoke-virtual {p0}, Lfreemarker/core/TemplateElement;->previousSibling()Lfreemarker/core/TemplateElement;

    move-result-object v0

    .line 424
    .local v0, "prev":Lfreemarker/core/TemplateElement;
    if-eqz v0, :cond_0

    .line 425
    invoke-direct {v0}, Lfreemarker/core/TemplateElement;->getLastLeaf()Lfreemarker/core/TemplateElement;

    move-result-object v1

    return-object v1

    .line 427
    :cond_0
    iget-object v1, p0, Lfreemarker/core/TemplateElement;->parent:Lfreemarker/core/TemplateElement;

    if-eqz v1, :cond_1

    .line 428
    invoke-virtual {v1}, Lfreemarker/core/TemplateElement;->prevTerminalNode()Lfreemarker/core/TemplateElement;

    move-result-object v1

    return-object v1

    .line 430
    :cond_1
    const/4 v1, 0x0

    return-object v1
.end method

.method previousSibling()Lfreemarker/core/TemplateElement;
    .locals 3

    .line 445
    iget-object v0, p0, Lfreemarker/core/TemplateElement;->parent:Lfreemarker/core/TemplateElement;

    const/4 v1, 0x0

    if-nez v0, :cond_0

    .line 446
    return-object v1

    .line 448
    :cond_0
    iget v2, p0, Lfreemarker/core/TemplateElement;->index:I

    if-lez v2, :cond_1

    iget-object v0, v0, Lfreemarker/core/TemplateElement;->regulatedChildBuffer:[Lfreemarker/core/TemplateElement;

    add-int/lit8 v2, v2, -0x1

    aget-object v1, v0, v2

    :cond_1
    return-object v1
.end method

.method public setChildAt(ILfreemarker/core/TemplateElement;)V
    .locals 2
    .param p1, "index"    # I
    .param p2, "element"    # Lfreemarker/core/TemplateElement;

    .line 251
    iget-object v0, p0, Lfreemarker/core/TemplateElement;->nestedBlock:Lfreemarker/core/TemplateElement;

    instance-of v1, v0, Lfreemarker/core/MixedContent;

    if-eqz v1, :cond_0

    .line 252
    invoke-virtual {v0, p1, p2}, Lfreemarker/core/TemplateElement;->setChildAt(ILfreemarker/core/TemplateElement;)V

    goto :goto_0

    .line 254
    :cond_0
    if-eqz v0, :cond_2

    .line 255
    if-nez p1, :cond_1

    .line 256
    iput-object p2, p0, Lfreemarker/core/TemplateElement;->nestedBlock:Lfreemarker/core/TemplateElement;

    .line 257
    const/4 v0, 0x0

    iput v0, p2, Lfreemarker/core/TemplateElement;->index:I

    .line 258
    iput-object p0, p2, Lfreemarker/core/TemplateElement;->parent:Lfreemarker/core/TemplateElement;

    goto :goto_0

    .line 261
    :cond_1
    new-instance v0, Ljava/lang/IndexOutOfBoundsException;

    const-string v1, "invalid index"

    invoke-direct {v0, v1}, Ljava/lang/IndexOutOfBoundsException;-><init>(Ljava/lang/String;)V

    throw v0

    .line 264
    :cond_2
    iget-object v0, p0, Lfreemarker/core/TemplateElement;->regulatedChildBuffer:[Lfreemarker/core/TemplateElement;

    if-eqz v0, :cond_3

    .line 265
    aput-object p2, v0, p1

    .line 266
    iput p1, p2, Lfreemarker/core/TemplateElement;->index:I

    .line 267
    iput-object p0, p2, Lfreemarker/core/TemplateElement;->parent:Lfreemarker/core/TemplateElement;

    .line 272
    :goto_0
    return-void

    .line 270
    :cond_3
    new-instance v0, Ljava/lang/IndexOutOfBoundsException;

    const-string v1, "element has no children"

    invoke-direct {v0, v1}, Ljava/lang/IndexOutOfBoundsException;-><init>(Ljava/lang/String;)V

    throw v0
.end method

.method final setFieldsForRootElement()V
    .locals 1

    .line 355
    const/4 v0, 0x0

    iput v0, p0, Lfreemarker/core/TemplateElement;->index:I

    .line 356
    const/4 v0, 0x0

    iput-object v0, p0, Lfreemarker/core/TemplateElement;->parent:Lfreemarker/core/TemplateElement;

    .line 357
    return-void
.end method

.method final setNestedBlock(Lfreemarker/core/TemplateElement;)V
    .locals 1
    .param p1, "nestedBlock"    # Lfreemarker/core/TemplateElement;

    .line 343
    if-eqz p1, :cond_0

    .line 344
    iput-object p0, p1, Lfreemarker/core/TemplateElement;->parent:Lfreemarker/core/TemplateElement;

    .line 345
    const/4 v0, 0x0

    iput v0, p1, Lfreemarker/core/TemplateElement;->index:I

    .line 347
    :cond_0
    iput-object p1, p0, Lfreemarker/core/TemplateElement;->nestedBlock:Lfreemarker/core/TemplateElement;

    .line 348
    return-void
.end method

.method final setRegulatedChildBufferCapacity(I)V
    .locals 4
    .param p1, "capacity"    # I

    .line 283
    iget v0, p0, Lfreemarker/core/TemplateElement;->regulatedChildCount:I

    .line 284
    .local v0, "ln":I
    new-array v1, p1, [Lfreemarker/core/TemplateElement;

    .line 285
    .local v1, "newRegulatedChildBuffer":[Lfreemarker/core/TemplateElement;
    const/4 v2, 0x0

    .local v2, "i":I
    :goto_0
    if-ge v2, v0, :cond_0

    .line 286
    iget-object v3, p0, Lfreemarker/core/TemplateElement;->regulatedChildBuffer:[Lfreemarker/core/TemplateElement;

    aget-object v3, v3, v2

    aput-object v3, v1, v2

    .line 285
    add-int/lit8 v2, v2, 0x1

    goto :goto_0

    .line 288
    .end local v2    # "i":I
    :cond_0
    iput-object v1, p0, Lfreemarker/core/TemplateElement;->regulatedChildBuffer:[Lfreemarker/core/TemplateElement;

    .line 289
    return-void
.end method
