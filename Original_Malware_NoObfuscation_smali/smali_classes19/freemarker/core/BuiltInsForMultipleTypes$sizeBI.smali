.class Lfreemarker/core/BuiltInsForMultipleTypes$sizeBI;
.super Lfreemarker/core/BuiltIn;
.source "BuiltInsForMultipleTypes.java"


# annotations
.annotation system Ldalvik/annotation/EnclosingClass;
    value = Lfreemarker/core/BuiltInsForMultipleTypes;
.end annotation

.annotation system Ldalvik/annotation/InnerClass;
    accessFlags = 0x8
    name = "sizeBI"
.end annotation


# direct methods
.method constructor <init>()V
    .locals 0

    .line 430
    invoke-direct {p0}, Lfreemarker/core/BuiltIn;-><init>()V

    return-void
.end method


# virtual methods
.method _eval(Lfreemarker/core/Environment;)Lfreemarker/template/TemplateModel;
    .locals 8
    .param p1, "env"    # Lfreemarker/core/Environment;
    .annotation system Ldalvik/annotation/Throws;
        value = {
            Lfreemarker/template/TemplateException;
        }
    .end annotation

    .line 432
    iget-object v0, p0, Lfreemarker/core/BuiltInsForMultipleTypes$sizeBI;->target:Lfreemarker/core/Expression;

    invoke-virtual {v0, p1}, Lfreemarker/core/Expression;->eval(Lfreemarker/core/Environment;)Lfreemarker/template/TemplateModel;

    move-result-object v0

    .line 435
    .local v0, "model":Lfreemarker/template/TemplateModel;
    instance-of v1, v0, Lfreemarker/template/TemplateSequenceModel;

    if-eqz v1, :cond_0

    .line 436
    move-object v1, v0

    check-cast v1, Lfreemarker/template/TemplateSequenceModel;

    invoke-interface {v1}, Lfreemarker/template/TemplateSequenceModel;->size()I

    move-result v1

    .local v1, "size":I
    goto :goto_0

    .line 437
    .end local v1    # "size":I
    :cond_0
    instance-of v1, v0, Lfreemarker/template/TemplateCollectionModelEx;

    if-eqz v1, :cond_1

    .line 438
    move-object v1, v0

    check-cast v1, Lfreemarker/template/TemplateCollectionModelEx;

    invoke-interface {v1}, Lfreemarker/template/TemplateCollectionModelEx;->size()I

    move-result v1

    .restart local v1    # "size":I
    goto :goto_0

    .line 439
    .end local v1    # "size":I
    :cond_1
    instance-of v1, v0, Lfreemarker/template/TemplateHashModelEx;

    if-eqz v1, :cond_2

    .line 440
    move-object v1, v0

    check-cast v1, Lfreemarker/template/TemplateHashModelEx;

    invoke-interface {v1}, Lfreemarker/template/TemplateHashModelEx;->size()I

    move-result v1

    .line 452
    .restart local v1    # "size":I
    :goto_0
    new-instance v2, Lfreemarker/template/SimpleNumber;

    invoke-direct {v2, v1}, Lfreemarker/template/SimpleNumber;-><init>(I)V

    return-object v2

    .line 442
    .end local v1    # "size":I
    :cond_2
    new-instance v7, Lfreemarker/core/UnexpectedTypeException;

    iget-object v2, p0, Lfreemarker/core/BuiltInsForMultipleTypes$sizeBI;->target:Lfreemarker/core/Expression;

    const/4 v1, 0x3

    new-array v5, v1, [Ljava/lang/Class;

    const/4 v1, 0x0

    sget-object v3, Lfreemarker/core/BuiltInsForMultipleTypes;->class$freemarker$template$TemplateHashModelEx:Ljava/lang/Class;

    if-nez v3, :cond_3

    .line 446
    const-string v3, "freemarker.template.TemplateHashModelEx"

    invoke-static {v3}, Lfreemarker/core/BuiltInsForMultipleTypes;->class$(Ljava/lang/String;)Ljava/lang/Class;

    move-result-object v3

    sput-object v3, Lfreemarker/core/BuiltInsForMultipleTypes;->class$freemarker$template$TemplateHashModelEx:Ljava/lang/Class;

    goto :goto_1

    :cond_3
    sget-object v3, Lfreemarker/core/BuiltInsForMultipleTypes;->class$freemarker$template$TemplateHashModelEx:Ljava/lang/Class;

    :goto_1
    aput-object v3, v5, v1

    const/4 v1, 0x1

    sget-object v3, Lfreemarker/core/BuiltInsForMultipleTypes;->class$freemarker$template$TemplateSequenceModel:Ljava/lang/Class;

    if-nez v3, :cond_4

    .line 447
    const-string v3, "freemarker.template.TemplateSequenceModel"

    invoke-static {v3}, Lfreemarker/core/BuiltInsForMultipleTypes;->class$(Ljava/lang/String;)Ljava/lang/Class;

    move-result-object v3

    sput-object v3, Lfreemarker/core/BuiltInsForMultipleTypes;->class$freemarker$template$TemplateSequenceModel:Ljava/lang/Class;

    goto :goto_2

    :cond_4
    sget-object v3, Lfreemarker/core/BuiltInsForMultipleTypes;->class$freemarker$template$TemplateSequenceModel:Ljava/lang/Class;

    :goto_2
    aput-object v3, v5, v1

    const/4 v1, 0x2

    sget-object v3, Lfreemarker/core/BuiltInsForMultipleTypes;->class$freemarker$template$TemplateCollectionModelEx:Ljava/lang/Class;

    if-nez v3, :cond_5

    .line 448
    const-string v3, "freemarker.template.TemplateCollectionModelEx"

    invoke-static {v3}, Lfreemarker/core/BuiltInsForMultipleTypes;->class$(Ljava/lang/String;)Ljava/lang/Class;

    move-result-object v3

    sput-object v3, Lfreemarker/core/BuiltInsForMultipleTypes;->class$freemarker$template$TemplateCollectionModelEx:Ljava/lang/Class;

    goto :goto_3

    :cond_5
    sget-object v3, Lfreemarker/core/BuiltInsForMultipleTypes;->class$freemarker$template$TemplateCollectionModelEx:Ljava/lang/Class;

    :goto_3
    aput-object v3, v5, v1

    const-string v4, "extended-hash or sequence or extended collection"

    move-object v1, v7

    move-object v3, v0

    move-object v6, p1

    invoke-direct/range {v1 .. v6}, Lfreemarker/core/UnexpectedTypeException;-><init>(Lfreemarker/core/Expression;Lfreemarker/template/TemplateModel;Ljava/lang/String;[Ljava/lang/Class;Lfreemarker/core/Environment;)V

    throw v7
.end method
