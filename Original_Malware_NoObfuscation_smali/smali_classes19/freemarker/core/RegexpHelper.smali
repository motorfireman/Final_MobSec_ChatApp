.class final Lfreemarker/core/RegexpHelper;
.super Ljava/lang/Object;
.source "RegexpHelper.java"


# annotations
.annotation system Ldalvik/annotation/MemberClasses;
    value = {
        Lfreemarker/core/RegexpHelper$PatternCacheKey;
    }
.end annotation


# static fields
.field private static final LOG:Lfreemarker/log/Logger;

.field private static final MAX_FLAG_WARNINGS_LOGGED:I = 0x19

.field static final RE_FLAG_CASE_INSENSITIVE:J

.field static final RE_FLAG_COMMENTS:J

.field static final RE_FLAG_DOTALL:J

.field static final RE_FLAG_FIRST_ONLY:J = 0x200000000L

.field static final RE_FLAG_MULTILINE:J

.field static final RE_FLAG_REGEXP:J = 0x100000000L

.field private static flagWarningsCnt:I

.field private static final flagWarningsCntSync:Ljava/lang/Object;

.field private static volatile flagWarningsEnabled:Z

.field private static final patternCache:Lfreemarker/cache/MruCacheStorage;


# direct methods
.method static constructor <clinit>()V
    .locals 3

    .line 32
    const-string v0, "freemarker.runtime"

    invoke-static {v0}, Lfreemarker/log/Logger;->getLogger(Ljava/lang/String;)Lfreemarker/log/Logger;

    move-result-object v0

    sput-object v0, Lfreemarker/core/RegexpHelper;->LOG:Lfreemarker/log/Logger;

    .line 34
    invoke-virtual {v0}, Lfreemarker/log/Logger;->isWarnEnabled()Z

    move-result v0

    sput-boolean v0, Lfreemarker/core/RegexpHelper;->flagWarningsEnabled:Z

    .line 36
    new-instance v0, Ljava/lang/Object;

    invoke-direct {v0}, Ljava/lang/Object;-><init>()V

    sput-object v0, Lfreemarker/core/RegexpHelper;->flagWarningsCntSync:Ljava/lang/Object;

    .line 39
    new-instance v0, Lfreemarker/cache/MruCacheStorage;

    const/16 v1, 0x32

    const/16 v2, 0x96

    invoke-direct {v0, v1, v2}, Lfreemarker/cache/MruCacheStorage;-><init>(II)V

    sput-object v0, Lfreemarker/core/RegexpHelper;->patternCache:Lfreemarker/cache/MruCacheStorage;

    .line 46
    const/4 v0, 0x2

    invoke-static {v0}, Lfreemarker/core/RegexpHelper;->intFlagToLong(I)J

    move-result-wide v0

    sput-wide v0, Lfreemarker/core/RegexpHelper;->RE_FLAG_CASE_INSENSITIVE:J

    .line 48
    const/16 v0, 0x8

    invoke-static {v0}, Lfreemarker/core/RegexpHelper;->intFlagToLong(I)J

    move-result-wide v0

    sput-wide v0, Lfreemarker/core/RegexpHelper;->RE_FLAG_MULTILINE:J

    .line 50
    const/4 v0, 0x4

    invoke-static {v0}, Lfreemarker/core/RegexpHelper;->intFlagToLong(I)J

    move-result-wide v0

    sput-wide v0, Lfreemarker/core/RegexpHelper;->RE_FLAG_COMMENTS:J

    .line 52
    const/16 v0, 0x20

    invoke-static {v0}, Lfreemarker/core/RegexpHelper;->intFlagToLong(I)J

    move-result-wide v0

    sput-wide v0, Lfreemarker/core/RegexpHelper;->RE_FLAG_DOTALL:J

    return-void
.end method

.method private constructor <init>()V
    .locals 0

    .line 60
    invoke-direct {p0}, Ljava/lang/Object;-><init>()V

    return-void
.end method

.method static checkNonRegexpFlags(Ljava/lang/String;J)V
    .locals 1
    .param p0, "biName"    # Ljava/lang/String;
    .param p1, "flags"    # J
    .annotation system Ldalvik/annotation/Throws;
        value = {
            Lfreemarker/core/_TemplateModelException;
        }
    .end annotation

    .line 173
    const/4 v0, 0x0

    invoke-static {p0, p1, p2, v0}, Lfreemarker/core/RegexpHelper;->checkOnlyHasNonRegexpFlags(Ljava/lang/String;JZ)V

    .line 174
    return-void
.end method

.method static checkOnlyHasNonRegexpFlags(Ljava/lang/String;JZ)V
    .locals 4
    .param p0, "biName"    # Ljava/lang/String;
    .param p1, "flags"    # J
    .param p3, "strict"    # Z
    .annotation system Ldalvik/annotation/Throws;
        value = {
            Lfreemarker/core/_TemplateModelException;
        }
    .end annotation

    .line 178
    if-nez p3, :cond_0

    sget-boolean v0, Lfreemarker/core/RegexpHelper;->flagWarningsEnabled:Z

    if-nez v0, :cond_0

    return-void

    .line 181
    :cond_0
    sget-wide v0, Lfreemarker/core/RegexpHelper;->RE_FLAG_MULTILINE:J

    and-long/2addr v0, p1

    const-wide/16 v2, 0x0

    cmp-long v0, v0, v2

    if-eqz v0, :cond_1

    .line 182
    const-string v0, "m"

    .local v0, "flag":Ljava/lang/String;
    goto :goto_0

    .line 183
    .end local v0    # "flag":Ljava/lang/String;
    :cond_1
    sget-wide v0, Lfreemarker/core/RegexpHelper;->RE_FLAG_DOTALL:J

    and-long/2addr v0, p1

    cmp-long v0, v0, v2

    if-eqz v0, :cond_2

    .line 184
    const-string v0, "s"

    .restart local v0    # "flag":Ljava/lang/String;
    goto :goto_0

    .line 185
    .end local v0    # "flag":Ljava/lang/String;
    :cond_2
    sget-wide v0, Lfreemarker/core/RegexpHelper;->RE_FLAG_COMMENTS:J

    and-long/2addr v0, p1

    cmp-long v0, v0, v2

    if-eqz v0, :cond_4

    .line 186
    const-string v0, "c"

    .line 191
    .restart local v0    # "flag":Ljava/lang/String;
    :goto_0
    const/4 v1, 0x5

    new-array v1, v1, [Ljava/lang/Object;

    const/4 v2, 0x0

    const-string v3, "?"

    aput-object v3, v1, v2

    const/4 v2, 0x1

    aput-object p0, v1, v2

    const/4 v2, 0x2

    const-string v3, " doesn\'t support the \""

    aput-object v3, v1, v2

    const/4 v2, 0x3

    aput-object v0, v1, v2

    const/4 v2, 0x4

    const-string v3, "\" flag without the \"r\" flag."

    aput-object v3, v1, v2

    .line 193
    .local v1, "msg":[Ljava/lang/Object;
    if-nez p3, :cond_3

    .line 197
    new-instance v2, Lfreemarker/core/_ErrorDescriptionBuilder;

    invoke-direct {v2, v1}, Lfreemarker/core/_ErrorDescriptionBuilder;-><init>([Ljava/lang/Object;)V

    invoke-virtual {v2}, Lfreemarker/core/_ErrorDescriptionBuilder;->toString()Ljava/lang/String;

    move-result-object v2

    invoke-static {v2}, Lfreemarker/core/RegexpHelper;->logFlagWarning(Ljava/lang/String;)V

    .line 199
    return-void

    .line 194
    :cond_3
    new-instance v2, Lfreemarker/core/_TemplateModelException;

    invoke-direct {v2, v1}, Lfreemarker/core/_TemplateModelException;-><init>([Ljava/lang/Object;)V

    throw v2

    .line 188
    .end local v0    # "flag":Ljava/lang/String;
    .end local v1    # "msg":[Ljava/lang/Object;
    :cond_4
    return-void
.end method

.method static getPattern(Ljava/lang/String;I)Ljava/util/regex/Pattern;
    .locals 7
    .param p0, "patternString"    # Ljava/lang/String;
    .param p1, "flags"    # I
    .annotation system Ldalvik/annotation/Throws;
        value = {
            Lfreemarker/template/TemplateModelException;
        }
    .end annotation

    .line 64
    new-instance v0, Lfreemarker/core/RegexpHelper$PatternCacheKey;

    invoke-direct {v0, p0, p1}, Lfreemarker/core/RegexpHelper$PatternCacheKey;-><init>(Ljava/lang/String;I)V

    .line 68
    .local v0, "patternKey":Lfreemarker/core/RegexpHelper$PatternCacheKey;
    sget-object v1, Lfreemarker/core/RegexpHelper;->patternCache:Lfreemarker/cache/MruCacheStorage;

    monitor-enter v1

    .line 69
    const/4 v2, 0x0

    :try_start_0
    invoke-virtual {v1, v0}, Lfreemarker/cache/MruCacheStorage;->get(Ljava/lang/Object;)Ljava/lang/Object;

    move-result-object v3

    check-cast v3, Ljava/util/regex/Pattern;
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_1

    move-object v2, v3

    .line 70
    .local v2, "result":Ljava/util/regex/Pattern;
    :try_start_1
    monitor-exit v1
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_2

    .line 71
    if-eqz v2, :cond_0

    .line 72
    return-object v2

    .line 76
    :cond_0
    :try_start_2
    invoke-static {p0, p1}, Ljava/util/regex/Pattern;->compile(Ljava/lang/String;I)Ljava/util/regex/Pattern;

    move-result-object v3
    :try_end_2
    .catch Ljava/util/regex/PatternSyntaxException; {:try_start_2 .. :try_end_2} :catch_0

    .line 80
    .end local v2    # "result":Ljava/util/regex/Pattern;
    .local v3, "result":Ljava/util/regex/Pattern;
    nop

    .line 81
    monitor-enter v1

    .line 82
    :try_start_3
    invoke-virtual {v1, v0, v3}, Lfreemarker/cache/MruCacheStorage;->put(Ljava/lang/Object;Ljava/lang/Object;)V

    .line 83
    monitor-exit v1

    .line 84
    return-object v3

    .line 83
    :catchall_0
    move-exception v2

    monitor-exit v1
    :try_end_3
    .catchall {:try_start_3 .. :try_end_3} :catchall_0

    throw v2

    .line 77
    .end local v3    # "result":Ljava/util/regex/Pattern;
    .restart local v2    # "result":Ljava/util/regex/Pattern;
    :catch_0
    move-exception v1

    .line 78
    .local v1, "e":Ljava/util/regex/PatternSyntaxException;
    new-instance v3, Lfreemarker/core/_TemplateModelException;

    const/4 v4, 0x2

    new-array v4, v4, [Ljava/lang/Object;

    const/4 v5, 0x0

    const-string v6, "Malformed regular expression: "

    aput-object v6, v4, v5

    const/4 v5, 0x1

    new-instance v6, Lfreemarker/core/_DelayedGetMessage;

    invoke-direct {v6, v1}, Lfreemarker/core/_DelayedGetMessage;-><init>(Ljava/lang/Throwable;)V

    aput-object v6, v4, v5

    invoke-direct {v3, v1, v4}, Lfreemarker/core/_TemplateModelException;-><init>(Ljava/lang/Throwable;[Ljava/lang/Object;)V

    throw v3

    .line 70
    .end local v1    # "e":Ljava/util/regex/PatternSyntaxException;
    .end local v2    # "result":Ljava/util/regex/Pattern;
    :catchall_1
    move-exception v3

    .restart local v2    # "result":Ljava/util/regex/Pattern;
    :goto_0
    :try_start_4
    monitor-exit v1
    :try_end_4
    .catchall {:try_start_4 .. :try_end_4} :catchall_2

    throw v3

    :catchall_2
    move-exception v3

    goto :goto_0
.end method

.method private static intFlagToLong(I)J
    .locals 4
    .param p0, "flag"    # I

    .line 42
    int-to-long v0, p0

    const-wide/32 v2, 0xffff

    and-long/2addr v0, v2

    return-wide v0
.end method

.method static logFlagWarning(Ljava/lang/String;)V
    .locals 5
    .param p0, "message"    # Ljava/lang/String;

    .line 153
    sget-boolean v0, Lfreemarker/core/RegexpHelper;->flagWarningsEnabled:Z

    if-nez v0, :cond_0

    return-void

    .line 156
    :cond_0
    sget-object v0, Lfreemarker/core/RegexpHelper;->flagWarningsCntSync:Ljava/lang/Object;

    monitor-enter v0

    .line 157
    const/4 v1, 0x0

    :try_start_0
    sget v2, Lfreemarker/core/RegexpHelper;->flagWarningsCnt:I
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    move v3, v2

    .line 158
    .local v3, "cnt":I
    const/16 v4, 0x19

    if-ge v3, v4, :cond_2

    .line 159
    add-int/lit8 v2, v2, 0x1

    :try_start_1
    sput v2, Lfreemarker/core/RegexpHelper;->flagWarningsCnt:I

    .line 164
    monitor-exit v0
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_1

    .line 165
    new-instance v0, Ljava/lang/StringBuffer;

    invoke-direct {v0}, Ljava/lang/StringBuffer;-><init>()V

    invoke-virtual {v0, p0}, Ljava/lang/StringBuffer;->append(Ljava/lang/String;)Ljava/lang/StringBuffer;

    move-result-object v0

    const-string v1, " This will be an error in some later FreeMarker version!"

    invoke-virtual {v0, v1}, Ljava/lang/StringBuffer;->append(Ljava/lang/String;)Ljava/lang/StringBuffer;

    move-result-object v0

    invoke-virtual {v0}, Ljava/lang/StringBuffer;->toString()Ljava/lang/String;

    move-result-object p0

    .line 166
    add-int/lit8 v0, v3, 0x1

    if-ne v0, v4, :cond_1

    .line 167
    new-instance v0, Ljava/lang/StringBuffer;

    invoke-direct {v0}, Ljava/lang/StringBuffer;-><init>()V

    invoke-virtual {v0, p0}, Ljava/lang/StringBuffer;->append(Ljava/lang/String;)Ljava/lang/StringBuffer;

    move-result-object v0

    const-string v1, " [Will not log more regular expression flag problems until restart!]"

    invoke-virtual {v0, v1}, Ljava/lang/StringBuffer;->append(Ljava/lang/String;)Ljava/lang/StringBuffer;

    move-result-object v0

    invoke-virtual {v0}, Ljava/lang/StringBuffer;->toString()Ljava/lang/String;

    move-result-object p0

    .line 169
    :cond_1
    sget-object v0, Lfreemarker/core/RegexpHelper;->LOG:Lfreemarker/log/Logger;

    invoke-virtual {v0, p0}, Lfreemarker/log/Logger;->warn(Ljava/lang/String;)V

    .line 170
    return-void

    .line 161
    :cond_2
    :try_start_2
    sput-boolean v1, Lfreemarker/core/RegexpHelper;->flagWarningsEnabled:Z

    .line 162
    monitor-exit v0

    return-void

    .line 164
    .end local v3    # "cnt":I
    :catchall_0
    move-exception v2

    move v3, v1

    move-object v1, v2

    .restart local v3    # "cnt":I
    :goto_0
    monitor-exit v0
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_1

    throw v1

    :catchall_1
    move-exception v1

    goto :goto_0
.end method

.method static parseFlagString(Ljava/lang/String;)J
    .locals 6
    .param p0, "flagString"    # Ljava/lang/String;

    .line 115
    const-wide/16 v0, 0x0

    .line 116
    .local v0, "flags":J
    const/4 v2, 0x0

    .local v2, "i":I
    :goto_0
    invoke-virtual {p0}, Ljava/lang/String;->length()I

    move-result v3

    if-ge v2, v3, :cond_1

    .line 117
    invoke-virtual {p0, v2}, Ljava/lang/String;->charAt(I)C

    move-result v3

    .line 118
    .local v3, "c":C
    sparse-switch v3, :sswitch_data_0

    .line 138
    sget-boolean v4, Lfreemarker/core/RegexpHelper;->flagWarningsEnabled:Z

    if-eqz v4, :cond_0

    .line 139
    new-instance v4, Ljava/lang/StringBuffer;

    invoke-direct {v4}, Ljava/lang/StringBuffer;-><init>()V

    const-string v5, "Unrecognized regular expression flag: "

    invoke-virtual {v4, v5}, Ljava/lang/StringBuffer;->append(Ljava/lang/String;)Ljava/lang/StringBuffer;

    move-result-object v4

    .line 141
    invoke-static {v3}, Ljava/lang/String;->valueOf(C)Ljava/lang/String;

    move-result-object v5

    invoke-static {v5}, Lfreemarker/template/utility/StringUtil;->jQuote(Ljava/lang/String;)Ljava/lang/String;

    move-result-object v5

    invoke-virtual {v4, v5}, Ljava/lang/StringBuffer;->append(Ljava/lang/String;)Ljava/lang/StringBuffer;

    move-result-object v4

    const-string v5, "."

    invoke-virtual {v4, v5}, Ljava/lang/StringBuffer;->append(Ljava/lang/String;)Ljava/lang/StringBuffer;

    move-result-object v4

    invoke-virtual {v4}, Ljava/lang/StringBuffer;->toString()Ljava/lang/String;

    move-result-object v4

    .line 139
    invoke-static {v4}, Lfreemarker/core/RegexpHelper;->logFlagWarning(Ljava/lang/String;)V

    goto :goto_1

    .line 129
    :sswitch_0
    sget-wide v4, Lfreemarker/core/RegexpHelper;->RE_FLAG_DOTALL:J

    or-long/2addr v0, v4

    .line 130
    goto :goto_1

    .line 132
    :sswitch_1
    const-wide v4, 0x100000000L

    or-long/2addr v0, v4

    .line 133
    goto :goto_1

    .line 123
    :sswitch_2
    sget-wide v4, Lfreemarker/core/RegexpHelper;->RE_FLAG_MULTILINE:J

    or-long/2addr v0, v4

    .line 124
    goto :goto_1

    .line 120
    :sswitch_3
    sget-wide v4, Lfreemarker/core/RegexpHelper;->RE_FLAG_CASE_INSENSITIVE:J

    or-long/2addr v0, v4

    .line 121
    goto :goto_1

    .line 135
    :sswitch_4
    const-wide v4, 0x200000000L

    or-long/2addr v0, v4

    .line 136
    goto :goto_1

    .line 126
    :sswitch_5
    sget-wide v4, Lfreemarker/core/RegexpHelper;->RE_FLAG_COMMENTS:J

    or-long/2addr v0, v4

    .line 116
    .end local v3    # "c":C
    :cond_0
    :goto_1
    add-int/lit8 v2, v2, 0x1

    goto :goto_0

    .line 145
    .end local v2    # "i":I
    :cond_1
    return-wide v0

    :sswitch_data_0
    .sparse-switch
        0x63 -> :sswitch_5
        0x66 -> :sswitch_4
        0x69 -> :sswitch_3
        0x6d -> :sswitch_2
        0x72 -> :sswitch_1
        0x73 -> :sswitch_0
    .end sparse-switch
.end method
