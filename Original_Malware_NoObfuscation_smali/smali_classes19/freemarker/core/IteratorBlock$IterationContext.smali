.class Lfreemarker/core/IteratorBlock$IterationContext;
.super Ljava/lang/Object;
.source "IteratorBlock.java"

# interfaces
.implements Lfreemarker/core/LocalContext;


# annotations
.annotation system Ldalvik/annotation/EnclosingClass;
    value = Lfreemarker/core/IteratorBlock;
.end annotation

.annotation system Ldalvik/annotation/InnerClass;
    accessFlags = 0x0
    name = "IterationContext"
.end annotation


# static fields
.field private static final LOOP_STATE_HAS_NEXT:Ljava/lang/String; = "_has_next"

.field private static final LOOP_STATE_INDEX:Ljava/lang/String; = "_index"


# instance fields
.field private alreadyEntered:Z

.field private hasNext:Z

.field private index:I

.field private final listValue:Lfreemarker/template/TemplateModel;

.field private localVarNames:Ljava/util/Collection;

.field private loopVar:Lfreemarker/template/TemplateModel;

.field private loopVarName:Ljava/lang/String;

.field private openedIteratorModel:Lfreemarker/template/TemplateModelIterator;

.field private final synthetic this$0:Lfreemarker/core/IteratorBlock;


# direct methods
.method public constructor <init>(Lfreemarker/core/IteratorBlock;Lfreemarker/template/TemplateModel;Ljava/lang/String;)V
    .locals 1
    .param p1, "this$0"    # Lfreemarker/core/IteratorBlock;
    .param p2, "listValue"    # Lfreemarker/template/TemplateModel;
    .param p3, "loopVariableName"    # Ljava/lang/String;

    .line 188
    iput-object p1, p0, Lfreemarker/core/IteratorBlock$IterationContext;->this$0:Lfreemarker/core/IteratorBlock;

    invoke-direct {p0}, Ljava/lang/Object;-><init>()V

    .line 181
    const/4 v0, 0x0

    iput-object v0, p0, Lfreemarker/core/IteratorBlock$IterationContext;->localVarNames:Ljava/util/Collection;

    .line 189
    iput-object p2, p0, Lfreemarker/core/IteratorBlock$IterationContext;->listValue:Lfreemarker/template/TemplateModel;

    .line 190
    iput-object p3, p0, Lfreemarker/core/IteratorBlock$IterationContext;->loopVarName:Ljava/lang/String;

    .line 191
    return-void
.end method

.method private executeNestedBlock(Lfreemarker/core/Environment;Lfreemarker/core/TemplateElement;)Z
    .locals 1
    .param p1, "env"    # Lfreemarker/core/Environment;
    .param p2, "nestedBlock"    # Lfreemarker/core/TemplateElement;
    .annotation system Ldalvik/annotation/Throws;
        value = {
            Lfreemarker/template/TemplateModelException;,
            Lfreemarker/template/TemplateException;,
            Ljava/io/IOException;,
            Lfreemarker/core/NonSequenceOrCollectionException;,
            Lfreemarker/core/InvalidReferenceException;
        }
    .end annotation

    .line 220
    invoke-direct {p0, p1, p2}, Lfreemarker/core/IteratorBlock$IterationContext;->executeNestedBlockInner(Lfreemarker/core/Environment;Lfreemarker/core/TemplateElement;)Z

    move-result v0

    return v0
.end method

.method private executeNestedBlockInner(Lfreemarker/core/Environment;Lfreemarker/core/TemplateElement;)Z
    .locals 6
    .param p1, "env"    # Lfreemarker/core/Environment;
    .param p2, "nestedBlock"    # Lfreemarker/core/TemplateElement;
    .annotation system Ldalvik/annotation/Throws;
        value = {
            Lfreemarker/template/TemplateModelException;,
            Lfreemarker/template/TemplateException;,
            Ljava/io/IOException;,
            Lfreemarker/core/NonSequenceOrCollectionException;,
            Lfreemarker/core/InvalidReferenceException;
        }
    .end annotation

    .line 227
    iget-object v0, p0, Lfreemarker/core/IteratorBlock$IterationContext;->listValue:Lfreemarker/template/TemplateModel;

    instance-of v1, v0, Lfreemarker/template/TemplateCollectionModel;

    const/4 v2, 0x1

    if-eqz v1, :cond_5

    .line 228
    check-cast v0, Lfreemarker/template/TemplateCollectionModel;

    .line 229
    .local v0, "collModel":Lfreemarker/template/TemplateCollectionModel;
    iget-object v1, p0, Lfreemarker/core/IteratorBlock$IterationContext;->openedIteratorModel:Lfreemarker/template/TemplateModelIterator;

    if-nez v1, :cond_0

    .line 230
    invoke-interface {v0}, Lfreemarker/template/TemplateCollectionModel;->iterator()Lfreemarker/template/TemplateModelIterator;

    move-result-object v1

    goto :goto_0

    :cond_0
    nop

    .line 231
    .local v1, "iterModel":Lfreemarker/template/TemplateModelIterator;
    :goto_0
    invoke-interface {v1}, Lfreemarker/template/TemplateModelIterator;->hasNext()Z

    move-result v3

    iput-boolean v3, p0, Lfreemarker/core/IteratorBlock$IterationContext;->hasNext:Z

    .line 232
    iget-boolean v3, p0, Lfreemarker/core/IteratorBlock$IterationContext;->hasNext:Z

    .line 233
    .local v3, "listNotEmpty":Z
    if-eqz v3, :cond_4

    .line 234
    iget-object v4, p0, Lfreemarker/core/IteratorBlock$IterationContext;->loopVarName:Ljava/lang/String;

    if-eqz v4, :cond_3

    .line 236
    :goto_1
    :try_start_0
    iget-boolean v4, p0, Lfreemarker/core/IteratorBlock$IterationContext;->hasNext:Z

    if-eqz v4, :cond_2

    .line 237
    invoke-interface {v1}, Lfreemarker/template/TemplateModelIterator;->next()Lfreemarker/template/TemplateModel;

    move-result-object v4

    iput-object v4, p0, Lfreemarker/core/IteratorBlock$IterationContext;->loopVar:Lfreemarker/template/TemplateModel;

    .line 238
    invoke-interface {v1}, Lfreemarker/template/TemplateModelIterator;->hasNext()Z

    move-result v4

    iput-boolean v4, p0, Lfreemarker/core/IteratorBlock$IterationContext;->hasNext:Z

    .line 239
    if-eqz p2, :cond_1

    .line 240
    invoke-virtual {p1, p2}, Lfreemarker/core/Environment;->visitByHiddingParent(Lfreemarker/core/TemplateElement;)V

    .line 242
    :cond_1
    iget v4, p0, Lfreemarker/core/IteratorBlock$IterationContext;->index:I

    add-int/2addr v4, v2

    iput v4, p0, Lfreemarker/core/IteratorBlock$IterationContext;->index:I
    :try_end_0
    .catch Lfreemarker/core/BreakInstruction$Break; {:try_start_0 .. :try_end_0} :catch_0

    goto :goto_1

    .line 246
    :cond_2
    goto :goto_2

    .line 244
    :catch_0
    move-exception v2

    .line 247
    :goto_2
    const/4 v2, 0x0

    iput-object v2, p0, Lfreemarker/core/IteratorBlock$IterationContext;->openedIteratorModel:Lfreemarker/template/TemplateModelIterator;

    goto :goto_3

    .line 251
    :cond_3
    iput-object v1, p0, Lfreemarker/core/IteratorBlock$IterationContext;->openedIteratorModel:Lfreemarker/template/TemplateModelIterator;

    .line 252
    if-eqz p2, :cond_4

    .line 253
    invoke-virtual {p1, p2}, Lfreemarker/core/Environment;->visitByHiddingParent(Lfreemarker/core/TemplateElement;)V

    .line 257
    .end local v0    # "collModel":Lfreemarker/template/TemplateCollectionModel;
    .end local v1    # "iterModel":Lfreemarker/template/TemplateModelIterator;
    :cond_4
    :goto_3
    goto/16 :goto_9

    .end local v3    # "listNotEmpty":Z
    :cond_5
    instance-of v1, v0, Lfreemarker/template/TemplateSequenceModel;

    const/4 v3, 0x0

    if-eqz v1, :cond_c

    .line 258
    check-cast v0, Lfreemarker/template/TemplateSequenceModel;

    .line 259
    .local v0, "seqModel":Lfreemarker/template/TemplateSequenceModel;
    invoke-interface {v0}, Lfreemarker/template/TemplateSequenceModel;->size()I

    move-result v1

    .line 260
    .local v1, "size":I
    if-eqz v1, :cond_6

    move v4, v2

    goto :goto_4

    :cond_6
    move v4, v3

    .line 261
    .local v4, "listNotEmpty":Z
    :goto_4
    if-eqz v4, :cond_b

    .line 262
    iget-object v5, p0, Lfreemarker/core/IteratorBlock$IterationContext;->loopVarName:Ljava/lang/String;

    if-eqz v5, :cond_a

    .line 264
    :try_start_1
    iput v3, p0, Lfreemarker/core/IteratorBlock$IterationContext;->index:I

    :goto_5
    iget v5, p0, Lfreemarker/core/IteratorBlock$IterationContext;->index:I

    if-ge v5, v1, :cond_9

    .line 265
    invoke-interface {v0, v5}, Lfreemarker/template/TemplateSequenceModel;->get(I)Lfreemarker/template/TemplateModel;

    move-result-object v5

    iput-object v5, p0, Lfreemarker/core/IteratorBlock$IterationContext;->loopVar:Lfreemarker/template/TemplateModel;

    .line 266
    iget v5, p0, Lfreemarker/core/IteratorBlock$IterationContext;->index:I

    add-int/2addr v5, v2

    if-le v1, v5, :cond_7

    move v5, v2

    goto :goto_6

    :cond_7
    move v5, v3

    :goto_6
    iput-boolean v5, p0, Lfreemarker/core/IteratorBlock$IterationContext;->hasNext:Z

    .line 267
    if-eqz p2, :cond_8

    .line 268
    invoke-virtual {p1, p2}, Lfreemarker/core/Environment;->visitByHiddingParent(Lfreemarker/core/TemplateElement;)V

    .line 264
    :cond_8
    iget v5, p0, Lfreemarker/core/IteratorBlock$IterationContext;->index:I

    add-int/2addr v5, v2

    iput v5, p0, Lfreemarker/core/IteratorBlock$IterationContext;->index:I
    :try_end_1
    .catch Lfreemarker/core/BreakInstruction$Break; {:try_start_1 .. :try_end_1} :catch_1

    goto :goto_5

    .line 271
    :catch_1
    move-exception v2

    .line 273
    :cond_9
    goto :goto_7

    .line 275
    :cond_a
    if-eqz p2, :cond_b

    .line 276
    invoke-virtual {p1, p2}, Lfreemarker/core/Environment;->visitByHiddingParent(Lfreemarker/core/TemplateElement;)V

    .line 280
    .end local v0    # "seqModel":Lfreemarker/template/TemplateSequenceModel;
    .end local v1    # "size":I
    :cond_b
    :goto_7
    move v3, v4

    goto :goto_9

    .end local v4    # "listNotEmpty":Z
    :cond_c
    invoke-virtual {p1}, Lfreemarker/core/Environment;->isClassicCompatible()Z

    move-result v0

    if-eqz v0, :cond_f

    .line 281
    const/4 v0, 0x1

    .line 282
    .local v0, "listNotEmpty":Z
    iget-object v1, p0, Lfreemarker/core/IteratorBlock$IterationContext;->loopVarName:Ljava/lang/String;

    if-eqz v1, :cond_d

    .line 283
    iget-object v1, p0, Lfreemarker/core/IteratorBlock$IterationContext;->listValue:Lfreemarker/template/TemplateModel;

    iput-object v1, p0, Lfreemarker/core/IteratorBlock$IterationContext;->loopVar:Lfreemarker/template/TemplateModel;

    .line 284
    iput-boolean v3, p0, Lfreemarker/core/IteratorBlock$IterationContext;->hasNext:Z

    .line 287
    :cond_d
    if-eqz p2, :cond_e

    .line 288
    :try_start_2
    invoke-virtual {p1, p2}, Lfreemarker/core/Environment;->visitByHiddingParent(Lfreemarker/core/TemplateElement;)V
    :try_end_2
    .catch Lfreemarker/core/BreakInstruction$Break; {:try_start_2 .. :try_end_2} :catch_2

    goto :goto_8

    .line 290
    :catch_2
    move-exception v1

    .line 292
    :cond_e
    :goto_8
    nop

    .line 298
    move v3, v0

    .end local v0    # "listNotEmpty":Z
    .restart local v3    # "listNotEmpty":Z
    :goto_9
    return v3

    .line 294
    .end local v3    # "listNotEmpty":Z
    :cond_f
    new-instance v0, Lfreemarker/core/NonSequenceOrCollectionException;

    iget-object v1, p0, Lfreemarker/core/IteratorBlock$IterationContext;->this$0:Lfreemarker/core/IteratorBlock;

    .line 295
    invoke-static {v1}, Lfreemarker/core/IteratorBlock;->access$000(Lfreemarker/core/IteratorBlock;)Lfreemarker/core/Expression;

    move-result-object v1

    iget-object v2, p0, Lfreemarker/core/IteratorBlock$IterationContext;->listValue:Lfreemarker/template/TemplateModel;

    invoke-direct {v0, v1, v2, p1}, Lfreemarker/core/NonSequenceOrCollectionException;-><init>(Lfreemarker/core/Expression;Lfreemarker/template/TemplateModel;Lfreemarker/core/Environment;)V

    throw v0
.end method


# virtual methods
.method accept(Lfreemarker/core/Environment;)Z
    .locals 1
    .param p1, "env"    # Lfreemarker/core/Environment;
    .annotation system Ldalvik/annotation/Throws;
        value = {
            Lfreemarker/template/TemplateException;,
            Ljava/io/IOException;
        }
    .end annotation

    .line 194
    iget-object v0, p0, Lfreemarker/core/IteratorBlock$IterationContext;->this$0:Lfreemarker/core/IteratorBlock;

    invoke-virtual {v0}, Lfreemarker/core/IteratorBlock;->getNestedBlock()Lfreemarker/core/TemplateElement;

    move-result-object v0

    invoke-direct {p0, p1, v0}, Lfreemarker/core/IteratorBlock$IterationContext;->executeNestedBlock(Lfreemarker/core/Environment;Lfreemarker/core/TemplateElement;)Z

    move-result v0

    return v0
.end method

.method getIndex()I
    .locals 1

    .line 346
    iget v0, p0, Lfreemarker/core/IteratorBlock$IterationContext;->index:I

    return v0
.end method

.method public getLocalVariable(Ljava/lang/String;)Lfreemarker/template/TemplateModel;
    .locals 3
    .param p1, "name"    # Ljava/lang/String;

    .line 306
    iget-object v0, p0, Lfreemarker/core/IteratorBlock$IterationContext;->loopVarName:Ljava/lang/String;

    .line 307
    .local v0, "loopVariableName":Ljava/lang/String;
    if-eqz v0, :cond_1

    invoke-virtual {p1, v0}, Ljava/lang/String;->startsWith(Ljava/lang/String;)Z

    move-result v1

    if-eqz v1, :cond_1

    .line 308
    invoke-virtual {p1}, Ljava/lang/String;->length()I

    move-result v1

    invoke-virtual {v0}, Ljava/lang/String;->length()I

    move-result v2

    sub-int/2addr v1, v2

    sparse-switch v1, :sswitch_data_0

    goto :goto_1

    .line 317
    :sswitch_0
    const-string v1, "_has_next"

    invoke-virtual {p1, v1}, Ljava/lang/String;->endsWith(Ljava/lang/String;)Z

    move-result v1

    if-eqz v1, :cond_1

    .line 318
    iget-boolean v1, p0, Lfreemarker/core/IteratorBlock$IterationContext;->hasNext:Z

    if-eqz v1, :cond_0

    sget-object v1, Lfreemarker/template/TemplateBooleanModel;->TRUE:Lfreemarker/template/TemplateBooleanModel;

    goto :goto_0

    :cond_0
    sget-object v1, Lfreemarker/template/TemplateBooleanModel;->FALSE:Lfreemarker/template/TemplateBooleanModel;

    :goto_0
    return-object v1

    .line 312
    :sswitch_1
    const-string v1, "_index"

    invoke-virtual {p1, v1}, Ljava/lang/String;->endsWith(Ljava/lang/String;)Z

    move-result v1

    if-eqz v1, :cond_1

    .line 313
    new-instance v1, Lfreemarker/template/SimpleNumber;

    iget v2, p0, Lfreemarker/core/IteratorBlock$IterationContext;->index:I

    invoke-direct {v1, v2}, Lfreemarker/template/SimpleNumber;-><init>(I)V

    return-object v1

    .line 310
    :sswitch_2
    iget-object v1, p0, Lfreemarker/core/IteratorBlock$IterationContext;->loopVar:Lfreemarker/template/TemplateModel;

    return-object v1

    .line 323
    :cond_1
    :goto_1
    const/4 v1, 0x0

    return-object v1

    :sswitch_data_0
    .sparse-switch
        0x0 -> :sswitch_2
        0x6 -> :sswitch_1
        0x9 -> :sswitch_0
    .end sparse-switch
.end method

.method public getLocalVariableNames()Ljava/util/Collection;
    .locals 4

    .line 327
    iget-object v0, p0, Lfreemarker/core/IteratorBlock$IterationContext;->loopVarName:Ljava/lang/String;

    .line 328
    .local v0, "loopVariableName":Ljava/lang/String;
    if-eqz v0, :cond_1

    .line 329
    iget-object v1, p0, Lfreemarker/core/IteratorBlock$IterationContext;->localVarNames:Ljava/util/Collection;

    if-nez v1, :cond_0

    .line 330
    new-instance v1, Ljava/util/ArrayList;

    const/4 v2, 0x3

    invoke-direct {v1, v2}, Ljava/util/ArrayList;-><init>(I)V

    iput-object v1, p0, Lfreemarker/core/IteratorBlock$IterationContext;->localVarNames:Ljava/util/Collection;

    .line 331
    invoke-interface {v1, v0}, Ljava/util/Collection;->add(Ljava/lang/Object;)Z

    .line 332
    iget-object v1, p0, Lfreemarker/core/IteratorBlock$IterationContext;->localVarNames:Ljava/util/Collection;

    new-instance v2, Ljava/lang/StringBuffer;

    invoke-direct {v2}, Ljava/lang/StringBuffer;-><init>()V

    invoke-virtual {v2, v0}, Ljava/lang/StringBuffer;->append(Ljava/lang/String;)Ljava/lang/StringBuffer;

    move-result-object v2

    const-string v3, "_index"

    invoke-virtual {v2, v3}, Ljava/lang/StringBuffer;->append(Ljava/lang/String;)Ljava/lang/StringBuffer;

    move-result-object v2

    invoke-virtual {v2}, Ljava/lang/StringBuffer;->toString()Ljava/lang/String;

    move-result-object v2

    invoke-interface {v1, v2}, Ljava/util/Collection;->add(Ljava/lang/Object;)Z

    .line 333
    iget-object v1, p0, Lfreemarker/core/IteratorBlock$IterationContext;->localVarNames:Ljava/util/Collection;

    new-instance v2, Ljava/lang/StringBuffer;

    invoke-direct {v2}, Ljava/lang/StringBuffer;-><init>()V

    invoke-virtual {v2, v0}, Ljava/lang/StringBuffer;->append(Ljava/lang/String;)Ljava/lang/StringBuffer;

    move-result-object v2

    const-string v3, "_has_next"

    invoke-virtual {v2, v3}, Ljava/lang/StringBuffer;->append(Ljava/lang/String;)Ljava/lang/StringBuffer;

    move-result-object v2

    invoke-virtual {v2}, Ljava/lang/StringBuffer;->toString()Ljava/lang/String;

    move-result-object v2

    invoke-interface {v1, v2}, Ljava/util/Collection;->add(Ljava/lang/Object;)Z

    .line 335
    :cond_0
    iget-object v1, p0, Lfreemarker/core/IteratorBlock$IterationContext;->localVarNames:Ljava/util/Collection;

    return-object v1

    .line 337
    :cond_1
    sget-object v1, Ljava/util/Collections;->EMPTY_LIST:Ljava/util/List;

    return-object v1
.end method

.method getLoopVariableName()Ljava/lang/String;
    .locals 1

    .line 302
    iget-object v0, p0, Lfreemarker/core/IteratorBlock$IterationContext;->loopVarName:Ljava/lang/String;

    return-object v0
.end method

.method hasNext()Z
    .locals 1

    .line 342
    iget-boolean v0, p0, Lfreemarker/core/IteratorBlock$IterationContext;->hasNext:Z

    return v0
.end method

.method loopForItemsElement(Lfreemarker/core/Environment;Lfreemarker/core/TemplateElement;Ljava/lang/String;)V
    .locals 3
    .param p1, "env"    # Lfreemarker/core/Environment;
    .param p2, "nestedBlock"    # Lfreemarker/core/TemplateElement;
    .param p3, "loopVarName"    # Ljava/lang/String;
    .annotation system Ldalvik/annotation/Throws;
        value = {
            Lfreemarker/core/NonSequenceOrCollectionException;,
            Lfreemarker/template/TemplateModelException;,
            Lfreemarker/core/InvalidReferenceException;,
            Lfreemarker/template/TemplateException;,
            Ljava/io/IOException;
        }
    .end annotation

    .line 201
    const/4 v0, 0x0

    :try_start_0
    iget-boolean v1, p0, Lfreemarker/core/IteratorBlock$IterationContext;->alreadyEntered:Z

    if-nez v1, :cond_0

    .line 205
    const/4 v1, 0x1

    iput-boolean v1, p0, Lfreemarker/core/IteratorBlock$IterationContext;->alreadyEntered:Z

    .line 206
    iput-object p3, p0, Lfreemarker/core/IteratorBlock$IterationContext;->loopVarName:Ljava/lang/String;

    .line 207
    invoke-direct {p0, p1, p2}, Lfreemarker/core/IteratorBlock$IterationContext;->executeNestedBlock(Lfreemarker/core/Environment;Lfreemarker/core/TemplateElement;)Z
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    .line 209
    iput-object v0, p0, Lfreemarker/core/IteratorBlock$IterationContext;->loopVarName:Ljava/lang/String;

    .line 210
    nop

    .line 211
    return-void

    .line 202
    :cond_0
    :try_start_1
    new-instance v1, Lfreemarker/core/_MiscTemplateException;

    const-string v2, "The #items directive was already entered earlier for this listing."

    invoke-direct {v1, p1, v2}, Lfreemarker/core/_MiscTemplateException;-><init>(Lfreemarker/core/Environment;Ljava/lang/String;)V

    .end local p1    # "env":Lfreemarker/core/Environment;
    .end local p2    # "nestedBlock":Lfreemarker/core/TemplateElement;
    .end local p3    # "loopVarName":Ljava/lang/String;
    throw v1
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    .line 209
    .restart local p1    # "env":Lfreemarker/core/Environment;
    .restart local p2    # "nestedBlock":Lfreemarker/core/TemplateElement;
    .restart local p3    # "loopVarName":Ljava/lang/String;
    :catchall_0
    move-exception v1

    iput-object v0, p0, Lfreemarker/core/IteratorBlock$IterationContext;->loopVarName:Ljava/lang/String;

    throw v1
.end method
