.class final Lfreemarker/core/TemplateClassResolver$2;
.super Ljava/lang/Object;
.source "TemplateClassResolver.java"

# interfaces
.implements Lfreemarker/core/TemplateClassResolver;


# direct methods
.method constructor <init>()V
    .locals 0

    .line 59
    invoke-direct {p0}, Ljava/lang/Object;-><init>()V

    return-void
.end method


# virtual methods
.method public resolve(Ljava/lang/String;Lfreemarker/core/Environment;Lfreemarker/template/Template;)Ljava/lang/Class;
    .locals 2
    .param p1, "className"    # Ljava/lang/String;
    .param p2, "env"    # Lfreemarker/core/Environment;
    .param p3, "template"    # Lfreemarker/template/Template;
    .annotation system Ldalvik/annotation/Throws;
        value = {
            Lfreemarker/template/TemplateException;
        }
    .end annotation

    .line 63
    sget-object v0, Lfreemarker/core/TemplateClassResolver$4;->class$freemarker$template$utility$ObjectConstructor:Ljava/lang/Class;

    if-nez v0, :cond_0

    const-string v0, "freemarker.template.utility.ObjectConstructor"

    invoke-static {v0}, Lfreemarker/core/TemplateClassResolver$4;->class$(Ljava/lang/String;)Ljava/lang/Class;

    move-result-object v0

    sput-object v0, Lfreemarker/core/TemplateClassResolver$4;->class$freemarker$template$utility$ObjectConstructor:Ljava/lang/Class;

    goto :goto_0

    :cond_0
    sget-object v0, Lfreemarker/core/TemplateClassResolver$4;->class$freemarker$template$utility$ObjectConstructor:Ljava/lang/Class;

    :goto_0
    invoke-virtual {v0}, Ljava/lang/Class;->getName()Ljava/lang/String;

    move-result-object v0

    invoke-virtual {p1, v0}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v0

    if-nez v0, :cond_2

    sget-object v0, Lfreemarker/core/TemplateClassResolver$4;->class$freemarker$template$utility$Execute:Ljava/lang/Class;

    if-nez v0, :cond_1

    .line 64
    const-string v0, "freemarker.template.utility.Execute"

    invoke-static {v0}, Lfreemarker/core/TemplateClassResolver$4;->class$(Ljava/lang/String;)Ljava/lang/Class;

    move-result-object v0

    sput-object v0, Lfreemarker/core/TemplateClassResolver$4;->class$freemarker$template$utility$Execute:Ljava/lang/Class;

    goto :goto_1

    :cond_1
    sget-object v0, Lfreemarker/core/TemplateClassResolver$4;->class$freemarker$template$utility$Execute:Ljava/lang/Class;

    :goto_1
    invoke-virtual {v0}, Ljava/lang/Class;->getName()Ljava/lang/String;

    move-result-object v0

    invoke-virtual {p1, v0}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v0

    if-nez v0, :cond_2

    .line 65
    const-string v0, "freemarker.template.utility.JythonRuntime"

    invoke-virtual {p1, v0}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v0

    if-nez v0, :cond_2

    .line 69
    :try_start_0
    invoke-static {p1}, Lfreemarker/template/utility/ClassUtil;->forName(Ljava/lang/String;)Ljava/lang/Class;

    move-result-object v0
    :try_end_0
    .catch Ljava/lang/ClassNotFoundException; {:try_start_0 .. :try_end_0} :catch_0

    return-object v0

    .line 70
    :catch_0
    move-exception v0

    .line 71
    .local v0, "e":Ljava/lang/ClassNotFoundException;
    new-instance v1, Lfreemarker/core/_MiscTemplateException;

    invoke-direct {v1, v0, p2}, Lfreemarker/core/_MiscTemplateException;-><init>(Ljava/lang/Throwable;Lfreemarker/core/Environment;)V

    throw v1

    .line 66
    .end local v0    # "e":Ljava/lang/ClassNotFoundException;
    :cond_2
    invoke-static {p1, p2}, Lfreemarker/core/MessageUtil;->newInstantiatingClassNotAllowedException(Ljava/lang/String;Lfreemarker/core/Environment;)Lfreemarker/template/TemplateException;

    move-result-object v0

    throw v0
.end method
