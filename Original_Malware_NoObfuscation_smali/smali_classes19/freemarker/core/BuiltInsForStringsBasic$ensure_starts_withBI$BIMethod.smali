.class Lfreemarker/core/BuiltInsForStringsBasic$ensure_starts_withBI$BIMethod;
.super Ljava/lang/Object;
.source "BuiltInsForStringsBasic.java"

# interfaces
.implements Lfreemarker/template/TemplateMethodModelEx;


# annotations
.annotation system Ldalvik/annotation/EnclosingClass;
    value = Lfreemarker/core/BuiltInsForStringsBasic$ensure_starts_withBI;
.end annotation

.annotation system Ldalvik/annotation/InnerClass;
    accessFlags = 0x2
    name = "BIMethod"
.end annotation


# instance fields
.field private s:Ljava/lang/String;

.field private final synthetic this$0:Lfreemarker/core/BuiltInsForStringsBasic$ensure_starts_withBI;


# direct methods
.method private constructor <init>(Lfreemarker/core/BuiltInsForStringsBasic$ensure_starts_withBI;Ljava/lang/String;)V
    .locals 0
    .param p2, "s"    # Ljava/lang/String;

    .line 136
    iput-object p1, p0, Lfreemarker/core/BuiltInsForStringsBasic$ensure_starts_withBI$BIMethod;->this$0:Lfreemarker/core/BuiltInsForStringsBasic$ensure_starts_withBI;

    invoke-direct {p0}, Ljava/lang/Object;-><init>()V

    .line 137
    iput-object p2, p0, Lfreemarker/core/BuiltInsForStringsBasic$ensure_starts_withBI$BIMethod;->s:Ljava/lang/String;

    .line 138
    return-void
.end method

.method synthetic constructor <init>(Lfreemarker/core/BuiltInsForStringsBasic$ensure_starts_withBI;Ljava/lang/String;Lfreemarker/core/BuiltInsForStringsBasic$1;)V
    .locals 0
    .param p1, "x0"    # Lfreemarker/core/BuiltInsForStringsBasic$ensure_starts_withBI;
    .param p2, "x1"    # Ljava/lang/String;
    .param p3, "x2"    # Lfreemarker/core/BuiltInsForStringsBasic$1;

    .line 133
    invoke-direct {p0, p1, p2}, Lfreemarker/core/BuiltInsForStringsBasic$ensure_starts_withBI$BIMethod;-><init>(Lfreemarker/core/BuiltInsForStringsBasic$ensure_starts_withBI;Ljava/lang/String;)V

    return-void
.end method


# virtual methods
.method public exec(Ljava/util/List;)Ljava/lang/Object;
    .locals 10
    .param p1, "args"    # Ljava/util/List;
    .annotation system Ldalvik/annotation/Throws;
        value = {
            Lfreemarker/template/TemplateModelException;
        }
    .end annotation

    .line 141
    iget-object v0, p0, Lfreemarker/core/BuiltInsForStringsBasic$ensure_starts_withBI$BIMethod;->this$0:Lfreemarker/core/BuiltInsForStringsBasic$ensure_starts_withBI;

    const/4 v1, 0x1

    const/4 v2, 0x3

    invoke-virtual {v0, p1, v1, v2}, Lfreemarker/core/BuiltInsForStringsBasic$ensure_starts_withBI;->checkMethodArgCount(Ljava/util/List;II)V

    .line 143
    iget-object v0, p0, Lfreemarker/core/BuiltInsForStringsBasic$ensure_starts_withBI$BIMethod;->this$0:Lfreemarker/core/BuiltInsForStringsBasic$ensure_starts_withBI;

    const/4 v2, 0x0

    invoke-virtual {v0, p1, v2}, Lfreemarker/core/BuiltInsForStringsBasic$ensure_starts_withBI;->getStringMethodArg(Ljava/util/List;I)Ljava/lang/String;

    move-result-object v0

    .line 147
    .local v0, "checkedPrefix":Ljava/lang/String;
    invoke-interface {p1}, Ljava/util/List;->size()I

    move-result v2

    if-le v2, v1, :cond_3

    .line 148
    iget-object v2, p0, Lfreemarker/core/BuiltInsForStringsBasic$ensure_starts_withBI$BIMethod;->this$0:Lfreemarker/core/BuiltInsForStringsBasic$ensure_starts_withBI;

    invoke-virtual {v2, p1, v1}, Lfreemarker/core/BuiltInsForStringsBasic$ensure_starts_withBI;->getStringMethodArg(Ljava/util/List;I)Ljava/lang/String;

    move-result-object v2

    .line 149
    .local v2, "addedPrefix":Ljava/lang/String;
    invoke-interface {p1}, Ljava/util/List;->size()I

    move-result v3

    const-wide v4, 0x100000000L

    const/4 v6, 0x2

    if-le v3, v6, :cond_0

    iget-object v3, p0, Lfreemarker/core/BuiltInsForStringsBasic$ensure_starts_withBI$BIMethod;->this$0:Lfreemarker/core/BuiltInsForStringsBasic$ensure_starts_withBI;

    .line 150
    invoke-virtual {v3, p1, v6}, Lfreemarker/core/BuiltInsForStringsBasic$ensure_starts_withBI;->getStringMethodArg(Ljava/util/List;I)Ljava/lang/String;

    move-result-object v3

    invoke-static {v3}, Lfreemarker/core/RegexpHelper;->parseFlagString(Ljava/lang/String;)J

    move-result-wide v6

    goto :goto_0

    :cond_0
    move-wide v6, v4

    .line 153
    .local v6, "flags":J
    :goto_0
    and-long v3, v6, v4

    const-wide/16 v8, 0x0

    cmp-long v3, v3, v8

    if-nez v3, :cond_2

    .line 154
    iget-object v3, p0, Lfreemarker/core/BuiltInsForStringsBasic$ensure_starts_withBI$BIMethod;->this$0:Lfreemarker/core/BuiltInsForStringsBasic$ensure_starts_withBI;

    iget-object v3, v3, Lfreemarker/core/BuiltInsForStringsBasic$ensure_starts_withBI;->key:Ljava/lang/String;

    invoke-static {v3, v6, v7, v1}, Lfreemarker/core/RegexpHelper;->checkOnlyHasNonRegexpFlags(Ljava/lang/String;JZ)V

    .line 155
    sget-wide v3, Lfreemarker/core/RegexpHelper;->RE_FLAG_CASE_INSENSITIVE:J

    and-long/2addr v3, v6

    cmp-long v1, v3, v8

    if-nez v1, :cond_1

    .line 156
    iget-object v1, p0, Lfreemarker/core/BuiltInsForStringsBasic$ensure_starts_withBI$BIMethod;->s:Ljava/lang/String;

    invoke-virtual {v1, v0}, Ljava/lang/String;->startsWith(Ljava/lang/String;)Z

    move-result v1

    .local v1, "startsWithPrefix":Z
    goto :goto_1

    .line 158
    .end local v1    # "startsWithPrefix":Z
    :cond_1
    iget-object v1, p0, Lfreemarker/core/BuiltInsForStringsBasic$ensure_starts_withBI$BIMethod;->s:Ljava/lang/String;

    invoke-virtual {v1}, Ljava/lang/String;->toLowerCase()Ljava/lang/String;

    move-result-object v1

    invoke-virtual {v0}, Ljava/lang/String;->toLowerCase()Ljava/lang/String;

    move-result-object v3

    invoke-virtual {v1, v3}, Ljava/lang/String;->startsWith(Ljava/lang/String;)Z

    move-result v1

    .restart local v1    # "startsWithPrefix":Z
    goto :goto_1

    .line 161
    .end local v1    # "startsWithPrefix":Z
    :cond_2
    long-to-int v1, v6

    invoke-static {v0, v1}, Lfreemarker/core/RegexpHelper;->getPattern(Ljava/lang/String;I)Ljava/util/regex/Pattern;

    move-result-object v1

    .line 162
    .local v1, "pattern":Ljava/util/regex/Pattern;
    iget-object v3, p0, Lfreemarker/core/BuiltInsForStringsBasic$ensure_starts_withBI$BIMethod;->s:Ljava/lang/String;

    invoke-virtual {v1, v3}, Ljava/util/regex/Pattern;->matcher(Ljava/lang/CharSequence;)Ljava/util/regex/Matcher;

    move-result-object v3

    .line 163
    .local v3, "matcher":Ljava/util/regex/Matcher;
    invoke-virtual {v3}, Ljava/util/regex/Matcher;->lookingAt()Z

    move-result v4

    move v1, v4

    .line 165
    .end local v3    # "matcher":Ljava/util/regex/Matcher;
    .end local v6    # "flags":J
    .local v1, "startsWithPrefix":Z
    :goto_1
    goto :goto_2

    .line 166
    .end local v1    # "startsWithPrefix":Z
    .end local v2    # "addedPrefix":Ljava/lang/String;
    :cond_3
    iget-object v1, p0, Lfreemarker/core/BuiltInsForStringsBasic$ensure_starts_withBI$BIMethod;->s:Ljava/lang/String;

    invoke-virtual {v1, v0}, Ljava/lang/String;->startsWith(Ljava/lang/String;)Z

    move-result v1

    .line 167
    .restart local v1    # "startsWithPrefix":Z
    move-object v2, v0

    .line 169
    .restart local v2    # "addedPrefix":Ljava/lang/String;
    :goto_2
    new-instance v3, Lfreemarker/template/SimpleScalar;

    if-eqz v1, :cond_4

    iget-object v4, p0, Lfreemarker/core/BuiltInsForStringsBasic$ensure_starts_withBI$BIMethod;->s:Ljava/lang/String;

    goto :goto_3

    :cond_4
    new-instance v4, Ljava/lang/StringBuffer;

    invoke-direct {v4}, Ljava/lang/StringBuffer;-><init>()V

    invoke-virtual {v4, v2}, Ljava/lang/StringBuffer;->append(Ljava/lang/String;)Ljava/lang/StringBuffer;

    move-result-object v4

    iget-object v5, p0, Lfreemarker/core/BuiltInsForStringsBasic$ensure_starts_withBI$BIMethod;->s:Ljava/lang/String;

    invoke-virtual {v4, v5}, Ljava/lang/StringBuffer;->append(Ljava/lang/String;)Ljava/lang/StringBuffer;

    move-result-object v4

    invoke-virtual {v4}, Ljava/lang/StringBuffer;->toString()Ljava/lang/String;

    move-result-object v4

    :goto_3
    invoke-direct {v3, v4}, Lfreemarker/template/SimpleScalar;-><init>(Ljava/lang/String;)V

    return-object v3
.end method
