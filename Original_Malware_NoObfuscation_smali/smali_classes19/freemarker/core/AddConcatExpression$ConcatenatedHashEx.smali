.class final Lfreemarker/core/AddConcatExpression$ConcatenatedHashEx;
.super Lfreemarker/core/AddConcatExpression$ConcatenatedHash;
.source "AddConcatExpression.java"

# interfaces
.implements Lfreemarker/template/TemplateHashModelEx;


# annotations
.annotation system Ldalvik/annotation/EnclosingClass;
    value = Lfreemarker/core/AddConcatExpression;
.end annotation

.annotation system Ldalvik/annotation/InnerClass;
    accessFlags = 0x1a
    name = "ConcatenatedHashEx"
.end annotation


# instance fields
.field private keys:Lfreemarker/core/CollectionAndSequence;

.field private size:I

.field private values:Lfreemarker/core/CollectionAndSequence;


# direct methods
.method constructor <init>(Lfreemarker/template/TemplateHashModelEx;Lfreemarker/template/TemplateHashModelEx;)V
    .locals 0
    .param p1, "left"    # Lfreemarker/template/TemplateHashModelEx;
    .param p2, "right"    # Lfreemarker/template/TemplateHashModelEx;

    .line 212
    invoke-direct {p0, p1, p2}, Lfreemarker/core/AddConcatExpression$ConcatenatedHash;-><init>(Lfreemarker/template/TemplateHashModel;Lfreemarker/template/TemplateHashModel;)V

    .line 213
    return-void
.end method

.method private static addKeys(Ljava/util/Set;Lfreemarker/template/SimpleSequence;Lfreemarker/template/TemplateHashModelEx;)V
    .locals 3
    .param p0, "set"    # Ljava/util/Set;
    .param p1, "keySeq"    # Lfreemarker/template/SimpleSequence;
    .param p2, "hash"    # Lfreemarker/template/TemplateHashModelEx;
    .annotation system Ldalvik/annotation/Throws;
        value = {
            Lfreemarker/template/TemplateModelException;
        }
    .end annotation

    .line 251
    invoke-interface {p2}, Lfreemarker/template/TemplateHashModelEx;->keys()Lfreemarker/template/TemplateCollectionModel;

    move-result-object v0

    invoke-interface {v0}, Lfreemarker/template/TemplateCollectionModel;->iterator()Lfreemarker/template/TemplateModelIterator;

    move-result-object v0

    .line 252
    .local v0, "it":Lfreemarker/template/TemplateModelIterator;
    :goto_0
    invoke-interface {v0}, Lfreemarker/template/TemplateModelIterator;->hasNext()Z

    move-result v1

    if-eqz v1, :cond_1

    .line 253
    invoke-interface {v0}, Lfreemarker/template/TemplateModelIterator;->next()Lfreemarker/template/TemplateModel;

    move-result-object v1

    check-cast v1, Lfreemarker/template/TemplateScalarModel;

    .line 254
    .local v1, "tsm":Lfreemarker/template/TemplateScalarModel;
    invoke-interface {v1}, Lfreemarker/template/TemplateScalarModel;->getAsString()Ljava/lang/String;

    move-result-object v2

    invoke-interface {p0, v2}, Ljava/util/Set;->add(Ljava/lang/Object;)Z

    move-result v2

    if-eqz v2, :cond_0

    .line 257
    invoke-virtual {p1, v1}, Lfreemarker/template/SimpleSequence;->add(Ljava/lang/Object;)V

    .line 259
    .end local v1    # "tsm":Lfreemarker/template/TemplateScalarModel;
    :cond_0
    goto :goto_0

    .line 260
    :cond_1
    return-void
.end method

.method private initKeys()V
    .locals 3
    .annotation system Ldalvik/annotation/Throws;
        value = {
            Lfreemarker/template/TemplateModelException;
        }
    .end annotation

    .line 238
    iget-object v0, p0, Lfreemarker/core/AddConcatExpression$ConcatenatedHashEx;->keys:Lfreemarker/core/CollectionAndSequence;

    if-nez v0, :cond_0

    .line 239
    new-instance v0, Ljava/util/HashSet;

    invoke-direct {v0}, Ljava/util/HashSet;-><init>()V

    .line 240
    .local v0, "keySet":Ljava/util/HashSet;
    new-instance v1, Lfreemarker/template/SimpleSequence;

    const/16 v2, 0x20

    invoke-direct {v1, v2}, Lfreemarker/template/SimpleSequence;-><init>(I)V

    .line 241
    .local v1, "keySeq":Lfreemarker/template/SimpleSequence;
    iget-object v2, p0, Lfreemarker/core/AddConcatExpression$ConcatenatedHashEx;->left:Lfreemarker/template/TemplateHashModel;

    check-cast v2, Lfreemarker/template/TemplateHashModelEx;

    invoke-static {v0, v1, v2}, Lfreemarker/core/AddConcatExpression$ConcatenatedHashEx;->addKeys(Ljava/util/Set;Lfreemarker/template/SimpleSequence;Lfreemarker/template/TemplateHashModelEx;)V

    .line 242
    iget-object v2, p0, Lfreemarker/core/AddConcatExpression$ConcatenatedHashEx;->right:Lfreemarker/template/TemplateHashModel;

    check-cast v2, Lfreemarker/template/TemplateHashModelEx;

    invoke-static {v0, v1, v2}, Lfreemarker/core/AddConcatExpression$ConcatenatedHashEx;->addKeys(Ljava/util/Set;Lfreemarker/template/SimpleSequence;Lfreemarker/template/TemplateHashModelEx;)V

    .line 243
    invoke-virtual {v0}, Ljava/util/HashSet;->size()I

    move-result v2

    iput v2, p0, Lfreemarker/core/AddConcatExpression$ConcatenatedHashEx;->size:I

    .line 244
    new-instance v2, Lfreemarker/core/CollectionAndSequence;

    invoke-direct {v2, v1}, Lfreemarker/core/CollectionAndSequence;-><init>(Lfreemarker/template/TemplateSequenceModel;)V

    iput-object v2, p0, Lfreemarker/core/AddConcatExpression$ConcatenatedHashEx;->keys:Lfreemarker/core/CollectionAndSequence;

    .line 246
    .end local v0    # "keySet":Ljava/util/HashSet;
    .end local v1    # "keySeq":Lfreemarker/template/SimpleSequence;
    :cond_0
    return-void
.end method

.method private initValues()V
    .locals 4
    .annotation system Ldalvik/annotation/Throws;
        value = {
            Lfreemarker/template/TemplateModelException;
        }
    .end annotation

    .line 265
    iget-object v0, p0, Lfreemarker/core/AddConcatExpression$ConcatenatedHashEx;->values:Lfreemarker/core/CollectionAndSequence;

    if-nez v0, :cond_1

    .line 266
    new-instance v0, Lfreemarker/template/SimpleSequence;

    invoke-virtual {p0}, Lfreemarker/core/AddConcatExpression$ConcatenatedHashEx;->size()I

    move-result v1

    invoke-direct {v0, v1}, Lfreemarker/template/SimpleSequence;-><init>(I)V

    .line 269
    .local v0, "seq":Lfreemarker/template/SimpleSequence;
    iget-object v1, p0, Lfreemarker/core/AddConcatExpression$ConcatenatedHashEx;->keys:Lfreemarker/core/CollectionAndSequence;

    invoke-virtual {v1}, Lfreemarker/core/CollectionAndSequence;->size()I

    move-result v1

    .line 270
    .local v1, "ln":I
    const/4 v2, 0x0

    .local v2, "i":I
    :goto_0
    if-ge v2, v1, :cond_0

    .line 271
    iget-object v3, p0, Lfreemarker/core/AddConcatExpression$ConcatenatedHashEx;->keys:Lfreemarker/core/CollectionAndSequence;

    invoke-virtual {v3, v2}, Lfreemarker/core/CollectionAndSequence;->get(I)Lfreemarker/template/TemplateModel;

    move-result-object v3

    check-cast v3, Lfreemarker/template/TemplateScalarModel;

    invoke-interface {v3}, Lfreemarker/template/TemplateScalarModel;->getAsString()Ljava/lang/String;

    move-result-object v3

    invoke-virtual {p0, v3}, Lfreemarker/core/AddConcatExpression$ConcatenatedHashEx;->get(Ljava/lang/String;)Lfreemarker/template/TemplateModel;

    move-result-object v3

    invoke-virtual {v0, v3}, Lfreemarker/template/SimpleSequence;->add(Ljava/lang/Object;)V

    .line 270
    add-int/lit8 v2, v2, 0x1

    goto :goto_0

    .line 273
    .end local v2    # "i":I
    :cond_0
    new-instance v2, Lfreemarker/core/CollectionAndSequence;

    invoke-direct {v2, v0}, Lfreemarker/core/CollectionAndSequence;-><init>(Lfreemarker/template/TemplateSequenceModel;)V

    iput-object v2, p0, Lfreemarker/core/AddConcatExpression$ConcatenatedHashEx;->values:Lfreemarker/core/CollectionAndSequence;

    .line 275
    .end local v0    # "seq":Lfreemarker/template/SimpleSequence;
    .end local v1    # "ln":I
    :cond_1
    return-void
.end method


# virtual methods
.method public keys()Lfreemarker/template/TemplateCollectionModel;
    .locals 1
    .annotation system Ldalvik/annotation/Throws;
        value = {
            Lfreemarker/template/TemplateModelException;
        }
    .end annotation

    .line 224
    invoke-direct {p0}, Lfreemarker/core/AddConcatExpression$ConcatenatedHashEx;->initKeys()V

    .line 225
    iget-object v0, p0, Lfreemarker/core/AddConcatExpression$ConcatenatedHashEx;->keys:Lfreemarker/core/CollectionAndSequence;

    return-object v0
.end method

.method public size()I
    .locals 1
    .annotation system Ldalvik/annotation/Throws;
        value = {
            Lfreemarker/template/TemplateModelException;
        }
    .end annotation

    .line 217
    invoke-direct {p0}, Lfreemarker/core/AddConcatExpression$ConcatenatedHashEx;->initKeys()V

    .line 218
    iget v0, p0, Lfreemarker/core/AddConcatExpression$ConcatenatedHashEx;->size:I

    return v0
.end method

.method public values()Lfreemarker/template/TemplateCollectionModel;
    .locals 1
    .annotation system Ldalvik/annotation/Throws;
        value = {
            Lfreemarker/template/TemplateModelException;
        }
    .end annotation

    .line 231
    invoke-direct {p0}, Lfreemarker/core/AddConcatExpression$ConcatenatedHashEx;->initValues()V

    .line 232
    iget-object v0, p0, Lfreemarker/core/AddConcatExpression$ConcatenatedHashEx;->values:Lfreemarker/core/CollectionAndSequence;

    return-object v0
.end method
