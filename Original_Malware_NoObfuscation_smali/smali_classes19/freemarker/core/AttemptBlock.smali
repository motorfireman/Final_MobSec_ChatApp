.class final Lfreemarker/core/AttemptBlock;
.super Lfreemarker/core/TemplateElement;
.source "AttemptBlock.java"


# instance fields
.field private attemptBlock:Lfreemarker/core/TemplateElement;

.field private recoveryBlock:Lfreemarker/core/RecoveryBlock;


# direct methods
.method constructor <init>(Lfreemarker/core/TemplateElement;Lfreemarker/core/RecoveryBlock;)V
    .locals 1
    .param p1, "attemptBlock"    # Lfreemarker/core/TemplateElement;
    .param p2, "recoveryBlock"    # Lfreemarker/core/RecoveryBlock;

    .line 31
    invoke-direct {p0}, Lfreemarker/core/TemplateElement;-><init>()V

    .line 32
    iput-object p1, p0, Lfreemarker/core/AttemptBlock;->attemptBlock:Lfreemarker/core/TemplateElement;

    .line 33
    iput-object p2, p0, Lfreemarker/core/AttemptBlock;->recoveryBlock:Lfreemarker/core/RecoveryBlock;

    .line 34
    const/4 v0, 0x2

    invoke-virtual {p0, v0}, Lfreemarker/core/AttemptBlock;->setRegulatedChildBufferCapacity(I)V

    .line 35
    invoke-virtual {p0, p1}, Lfreemarker/core/AttemptBlock;->addRegulatedChild(Lfreemarker/core/TemplateElement;)V

    .line 36
    invoke-virtual {p0, p2}, Lfreemarker/core/AttemptBlock;->addRegulatedChild(Lfreemarker/core/TemplateElement;)V

    .line 37
    return-void
.end method


# virtual methods
.method accept(Lfreemarker/core/Environment;)V
    .locals 2
    .param p1, "env"    # Lfreemarker/core/Environment;
    .annotation system Ldalvik/annotation/Throws;
        value = {
            Lfreemarker/template/TemplateException;,
            Ljava/io/IOException;
        }
    .end annotation

    .line 41
    iget-object v0, p0, Lfreemarker/core/AttemptBlock;->attemptBlock:Lfreemarker/core/TemplateElement;

    iget-object v1, p0, Lfreemarker/core/AttemptBlock;->recoveryBlock:Lfreemarker/core/RecoveryBlock;

    invoke-virtual {p1, v0, v1}, Lfreemarker/core/Environment;->visitAttemptRecover(Lfreemarker/core/TemplateElement;Lfreemarker/core/RecoveryBlock;)V

    .line 42
    return-void
.end method

.method protected dump(Z)Ljava/lang/String;
    .locals 4
    .param p1, "canonical"    # Z

    .line 45
    if-nez p1, :cond_0

    .line 46
    invoke-virtual {p0}, Lfreemarker/core/AttemptBlock;->getNodeTypeSymbol()Ljava/lang/String;

    move-result-object v0

    return-object v0

    .line 48
    :cond_0
    new-instance v0, Ljava/lang/StringBuffer;

    invoke-direct {v0}, Ljava/lang/StringBuffer;-><init>()V

    .line 49
    .local v0, "buf":Ljava/lang/StringBuffer;
    const-string v1, "<"

    invoke-virtual {v0, v1}, Ljava/lang/StringBuffer;->append(Ljava/lang/String;)Ljava/lang/StringBuffer;

    move-result-object v1

    invoke-virtual {p0}, Lfreemarker/core/AttemptBlock;->getNodeTypeSymbol()Ljava/lang/String;

    move-result-object v2

    invoke-virtual {v1, v2}, Ljava/lang/StringBuffer;->append(Ljava/lang/String;)Ljava/lang/StringBuffer;

    move-result-object v1

    const-string v2, ">"

    invoke-virtual {v1, v2}, Ljava/lang/StringBuffer;->append(Ljava/lang/String;)Ljava/lang/StringBuffer;

    .line 50
    iget-object v1, p0, Lfreemarker/core/AttemptBlock;->attemptBlock:Lfreemarker/core/TemplateElement;

    if-eqz v1, :cond_1

    .line 51
    invoke-virtual {v1}, Lfreemarker/core/TemplateElement;->getCanonicalForm()Ljava/lang/String;

    move-result-object v1

    invoke-virtual {v0, v1}, Ljava/lang/StringBuffer;->append(Ljava/lang/String;)Ljava/lang/StringBuffer;

    .line 53
    :cond_1
    iget-object v1, p0, Lfreemarker/core/AttemptBlock;->recoveryBlock:Lfreemarker/core/RecoveryBlock;

    if-eqz v1, :cond_2

    .line 54
    invoke-virtual {v1}, Lfreemarker/core/RecoveryBlock;->getCanonicalForm()Ljava/lang/String;

    move-result-object v1

    invoke-virtual {v0, v1}, Ljava/lang/StringBuffer;->append(Ljava/lang/String;)Ljava/lang/StringBuffer;

    .line 56
    :cond_2
    const-string v1, "</"

    invoke-virtual {v0, v1}, Ljava/lang/StringBuffer;->append(Ljava/lang/String;)Ljava/lang/StringBuffer;

    move-result-object v1

    invoke-virtual {p0}, Lfreemarker/core/AttemptBlock;->getNodeTypeSymbol()Ljava/lang/String;

    move-result-object v3

    invoke-virtual {v1, v3}, Ljava/lang/StringBuffer;->append(Ljava/lang/String;)Ljava/lang/StringBuffer;

    move-result-object v1

    invoke-virtual {v1, v2}, Ljava/lang/StringBuffer;->append(Ljava/lang/String;)Ljava/lang/StringBuffer;

    .line 57
    invoke-virtual {v0}, Ljava/lang/StringBuffer;->toString()Ljava/lang/String;

    move-result-object v1

    return-object v1
.end method

.method getNodeTypeSymbol()Ljava/lang/String;
    .locals 1

    .line 76
    const-string v0, "#attempt"

    return-object v0
.end method

.method getParameterCount()I
    .locals 1

    .line 62
    const/4 v0, 0x1

    return v0
.end method

.method getParameterRole(I)Lfreemarker/core/ParameterRole;
    .locals 1
    .param p1, "idx"    # I

    .line 71
    if-nez p1, :cond_0

    .line 72
    sget-object v0, Lfreemarker/core/ParameterRole;->ERROR_HANDLER:Lfreemarker/core/ParameterRole;

    return-object v0

    .line 71
    :cond_0
    new-instance v0, Ljava/lang/IndexOutOfBoundsException;

    invoke-direct {v0}, Ljava/lang/IndexOutOfBoundsException;-><init>()V

    throw v0
.end method

.method getParameterValue(I)Ljava/lang/Object;
    .locals 1
    .param p1, "idx"    # I

    .line 66
    if-nez p1, :cond_0

    .line 67
    iget-object v0, p0, Lfreemarker/core/AttemptBlock;->recoveryBlock:Lfreemarker/core/RecoveryBlock;

    return-object v0

    .line 66
    :cond_0
    new-instance v0, Ljava/lang/IndexOutOfBoundsException;

    invoke-direct {v0}, Ljava/lang/IndexOutOfBoundsException;-><init>()V

    throw v0
.end method

.method isNestedBlockRepeater()Z
    .locals 1

    .line 84
    const/4 v0, 0x0

    return v0
.end method

.method isShownInStackTrace()Z
    .locals 1

    .line 80
    const/4 v0, 0x0

    return v0
.end method
