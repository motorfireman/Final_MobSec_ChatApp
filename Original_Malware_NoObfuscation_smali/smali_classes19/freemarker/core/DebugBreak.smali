.class public Lfreemarker/core/DebugBreak;
.super Lfreemarker/core/TemplateElement;
.source "DebugBreak.java"


# direct methods
.method public constructor <init>(Lfreemarker/core/TemplateElement;)V
    .locals 0
    .param p1, "nestedBlock"    # Lfreemarker/core/TemplateElement;

    .line 33
    invoke-direct {p0}, Lfreemarker/core/TemplateElement;-><init>()V

    .line 34
    invoke-virtual {p0, p1}, Lfreemarker/core/DebugBreak;->setNestedBlock(Lfreemarker/core/TemplateElement;)V

    .line 35
    invoke-virtual {p0, p1}, Lfreemarker/core/DebugBreak;->copyLocationFrom(Lfreemarker/core/TemplateObject;)Lfreemarker/core/TemplateObject;

    .line 36
    return-void
.end method


# virtual methods
.method protected accept(Lfreemarker/core/Environment;)V
    .locals 2
    .param p1, "env"    # Lfreemarker/core/Environment;
    .annotation system Ldalvik/annotation/Throws;
        value = {
            Lfreemarker/template/TemplateException;,
            Ljava/io/IOException;
        }
    .end annotation

    .line 40
    nop

    .line 41
    invoke-virtual {p0}, Lfreemarker/core/DebugBreak;->getTemplate()Lfreemarker/template/Template;

    move-result-object v0

    invoke-virtual {v0}, Lfreemarker/template/Template;->getSourceName()Ljava/lang/String;

    move-result-object v0

    invoke-virtual {p0}, Lfreemarker/core/DebugBreak;->getNestedBlock()Lfreemarker/core/TemplateElement;

    move-result-object v1

    invoke-virtual {v1}, Lfreemarker/core/TemplateElement;->getBeginLine()I

    move-result v1

    .line 40
    invoke-static {p1, v0, v1}, Lfreemarker/debug/impl/DebuggerService;->suspendEnvironment(Lfreemarker/core/Environment;Ljava/lang/String;I)Z

    move-result v0

    if-nez v0, :cond_0

    .line 43
    invoke-virtual {p0}, Lfreemarker/core/DebugBreak;->getNestedBlock()Lfreemarker/core/TemplateElement;

    move-result-object v0

    invoke-virtual {v0, p1}, Lfreemarker/core/TemplateElement;->accept(Lfreemarker/core/Environment;)V

    .line 49
    return-void

    .line 47
    :cond_0
    new-instance v0, Lfreemarker/core/StopException;

    const-string v1, "Stopped by debugger"

    invoke-direct {v0, p1, v1}, Lfreemarker/core/StopException;-><init>(Lfreemarker/core/Environment;Ljava/lang/String;)V

    throw v0
.end method

.method protected dump(Z)Ljava/lang/String;
    .locals 3
    .param p1, "canonical"    # Z

    .line 52
    const-string v0, "debug break"

    if-eqz p1, :cond_1

    .line 53
    new-instance v1, Ljava/lang/StringBuffer;

    invoke-direct {v1}, Ljava/lang/StringBuffer;-><init>()V

    .line 54
    .local v1, "sb":Ljava/lang/StringBuffer;
    const-string v2, "<#-- "

    invoke-virtual {v1, v2}, Ljava/lang/StringBuffer;->append(Ljava/lang/String;)Ljava/lang/StringBuffer;

    .line 55
    invoke-virtual {v1, v0}, Ljava/lang/StringBuffer;->append(Ljava/lang/String;)Ljava/lang/StringBuffer;

    .line 56
    invoke-virtual {p0}, Lfreemarker/core/DebugBreak;->getNestedBlock()Lfreemarker/core/TemplateElement;

    move-result-object v0

    if-nez v0, :cond_0

    .line 57
    const-string v0, " /-->"

    invoke-virtual {v1, v0}, Ljava/lang/StringBuffer;->append(Ljava/lang/String;)Ljava/lang/StringBuffer;

    goto :goto_0

    .line 59
    :cond_0
    const-string v0, " -->"

    invoke-virtual {v1, v0}, Ljava/lang/StringBuffer;->append(Ljava/lang/String;)Ljava/lang/StringBuffer;

    .line 60
    invoke-virtual {p0}, Lfreemarker/core/DebugBreak;->getNestedBlock()Lfreemarker/core/TemplateElement;

    move-result-object v0

    invoke-virtual {v0}, Lfreemarker/core/TemplateElement;->getCanonicalForm()Ljava/lang/String;

    move-result-object v0

    invoke-virtual {v1, v0}, Ljava/lang/StringBuffer;->append(Ljava/lang/String;)Ljava/lang/StringBuffer;

    .line 61
    const-string v0, "<#--/ debug break -->"

    invoke-virtual {v1, v0}, Ljava/lang/StringBuffer;->append(Ljava/lang/String;)Ljava/lang/StringBuffer;

    .line 63
    :goto_0
    invoke-virtual {v1}, Ljava/lang/StringBuffer;->toString()Ljava/lang/String;

    move-result-object v0

    return-object v0

    .line 65
    .end local v1    # "sb":Ljava/lang/StringBuffer;
    :cond_1
    return-object v0
.end method

.method getNodeTypeSymbol()Ljava/lang/String;
    .locals 1

    .line 70
    const-string v0, "#debug_break"

    return-object v0
.end method

.method getParameterCount()I
    .locals 1

    .line 74
    const/4 v0, 0x0

    return v0
.end method

.method getParameterRole(I)Lfreemarker/core/ParameterRole;
    .locals 1
    .param p1, "idx"    # I

    .line 82
    new-instance v0, Ljava/lang/IndexOutOfBoundsException;

    invoke-direct {v0}, Ljava/lang/IndexOutOfBoundsException;-><init>()V

    throw v0
.end method

.method getParameterValue(I)Ljava/lang/Object;
    .locals 1
    .param p1, "idx"    # I

    .line 78
    new-instance v0, Ljava/lang/IndexOutOfBoundsException;

    invoke-direct {v0}, Ljava/lang/IndexOutOfBoundsException;-><init>()V

    throw v0
.end method

.method isNestedBlockRepeater()Z
    .locals 1

    .line 86
    const/4 v0, 0x0

    return v0
.end method
