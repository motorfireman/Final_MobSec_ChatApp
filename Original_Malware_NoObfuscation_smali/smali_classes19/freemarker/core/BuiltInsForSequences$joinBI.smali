.class Lfreemarker/core/BuiltInsForSequences$joinBI;
.super Lfreemarker/core/BuiltIn;
.source "BuiltInsForSequences.java"


# annotations
.annotation system Ldalvik/annotation/EnclosingClass;
    value = Lfreemarker/core/BuiltInsForSequences;
.end annotation

.annotation system Ldalvik/annotation/InnerClass;
    accessFlags = 0x8
    name = "joinBI"
.end annotation

.annotation system Ldalvik/annotation/MemberClasses;
    value = {
        Lfreemarker/core/BuiltInsForSequences$joinBI$BIMethodForCollection;
    }
.end annotation


# direct methods
.method constructor <init>()V
    .locals 0

    .line 150
    invoke-direct {p0}, Lfreemarker/core/BuiltIn;-><init>()V

    .line 152
    return-void
.end method


# virtual methods
.method _eval(Lfreemarker/core/Environment;)Lfreemarker/template/TemplateModel;
    .locals 5
    .param p1, "env"    # Lfreemarker/core/Environment;
    .annotation system Ldalvik/annotation/Throws;
        value = {
            Lfreemarker/template/TemplateException;
        }
    .end annotation

    .line 206
    iget-object v0, p0, Lfreemarker/core/BuiltInsForSequences$joinBI;->target:Lfreemarker/core/Expression;

    invoke-virtual {v0, p1}, Lfreemarker/core/Expression;->eval(Lfreemarker/core/Environment;)Lfreemarker/template/TemplateModel;

    move-result-object v0

    .line 207
    .local v0, "model":Lfreemarker/template/TemplateModel;
    instance-of v1, v0, Lfreemarker/template/TemplateCollectionModel;

    const/4 v2, 0x0

    if-eqz v1, :cond_1

    .line 208
    instance-of v1, v0, Lfreemarker/core/RightUnboundedRangeModel;

    if-nez v1, :cond_0

    .line 212
    new-instance v1, Lfreemarker/core/BuiltInsForSequences$joinBI$BIMethodForCollection;

    move-object v3, v0

    check-cast v3, Lfreemarker/template/TemplateCollectionModel;

    invoke-direct {v1, p0, p1, v3, v2}, Lfreemarker/core/BuiltInsForSequences$joinBI$BIMethodForCollection;-><init>(Lfreemarker/core/BuiltInsForSequences$joinBI;Lfreemarker/core/Environment;Lfreemarker/template/TemplateCollectionModel;Lfreemarker/core/BuiltInsForSequences$1;)V

    return-object v1

    .line 209
    :cond_0
    new-instance v1, Lfreemarker/core/_TemplateModelException;

    const-string v2, "The sequence to join was right-unbounded numerical range, thus it\'s infinitely long."

    invoke-direct {v1, v2}, Lfreemarker/core/_TemplateModelException;-><init>(Ljava/lang/String;)V

    throw v1

    .line 213
    :cond_1
    instance-of v1, v0, Lfreemarker/template/TemplateSequenceModel;

    if-eqz v1, :cond_2

    .line 214
    new-instance v1, Lfreemarker/core/BuiltInsForSequences$joinBI$BIMethodForCollection;

    new-instance v3, Lfreemarker/core/CollectionAndSequence;

    move-object v4, v0

    check-cast v4, Lfreemarker/template/TemplateSequenceModel;

    invoke-direct {v3, v4}, Lfreemarker/core/CollectionAndSequence;-><init>(Lfreemarker/template/TemplateSequenceModel;)V

    invoke-direct {v1, p0, p1, v3, v2}, Lfreemarker/core/BuiltInsForSequences$joinBI$BIMethodForCollection;-><init>(Lfreemarker/core/BuiltInsForSequences$joinBI;Lfreemarker/core/Environment;Lfreemarker/template/TemplateCollectionModel;Lfreemarker/core/BuiltInsForSequences$1;)V

    return-object v1

    .line 216
    :cond_2
    new-instance v1, Lfreemarker/core/NonSequenceOrCollectionException;

    iget-object v2, p0, Lfreemarker/core/BuiltInsForSequences$joinBI;->target:Lfreemarker/core/Expression;

    invoke-direct {v1, v2, v0, p1}, Lfreemarker/core/NonSequenceOrCollectionException;-><init>(Lfreemarker/core/Expression;Lfreemarker/template/TemplateModel;Lfreemarker/core/Environment;)V

    throw v1
.end method
