.class Lfreemarker/core/EvalUtil;
.super Ljava/lang/Object;
.source "EvalUtil.java"


# static fields
.field static final CMP_OP_EQUALS:I = 0x1

.field static final CMP_OP_GREATER_THAN:I = 0x4

.field static final CMP_OP_GREATER_THAN_EQUALS:I = 0x6

.field static final CMP_OP_LESS_THAN:I = 0x3

.field static final CMP_OP_LESS_THAN_EQUALS:I = 0x5

.field static final CMP_OP_NOT_EQUALS:I = 0x2

.field private static final VALUE_OF_THE_COMPARISON_IS_UNKNOWN_DATE_LIKE:Ljava/lang/String; = "value of the comparison is a date-like value where it\'s not known if it\'s a date (no time part), time, or date-time, and thus can\'t be used in a comparison."

.field static synthetic class$java$lang$Number:Ljava/lang/Class;

.field static synthetic class$java$lang$String:Ljava/lang/Class;

.field static synthetic class$java$util$Date:Ljava/lang/Class;


# direct methods
.method private constructor <init>()V
    .locals 0

    .line 47
    invoke-direct {p0}, Ljava/lang/Object;-><init>()V

    return-void
.end method

.method static synthetic class$(Ljava/lang/String;)Ljava/lang/Class;
    .locals 2
    .param p0, "x0"    # Ljava/lang/String;

    .line 61
    :try_start_0
    invoke-static {p0}, Ljava/lang/Class;->forName(Ljava/lang/String;)Ljava/lang/Class;

    move-result-object v0
    :try_end_0
    .catch Ljava/lang/ClassNotFoundException; {:try_start_0 .. :try_end_0} :catch_0

    return-object v0

    :catch_0
    move-exception v0

    new-instance v1, Ljava/lang/NoClassDefFoundError;

    invoke-direct {v1}, Ljava/lang/NoClassDefFoundError;-><init>()V

    invoke-virtual {v1, v0}, Ljava/lang/NoClassDefFoundError;->initCause(Ljava/lang/Throwable;)Ljava/lang/Throwable;

    move-result-object v0

    throw v0
.end method

.method private static cmpOpToString(ILjava/lang/String;)Ljava/lang/String;
    .locals 1
    .param p0, "operator"    # I
    .param p1, "operatorString"    # Ljava/lang/String;

    .line 328
    if-eqz p1, :cond_0

    .line 329
    return-object p1

    .line 331
    :cond_0
    packed-switch p0, :pswitch_data_0

    .line 338
    const-string v0, "???"

    return-object v0

    .line 337
    :pswitch_0
    const-string v0, "greater-than-equals"

    return-object v0

    .line 336
    :pswitch_1
    const-string v0, "less-than-equals"

    return-object v0

    .line 335
    :pswitch_2
    const-string v0, "greater-than"

    return-object v0

    .line 334
    :pswitch_3
    const-string v0, "less-than"

    return-object v0

    .line 333
    :pswitch_4
    const-string v0, "not-equals"

    return-object v0

    .line 332
    :pswitch_5
    const-string v0, "equals"

    return-object v0

    nop

    :pswitch_data_0
    .packed-switch 0x1
        :pswitch_5
        :pswitch_4
        :pswitch_3
        :pswitch_2
        :pswitch_1
        :pswitch_0
    .end packed-switch
.end method

.method static coerceModelToString(Lfreemarker/template/TemplateModel;Lfreemarker/core/Expression;Ljava/lang/String;Lfreemarker/core/Environment;)Ljava/lang/String;
    .locals 5
    .param p0, "tm"    # Lfreemarker/template/TemplateModel;
    .param p1, "exp"    # Lfreemarker/core/Expression;
    .param p2, "seqHint"    # Ljava/lang/String;
    .param p3, "env"    # Lfreemarker/core/Environment;
    .annotation system Ldalvik/annotation/Throws;
        value = {
            Lfreemarker/template/TemplateException;
        }
    .end annotation

    .line 344
    instance-of v0, p0, Lfreemarker/template/TemplateNumberModel;

    if-eqz v0, :cond_0

    .line 345
    move-object v0, p0

    check-cast v0, Lfreemarker/template/TemplateNumberModel;

    invoke-static {v0, p1}, Lfreemarker/core/EvalUtil;->modelToNumber(Lfreemarker/template/TemplateNumberModel;Lfreemarker/core/Expression;)Ljava/lang/Number;

    move-result-object v0

    invoke-virtual {p3, v0}, Lfreemarker/core/Environment;->formatNumber(Ljava/lang/Number;)Ljava/lang/String;

    move-result-object v0

    return-object v0

    .line 346
    :cond_0
    instance-of v0, p0, Lfreemarker/template/TemplateDateModel;

    if-eqz v0, :cond_1

    .line 347
    move-object v0, p0

    check-cast v0, Lfreemarker/template/TemplateDateModel;

    invoke-virtual {p3, v0, p1}, Lfreemarker/core/Environment;->formatDate(Lfreemarker/template/TemplateDateModel;Lfreemarker/core/Expression;)Ljava/lang/String;

    move-result-object v0

    return-object v0

    .line 348
    :cond_1
    instance-of v0, p0, Lfreemarker/template/TemplateScalarModel;

    if-eqz v0, :cond_2

    .line 349
    move-object v0, p0

    check-cast v0, Lfreemarker/template/TemplateScalarModel;

    invoke-static {v0, p1, p3}, Lfreemarker/core/EvalUtil;->modelToString(Lfreemarker/template/TemplateScalarModel;Lfreemarker/core/Expression;Lfreemarker/core/Environment;)Ljava/lang/String;

    move-result-object v0

    return-object v0

    .line 350
    :cond_2
    const-string v0, ""

    if-nez p0, :cond_5

    .line 351
    invoke-virtual {p3}, Lfreemarker/core/Environment;->isClassicCompatible()Z

    move-result v1

    if-eqz v1, :cond_3

    .line 352
    return-object v0

    .line 354
    :cond_3
    if-eqz p1, :cond_4

    .line 355
    invoke-static {p1, p3}, Lfreemarker/core/InvalidReferenceException;->getInstance(Lfreemarker/core/Expression;Lfreemarker/core/Environment;)Lfreemarker/core/InvalidReferenceException;

    move-result-object v0

    throw v0

    .line 357
    :cond_4
    new-instance v0, Lfreemarker/core/InvalidReferenceException;

    const-string v1, "Null/missing value (no more informatoin avilable)"

    invoke-direct {v0, v1, p3}, Lfreemarker/core/InvalidReferenceException;-><init>(Ljava/lang/String;Lfreemarker/core/Environment;)V

    throw v0

    .line 362
    :cond_5
    instance-of v1, p0, Lfreemarker/template/TemplateBooleanModel;

    if-eqz v1, :cond_c

    .line 366
    move-object v1, p0

    check-cast v1, Lfreemarker/template/TemplateBooleanModel;

    invoke-interface {v1}, Lfreemarker/template/TemplateBooleanModel;->getAsBoolean()Z

    move-result v1

    .line 367
    .local v1, "booleanValue":Z
    invoke-virtual {p3}, Lfreemarker/core/Environment;->getClassicCompatibleAsInt()I

    move-result v2

    .line 368
    .local v2, "compatMode":I
    if-nez v2, :cond_6

    .line 369
    const/4 v0, 0x0

    invoke-virtual {p3, v1, v0}, Lfreemarker/core/Environment;->formatBoolean(ZZ)Ljava/lang/String;

    move-result-object v0

    return-object v0

    .line 371
    :cond_6
    const/4 v3, 0x1

    const-string/jumbo v4, "true"

    if-ne v2, v3, :cond_8

    .line 372
    if-eqz v1, :cond_7

    move-object v0, v4

    :cond_7
    return-object v0

    .line 373
    :cond_8
    const/4 v3, 0x2

    if-ne v2, v3, :cond_b

    .line 374
    instance-of v3, p0, Lfreemarker/ext/beans/BeanModel;

    if-eqz v3, :cond_9

    .line 376
    move-object v0, p0

    check-cast v0, Lfreemarker/ext/beans/BeanModel;

    invoke-static {v0}, Lfreemarker/ext/beans/_BeansAPI;->getAsClassicCompatibleString(Lfreemarker/ext/beans/BeanModel;)Ljava/lang/String;

    move-result-object v0

    return-object v0

    .line 378
    :cond_9
    if-eqz v1, :cond_a

    move-object v0, v4

    :cond_a
    return-object v0

    .line 381
    :cond_b
    new-instance v0, Lfreemarker/core/BugException;

    new-instance v3, Ljava/lang/StringBuffer;

    invoke-direct {v3}, Ljava/lang/StringBuffer;-><init>()V

    const-string v4, "Unsupported classic_compatible variation: "

    invoke-virtual {v3, v4}, Ljava/lang/StringBuffer;->append(Ljava/lang/String;)Ljava/lang/StringBuffer;

    move-result-object v3

    invoke-virtual {v3, v2}, Ljava/lang/StringBuffer;->append(I)Ljava/lang/StringBuffer;

    move-result-object v3

    invoke-virtual {v3}, Ljava/lang/StringBuffer;->toString()Ljava/lang/String;

    move-result-object v3

    invoke-direct {v0, v3}, Lfreemarker/core/BugException;-><init>(Ljava/lang/String;)V

    throw v0

    .line 385
    .end local v1    # "booleanValue":Z
    .end local v2    # "compatMode":I
    :cond_c
    invoke-virtual {p3}, Lfreemarker/core/Environment;->isClassicCompatible()Z

    move-result v0

    if-eqz v0, :cond_d

    instance-of v0, p0, Lfreemarker/ext/beans/BeanModel;

    if-eqz v0, :cond_d

    .line 386
    move-object v0, p0

    check-cast v0, Lfreemarker/ext/beans/BeanModel;

    invoke-static {v0}, Lfreemarker/ext/beans/_BeansAPI;->getAsClassicCompatibleString(Lfreemarker/ext/beans/BeanModel;)Ljava/lang/String;

    move-result-object v0

    return-object v0

    .line 387
    :cond_d
    if-eqz p2, :cond_f

    instance-of v0, p0, Lfreemarker/template/TemplateSequenceModel;

    if-nez v0, :cond_e

    instance-of v0, p0, Lfreemarker/template/TemplateCollectionModel;

    if-eqz v0, :cond_f

    .line 388
    :cond_e
    new-instance v0, Lfreemarker/core/NonStringException;

    invoke-direct {v0, p1, p0, p2, p3}, Lfreemarker/core/NonStringException;-><init>(Lfreemarker/core/Expression;Lfreemarker/template/TemplateModel;Ljava/lang/String;Lfreemarker/core/Environment;)V

    throw v0

    .line 390
    :cond_f
    new-instance v0, Lfreemarker/core/NonStringException;

    invoke-direct {v0, p1, p0, p3}, Lfreemarker/core/NonStringException;-><init>(Lfreemarker/core/Expression;Lfreemarker/template/TemplateModel;Lfreemarker/core/Environment;)V

    throw v0
.end method

.method static compare(Lfreemarker/core/Expression;ILjava/lang/String;Lfreemarker/core/Expression;Lfreemarker/core/Expression;Lfreemarker/core/Environment;)Z
    .locals 17
    .param p0, "leftExp"    # Lfreemarker/core/Expression;
    .param p1, "operator"    # I
    .param p2, "operatorString"    # Ljava/lang/String;
    .param p3, "rightExp"    # Lfreemarker/core/Expression;
    .param p4, "defaultBlamed"    # Lfreemarker/core/Expression;
    .param p5, "env"    # Lfreemarker/core/Environment;
    .annotation system Ldalvik/annotation/Throws;
        value = {
            Lfreemarker/template/TemplateException;
        }
    .end annotation

    .line 110
    move-object/from16 v12, p5

    move-object/from16 v13, p0

    invoke-virtual {v13, v12}, Lfreemarker/core/Expression;->eval(Lfreemarker/core/Environment;)Lfreemarker/template/TemplateModel;

    move-result-object v14

    .line 111
    .local v14, "ltm":Lfreemarker/template/TemplateModel;
    move-object/from16 v15, p3

    invoke-virtual {v15, v12}, Lfreemarker/core/Expression;->eval(Lfreemarker/core/Environment;)Lfreemarker/template/TemplateModel;

    move-result-object v16

    .line 112
    .local v16, "rtm":Lfreemarker/template/TemplateModel;
    const/4 v7, 0x0

    const/4 v8, 0x0

    const/4 v9, 0x0

    const/4 v10, 0x0

    move-object v0, v14

    move-object/from16 v1, p0

    move/from16 v2, p1

    move-object/from16 v3, p2

    move-object/from16 v4, v16

    move-object/from16 v5, p3

    move-object/from16 v6, p4

    move-object/from16 v11, p5

    invoke-static/range {v0 .. v11}, Lfreemarker/core/EvalUtil;->compare(Lfreemarker/template/TemplateModel;Lfreemarker/core/Expression;ILjava/lang/String;Lfreemarker/template/TemplateModel;Lfreemarker/core/Expression;Lfreemarker/core/Expression;ZZZZLfreemarker/core/Environment;)Z

    move-result v0

    return v0
.end method

.method static compare(Lfreemarker/template/TemplateModel;ILfreemarker/template/TemplateModel;Lfreemarker/core/Environment;)Z
    .locals 12
    .param p0, "leftValue"    # Lfreemarker/template/TemplateModel;
    .param p1, "operator"    # I
    .param p2, "rightValue"    # Lfreemarker/template/TemplateModel;
    .param p3, "env"    # Lfreemarker/core/Environment;
    .annotation system Ldalvik/annotation/Throws;
        value = {
            Lfreemarker/template/TemplateException;
        }
    .end annotation

    .line 134
    const/4 v1, 0x0

    const/4 v3, 0x0

    const/4 v5, 0x0

    const/4 v6, 0x0

    const/4 v7, 0x0

    const/4 v8, 0x0

    const/4 v9, 0x0

    const/4 v10, 0x0

    move-object v0, p0

    move v2, p1

    move-object v4, p2

    move-object v11, p3

    invoke-static/range {v0 .. v11}, Lfreemarker/core/EvalUtil;->compare(Lfreemarker/template/TemplateModel;Lfreemarker/core/Expression;ILjava/lang/String;Lfreemarker/template/TemplateModel;Lfreemarker/core/Expression;Lfreemarker/core/Expression;ZZZZLfreemarker/core/Environment;)Z

    move-result v0

    return v0
.end method

.method static compare(Lfreemarker/template/TemplateModel;Lfreemarker/core/Expression;ILjava/lang/String;Lfreemarker/template/TemplateModel;Lfreemarker/core/Expression;Lfreemarker/core/Expression;ZZZZLfreemarker/core/Environment;)Z
    .locals 20
    .param p0, "leftValue"    # Lfreemarker/template/TemplateModel;
    .param p1, "leftExp"    # Lfreemarker/core/Expression;
    .param p2, "operator"    # I
    .param p3, "operatorString"    # Ljava/lang/String;
    .param p4, "rightValue"    # Lfreemarker/template/TemplateModel;
    .param p5, "rightExp"    # Lfreemarker/core/Expression;
    .param p6, "defaultBlamed"    # Lfreemarker/core/Expression;
    .param p7, "quoteOperandsInErrors"    # Z
    .param p8, "typeMismatchMeansNotEqual"    # Z
    .param p9, "leftNullReturnsFalse"    # Z
    .param p10, "rightNullReturnsFalse"    # Z
    .param p11, "env"    # Lfreemarker/core/Environment;
    .annotation system Ldalvik/annotation/Throws;
        value = {
            Lfreemarker/template/TemplateException;
        }
    .end annotation

    .line 187
    move-object/from16 v1, p1

    move/from16 v2, p2

    move-object/from16 v3, p5

    move-object/from16 v4, p6

    move-object/from16 v5, p11

    const/4 v6, 0x0

    if-nez p0, :cond_3

    .line 188
    if-eqz v5, :cond_0

    invoke-virtual/range {p11 .. p11}, Lfreemarker/core/Environment;->isClassicCompatible()Z

    move-result v0

    if-eqz v0, :cond_0

    .line 189
    sget-object v0, Lfreemarker/template/TemplateScalarModel;->EMPTY_STRING:Lfreemarker/template/TemplateModel;

    move-object v7, v0

    .end local p0    # "leftValue":Lfreemarker/template/TemplateModel;
    .local v0, "leftValue":Lfreemarker/template/TemplateModel;
    goto :goto_0

    .line 191
    .end local v0    # "leftValue":Lfreemarker/template/TemplateModel;
    .restart local p0    # "leftValue":Lfreemarker/template/TemplateModel;
    :cond_0
    if-eqz p9, :cond_1

    .line 192
    return v6

    .line 194
    :cond_1
    if-eqz v1, :cond_2

    .line 195
    invoke-static {v1, v5}, Lfreemarker/core/InvalidReferenceException;->getInstance(Lfreemarker/core/Expression;Lfreemarker/core/Environment;)Lfreemarker/core/InvalidReferenceException;

    move-result-object v0

    throw v0

    .line 197
    :cond_2
    new-instance v0, Lfreemarker/core/_MiscTemplateException;

    const-string v6, "The left operand of the comparison was undefined or null."

    invoke-direct {v0, v4, v5, v6}, Lfreemarker/core/_MiscTemplateException;-><init>(Lfreemarker/core/Expression;Lfreemarker/core/Environment;Ljava/lang/String;)V

    throw v0

    .line 187
    :cond_3
    move-object/from16 v7, p0

    .line 204
    .end local p0    # "leftValue":Lfreemarker/template/TemplateModel;
    .local v7, "leftValue":Lfreemarker/template/TemplateModel;
    :goto_0
    if-nez p4, :cond_7

    .line 205
    if-eqz v5, :cond_4

    invoke-virtual/range {p11 .. p11}, Lfreemarker/core/Environment;->isClassicCompatible()Z

    move-result v0

    if-eqz v0, :cond_4

    .line 206
    sget-object v0, Lfreemarker/template/TemplateScalarModel;->EMPTY_STRING:Lfreemarker/template/TemplateModel;

    move-object v8, v0

    .end local p4    # "rightValue":Lfreemarker/template/TemplateModel;
    .local v0, "rightValue":Lfreemarker/template/TemplateModel;
    goto :goto_1

    .line 208
    .end local v0    # "rightValue":Lfreemarker/template/TemplateModel;
    .restart local p4    # "rightValue":Lfreemarker/template/TemplateModel;
    :cond_4
    if-eqz p10, :cond_5

    .line 209
    return v6

    .line 211
    :cond_5
    if-eqz v3, :cond_6

    .line 212
    invoke-static {v3, v5}, Lfreemarker/core/InvalidReferenceException;->getInstance(Lfreemarker/core/Expression;Lfreemarker/core/Environment;)Lfreemarker/core/InvalidReferenceException;

    move-result-object v0

    throw v0

    .line 214
    :cond_6
    new-instance v0, Lfreemarker/core/_MiscTemplateException;

    const-string v6, "The right operand of the comparison was undefined or null."

    invoke-direct {v0, v4, v5, v6}, Lfreemarker/core/_MiscTemplateException;-><init>(Lfreemarker/core/Expression;Lfreemarker/core/Environment;Ljava/lang/String;)V

    throw v0

    .line 204
    :cond_7
    move-object/from16 v8, p4

    .line 222
    .end local p4    # "rightValue":Lfreemarker/template/TemplateModel;
    .local v8, "rightValue":Lfreemarker/template/TemplateModel;
    :goto_1
    instance-of v0, v7, Lfreemarker/template/TemplateNumberModel;

    const/4 v9, 0x2

    const/4 v10, 0x1

    if-eqz v0, :cond_a

    instance-of v0, v8, Lfreemarker/template/TemplateNumberModel;

    if-eqz v0, :cond_a

    .line 223
    move-object v0, v7

    check-cast v0, Lfreemarker/template/TemplateNumberModel;

    invoke-static {v0, v1}, Lfreemarker/core/EvalUtil;->modelToNumber(Lfreemarker/template/TemplateNumberModel;Lfreemarker/core/Expression;)Ljava/lang/Number;

    move-result-object v11

    .line 224
    .local v11, "leftNum":Ljava/lang/Number;
    move-object v0, v8

    check-cast v0, Lfreemarker/template/TemplateNumberModel;

    invoke-static {v0, v3}, Lfreemarker/core/EvalUtil;->modelToNumber(Lfreemarker/template/TemplateNumberModel;Lfreemarker/core/Expression;)Ljava/lang/Number;

    move-result-object v12

    .line 225
    .local v12, "rightNum":Ljava/lang/Number;
    if-eqz v5, :cond_8

    .line 227
    invoke-virtual/range {p11 .. p11}, Lfreemarker/core/Environment;->getArithmeticEngine()Lfreemarker/core/ArithmeticEngine;

    move-result-object v0

    goto :goto_2

    :cond_8
    if-eqz v1, :cond_9

    .line 229
    invoke-virtual/range {p1 .. p1}, Lfreemarker/core/Expression;->getTemplate()Lfreemarker/template/Template;

    move-result-object v0

    invoke-virtual {v0}, Lfreemarker/template/Template;->getArithmeticEngine()Lfreemarker/core/ArithmeticEngine;

    move-result-object v0

    goto :goto_2

    :cond_9
    sget-object v0, Lfreemarker/core/ArithmeticEngine;->BIGDECIMAL_ENGINE:Lfreemarker/core/ArithmeticEngine$BigDecimalEngine;

    :goto_2
    move-object v13, v0

    .line 232
    .local v13, "ae":Lfreemarker/core/ArithmeticEngine;
    :try_start_0
    invoke-virtual {v13, v11, v12}, Lfreemarker/core/ArithmeticEngine;->compareNumbers(Ljava/lang/Number;Ljava/lang/Number;)I

    move-result v0
    :try_end_0
    .catch Ljava/lang/RuntimeException; {:try_start_0 .. :try_end_0} :catch_0

    .line 236
    .local v0, "cmpResult":I
    nop

    .line 237
    .end local v11    # "leftNum":Ljava/lang/Number;
    .end local v12    # "rightNum":Ljava/lang/Number;
    .end local v13    # "ae":Lfreemarker/core/ArithmeticEngine;
    goto/16 :goto_8

    .line 233
    .end local v0    # "cmpResult":I
    .restart local v11    # "leftNum":Ljava/lang/Number;
    .restart local v12    # "rightNum":Ljava/lang/Number;
    .restart local v13    # "ae":Lfreemarker/core/ArithmeticEngine;
    :catch_0
    move-exception v0

    move-object v14, v0

    move-object v0, v14

    .line 234
    .local v0, "e":Ljava/lang/RuntimeException;
    new-instance v14, Lfreemarker/core/_MiscTemplateException;

    new-array v9, v9, [Ljava/lang/Object;

    const-string v15, "Unexpected error while comparing two numbers: "

    aput-object v15, v9, v6

    aput-object v0, v9, v10

    invoke-direct {v14, v4, v0, v5, v9}, Lfreemarker/core/_MiscTemplateException;-><init>(Lfreemarker/core/Expression;Ljava/lang/Throwable;Lfreemarker/core/Environment;[Ljava/lang/Object;)V

    throw v14

    .line 237
    .end local v0    # "e":Ljava/lang/RuntimeException;
    .end local v11    # "leftNum":Ljava/lang/Number;
    .end local v12    # "rightNum":Ljava/lang/Number;
    .end local v13    # "ae":Lfreemarker/core/ArithmeticEngine;
    :cond_a
    instance-of v0, v7, Lfreemarker/template/TemplateDateModel;

    const-string v11, "."

    const/4 v12, 0x5

    if-eqz v0, :cond_10

    instance-of v0, v8, Lfreemarker/template/TemplateDateModel;

    if-eqz v0, :cond_10

    .line 238
    move-object v0, v7

    check-cast v0, Lfreemarker/template/TemplateDateModel;

    .line 239
    .local v0, "leftDateModel":Lfreemarker/template/TemplateDateModel;
    move-object v15, v8

    check-cast v15, Lfreemarker/template/TemplateDateModel;

    .line 241
    .local v15, "rightDateModel":Lfreemarker/template/TemplateDateModel;
    invoke-interface {v0}, Lfreemarker/template/TemplateDateModel;->getDateType()I

    move-result v13

    .line 242
    .local v13, "leftDateType":I
    invoke-interface {v15}, Lfreemarker/template/TemplateDateModel;->getDateType()I

    move-result v14

    .line 244
    .local v14, "rightDateType":I
    if-eqz v13, :cond_d

    if-nez v14, :cond_b

    goto :goto_3

    .line 259
    :cond_b
    if-ne v13, v14, :cond_c

    .line 267
    invoke-static {v0, v1}, Lfreemarker/core/EvalUtil;->modelToDate(Lfreemarker/template/TemplateDateModel;Lfreemarker/core/Expression;)Ljava/util/Date;

    move-result-object v9

    .line 268
    .local v9, "leftDate":Ljava/util/Date;
    invoke-static {v15, v3}, Lfreemarker/core/EvalUtil;->modelToDate(Lfreemarker/template/TemplateDateModel;Lfreemarker/core/Expression;)Ljava/util/Date;

    move-result-object v11

    .line 269
    .local v11, "rightDate":Ljava/util/Date;
    invoke-virtual {v9, v11}, Ljava/util/Date;->compareTo(Ljava/util/Date;)I

    move-result v0

    .line 270
    .end local v9    # "leftDate":Ljava/util/Date;
    .end local v11    # "rightDate":Ljava/util/Date;
    .end local v13    # "leftDateType":I
    .end local v14    # "rightDateType":I
    .end local v15    # "rightDateModel":Lfreemarker/template/TemplateDateModel;
    .local v0, "cmpResult":I
    goto/16 :goto_8

    .line 261
    .local v0, "leftDateModel":Lfreemarker/template/TemplateDateModel;
    .restart local v13    # "leftDateType":I
    .restart local v14    # "rightDateType":I
    .restart local v15    # "rightDateModel":Lfreemarker/template/TemplateDateModel;
    :cond_c
    new-instance v9, Lfreemarker/core/_MiscTemplateException;

    new-array v12, v12, [Ljava/lang/Object;

    const-string v17, "Can\'t compare dates of different types. Left date type is "

    aput-object v17, v12, v6

    sget-object v6, Lfreemarker/template/TemplateDateModel;->TYPE_NAMES:Ljava/util/List;

    .line 263
    invoke-interface {v6, v13}, Ljava/util/List;->get(I)Ljava/lang/Object;

    move-result-object v6

    aput-object v6, v12, v10

    const-string v6, ", right date type is "

    const/4 v10, 0x2

    aput-object v6, v12, v10

    sget-object v6, Lfreemarker/template/TemplateDateModel;->TYPE_NAMES:Ljava/util/List;

    .line 264
    invoke-interface {v6, v14}, Ljava/util/List;->get(I)Ljava/lang/Object;

    move-result-object v6

    const/4 v10, 0x3

    aput-object v6, v12, v10

    const/4 v6, 0x4

    aput-object v11, v12, v6

    invoke-direct {v9, v4, v5, v12}, Lfreemarker/core/_MiscTemplateException;-><init>(Lfreemarker/core/Expression;Lfreemarker/core/Environment;[Ljava/lang/Object;)V

    throw v9

    .line 247
    :cond_d
    :goto_3
    if-nez v13, :cond_e

    .line 248
    const-string v9, "left"

    .line 249
    .local v9, "sideName":Ljava/lang/String;
    move-object/from16 v11, p1

    .local v11, "sideExp":Lfreemarker/core/Expression;
    goto :goto_4

    .line 251
    .end local v9    # "sideName":Ljava/lang/String;
    .end local v11    # "sideExp":Lfreemarker/core/Expression;
    :cond_e
    const-string v9, "right"

    .line 252
    .restart local v9    # "sideName":Ljava/lang/String;
    move-object/from16 v11, p5

    .line 255
    .restart local v11    # "sideExp":Lfreemarker/core/Expression;
    :goto_4
    new-instance v12, Lfreemarker/core/_MiscTemplateException;

    if-eqz v11, :cond_f

    move-object/from16 v18, v11

    goto :goto_5

    :cond_f
    move-object/from16 v18, v4

    :goto_5
    const/4 v10, 0x4

    new-array v10, v10, [Ljava/lang/Object;

    const-string v19, "The "

    aput-object v19, v10, v6

    const/4 v6, 0x1

    aput-object v9, v10, v6

    const-string v6, " "

    const/16 v16, 0x2

    aput-object v6, v10, v16

    const-string/jumbo v6, "value of the comparison is a date-like value where it\'s not known if it\'s a date (no time part), time, or date-time, and thus can\'t be used in a comparison."

    const/16 v16, 0x3

    aput-object v6, v10, v16

    move-object/from16 v6, v18

    invoke-direct {v12, v6, v5, v10}, Lfreemarker/core/_MiscTemplateException;-><init>(Lfreemarker/core/Expression;Lfreemarker/core/Environment;[Ljava/lang/Object;)V

    throw v12

    .line 270
    .end local v0    # "leftDateModel":Lfreemarker/template/TemplateDateModel;
    .end local v9    # "sideName":Ljava/lang/String;
    .end local v11    # "sideExp":Lfreemarker/core/Expression;
    .end local v13    # "leftDateType":I
    .end local v14    # "rightDateType":I
    .end local v15    # "rightDateModel":Lfreemarker/template/TemplateDateModel;
    :cond_10
    instance-of v0, v7, Lfreemarker/template/TemplateScalarModel;

    const-string v9, "Can\'t use operator \""

    if-eqz v0, :cond_13

    instance-of v0, v8, Lfreemarker/template/TemplateScalarModel;

    if-eqz v0, :cond_13

    .line 271
    const/4 v10, 0x1

    if-eq v2, v10, :cond_12

    const/4 v11, 0x2

    if-ne v2, v11, :cond_11

    goto :goto_6

    .line 272
    :cond_11
    new-instance v0, Lfreemarker/core/_MiscTemplateException;

    const/4 v12, 0x3

    new-array v12, v12, [Ljava/lang/Object;

    aput-object v9, v12, v6

    .line 273
    invoke-static/range {p2 .. p3}, Lfreemarker/core/EvalUtil;->cmpOpToString(ILjava/lang/String;)Ljava/lang/String;

    move-result-object v6

    aput-object v6, v12, v10

    const-string v6, "\" on string values."

    aput-object v6, v12, v11

    invoke-direct {v0, v4, v5, v12}, Lfreemarker/core/_MiscTemplateException;-><init>(Lfreemarker/core/Expression;Lfreemarker/core/Environment;[Ljava/lang/Object;)V

    throw v0

    .line 275
    :cond_12
    :goto_6
    move-object v0, v7

    check-cast v0, Lfreemarker/template/TemplateScalarModel;

    invoke-static {v0, v1, v5}, Lfreemarker/core/EvalUtil;->modelToString(Lfreemarker/template/TemplateScalarModel;Lfreemarker/core/Expression;Lfreemarker/core/Environment;)Ljava/lang/String;

    move-result-object v0

    .line 276
    .local v0, "leftString":Ljava/lang/String;
    move-object v9, v8

    check-cast v9, Lfreemarker/template/TemplateScalarModel;

    invoke-static {v9, v3, v5}, Lfreemarker/core/EvalUtil;->modelToString(Lfreemarker/template/TemplateScalarModel;Lfreemarker/core/Expression;Lfreemarker/core/Environment;)Ljava/lang/String;

    move-result-object v9

    .line 278
    .local v9, "rightString":Ljava/lang/String;
    invoke-virtual/range {p11 .. p11}, Lfreemarker/core/Environment;->getCollator()Ljava/text/Collator;

    move-result-object v10

    invoke-virtual {v10, v0, v9}, Ljava/text/Collator;->compare(Ljava/lang/String;Ljava/lang/String;)I

    move-result v0

    .line 279
    .end local v9    # "rightString":Ljava/lang/String;
    .local v0, "cmpResult":I
    goto :goto_8

    .end local v0    # "cmpResult":I
    :cond_13
    instance-of v0, v7, Lfreemarker/template/TemplateBooleanModel;

    if-eqz v0, :cond_16

    instance-of v0, v8, Lfreemarker/template/TemplateBooleanModel;

    if-eqz v0, :cond_16

    .line 280
    const/4 v10, 0x1

    if-eq v2, v10, :cond_15

    const/4 v11, 0x2

    if-ne v2, v11, :cond_14

    goto :goto_7

    .line 281
    :cond_14
    new-instance v0, Lfreemarker/core/_MiscTemplateException;

    const/4 v12, 0x3

    new-array v12, v12, [Ljava/lang/Object;

    aput-object v9, v12, v6

    .line 282
    invoke-static/range {p2 .. p3}, Lfreemarker/core/EvalUtil;->cmpOpToString(ILjava/lang/String;)Ljava/lang/String;

    move-result-object v6

    aput-object v6, v12, v10

    const-string v6, "\" on boolean values."

    aput-object v6, v12, v11

    invoke-direct {v0, v4, v5, v12}, Lfreemarker/core/_MiscTemplateException;-><init>(Lfreemarker/core/Expression;Lfreemarker/core/Environment;[Ljava/lang/Object;)V

    throw v0

    .line 284
    :cond_15
    :goto_7
    move-object v0, v7

    check-cast v0, Lfreemarker/template/TemplateBooleanModel;

    invoke-interface {v0}, Lfreemarker/template/TemplateBooleanModel;->getAsBoolean()Z

    move-result v0

    .line 285
    .local v0, "leftBool":Z
    move-object v9, v8

    check-cast v9, Lfreemarker/template/TemplateBooleanModel;

    invoke-interface {v9}, Lfreemarker/template/TemplateBooleanModel;->getAsBoolean()Z

    move-result v9

    .line 286
    .local v9, "rightBool":Z
    sub-int/2addr v0, v9

    .line 287
    .end local v9    # "rightBool":Z
    .local v0, "cmpResult":I
    goto :goto_8

    .end local v0    # "cmpResult":I
    :cond_16
    invoke-virtual/range {p11 .. p11}, Lfreemarker/core/Environment;->isClassicCompatible()Z

    move-result v0

    if-eqz v0, :cond_1d

    .line 288
    invoke-virtual {v1, v5}, Lfreemarker/core/Expression;->evalAndCoerceToString(Lfreemarker/core/Environment;)Ljava/lang/String;

    move-result-object v0

    .line 289
    .local v0, "leftSting":Ljava/lang/String;
    invoke-virtual {v3, v5}, Lfreemarker/core/Expression;->evalAndCoerceToString(Lfreemarker/core/Environment;)Ljava/lang/String;

    move-result-object v9

    .line 290
    .local v9, "rightString":Ljava/lang/String;
    invoke-virtual/range {p11 .. p11}, Lfreemarker/core/Environment;->getCollator()Ljava/text/Collator;

    move-result-object v10

    invoke-virtual {v10, v0, v9}, Ljava/text/Collator;->compare(Ljava/lang/String;Ljava/lang/String;)I

    move-result v0

    .line 291
    .end local v9    # "rightString":Ljava/lang/String;
    .local v0, "cmpResult":I
    nop

    .line 316
    :goto_8
    packed-switch v2, :pswitch_data_0

    .line 323
    new-instance v6, Lfreemarker/core/BugException;

    new-instance v9, Ljava/lang/StringBuffer;

    invoke-direct {v9}, Ljava/lang/StringBuffer;-><init>()V

    const-string v10, "Unsupported comparator operator code: "

    invoke-virtual {v9, v10}, Ljava/lang/StringBuffer;->append(Ljava/lang/String;)Ljava/lang/StringBuffer;

    move-result-object v9

    invoke-virtual {v9, v2}, Ljava/lang/StringBuffer;->append(I)Ljava/lang/StringBuffer;

    move-result-object v9

    invoke-virtual {v9}, Ljava/lang/StringBuffer;->toString()Ljava/lang/String;

    move-result-object v9

    invoke-direct {v6, v9}, Lfreemarker/core/BugException;-><init>(Ljava/lang/String;)V

    throw v6

    .line 322
    :pswitch_0
    if-ltz v0, :cond_17

    const/4 v6, 0x1

    :cond_17
    return v6

    .line 321
    :pswitch_1
    if-gtz v0, :cond_18

    const/4 v6, 0x1

    :cond_18
    return v6

    .line 320
    :pswitch_2
    if-lez v0, :cond_19

    const/4 v6, 0x1

    :cond_19
    return v6

    .line 319
    :pswitch_3
    if-gez v0, :cond_1a

    const/4 v6, 0x1

    :cond_1a
    return v6

    .line 318
    :pswitch_4
    if-eqz v0, :cond_1b

    const/4 v6, 0x1

    :cond_1b
    return v6

    .line 317
    :pswitch_5
    if-nez v0, :cond_1c

    const/4 v6, 0x1

    :cond_1c
    return v6

    .line 292
    .end local v0    # "cmpResult":I
    :cond_1d
    if-eqz p8, :cond_1f

    .line 293
    const/4 v9, 0x1

    if-ne v2, v9, :cond_1e

    .line 294
    return v6

    .line 295
    :cond_1e
    const/4 v10, 0x2

    if-ne v2, v10, :cond_1f

    .line 296
    return v9

    .line 300
    :cond_1f
    new-instance v0, Lfreemarker/core/_MiscTemplateException;

    const/16 v9, 0xc

    new-array v9, v9, [Ljava/lang/Object;

    const-string v10, "Can\'t compare values of these types. "

    aput-object v10, v9, v6

    const-string v10, "Allowed comparisons are between two numbers, two strings, two dates, or two booleans.\n"

    const/4 v13, 0x1

    aput-object v10, v9, v13

    const-string v10, "Left hand operand "

    const/4 v13, 0x2

    aput-object v10, v9, v13

    const-string v10, ") value "

    const-string v13, "("

    const-string v14, ""

    if-eqz p7, :cond_20

    if-eqz v1, :cond_20

    const/4 v15, 0x3

    new-array v12, v15, [Ljava/lang/Object;

    aput-object v13, v12, v6

    new-instance v15, Lfreemarker/core/_DelayedGetCanonicalForm;

    invoke-direct {v15, v1}, Lfreemarker/core/_DelayedGetCanonicalForm;-><init>(Lfreemarker/core/TemplateObject;)V

    const/16 v17, 0x1

    aput-object v15, v12, v17

    const/4 v15, 0x2

    aput-object v10, v12, v15

    goto :goto_9

    :cond_20
    move-object v12, v14

    :goto_9
    const/4 v15, 0x3

    aput-object v12, v9, v15

    const-string v12, "is "

    const/4 v15, 0x4

    aput-object v12, v9, v15

    new-instance v15, Lfreemarker/core/_DelayedAOrAn;

    new-instance v6, Lfreemarker/core/_DelayedFTLTypeDescription;

    invoke-direct {v6, v7}, Lfreemarker/core/_DelayedFTLTypeDescription;-><init>(Lfreemarker/template/TemplateModel;)V

    invoke-direct {v15, v6}, Lfreemarker/core/_DelayedAOrAn;-><init>(Ljava/lang/Object;)V

    const/4 v6, 0x5

    aput-object v15, v9, v6

    const/4 v6, 0x6

    const-string v15, ".\n"

    aput-object v15, v9, v6

    const/4 v6, 0x7

    const-string v15, "Right hand operand "

    aput-object v15, v9, v6

    const/16 v6, 0x8

    if-eqz p7, :cond_21

    if-eqz v3, :cond_21

    const/4 v14, 0x3

    new-array v14, v14, [Ljava/lang/Object;

    const/4 v15, 0x0

    aput-object v13, v14, v15

    new-instance v13, Lfreemarker/core/_DelayedGetCanonicalForm;

    invoke-direct {v13, v3}, Lfreemarker/core/_DelayedGetCanonicalForm;-><init>(Lfreemarker/core/TemplateObject;)V

    const/4 v15, 0x1

    aput-object v13, v14, v15

    const/4 v13, 0x2

    aput-object v10, v14, v13

    :cond_21
    aput-object v14, v9, v6

    const/16 v6, 0x9

    aput-object v12, v9, v6

    const/16 v6, 0xa

    new-instance v10, Lfreemarker/core/_DelayedAOrAn;

    new-instance v12, Lfreemarker/core/_DelayedFTLTypeDescription;

    invoke-direct {v12, v8}, Lfreemarker/core/_DelayedFTLTypeDescription;-><init>(Lfreemarker/template/TemplateModel;)V

    invoke-direct {v10, v12}, Lfreemarker/core/_DelayedAOrAn;-><init>(Ljava/lang/Object;)V

    aput-object v10, v9, v6

    const/16 v6, 0xb

    aput-object v11, v9, v6

    invoke-direct {v0, v4, v5, v9}, Lfreemarker/core/_MiscTemplateException;-><init>(Lfreemarker/core/Expression;Lfreemarker/core/Environment;[Ljava/lang/Object;)V

    throw v0

    nop

    :pswitch_data_0
    .packed-switch 0x1
        :pswitch_5
        :pswitch_4
        :pswitch_3
        :pswitch_2
        :pswitch_1
        :pswitch_0
    .end packed-switch
.end method

.method static compareLenient(Lfreemarker/template/TemplateModel;ILfreemarker/template/TemplateModel;Lfreemarker/core/Environment;)Z
    .locals 12
    .param p0, "leftValue"    # Lfreemarker/template/TemplateModel;
    .param p1, "operator"    # I
    .param p2, "rightValue"    # Lfreemarker/template/TemplateModel;
    .param p3, "env"    # Lfreemarker/core/Environment;
    .annotation system Ldalvik/annotation/Throws;
        value = {
            Lfreemarker/template/TemplateException;
        }
    .end annotation

    .line 151
    const/4 v1, 0x0

    const/4 v3, 0x0

    const/4 v5, 0x0

    const/4 v6, 0x0

    const/4 v7, 0x0

    const/4 v8, 0x1

    const/4 v9, 0x0

    const/4 v10, 0x0

    move-object v0, p0

    move v2, p1

    move-object v4, p2

    move-object v11, p3

    invoke-static/range {v0 .. v11}, Lfreemarker/core/EvalUtil;->compare(Lfreemarker/template/TemplateModel;Lfreemarker/core/Expression;ILjava/lang/String;Lfreemarker/template/TemplateModel;Lfreemarker/core/Expression;Lfreemarker/core/Expression;ZZZZLfreemarker/core/Environment;)Z

    move-result v0

    return v0
.end method

.method static modelToDate(Lfreemarker/template/TemplateDateModel;Lfreemarker/core/Expression;)Ljava/util/Date;
    .locals 2
    .param p0, "model"    # Lfreemarker/template/TemplateDateModel;
    .param p1, "expr"    # Lfreemarker/core/Expression;
    .annotation system Ldalvik/annotation/Throws;
        value = {
            Lfreemarker/template/TemplateModelException;
        }
    .end annotation

    .line 84
    invoke-interface {p0}, Lfreemarker/template/TemplateDateModel;->getAsDate()Ljava/util/Date;

    move-result-object v0

    .line 85
    .local v0, "value":Ljava/util/Date;
    if-nez v0, :cond_1

    sget-object v1, Lfreemarker/core/EvalUtil;->class$java$util$Date:Ljava/lang/Class;

    if-nez v1, :cond_0

    const-string v1, "java.util.Date"

    invoke-static {v1}, Lfreemarker/core/EvalUtil;->class$(Ljava/lang/String;)Ljava/lang/Class;

    move-result-object v1

    sput-object v1, Lfreemarker/core/EvalUtil;->class$java$util$Date:Ljava/lang/Class;

    :cond_0
    invoke-static {v1, p0, p1}, Lfreemarker/core/EvalUtil;->newModelHasStoredNullException(Ljava/lang/Class;Lfreemarker/template/TemplateModel;Lfreemarker/core/Expression;)Lfreemarker/template/TemplateModelException;

    move-result-object v1

    throw v1

    .line 86
    :cond_1
    return-object v0
.end method

.method static modelToNumber(Lfreemarker/template/TemplateNumberModel;Lfreemarker/core/Expression;)Ljava/lang/Number;
    .locals 2
    .param p0, "model"    # Lfreemarker/template/TemplateNumberModel;
    .param p1, "expr"    # Lfreemarker/core/Expression;
    .annotation system Ldalvik/annotation/Throws;
        value = {
            Lfreemarker/template/TemplateModelException;
        }
    .end annotation

    .line 73
    invoke-interface {p0}, Lfreemarker/template/TemplateNumberModel;->getAsNumber()Ljava/lang/Number;

    move-result-object v0

    .line 74
    .local v0, "value":Ljava/lang/Number;
    if-nez v0, :cond_1

    sget-object v1, Lfreemarker/core/EvalUtil;->class$java$lang$Number:Ljava/lang/Class;

    if-nez v1, :cond_0

    const-string v1, "java.lang.Number"

    invoke-static {v1}, Lfreemarker/core/EvalUtil;->class$(Ljava/lang/String;)Ljava/lang/Class;

    move-result-object v1

    sput-object v1, Lfreemarker/core/EvalUtil;->class$java$lang$Number:Ljava/lang/Class;

    :cond_0
    invoke-static {v1, p0, p1}, Lfreemarker/core/EvalUtil;->newModelHasStoredNullException(Ljava/lang/Class;Lfreemarker/template/TemplateModel;Lfreemarker/core/Expression;)Lfreemarker/template/TemplateModelException;

    move-result-object v1

    throw v1

    .line 75
    :cond_1
    return-object v0
.end method

.method static modelToString(Lfreemarker/template/TemplateScalarModel;Lfreemarker/core/Expression;Lfreemarker/core/Environment;)Ljava/lang/String;
    .locals 2
    .param p0, "model"    # Lfreemarker/template/TemplateScalarModel;
    .param p1, "expr"    # Lfreemarker/core/Expression;
    .param p2, "env"    # Lfreemarker/core/Environment;
    .annotation system Ldalvik/annotation/Throws;
        value = {
            Lfreemarker/template/TemplateModelException;
        }
    .end annotation

    .line 55
    invoke-interface {p0}, Lfreemarker/template/TemplateScalarModel;->getAsString()Ljava/lang/String;

    move-result-object v0

    .line 56
    .local v0, "value":Ljava/lang/String;
    if-nez v0, :cond_3

    .line 57
    if-nez p2, :cond_0

    invoke-static {}, Lfreemarker/core/Environment;->getCurrentEnvironment()Lfreemarker/core/Environment;

    move-result-object p2

    .line 58
    :cond_0
    if-eqz p2, :cond_1

    invoke-virtual {p2}, Lfreemarker/core/Environment;->isClassicCompatible()Z

    move-result v1

    if-eqz v1, :cond_1

    .line 59
    const-string v1, ""

    return-object v1

    .line 61
    :cond_1
    sget-object v1, Lfreemarker/core/EvalUtil;->class$java$lang$String:Ljava/lang/Class;

    if-nez v1, :cond_2

    const-string v1, "java.lang.String"

    invoke-static {v1}, Lfreemarker/core/EvalUtil;->class$(Ljava/lang/String;)Ljava/lang/Class;

    move-result-object v1

    sput-object v1, Lfreemarker/core/EvalUtil;->class$java$lang$String:Ljava/lang/Class;

    :cond_2
    invoke-static {v1, p0, p1}, Lfreemarker/core/EvalUtil;->newModelHasStoredNullException(Ljava/lang/Class;Lfreemarker/template/TemplateModel;Lfreemarker/core/Expression;)Lfreemarker/template/TemplateModelException;

    move-result-object v1

    throw v1

    .line 64
    :cond_3
    return-object v0
.end method

.method private static newModelHasStoredNullException(Ljava/lang/Class;Lfreemarker/template/TemplateModel;Lfreemarker/core/Expression;)Lfreemarker/template/TemplateModelException;
    .locals 2
    .param p0, "expected"    # Ljava/lang/Class;
    .param p1, "model"    # Lfreemarker/template/TemplateModel;
    .param p2, "expr"    # Lfreemarker/core/Expression;

    .line 92
    new-instance v0, Lfreemarker/core/_TemplateModelException;

    invoke-static {p0, p1}, Lfreemarker/core/_TemplateModelException;->modelHasStoredNullDescription(Ljava/lang/Class;Lfreemarker/template/TemplateModel;)[Ljava/lang/Object;

    move-result-object v1

    invoke-direct {v0, p2, v1}, Lfreemarker/core/_TemplateModelException;-><init>(Lfreemarker/core/Expression;[Ljava/lang/Object;)V

    return-object v0
.end method
