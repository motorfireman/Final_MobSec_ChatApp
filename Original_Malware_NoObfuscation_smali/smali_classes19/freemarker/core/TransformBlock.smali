.class final Lfreemarker/core/TransformBlock;
.super Lfreemarker/core/TemplateElement;
.source "TransformBlock.java"


# static fields
.field static synthetic class$freemarker$template$TemplateTransformModel:Ljava/lang/Class;


# instance fields
.field namedArgs:Ljava/util/Map;

.field private volatile transient sortedNamedArgsCache:Ljava/lang/ref/SoftReference;

.field private transformExpression:Lfreemarker/core/Expression;


# direct methods
.method constructor <init>(Lfreemarker/core/Expression;Ljava/util/Map;Lfreemarker/core/TemplateElement;)V
    .locals 0
    .param p1, "transformExpression"    # Lfreemarker/core/Expression;
    .param p2, "namedArgs"    # Ljava/util/Map;
    .param p3, "nestedBlock"    # Lfreemarker/core/TemplateElement;

    .line 48
    invoke-direct {p0}, Lfreemarker/core/TemplateElement;-><init>()V

    .line 49
    iput-object p1, p0, Lfreemarker/core/TransformBlock;->transformExpression:Lfreemarker/core/Expression;

    .line 50
    iput-object p2, p0, Lfreemarker/core/TransformBlock;->namedArgs:Ljava/util/Map;

    .line 51
    invoke-virtual {p0, p3}, Lfreemarker/core/TransformBlock;->setNestedBlock(Lfreemarker/core/TemplateElement;)V

    .line 52
    return-void
.end method

.method static synthetic class$(Ljava/lang/String;)Ljava/lang/Class;
    .locals 2
    .param p0, "x0"    # Ljava/lang/String;

    .line 78
    :try_start_0
    invoke-static {p0}, Ljava/lang/Class;->forName(Ljava/lang/String;)Ljava/lang/Class;

    move-result-object v0
    :try_end_0
    .catch Ljava/lang/ClassNotFoundException; {:try_start_0 .. :try_end_0} :catch_0

    return-object v0

    :catch_0
    move-exception v0

    new-instance v1, Ljava/lang/NoClassDefFoundError;

    invoke-direct {v1}, Ljava/lang/NoClassDefFoundError;-><init>()V

    invoke-virtual {v1, v0}, Ljava/lang/NoClassDefFoundError;->initCause(Ljava/lang/Throwable;)Ljava/lang/Throwable;

    move-result-object v0

    throw v0
.end method

.method private getSortedNamedArgs()Ljava/util/List;
    .locals 3

    .line 141
    iget-object v0, p0, Lfreemarker/core/TransformBlock;->sortedNamedArgsCache:Ljava/lang/ref/SoftReference;

    .line 142
    .local v0, "ref":Ljava/lang/ref/Reference;
    if-eqz v0, :cond_0

    .line 143
    invoke-virtual {v0}, Ljava/lang/ref/Reference;->get()Ljava/lang/Object;

    move-result-object v1

    check-cast v1, Ljava/util/List;

    .line 144
    .local v1, "res":Ljava/util/List;
    if-eqz v1, :cond_0

    return-object v1

    .line 147
    .end local v1    # "res":Ljava/util/List;
    :cond_0
    iget-object v1, p0, Lfreemarker/core/TransformBlock;->namedArgs:Ljava/util/Map;

    invoke-static {v1}, Lfreemarker/core/MiscUtil;->sortMapOfExpressions(Ljava/util/Map;)Ljava/util/List;

    move-result-object v1

    .line 148
    .restart local v1    # "res":Ljava/util/List;
    new-instance v2, Ljava/lang/ref/SoftReference;

    invoke-direct {v2, v1}, Ljava/lang/ref/SoftReference;-><init>(Ljava/lang/Object;)V

    iput-object v2, p0, Lfreemarker/core/TransformBlock;->sortedNamedArgsCache:Ljava/lang/ref/SoftReference;

    .line 149
    return-object v1
.end method


# virtual methods
.method accept(Lfreemarker/core/Environment;)V
    .locals 9
    .param p1, "env"    # Lfreemarker/core/Environment;
    .annotation system Ldalvik/annotation/Throws;
        value = {
            Lfreemarker/template/TemplateException;,
            Ljava/io/IOException;
        }
    .end annotation

    .line 57
    iget-object v0, p0, Lfreemarker/core/TransformBlock;->transformExpression:Lfreemarker/core/Expression;

    invoke-virtual {p1, v0}, Lfreemarker/core/Environment;->getTransform(Lfreemarker/core/Expression;)Lfreemarker/template/TemplateTransformModel;

    move-result-object v0

    .line 58
    .local v0, "ttm":Lfreemarker/template/TemplateTransformModel;
    if-eqz v0, :cond_2

    .line 60
    iget-object v1, p0, Lfreemarker/core/TransformBlock;->namedArgs:Ljava/util/Map;

    if-eqz v1, :cond_1

    invoke-interface {v1}, Ljava/util/Map;->isEmpty()Z

    move-result v1

    if-nez v1, :cond_1

    .line 61
    new-instance v1, Ljava/util/HashMap;

    invoke-direct {v1}, Ljava/util/HashMap;-><init>()V

    .line 62
    .local v1, "args":Ljava/util/Map;
    iget-object v2, p0, Lfreemarker/core/TransformBlock;->namedArgs:Ljava/util/Map;

    invoke-interface {v2}, Ljava/util/Map;->entrySet()Ljava/util/Set;

    move-result-object v2

    invoke-interface {v2}, Ljava/util/Set;->iterator()Ljava/util/Iterator;

    move-result-object v2

    .local v2, "it":Ljava/util/Iterator;
    :goto_0
    invoke-interface {v2}, Ljava/util/Iterator;->hasNext()Z

    move-result v3

    if-eqz v3, :cond_0

    .line 63
    invoke-interface {v2}, Ljava/util/Iterator;->next()Ljava/lang/Object;

    move-result-object v3

    check-cast v3, Ljava/util/Map$Entry;

    .line 64
    .local v3, "entry":Ljava/util/Map$Entry;
    invoke-interface {v3}, Ljava/util/Map$Entry;->getKey()Ljava/lang/Object;

    move-result-object v4

    check-cast v4, Ljava/lang/String;

    .line 65
    .local v4, "key":Ljava/lang/String;
    invoke-interface {v3}, Ljava/util/Map$Entry;->getValue()Ljava/lang/Object;

    move-result-object v5

    check-cast v5, Lfreemarker/core/Expression;

    .line 66
    .local v5, "valueExp":Lfreemarker/core/Expression;
    invoke-virtual {v5, p1}, Lfreemarker/core/Expression;->eval(Lfreemarker/core/Environment;)Lfreemarker/template/TemplateModel;

    move-result-object v6

    .line 67
    .local v6, "value":Lfreemarker/template/TemplateModel;
    invoke-interface {v1, v4, v6}, Ljava/util/Map;->put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;

    .line 68
    .end local v3    # "entry":Ljava/util/Map$Entry;
    .end local v4    # "key":Ljava/lang/String;
    .end local v5    # "valueExp":Lfreemarker/core/Expression;
    .end local v6    # "value":Lfreemarker/template/TemplateModel;
    goto :goto_0

    .end local v2    # "it":Ljava/util/Iterator;
    :cond_0
    goto :goto_1

    .line 70
    .end local v1    # "args":Ljava/util/Map;
    :cond_1
    sget-object v1, Lfreemarker/template/EmptyMap;->instance:Lfreemarker/template/EmptyMap;

    .line 72
    .restart local v1    # "args":Ljava/util/Map;
    :goto_1
    invoke-virtual {p0}, Lfreemarker/core/TransformBlock;->getNestedBlock()Lfreemarker/core/TemplateElement;

    move-result-object v2

    invoke-virtual {p1, v2, v0, v1}, Lfreemarker/core/Environment;->visitAndTransform(Lfreemarker/core/TemplateElement;Lfreemarker/template/TemplateTransformModel;Ljava/util/Map;)V

    .line 73
    .end local v1    # "args":Ljava/util/Map;
    nop

    .line 80
    return-void

    .line 75
    :cond_2
    iget-object v1, p0, Lfreemarker/core/TransformBlock;->transformExpression:Lfreemarker/core/Expression;

    invoke-virtual {v1, p1}, Lfreemarker/core/Expression;->eval(Lfreemarker/core/Environment;)Lfreemarker/template/TemplateModel;

    move-result-object v1

    .line 76
    .local v1, "tm":Lfreemarker/template/TemplateModel;
    new-instance v8, Lfreemarker/core/UnexpectedTypeException;

    iget-object v3, p0, Lfreemarker/core/TransformBlock;->transformExpression:Lfreemarker/core/Expression;

    const/4 v2, 0x1

    new-array v6, v2, [Ljava/lang/Class;

    const/4 v2, 0x0

    sget-object v4, Lfreemarker/core/TransformBlock;->class$freemarker$template$TemplateTransformModel:Ljava/lang/Class;

    if-nez v4, :cond_3

    .line 78
    const-string v4, "freemarker.template.TemplateTransformModel"

    invoke-static {v4}, Lfreemarker/core/TransformBlock;->class$(Ljava/lang/String;)Ljava/lang/Class;

    move-result-object v4

    sput-object v4, Lfreemarker/core/TransformBlock;->class$freemarker$template$TemplateTransformModel:Ljava/lang/Class;

    goto :goto_2

    :cond_3
    nop

    :goto_2
    aput-object v4, v6, v2

    const-string/jumbo v5, "transform"

    move-object v2, v8

    move-object v4, v1

    move-object v7, p1

    invoke-direct/range {v2 .. v7}, Lfreemarker/core/UnexpectedTypeException;-><init>(Lfreemarker/core/Expression;Lfreemarker/template/TemplateModel;Ljava/lang/String;[Ljava/lang/Class;Lfreemarker/core/Environment;)V

    throw v8
.end method

.method protected dump(Z)Ljava/lang/String;
    .locals 5
    .param p1, "canonical"    # Z

    .line 83
    new-instance v0, Ljava/lang/StringBuffer;

    invoke-direct {v0}, Ljava/lang/StringBuffer;-><init>()V

    .line 84
    .local v0, "sb":Ljava/lang/StringBuffer;
    if-eqz p1, :cond_0

    const/16 v1, 0x3c

    invoke-virtual {v0, v1}, Ljava/lang/StringBuffer;->append(C)Ljava/lang/StringBuffer;

    .line 85
    :cond_0
    invoke-virtual {p0}, Lfreemarker/core/TransformBlock;->getNodeTypeSymbol()Ljava/lang/String;

    move-result-object v1

    invoke-virtual {v0, v1}, Ljava/lang/StringBuffer;->append(Ljava/lang/String;)Ljava/lang/StringBuffer;

    .line 86
    const/16 v1, 0x20

    invoke-virtual {v0, v1}, Ljava/lang/StringBuffer;->append(C)Ljava/lang/StringBuffer;

    .line 87
    iget-object v2, p0, Lfreemarker/core/TransformBlock;->transformExpression:Lfreemarker/core/Expression;

    invoke-virtual {v0, v2}, Ljava/lang/StringBuffer;->append(Ljava/lang/Object;)Ljava/lang/StringBuffer;

    .line 88
    iget-object v2, p0, Lfreemarker/core/TransformBlock;->namedArgs:Ljava/util/Map;

    if-eqz v2, :cond_1

    .line 89
    invoke-direct {p0}, Lfreemarker/core/TransformBlock;->getSortedNamedArgs()Ljava/util/List;

    move-result-object v2

    invoke-interface {v2}, Ljava/util/List;->iterator()Ljava/util/Iterator;

    move-result-object v2

    .local v2, "it":Ljava/util/Iterator;
    :goto_0
    invoke-interface {v2}, Ljava/util/Iterator;->hasNext()Z

    move-result v3

    if-eqz v3, :cond_1

    .line 90
    invoke-interface {v2}, Ljava/util/Iterator;->next()Ljava/lang/Object;

    move-result-object v3

    check-cast v3, Ljava/util/Map$Entry;

    .line 91
    .local v3, "entry":Ljava/util/Map$Entry;
    invoke-virtual {v0, v1}, Ljava/lang/StringBuffer;->append(C)Ljava/lang/StringBuffer;

    .line 92
    invoke-interface {v3}, Ljava/util/Map$Entry;->getKey()Ljava/lang/Object;

    move-result-object v4

    invoke-virtual {v0, v4}, Ljava/lang/StringBuffer;->append(Ljava/lang/Object;)Ljava/lang/StringBuffer;

    .line 93
    const/16 v4, 0x3d

    invoke-virtual {v0, v4}, Ljava/lang/StringBuffer;->append(C)Ljava/lang/StringBuffer;

    .line 94
    invoke-interface {v3}, Ljava/util/Map$Entry;->getValue()Ljava/lang/Object;

    move-result-object v4

    check-cast v4, Lfreemarker/core/Expression;

    invoke-static {v0, v4}, Lfreemarker/core/MessageUtil;->appendExpressionAsUntearable(Ljava/lang/StringBuffer;Lfreemarker/core/Expression;)Ljava/lang/StringBuffer;

    .line 95
    .end local v3    # "entry":Ljava/util/Map$Entry;
    goto :goto_0

    .line 97
    .end local v2    # "it":Ljava/util/Iterator;
    :cond_1
    if-eqz p1, :cond_3

    .line 98
    const-string v1, ">"

    invoke-virtual {v0, v1}, Ljava/lang/StringBuffer;->append(Ljava/lang/String;)Ljava/lang/StringBuffer;

    .line 99
    invoke-virtual {p0}, Lfreemarker/core/TransformBlock;->getNestedBlock()Lfreemarker/core/TemplateElement;

    move-result-object v1

    if-eqz v1, :cond_2

    .line 100
    invoke-virtual {p0}, Lfreemarker/core/TransformBlock;->getNestedBlock()Lfreemarker/core/TemplateElement;

    move-result-object v1

    invoke-virtual {v1}, Lfreemarker/core/TemplateElement;->getCanonicalForm()Ljava/lang/String;

    move-result-object v1

    invoke-virtual {v0, v1}, Ljava/lang/StringBuffer;->append(Ljava/lang/String;)Ljava/lang/StringBuffer;

    .line 102
    :cond_2
    const-string v1, "</"

    invoke-virtual {v0, v1}, Ljava/lang/StringBuffer;->append(Ljava/lang/String;)Ljava/lang/StringBuffer;

    move-result-object v1

    invoke-virtual {p0}, Lfreemarker/core/TransformBlock;->getNodeTypeSymbol()Ljava/lang/String;

    move-result-object v2

    invoke-virtual {v1, v2}, Ljava/lang/StringBuffer;->append(Ljava/lang/String;)Ljava/lang/StringBuffer;

    move-result-object v1

    const/16 v2, 0x3e

    invoke-virtual {v1, v2}, Ljava/lang/StringBuffer;->append(C)Ljava/lang/StringBuffer;

    .line 104
    :cond_3
    invoke-virtual {v0}, Ljava/lang/StringBuffer;->toString()Ljava/lang/String;

    move-result-object v1

    return-object v1
.end method

.method getNodeTypeSymbol()Ljava/lang/String;
    .locals 1

    .line 108
    const-string v0, "#transform"

    return-object v0
.end method

.method getParameterCount()I
    .locals 1

    .line 112
    iget-object v0, p0, Lfreemarker/core/TransformBlock;->namedArgs:Ljava/util/Map;

    if-eqz v0, :cond_0

    invoke-interface {v0}, Ljava/util/Map;->size()I

    move-result v0

    mul-int/lit8 v0, v0, 0x2

    goto :goto_0

    :cond_0
    const/4 v0, 0x0

    :goto_0
    add-int/lit8 v0, v0, 0x1

    return v0
.end method

.method getParameterRole(I)Lfreemarker/core/ParameterRole;
    .locals 2
    .param p1, "idx"    # I

    .line 127
    if-nez p1, :cond_0

    .line 128
    sget-object v0, Lfreemarker/core/ParameterRole;->CALLEE:Lfreemarker/core/ParameterRole;

    return-object v0

    .line 129
    :cond_0
    add-int/lit8 v0, p1, -0x1

    iget-object v1, p0, Lfreemarker/core/TransformBlock;->namedArgs:Ljava/util/Map;

    invoke-interface {v1}, Ljava/util/Map;->size()I

    move-result v1

    mul-int/lit8 v1, v1, 0x2

    if-ge v0, v1, :cond_2

    .line 130
    add-int/lit8 v0, p1, -0x1

    rem-int/lit8 v0, v0, 0x2

    if-nez v0, :cond_1

    sget-object v0, Lfreemarker/core/ParameterRole;->ARGUMENT_NAME:Lfreemarker/core/ParameterRole;

    goto :goto_0

    :cond_1
    sget-object v0, Lfreemarker/core/ParameterRole;->ARGUMENT_VALUE:Lfreemarker/core/ParameterRole;

    :goto_0
    return-object v0

    .line 132
    :cond_2
    new-instance v0, Ljava/lang/IndexOutOfBoundsException;

    invoke-direct {v0}, Ljava/lang/IndexOutOfBoundsException;-><init>()V

    throw v0
.end method

.method getParameterValue(I)Ljava/lang/Object;
    .locals 2
    .param p1, "idx"    # I

    .line 116
    if-nez p1, :cond_0

    .line 117
    iget-object v0, p0, Lfreemarker/core/TransformBlock;->transformExpression:Lfreemarker/core/Expression;

    return-object v0

    .line 118
    :cond_0
    iget-object v0, p0, Lfreemarker/core/TransformBlock;->namedArgs:Ljava/util/Map;

    if-eqz v0, :cond_2

    add-int/lit8 v1, p1, -0x1

    invoke-interface {v0}, Ljava/util/Map;->size()I

    move-result v0

    mul-int/lit8 v0, v0, 0x2

    if-ge v1, v0, :cond_2

    .line 119
    invoke-direct {p0}, Lfreemarker/core/TransformBlock;->getSortedNamedArgs()Ljava/util/List;

    move-result-object v0

    add-int/lit8 v1, p1, -0x1

    div-int/lit8 v1, v1, 0x2

    invoke-interface {v0, v1}, Ljava/util/List;->get(I)Ljava/lang/Object;

    move-result-object v0

    check-cast v0, Ljava/util/Map$Entry;

    .line 120
    .local v0, "namedArg":Ljava/util/Map$Entry;
    add-int/lit8 v1, p1, -0x1

    rem-int/lit8 v1, v1, 0x2

    if-nez v1, :cond_1

    invoke-interface {v0}, Ljava/util/Map$Entry;->getKey()Ljava/lang/Object;

    move-result-object v1

    goto :goto_0

    :cond_1
    invoke-interface {v0}, Ljava/util/Map$Entry;->getValue()Ljava/lang/Object;

    move-result-object v1

    :goto_0
    return-object v1

    .line 122
    .end local v0    # "namedArg":Ljava/util/Map$Entry;
    :cond_2
    new-instance v0, Ljava/lang/IndexOutOfBoundsException;

    invoke-direct {v0}, Ljava/lang/IndexOutOfBoundsException;-><init>()V

    throw v0
.end method

.method isNestedBlockRepeater()Z
    .locals 1

    .line 153
    const/4 v0, 0x0

    return v0
.end method
