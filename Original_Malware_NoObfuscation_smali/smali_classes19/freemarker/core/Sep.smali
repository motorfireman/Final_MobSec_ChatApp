.class Lfreemarker/core/Sep;
.super Lfreemarker/core/TemplateElement;
.source "Sep.java"


# direct methods
.method public constructor <init>(Lfreemarker/core/TemplateElement;)V
    .locals 0
    .param p1, "nestedBlock"    # Lfreemarker/core/TemplateElement;

    .line 28
    invoke-direct {p0}, Lfreemarker/core/TemplateElement;-><init>()V

    .line 29
    invoke-virtual {p0, p1}, Lfreemarker/core/Sep;->setNestedBlock(Lfreemarker/core/TemplateElement;)V

    .line 30
    return-void
.end method


# virtual methods
.method accept(Lfreemarker/core/Environment;)V
    .locals 5
    .param p1, "env"    # Lfreemarker/core/Environment;
    .annotation system Ldalvik/annotation/Throws;
        value = {
            Lfreemarker/template/TemplateException;,
            Ljava/io/IOException;
        }
    .end annotation

    .line 33
    const/4 v0, 0x0

    invoke-static {p1, v0}, Lfreemarker/core/IteratorBlock;->findEnclosingIterationContext(Lfreemarker/core/Environment;Ljava/lang/String;)Lfreemarker/core/IteratorBlock$IterationContext;

    move-result-object v0

    .line 34
    .local v0, "iterCtx":Lfreemarker/core/IteratorBlock$IterationContext;
    if-eqz v0, :cond_1

    .line 40
    invoke-virtual {v0}, Lfreemarker/core/IteratorBlock$IterationContext;->hasNext()Z

    move-result v1

    if-eqz v1, :cond_0

    .line 41
    invoke-virtual {p0}, Lfreemarker/core/Sep;->getNestedBlock()Lfreemarker/core/TemplateElement;

    move-result-object v1

    invoke-virtual {p1, v1}, Lfreemarker/core/Environment;->visitByHiddingParent(Lfreemarker/core/TemplateElement;)V

    .line 43
    :cond_0
    return-void

    .line 36
    :cond_1
    new-instance v1, Lfreemarker/core/_MiscTemplateException;

    const/4 v2, 0x2

    new-array v2, v2, [Ljava/lang/Object;

    const/4 v3, 0x0

    .line 37
    invoke-virtual {p0}, Lfreemarker/core/Sep;->getNodeTypeSymbol()Ljava/lang/String;

    move-result-object v4

    aput-object v4, v2, v3

    const/4 v3, 0x1

    const-string v4, " without iteraton in context"

    aput-object v4, v2, v3

    invoke-direct {v1, p1, v2}, Lfreemarker/core/_MiscTemplateException;-><init>(Lfreemarker/core/Environment;[Ljava/lang/Object;)V

    throw v1
.end method

.method protected dump(Z)Ljava/lang/String;
    .locals 3
    .param p1, "canonical"    # Z

    .line 50
    new-instance v0, Ljava/lang/StringBuffer;

    invoke-direct {v0}, Ljava/lang/StringBuffer;-><init>()V

    .line 51
    .local v0, "sb":Ljava/lang/StringBuffer;
    if-eqz p1, :cond_0

    const/16 v1, 0x3c

    invoke-virtual {v0, v1}, Ljava/lang/StringBuffer;->append(C)Ljava/lang/StringBuffer;

    .line 52
    :cond_0
    invoke-virtual {p0}, Lfreemarker/core/Sep;->getNodeTypeSymbol()Ljava/lang/String;

    move-result-object v1

    invoke-virtual {v0, v1}, Ljava/lang/StringBuffer;->append(Ljava/lang/String;)Ljava/lang/StringBuffer;

    .line 53
    if-eqz p1, :cond_2

    .line 54
    const/16 v1, 0x3e

    invoke-virtual {v0, v1}, Ljava/lang/StringBuffer;->append(C)Ljava/lang/StringBuffer;

    .line 55
    invoke-virtual {p0}, Lfreemarker/core/Sep;->getNestedBlock()Lfreemarker/core/TemplateElement;

    move-result-object v2

    if-eqz v2, :cond_1

    invoke-virtual {p0}, Lfreemarker/core/Sep;->getNestedBlock()Lfreemarker/core/TemplateElement;

    move-result-object v2

    invoke-virtual {v2}, Lfreemarker/core/TemplateElement;->getCanonicalForm()Ljava/lang/String;

    move-result-object v2

    invoke-virtual {v0, v2}, Ljava/lang/StringBuffer;->append(Ljava/lang/String;)Ljava/lang/StringBuffer;

    .line 56
    :cond_1
    const-string v2, "</"

    invoke-virtual {v0, v2}, Ljava/lang/StringBuffer;->append(Ljava/lang/String;)Ljava/lang/StringBuffer;

    .line 57
    invoke-virtual {p0}, Lfreemarker/core/Sep;->getNodeTypeSymbol()Ljava/lang/String;

    move-result-object v2

    invoke-virtual {v0, v2}, Ljava/lang/StringBuffer;->append(Ljava/lang/String;)Ljava/lang/StringBuffer;

    .line 58
    invoke-virtual {v0, v1}, Ljava/lang/StringBuffer;->append(C)Ljava/lang/StringBuffer;

    .line 60
    :cond_2
    invoke-virtual {v0}, Ljava/lang/StringBuffer;->toString()Ljava/lang/String;

    move-result-object v1

    return-object v1
.end method

.method getNodeTypeSymbol()Ljava/lang/String;
    .locals 1

    .line 64
    const-string v0, "#sep"

    return-object v0
.end method

.method getParameterCount()I
    .locals 1

    .line 68
    const/4 v0, 0x0

    return v0
.end method

.method getParameterRole(I)Lfreemarker/core/ParameterRole;
    .locals 1
    .param p1, "idx"    # I

    .line 76
    new-instance v0, Ljava/lang/IndexOutOfBoundsException;

    invoke-direct {v0}, Ljava/lang/IndexOutOfBoundsException;-><init>()V

    throw v0
.end method

.method getParameterValue(I)Ljava/lang/Object;
    .locals 1
    .param p1, "idx"    # I

    .line 72
    new-instance v0, Ljava/lang/IndexOutOfBoundsException;

    invoke-direct {v0}, Ljava/lang/IndexOutOfBoundsException;-><init>()V

    throw v0
.end method

.method isNestedBlockRepeater()Z
    .locals 1

    .line 46
    const/4 v0, 0x0

    return v0
.end method
