.class public Lfreemarker/log/SLF4JLoggerFactory;
.super Ljava/lang/Object;
.source "SLF4JLoggerFactory.java"

# interfaces
.implements Lfreemarker/log/LoggerFactory;


# annotations
.annotation system Ldalvik/annotation/MemberClasses;
    value = {
        Lfreemarker/log/SLF4JLoggerFactory$LocationUnawareSLF4JLogger;,
        Lfreemarker/log/SLF4JLoggerFactory$LocationAwareSLF4JLogger;
    }
.end annotation


# static fields
.field static synthetic class$freemarker$log$SLF4JLoggerFactory$LocationAwareSLF4JLogger:Ljava/lang/Class;


# direct methods
.method public constructor <init>()V
    .locals 0

    .line 25
    invoke-direct {p0}, Ljava/lang/Object;-><init>()V

    .line 113
    return-void
.end method

.method static synthetic class$(Ljava/lang/String;)Ljava/lang/Class;
    .locals 2
    .param p0, "x0"    # Ljava/lang/String;

    .line 43
    :try_start_0
    invoke-static {p0}, Ljava/lang/Class;->forName(Ljava/lang/String;)Ljava/lang/Class;

    move-result-object v0
    :try_end_0
    .catch Ljava/lang/ClassNotFoundException; {:try_start_0 .. :try_end_0} :catch_0

    return-object v0

    :catch_0
    move-exception v0

    new-instance v1, Ljava/lang/NoClassDefFoundError;

    invoke-direct {v1}, Ljava/lang/NoClassDefFoundError;-><init>()V

    invoke-virtual {v1, v0}, Ljava/lang/NoClassDefFoundError;->initCause(Ljava/lang/Throwable;)Ljava/lang/Throwable;

    move-result-object v0

    throw v0
.end method


# virtual methods
.method public getLogger(Ljava/lang/String;)Lfreemarker/log/Logger;
    .locals 3
    .param p1, "category"    # Ljava/lang/String;

    .line 28
    invoke-static {p1}, Lorg/slf4j/LoggerFactory;->getLogger(Ljava/lang/String;)Lorg/slf4j/Logger;

    move-result-object v0

    .line 29
    .local v0, "slf4jLogger":Lorg/slf4j/Logger;
    instance-of v1, v0, Lorg/slf4j/spi/LocationAwareLogger;

    if-eqz v1, :cond_0

    .line 30
    new-instance v1, Lfreemarker/log/SLF4JLoggerFactory$LocationAwareSLF4JLogger;

    move-object v2, v0

    check-cast v2, Lorg/slf4j/spi/LocationAwareLogger;

    invoke-direct {v1, v2}, Lfreemarker/log/SLF4JLoggerFactory$LocationAwareSLF4JLogger;-><init>(Lorg/slf4j/spi/LocationAwareLogger;)V

    return-object v1

    .line 32
    :cond_0
    new-instance v1, Lfreemarker/log/SLF4JLoggerFactory$LocationUnawareSLF4JLogger;

    invoke-direct {v1, v0}, Lfreemarker/log/SLF4JLoggerFactory$LocationUnawareSLF4JLogger;-><init>(Lorg/slf4j/Logger;)V

    return-object v1
.end method
