.class public abstract Lfreemarker/log/Logger;
.super Ljava/lang/Object;
.source "Logger.java"


# static fields
.field private static final LIBRARIES_BY_PRIORITY:[Ljava/lang/String;

.field public static final LIBRARY_AUTO:I = -0x1

.field public static final LIBRARY_AVALON:I = 0x2

.field public static final LIBRARY_COMMONS:I = 0x4

.field public static final LIBRARY_JAVA:I = 0x1

.field public static final LIBRARY_LOG4J:I = 0x3

.field public static final LIBRARY_NAME_AUTO:Ljava/lang/String; = "auto"

.field public static final LIBRARY_NAME_AVALON:Ljava/lang/String; = "Avalon"

.field public static final LIBRARY_NAME_COMMONS_LOGGING:Ljava/lang/String; = "CommonsLogging"

.field public static final LIBRARY_NAME_JUL:Ljava/lang/String; = "JUL"

.field public static final LIBRARY_NAME_LOG4J:Ljava/lang/String; = "Log4j"

.field public static final LIBRARY_NAME_NONE:Ljava/lang/String; = "none"

.field public static final LIBRARY_NAME_SLF4J:Ljava/lang/String; = "SLF4J"

.field public static final LIBRARY_NONE:I = 0x0

.field public static final LIBRARY_SLF4J:I = 0x5

.field private static final LOG4J_OVER_SLF4J_TESTER_CLASS:Ljava/lang/String; = "freemarker.log._Log4jOverSLF4JTester"

.field private static final MAX_LIBRARY_ENUM:I = 0x5

.field private static final MIN_LIBRARY_ENUM:I = -0x1

.field private static final REAL_LOG4J_PRESENCE_CLASS:Ljava/lang/String; = "org.apache.log4j.FileAppender"

.field public static final SYSTEM_PROPERTY_NAME_LOGGER_LIBRARY:Ljava/lang/String; = "org.freemarker.loggerLibrary"

.field private static categoryPrefix:Ljava/lang/String;

.field static synthetic class$freemarker$log$Logger:Ljava/lang/Class;

.field static synthetic class$freemarker$log$LoggerFactory:Ljava/lang/Class;

.field private static initializedFromSystemProperty:Z

.field private static libraryEnum:I

.field private static loggerFactory:Lfreemarker/log/LoggerFactory;

.field private static final loggersByCategory:Ljava/util/Map;


# direct methods
.method static constructor <clinit>()V
    .locals 10

    .line 158
    const/4 v0, 0x0

    const-string v1, "JUL"

    const-string v2, "org.apache.log.Logger"

    const-string v3, "Avalon"

    const-string v4, "org.apache.log4j.Logger"

    const-string v5, "Log4j"

    const-string v6, "org.apache.commons.logging.Log"

    const-string v7, "CommonsLogging"

    const-string v8, "org.slf4j.Logger"

    const-string v9, "SLF4J"

    filled-new-array/range {v0 .. v9}, [Ljava/lang/String;

    move-result-object v0

    sput-object v0, Lfreemarker/log/Logger;->LIBRARIES_BY_PRIORITY:[Ljava/lang/String;

    .line 176
    array-length v0, v0

    div-int/lit8 v0, v0, 0x2

    const/4 v1, 0x5

    if-ne v0, v1, :cond_0

    .line 201
    const-string v0, ""

    sput-object v0, Lfreemarker/log/Logger;->categoryPrefix:Ljava/lang/String;

    .line 203
    new-instance v0, Ljava/util/HashMap;

    invoke-direct {v0}, Ljava/util/HashMap;-><init>()V

    sput-object v0, Lfreemarker/log/Logger;->loggersByCategory:Ljava/util/Map;

    return-void

    .line 177
    :cond_0
    new-instance v0, Ljava/lang/AssertionError;

    invoke-direct {v0}, Ljava/lang/AssertionError;-><init>()V

    throw v0
.end method

.method public constructor <init>()V
    .locals 0

    .line 37
    invoke-direct {p0}, Ljava/lang/Object;-><init>()V

    return-void
.end method

.method static synthetic class$(Ljava/lang/String;)Ljava/lang/Class;
    .locals 2
    .param p0, "x0"    # Ljava/lang/String;

    .line 228
    :try_start_0
    invoke-static {p0}, Ljava/lang/Class;->forName(Ljava/lang/String;)Ljava/lang/Class;

    move-result-object v0
    :try_end_0
    .catch Ljava/lang/ClassNotFoundException; {:try_start_0 .. :try_end_0} :catch_0

    return-object v0

    :catch_0
    move-exception v0

    new-instance v1, Ljava/lang/NoClassDefFoundError;

    invoke-direct {v1}, Ljava/lang/NoClassDefFoundError;-><init>()V

    invoke-virtual {v1, v0}, Ljava/lang/NoClassDefFoundError;->initCause(Ljava/lang/Throwable;)Ljava/lang/Throwable;

    move-result-object v0

    throw v0
.end method

.method private static createLoggerFactory(I)Lfreemarker/log/LoggerFactory;
    .locals 5
    .param p0, "libraryEnum"    # I
    .annotation system Ldalvik/annotation/Throws;
        value = {
            Ljava/lang/ClassNotFoundException;
        }
    .end annotation

    .line 423
    const/4 v0, -0x1

    if-ne p0, v0, :cond_3

    .line 424
    const/4 v1, 0x5

    .local v1, "libraryEnumToTry":I
    :goto_0
    if-lt v1, v0, :cond_2

    .line 425
    invoke-static {v1}, Lfreemarker/log/Logger;->isAutoDetected(I)Z

    move-result v2

    if-nez v2, :cond_0

    goto :goto_1

    .line 426
    :cond_0
    const/4 v2, 0x3

    if-ne v1, v2, :cond_1

    invoke-static {}, Lfreemarker/log/Logger;->hasLog4LibraryThatDelegatesToWorkingSLF4J()Z

    move-result v2

    if-eqz v2, :cond_1

    .line 427
    const/4 v1, 0x5

    .line 431
    :cond_1
    :try_start_0
    invoke-static {v1}, Lfreemarker/log/Logger;->createLoggerFactoryForNonAuto(I)Lfreemarker/log/LoggerFactory;

    move-result-object v0
    :try_end_0
    .catch Ljava/lang/ClassNotFoundException; {:try_start_0 .. :try_end_0} :catch_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    return-object v0

    .line 434
    :catchall_0
    move-exception v2

    .line 435
    .local v2, "e":Ljava/lang/Throwable;
    new-instance v3, Ljava/lang/StringBuffer;

    invoke-direct {v3}, Ljava/lang/StringBuffer;-><init>()V

    const-string v4, "Unexpected error when initializing logging for \""

    invoke-virtual {v3, v4}, Ljava/lang/StringBuffer;->append(Ljava/lang/String;)Ljava/lang/StringBuffer;

    move-result-object v3

    .line 437
    invoke-static {v1}, Lfreemarker/log/Logger;->getLibraryName(I)Ljava/lang/String;

    move-result-object v4

    invoke-virtual {v3, v4}, Ljava/lang/StringBuffer;->append(Ljava/lang/String;)Ljava/lang/StringBuffer;

    move-result-object v3

    const-string v4, "\"."

    invoke-virtual {v3, v4}, Ljava/lang/StringBuffer;->append(Ljava/lang/String;)Ljava/lang/StringBuffer;

    move-result-object v3

    invoke-virtual {v3}, Ljava/lang/StringBuffer;->toString()Ljava/lang/String;

    move-result-object v3

    .line 435
    invoke-static {v3, v2}, Lfreemarker/log/Logger;->logErrorInLogger(Ljava/lang/String;Ljava/lang/Throwable;)V

    goto :goto_1

    .line 432
    .end local v2    # "e":Ljava/lang/Throwable;
    :catch_0
    move-exception v2

    .line 439
    nop

    .line 424
    :goto_1
    add-int/2addr v1, v0

    goto :goto_0

    .line 441
    .end local v1    # "libraryEnumToTry":I
    :cond_2
    const-string v0, "Auto detecton couldn\'t set up any logger libraries; FreeMarker logging suppressed."

    invoke-static {v0}, Lfreemarker/log/Logger;->logWarnInLogger(Ljava/lang/String;)V

    .line 442
    new-instance v0, Lfreemarker/log/_NullLoggerFactory;

    invoke-direct {v0}, Lfreemarker/log/_NullLoggerFactory;-><init>()V

    return-object v0

    .line 444
    :cond_3
    invoke-static {p0}, Lfreemarker/log/Logger;->createLoggerFactoryForNonAuto(I)Lfreemarker/log/LoggerFactory;

    move-result-object v0

    return-object v0
.end method

.method private static createLoggerFactoryForNonAuto(I)Lfreemarker/log/LoggerFactory;
    .locals 6
    .param p0, "libraryEnum"    # I
    .annotation system Ldalvik/annotation/Throws;
        value = {
            Ljava/lang/ClassNotFoundException;
        }
    .end annotation

    .line 453
    invoke-static {p0}, Lfreemarker/log/Logger;->getAvailabilityCheckClassName(I)Ljava/lang/String;

    move-result-object v0

    .line 454
    .local v0, "availabilityCheckClassName":Ljava/lang/String;
    if-eqz v0, :cond_0

    .line 455
    invoke-static {v0}, Ljava/lang/Class;->forName(Ljava/lang/String;)Ljava/lang/Class;

    .line 456
    invoke-static {p0}, Lfreemarker/log/Logger;->getLibraryName(I)Ljava/lang/String;

    move-result-object v1

    .line 458
    .local v1, "libraryName":Ljava/lang/String;
    :try_start_0
    new-instance v2, Ljava/lang/StringBuffer;

    invoke-direct {v2}, Ljava/lang/StringBuffer;-><init>()V

    const-string v3, "freemarker.log._"

    invoke-virtual {v2, v3}, Ljava/lang/StringBuffer;->append(Ljava/lang/String;)Ljava/lang/StringBuffer;

    move-result-object v2

    invoke-virtual {v2, v1}, Ljava/lang/StringBuffer;->append(Ljava/lang/String;)Ljava/lang/StringBuffer;

    move-result-object v2

    const-string v3, "LoggerFactory"

    invoke-virtual {v2, v3}, Ljava/lang/StringBuffer;->append(Ljava/lang/String;)Ljava/lang/StringBuffer;

    move-result-object v2

    invoke-virtual {v2}, Ljava/lang/StringBuffer;->toString()Ljava/lang/String;

    move-result-object v2

    invoke-static {v2}, Ljava/lang/Class;->forName(Ljava/lang/String;)Ljava/lang/Class;

    move-result-object v2

    .line 459
    invoke-virtual {v2}, Ljava/lang/Class;->newInstance()Ljava/lang/Object;

    move-result-object v2

    check-cast v2, Lfreemarker/log/LoggerFactory;
    :try_end_0
    .catch Ljava/lang/Exception; {:try_start_0 .. :try_end_0} :catch_0

    return-object v2

    .line 460
    :catch_0
    move-exception v2

    .line 461
    .local v2, "e":Ljava/lang/Exception;
    new-instance v3, Ljava/lang/RuntimeException;

    new-instance v4, Ljava/lang/StringBuffer;

    invoke-direct {v4}, Ljava/lang/StringBuffer;-><init>()V

    const-string v5, "Unexpected error when creating logger factory for \""

    invoke-virtual {v4, v5}, Ljava/lang/StringBuffer;->append(Ljava/lang/String;)Ljava/lang/StringBuffer;

    move-result-object v4

    invoke-virtual {v4, v1}, Ljava/lang/StringBuffer;->append(Ljava/lang/String;)Ljava/lang/StringBuffer;

    move-result-object v4

    const-string v5, "\"."

    invoke-virtual {v4, v5}, Ljava/lang/StringBuffer;->append(Ljava/lang/String;)Ljava/lang/StringBuffer;

    move-result-object v4

    invoke-virtual {v4}, Ljava/lang/StringBuffer;->toString()Ljava/lang/String;

    move-result-object v4

    invoke-direct {v3, v4, v2}, Ljava/lang/RuntimeException;-><init>(Ljava/lang/String;Ljava/lang/Throwable;)V

    throw v3

    .line 465
    .end local v1    # "libraryName":Ljava/lang/String;
    .end local v2    # "e":Ljava/lang/Exception;
    :cond_0
    const/4 v1, 0x1

    if-ne p0, v1, :cond_1

    .line 466
    new-instance v1, Lfreemarker/log/_JULLoggerFactory;

    invoke-direct {v1}, Lfreemarker/log/_JULLoggerFactory;-><init>()V

    return-object v1

    .line 467
    :cond_1
    if-nez p0, :cond_2

    .line 468
    new-instance v1, Lfreemarker/log/_NullLoggerFactory;

    invoke-direct {v1}, Lfreemarker/log/_NullLoggerFactory;-><init>()V

    return-object v1

    .line 470
    :cond_2
    new-instance v1, Ljava/lang/RuntimeException;

    const-string v2, "Bug"

    invoke-direct {v1, v2}, Ljava/lang/RuntimeException;-><init>(Ljava/lang/String;)V

    throw v1
.end method

.method private static ensureLoggerFactorySet(Z)V
    .locals 8
    .param p0, "onlyIfCanBeSetFromSysProp"    # Z

    .line 365
    sget-object v0, Lfreemarker/log/Logger;->loggerFactory:Lfreemarker/log/LoggerFactory;

    if-eqz v0, :cond_0

    return-void

    .line 366
    :cond_0
    sget-object v0, Lfreemarker/log/Logger;->class$freemarker$log$Logger:Ljava/lang/Class;

    if-nez v0, :cond_1

    const-string v0, "freemarker.log.Logger"

    invoke-static {v0}, Lfreemarker/log/Logger;->class$(Ljava/lang/String;)Ljava/lang/Class;

    move-result-object v0

    sput-object v0, Lfreemarker/log/Logger;->class$freemarker$log$Logger:Ljava/lang/Class;

    :cond_1
    monitor-enter v0

    .line 367
    :try_start_0
    sget-object v1, Lfreemarker/log/Logger;->loggerFactory:Lfreemarker/log/LoggerFactory;

    if-eqz v1, :cond_2

    monitor-exit v0

    return-void

    .line 369
    :cond_2
    const-string v1, "org.freemarker.loggerLibrary"

    invoke-static {v1}, Lfreemarker/log/Logger;->getSystemProperty(Ljava/lang/String;)Ljava/lang/String;

    move-result-object v1

    .line 372
    .local v1, "sysPropVal":Ljava/lang/String;
    if-eqz v1, :cond_8

    .line 373
    invoke-virtual {v1}, Ljava/lang/String;->trim()Ljava/lang/String;

    move-result-object v2

    move-object v1, v2

    .line 375
    const/4 v2, 0x0

    .line 376
    .local v2, "foundMatch":Z
    const/4 v3, -0x1

    .line 378
    .local v3, "matchedEnum":I
    :cond_3
    invoke-static {v3}, Lfreemarker/log/Logger;->getLibraryName(I)Ljava/lang/String;

    move-result-object v4

    invoke-virtual {v1, v4}, Ljava/lang/String;->equalsIgnoreCase(Ljava/lang/String;)Z

    move-result v4

    if-eqz v4, :cond_4

    .line 379
    const/4 v2, 0x1

    goto :goto_0

    .line 381
    :cond_4
    add-int/lit8 v3, v3, 0x1

    .line 383
    :goto_0
    const/4 v4, 0x5

    if-gt v3, v4, :cond_5

    if-eqz v2, :cond_3

    .line 385
    :cond_5
    if-nez v2, :cond_6

    .line 386
    new-instance v4, Ljava/lang/StringBuffer;

    invoke-direct {v4}, Ljava/lang/StringBuffer;-><init>()V

    const-string v5, "Ignored invalid \"org.freemarker.loggerLibrary\" system property value: \""

    invoke-virtual {v4, v5}, Ljava/lang/StringBuffer;->append(Ljava/lang/String;)Ljava/lang/StringBuffer;

    move-result-object v4

    invoke-virtual {v4, v1}, Ljava/lang/StringBuffer;->append(Ljava/lang/String;)Ljava/lang/StringBuffer;

    move-result-object v4

    const-string v5, "\""

    invoke-virtual {v4, v5}, Ljava/lang/StringBuffer;->append(Ljava/lang/String;)Ljava/lang/StringBuffer;

    move-result-object v4

    invoke-virtual {v4}, Ljava/lang/StringBuffer;->toString()Ljava/lang/String;

    move-result-object v4

    invoke-static {v4}, Lfreemarker/log/Logger;->logWarnInLogger(Ljava/lang/String;)V

    .line 388
    if-eqz p0, :cond_6

    monitor-exit v0

    return-void

    .line 391
    :cond_6
    if-eqz v2, :cond_7

    move v4, v3

    goto :goto_1

    :cond_7
    const/4 v4, -0x1

    :goto_1
    move v2, v4

    .line 392
    .end local v3    # "matchedEnum":I
    .local v2, "libraryEnum":I
    goto :goto_2

    .line 393
    .end local v2    # "libraryEnum":I
    :cond_8
    if-eqz p0, :cond_9

    monitor-exit v0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_1

    return-void

    .line 394
    :cond_9
    const/4 v2, -0x1

    .line 398
    .restart local v2    # "libraryEnum":I
    :goto_2
    const/4 v3, 0x1

    :try_start_1
    invoke-static {v2}, Lfreemarker/log/Logger;->setLibrary(I)V

    .line 399
    if-eqz v1, :cond_a

    .line 400
    sput-boolean v3, Lfreemarker/log/Logger;->initializedFromSystemProperty:Z
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    .line 414
    :cond_a
    goto :goto_5

    .line 402
    :catchall_0
    move-exception v4

    .line 403
    .local v4, "e":Ljava/lang/Throwable;
    const/4 v5, 0x0

    if-eqz p0, :cond_c

    if-nez v1, :cond_b

    goto :goto_3

    :cond_b
    move v3, v5

    .line 404
    .local v3, "disableLogging":Z
    :cond_c
    :goto_3
    :try_start_2
    new-instance v6, Ljava/lang/StringBuffer;

    invoke-direct {v6}, Ljava/lang/StringBuffer;-><init>()V

    const-string v7, "Couldn\'t set up logger for \""

    invoke-virtual {v6, v7}, Ljava/lang/StringBuffer;->append(Ljava/lang/String;)Ljava/lang/StringBuffer;

    move-result-object v6

    .line 405
    invoke-static {v2}, Lfreemarker/log/Logger;->getLibraryName(I)Ljava/lang/String;

    move-result-object v7

    invoke-virtual {v6, v7}, Ljava/lang/StringBuffer;->append(Ljava/lang/String;)Ljava/lang/StringBuffer;

    move-result-object v6

    const-string v7, "\""

    invoke-virtual {v6, v7}, Ljava/lang/StringBuffer;->append(Ljava/lang/String;)Ljava/lang/StringBuffer;

    move-result-object v6

    if-eqz v3, :cond_d

    const-string v7, "; logging disabled"

    goto :goto_4

    :cond_d
    const-string v7, "."

    :goto_4
    invoke-virtual {v6, v7}, Ljava/lang/StringBuffer;->append(Ljava/lang/String;)Ljava/lang/StringBuffer;

    move-result-object v6

    invoke-virtual {v6}, Ljava/lang/StringBuffer;->toString()Ljava/lang/String;

    move-result-object v6

    .line 404
    invoke-static {v6, v4}, Lfreemarker/log/Logger;->logErrorInLogger(Ljava/lang/String;Ljava/lang/Throwable;)V
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_1

    .line 407
    if-eqz v3, :cond_e

    .line 409
    :try_start_3
    invoke-static {v5}, Lfreemarker/log/Logger;->setLibrary(I)V
    :try_end_3
    .catch Ljava/lang/ClassNotFoundException; {:try_start_3 .. :try_end_3} :catch_0
    .catchall {:try_start_3 .. :try_end_3} :catchall_1

    .line 412
    goto :goto_5

    .line 410
    :catch_0
    move-exception v5

    .line 411
    .local v5, "e2":Ljava/lang/ClassNotFoundException;
    :try_start_4
    new-instance v6, Ljava/lang/RuntimeException;

    const-string v7, "Bug"

    invoke-direct {v6, v7, v5}, Ljava/lang/RuntimeException;-><init>(Ljava/lang/String;Ljava/lang/Throwable;)V

    .end local p0    # "onlyIfCanBeSetFromSysProp":Z
    throw v6

    .line 415
    .end local v1    # "sysPropVal":Ljava/lang/String;
    .end local v2    # "libraryEnum":I
    .end local v3    # "disableLogging":Z
    .end local v4    # "e":Ljava/lang/Throwable;
    .end local v5    # "e2":Ljava/lang/ClassNotFoundException;
    .restart local p0    # "onlyIfCanBeSetFromSysProp":Z
    :cond_e
    :goto_5
    monitor-exit v0

    .line 416
    return-void

    .line 415
    :catchall_1
    move-exception v1

    monitor-exit v0
    :try_end_4
    .catchall {:try_start_4 .. :try_end_4} :catchall_1

    throw v1
.end method

.method private static getAvailabilityCheckClassName(I)Ljava/lang/String;
    .locals 2
    .param p0, "libraryEnum"    # I

    .line 168
    const/4 v0, -0x1

    if-eq p0, v0, :cond_1

    if-nez p0, :cond_0

    goto :goto_0

    .line 172
    :cond_0
    sget-object v0, Lfreemarker/log/Logger;->LIBRARIES_BY_PRIORITY:[Ljava/lang/String;

    add-int/lit8 v1, p0, -0x1

    mul-int/lit8 v1, v1, 0x2

    aget-object v0, v0, v1

    return-object v0

    .line 170
    :cond_1
    :goto_0
    const/4 v0, 0x0

    return-object v0
.end method

.method private static getLibraryName(I)Ljava/lang/String;
    .locals 2
    .param p0, "libraryEnum"    # I

    .line 182
    const/4 v0, -0x1

    if-ne p0, v0, :cond_0

    .line 183
    const-string v0, "auto"

    return-object v0

    .line 185
    :cond_0
    if-nez p0, :cond_1

    .line 186
    const-string v0, "none"

    return-object v0

    .line 188
    :cond_1
    sget-object v0, Lfreemarker/log/Logger;->LIBRARIES_BY_PRIORITY:[Ljava/lang/String;

    add-int/lit8 v1, p0, -0x1

    mul-int/lit8 v1, v1, 0x2

    add-int/lit8 v1, v1, 0x1

    aget-object v0, v0, v1

    return-object v0
.end method

.method public static getLogger(Ljava/lang/String;)Lfreemarker/log/Logger;
    .locals 3
    .param p0, "category"    # Ljava/lang/String;

    .line 350
    sget-object v0, Lfreemarker/log/Logger;->categoryPrefix:Ljava/lang/String;

    invoke-virtual {v0}, Ljava/lang/String;->length()I

    move-result v0

    if-eqz v0, :cond_0

    .line 351
    new-instance v0, Ljava/lang/StringBuffer;

    invoke-direct {v0}, Ljava/lang/StringBuffer;-><init>()V

    sget-object v1, Lfreemarker/log/Logger;->categoryPrefix:Ljava/lang/String;

    invoke-virtual {v0, v1}, Ljava/lang/StringBuffer;->append(Ljava/lang/String;)Ljava/lang/StringBuffer;

    move-result-object v0

    invoke-virtual {v0, p0}, Ljava/lang/StringBuffer;->append(Ljava/lang/String;)Ljava/lang/StringBuffer;

    move-result-object v0

    invoke-virtual {v0}, Ljava/lang/StringBuffer;->toString()Ljava/lang/String;

    move-result-object p0

    .line 353
    :cond_0
    sget-object v0, Lfreemarker/log/Logger;->loggersByCategory:Ljava/util/Map;

    monitor-enter v0

    .line 354
    :try_start_0
    invoke-interface {v0, p0}, Ljava/util/Map;->get(Ljava/lang/Object;)Ljava/lang/Object;

    move-result-object v1

    check-cast v1, Lfreemarker/log/Logger;

    .line 355
    .local v1, "logger":Lfreemarker/log/Logger;
    if-nez v1, :cond_1

    .line 356
    const/4 v2, 0x0

    invoke-static {v2}, Lfreemarker/log/Logger;->ensureLoggerFactorySet(Z)V

    .line 357
    sget-object v2, Lfreemarker/log/Logger;->loggerFactory:Lfreemarker/log/LoggerFactory;

    invoke-interface {v2, p0}, Lfreemarker/log/LoggerFactory;->getLogger(Ljava/lang/String;)Lfreemarker/log/Logger;

    move-result-object v2

    move-object v1, v2

    .line 358
    invoke-interface {v0, p0, v1}, Ljava/util/Map;->put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;

    .line 360
    :cond_1
    monitor-exit v0

    return-object v1

    .line 361
    .end local v1    # "logger":Lfreemarker/log/Logger;
    :catchall_0
    move-exception v1

    monitor-exit v0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    throw v1
.end method

.method private static getSystemProperty(Ljava/lang/String;)Ljava/lang/String;
    .locals 5
    .param p0, "key"    # Ljava/lang/String;

    .line 547
    const-string v0, "\"."

    const/4 v1, 0x0

    :try_start_0
    new-instance v2, Lfreemarker/log/Logger$1;

    invoke-direct {v2, p0}, Lfreemarker/log/Logger$1;-><init>(Ljava/lang/String;)V

    invoke-static {v2}, Ljava/security/AccessController;->doPrivileged(Ljava/security/PrivilegedAction;)Ljava/lang/Object;

    move-result-object v2

    check-cast v2, Ljava/lang/String;
    :try_end_0
    .catch Ljava/security/AccessControlException; {:try_start_0 .. :try_end_0} :catch_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    return-object v2

    .line 556
    :catchall_0
    move-exception v2

    .line 557
    .local v2, "e":Ljava/lang/Throwable;
    new-instance v3, Ljava/lang/StringBuffer;

    invoke-direct {v3}, Ljava/lang/StringBuffer;-><init>()V

    const-string v4, "Failed to read system property \""

    invoke-virtual {v3, v4}, Ljava/lang/StringBuffer;->append(Ljava/lang/String;)Ljava/lang/StringBuffer;

    move-result-object v3

    invoke-virtual {v3, p0}, Ljava/lang/StringBuffer;->append(Ljava/lang/String;)Ljava/lang/StringBuffer;

    move-result-object v3

    invoke-virtual {v3, v0}, Ljava/lang/StringBuffer;->append(Ljava/lang/String;)Ljava/lang/StringBuffer;

    move-result-object v0

    invoke-virtual {v0}, Ljava/lang/StringBuffer;->toString()Ljava/lang/String;

    move-result-object v0

    invoke-static {v0, v2}, Lfreemarker/log/Logger;->logErrorInLogger(Ljava/lang/String;Ljava/lang/Throwable;)V

    .line 558
    return-object v1

    .line 553
    .end local v2    # "e":Ljava/lang/Throwable;
    :catch_0
    move-exception v2

    .line 554
    .local v2, "e":Ljava/security/AccessControlException;
    new-instance v3, Ljava/lang/StringBuffer;

    invoke-direct {v3}, Ljava/lang/StringBuffer;-><init>()V

    const-string v4, "Insufficient permissions to read system property \""

    invoke-virtual {v3, v4}, Ljava/lang/StringBuffer;->append(Ljava/lang/String;)Ljava/lang/StringBuffer;

    move-result-object v3

    invoke-virtual {v3, p0}, Ljava/lang/StringBuffer;->append(Ljava/lang/String;)Ljava/lang/StringBuffer;

    move-result-object v3

    invoke-virtual {v3, v0}, Ljava/lang/StringBuffer;->append(Ljava/lang/String;)Ljava/lang/StringBuffer;

    move-result-object v0

    invoke-virtual {v0}, Ljava/lang/StringBuffer;->toString()Ljava/lang/String;

    move-result-object v0

    invoke-static {v0}, Lfreemarker/log/Logger;->logWarnInLogger(Ljava/lang/String;)V

    .line 555
    return-object v1
.end method

.method private static hasLog4LibraryThatDelegatesToWorkingSLF4J()Z
    .locals 5

    .line 477
    const/4 v0, 0x3

    const/4 v1, 0x0

    :try_start_0
    invoke-static {v0}, Lfreemarker/log/Logger;->getAvailabilityCheckClassName(I)Ljava/lang/String;

    move-result-object v0

    invoke-static {v0}, Ljava/lang/Class;->forName(Ljava/lang/String;)Ljava/lang/Class;

    .line 478
    const/4 v0, 0x5

    invoke-static {v0}, Lfreemarker/log/Logger;->getAvailabilityCheckClassName(I)Ljava/lang/String;

    move-result-object v0

    invoke-static {v0}, Ljava/lang/Class;->forName(Ljava/lang/String;)Ljava/lang/Class;
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_1

    .line 481
    nop

    .line 483
    :try_start_1
    const-string v0, "org.apache.log4j.FileAppender"

    invoke-static {v0}, Ljava/lang/Class;->forName(Ljava/lang/String;)Ljava/lang/Class;
    :try_end_1
    .catch Ljava/lang/ClassNotFoundException; {:try_start_1 .. :try_end_1} :catch_0

    .line 484
    return v1

    .line 485
    :catch_0
    move-exception v0

    .line 487
    .local v0, "e":Ljava/lang/ClassNotFoundException;
    :try_start_2
    const-string v2, "freemarker.log._Log4jOverSLF4JTester"

    invoke-static {v2}, Ljava/lang/Class;->forName(Ljava/lang/String;)Ljava/lang/Class;

    move-result-object v2

    const-string/jumbo v3, "test"

    new-array v4, v1, [Ljava/lang/Class;

    .line 488
    invoke-virtual {v2, v3, v4}, Ljava/lang/Class;->getMethod(Ljava/lang/String;[Ljava/lang/Class;)Ljava/lang/reflect/Method;

    move-result-object v2

    const/4 v3, 0x0

    new-array v4, v1, [Ljava/lang/Object;

    invoke-virtual {v2, v3, v4}, Ljava/lang/reflect/Method;->invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;

    move-result-object v2

    .line 489
    .local v2, "r":Ljava/lang/Object;
    move-object v3, v2

    check-cast v3, Ljava/lang/Boolean;

    invoke-virtual {v3}, Ljava/lang/Boolean;->booleanValue()Z

    move-result v1
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_0

    return v1

    .line 490
    .end local v2    # "r":Ljava/lang/Object;
    :catchall_0
    move-exception v2

    .line 491
    .local v2, "e2":Ljava/lang/Throwable;
    return v1

    .line 479
    .end local v0    # "e":Ljava/lang/ClassNotFoundException;
    .end local v2    # "e2":Ljava/lang/Throwable;
    :catchall_1
    move-exception v0

    .line 480
    .local v0, "e":Ljava/lang/Throwable;
    return v1
.end method

.method private static isAutoDetected(I)Z
    .locals 1
    .param p0, "libraryEnum"    # I

    .line 193
    const/4 v0, -0x1

    if-eq p0, v0, :cond_0

    if-eqz p0, :cond_0

    const/4 v0, 0x5

    if-eq p0, v0, :cond_0

    const/4 v0, 0x4

    if-eq p0, v0, :cond_0

    const/4 v0, 0x1

    goto :goto_0

    :cond_0
    const/4 v0, 0x0

    :goto_0
    return v0
.end method

.method private static logErrorInLogger(Ljava/lang/String;Ljava/lang/Throwable;)V
    .locals 1
    .param p0, "message"    # Ljava/lang/String;
    .param p1, "exception"    # Ljava/lang/Throwable;

    .line 506
    const/4 v0, 0x1

    invoke-static {v0, p0, p1}, Lfreemarker/log/Logger;->logInLogger(ZLjava/lang/String;Ljava/lang/Throwable;)V

    .line 507
    return-void
.end method

.method private static logInLogger(ZLjava/lang/String;Ljava/lang/Throwable;)V
    .locals 4
    .param p0, "error"    # Z
    .param p1, "message"    # Ljava/lang/String;
    .param p2, "exception"    # Ljava/lang/Throwable;

    .line 511
    sget-object v0, Lfreemarker/log/Logger;->class$freemarker$log$Logger:Ljava/lang/Class;

    if-nez v0, :cond_0

    const-string v0, "freemarker.log.Logger"

    invoke-static {v0}, Lfreemarker/log/Logger;->class$(Ljava/lang/String;)Ljava/lang/Class;

    move-result-object v0

    sput-object v0, Lfreemarker/log/Logger;->class$freemarker$log$Logger:Ljava/lang/Class;

    :cond_0
    monitor-enter v0

    .line 512
    const/4 v1, 0x0

    :try_start_0
    sget-object v2, Lfreemarker/log/Logger;->loggerFactory:Lfreemarker/log/LoggerFactory;

    if-eqz v2, :cond_1

    instance-of v2, v2, Lfreemarker/log/_NullLoggerFactory;
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_1

    if-nez v2, :cond_1

    const/4 v1, 0x1

    .line 513
    .local v1, "canUseRealLogger":Z
    :cond_1
    :try_start_1
    monitor-exit v0
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_2

    .line 515
    if-eqz v1, :cond_3

    .line 517
    :try_start_2
    const-string v0, "freemarker.logger"

    invoke-static {v0}, Lfreemarker/log/Logger;->getLogger(Ljava/lang/String;)Lfreemarker/log/Logger;

    move-result-object v0

    .line 518
    .local v0, "logger":Lfreemarker/log/Logger;
    if-eqz p0, :cond_2

    .line 519
    invoke-virtual {v0, p1}, Lfreemarker/log/Logger;->error(Ljava/lang/String;)V

    goto :goto_0

    .line 521
    :cond_2
    invoke-virtual {v0, p1}, Lfreemarker/log/Logger;->warn(Ljava/lang/String;)V
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_0

    .line 525
    .end local v0    # "logger":Lfreemarker/log/Logger;
    :goto_0
    goto :goto_1

    .line 523
    :catchall_0
    move-exception v0

    .line 524
    .local v0, "e":Ljava/lang/Throwable;
    const/4 v1, 0x0

    .line 528
    .end local v0    # "e":Ljava/lang/Throwable;
    :cond_3
    :goto_1
    if-nez v1, :cond_6

    .line 529
    sget-object v0, Ljava/lang/System;->err:Ljava/io/PrintStream;

    new-instance v2, Ljava/lang/StringBuffer;

    invoke-direct {v2}, Ljava/lang/StringBuffer;-><init>()V

    if-eqz p0, :cond_4

    const-string v3, "ERROR"

    goto :goto_2

    :cond_4
    const-string v3, "WARN"

    :goto_2
    invoke-virtual {v2, v3}, Ljava/lang/StringBuffer;->append(Ljava/lang/String;)Ljava/lang/StringBuffer;

    move-result-object v2

    const-string v3, " "

    invoke-virtual {v2, v3}, Ljava/lang/StringBuffer;->append(Ljava/lang/String;)Ljava/lang/StringBuffer;

    move-result-object v2

    sget-object v3, Lfreemarker/log/Logger;->class$freemarker$log$LoggerFactory:Ljava/lang/Class;

    if-nez v3, :cond_5

    const-string v3, "freemarker.log.LoggerFactory"

    .line 530
    invoke-static {v3}, Lfreemarker/log/Logger;->class$(Ljava/lang/String;)Ljava/lang/Class;

    move-result-object v3

    sput-object v3, Lfreemarker/log/Logger;->class$freemarker$log$LoggerFactory:Ljava/lang/Class;

    goto :goto_3

    :cond_5
    nop

    :goto_3
    invoke-virtual {v3}, Ljava/lang/Class;->getName()Ljava/lang/String;

    move-result-object v3

    invoke-virtual {v2, v3}, Ljava/lang/StringBuffer;->append(Ljava/lang/String;)Ljava/lang/StringBuffer;

    move-result-object v2

    const-string v3, ": "

    invoke-virtual {v2, v3}, Ljava/lang/StringBuffer;->append(Ljava/lang/String;)Ljava/lang/StringBuffer;

    move-result-object v2

    invoke-virtual {v2, p1}, Ljava/lang/StringBuffer;->append(Ljava/lang/String;)Ljava/lang/StringBuffer;

    move-result-object v2

    invoke-virtual {v2}, Ljava/lang/StringBuffer;->toString()Ljava/lang/String;

    move-result-object v2

    .line 529
    invoke-virtual {v0, v2}, Ljava/io/PrintStream;->println(Ljava/lang/String;)V

    .line 531
    if-eqz p2, :cond_6

    .line 532
    sget-object v0, Ljava/lang/System;->err:Ljava/io/PrintStream;

    new-instance v2, Ljava/lang/StringBuffer;

    invoke-direct {v2}, Ljava/lang/StringBuffer;-><init>()V

    const-string v3, "\tException: "

    invoke-virtual {v2, v3}, Ljava/lang/StringBuffer;->append(Ljava/lang/String;)Ljava/lang/StringBuffer;

    move-result-object v2

    invoke-static {p2}, Lfreemarker/log/Logger;->tryToString(Ljava/lang/Object;)Ljava/lang/String;

    move-result-object v3

    invoke-virtual {v2, v3}, Ljava/lang/StringBuffer;->append(Ljava/lang/String;)Ljava/lang/StringBuffer;

    move-result-object v2

    invoke-virtual {v2}, Ljava/lang/StringBuffer;->toString()Ljava/lang/String;

    move-result-object v2

    invoke-virtual {v0, v2}, Ljava/io/PrintStream;->println(Ljava/lang/String;)V

    .line 533
    :goto_4
    invoke-virtual {p2}, Ljava/lang/Throwable;->getCause()Ljava/lang/Throwable;

    move-result-object v0

    if-eqz v0, :cond_6

    .line 534
    invoke-virtual {p2}, Ljava/lang/Throwable;->getCause()Ljava/lang/Throwable;

    move-result-object p2

    .line 535
    sget-object v0, Ljava/lang/System;->err:Ljava/io/PrintStream;

    new-instance v2, Ljava/lang/StringBuffer;

    invoke-direct {v2}, Ljava/lang/StringBuffer;-><init>()V

    const-string v3, "\tCaused by: "

    invoke-virtual {v2, v3}, Ljava/lang/StringBuffer;->append(Ljava/lang/String;)Ljava/lang/StringBuffer;

    move-result-object v2

    invoke-static {p2}, Lfreemarker/log/Logger;->tryToString(Ljava/lang/Object;)Ljava/lang/String;

    move-result-object v3

    invoke-virtual {v2, v3}, Ljava/lang/StringBuffer;->append(Ljava/lang/String;)Ljava/lang/StringBuffer;

    move-result-object v2

    invoke-virtual {v2}, Ljava/lang/StringBuffer;->toString()Ljava/lang/String;

    move-result-object v2

    invoke-virtual {v0, v2}, Ljava/io/PrintStream;->println(Ljava/lang/String;)V

    goto :goto_4

    .line 539
    :cond_6
    return-void

    .line 513
    .end local v1    # "canUseRealLogger":Z
    :catchall_1
    move-exception v2

    .restart local v1    # "canUseRealLogger":Z
    :goto_5
    :try_start_3
    monitor-exit v0
    :try_end_3
    .catchall {:try_start_3 .. :try_end_3} :catchall_2

    throw v2

    :catchall_2
    move-exception v2

    goto :goto_5
.end method

.method private static logWarnInLogger(Ljava/lang/String;)V
    .locals 2
    .param p0, "message"    # Ljava/lang/String;

    .line 502
    const/4 v0, 0x0

    const/4 v1, 0x0

    invoke-static {v0, p0, v1}, Lfreemarker/log/Logger;->logInLogger(ZLjava/lang/String;Ljava/lang/Throwable;)V

    .line 503
    return-void
.end method

.method public static selectLoggerLibrary(I)V
    .locals 5
    .param p0, "libraryEnum"    # I
    .annotation system Ldalvik/annotation/Throws;
        value = {
            Ljava/lang/ClassNotFoundException;
        }
    .end annotation

    .line 224
    const/4 v0, -0x1

    if-lt p0, v0, :cond_8

    const/4 v0, 0x5

    if-gt p0, v0, :cond_8

    .line 228
    sget-object v0, Lfreemarker/log/Logger;->class$freemarker$log$Logger:Ljava/lang/Class;

    if-nez v0, :cond_0

    const-string v0, "freemarker.log.Logger"

    invoke-static {v0}, Lfreemarker/log/Logger;->class$(Ljava/lang/String;)Ljava/lang/Class;

    move-result-object v0

    sput-object v0, Lfreemarker/log/Logger;->class$freemarker$log$Logger:Ljava/lang/Class;

    :cond_0
    monitor-enter v0

    .line 229
    :try_start_0
    sget-object v1, Lfreemarker/log/Logger;->loggerFactory:Lfreemarker/log/LoggerFactory;

    const/4 v2, 0x1

    if-eqz v1, :cond_1

    move v1, v2

    goto :goto_0

    :cond_1
    const/4 v1, 0x0

    .line 230
    .local v1, "loggerFactoryWasAlreadySet":Z
    :goto_0
    if-eqz v1, :cond_2

    sget v3, Lfreemarker/log/Logger;->libraryEnum:I

    if-eq p0, v3, :cond_7

    .line 232
    :cond_2
    invoke-static {v2}, Lfreemarker/log/Logger;->ensureLoggerFactorySet(Z)V

    .line 235
    sget-boolean v2, Lfreemarker/log/Logger;->initializedFromSystemProperty:Z

    if-eqz v2, :cond_6

    sget-object v2, Lfreemarker/log/Logger;->loggerFactory:Lfreemarker/log/LoggerFactory;

    if-nez v2, :cond_3

    goto :goto_2

    .line 245
    :cond_3
    sget v2, Lfreemarker/log/Logger;->libraryEnum:I

    if-eq p0, v2, :cond_5

    .line 246
    new-instance v2, Ljava/lang/StringBuffer;

    invoke-direct {v2}, Ljava/lang/StringBuffer;-><init>()V

    const-string v3, "Ignored "

    invoke-virtual {v2, v3}, Ljava/lang/StringBuffer;->append(Ljava/lang/String;)Ljava/lang/StringBuffer;

    move-result-object v2

    sget-object v3, Lfreemarker/log/Logger;->class$freemarker$log$Logger:Ljava/lang/Class;

    if-nez v3, :cond_4

    const-string v3, "freemarker.log.Logger"

    invoke-static {v3}, Lfreemarker/log/Logger;->class$(Ljava/lang/String;)Ljava/lang/Class;

    move-result-object v3

    sput-object v3, Lfreemarker/log/Logger;->class$freemarker$log$Logger:Ljava/lang/Class;

    :cond_4
    invoke-virtual {v3}, Ljava/lang/Class;->getName()Ljava/lang/String;

    move-result-object v3

    invoke-virtual {v2, v3}, Ljava/lang/StringBuffer;->append(Ljava/lang/String;)Ljava/lang/StringBuffer;

    move-result-object v2

    const-string v3, ".selectLoggerLibrary(\""

    invoke-virtual {v2, v3}, Ljava/lang/StringBuffer;->append(Ljava/lang/String;)Ljava/lang/StringBuffer;

    move-result-object v2

    .line 247
    invoke-static {p0}, Lfreemarker/log/Logger;->getLibraryName(I)Ljava/lang/String;

    move-result-object v3

    invoke-virtual {v2, v3}, Ljava/lang/StringBuffer;->append(Ljava/lang/String;)Ljava/lang/StringBuffer;

    move-result-object v2

    const-string v3, "\") call, because the \""

    invoke-virtual {v2, v3}, Ljava/lang/StringBuffer;->append(Ljava/lang/String;)Ljava/lang/StringBuffer;

    move-result-object v2

    const-string v3, "org.freemarker.loggerLibrary"

    invoke-virtual {v2, v3}, Ljava/lang/StringBuffer;->append(Ljava/lang/String;)Ljava/lang/StringBuffer;

    move-result-object v2

    const-string v3, "\" system property is set to \""

    invoke-virtual {v2, v3}, Ljava/lang/StringBuffer;->append(Ljava/lang/String;)Ljava/lang/StringBuffer;

    move-result-object v2

    sget v3, Lfreemarker/log/Logger;->libraryEnum:I

    .line 249
    invoke-static {v3}, Lfreemarker/log/Logger;->getLibraryName(I)Ljava/lang/String;

    move-result-object v3

    invoke-virtual {v2, v3}, Ljava/lang/StringBuffer;->append(Ljava/lang/String;)Ljava/lang/StringBuffer;

    move-result-object v2

    const-string v3, "\"."

    invoke-virtual {v2, v3}, Ljava/lang/StringBuffer;->append(Ljava/lang/String;)Ljava/lang/StringBuffer;

    move-result-object v2

    invoke-virtual {v2}, Ljava/lang/StringBuffer;->toString()Ljava/lang/String;

    move-result-object v2

    .line 246
    invoke-static {v2}, Lfreemarker/log/Logger;->logWarnInLogger(Ljava/lang/String;)V

    goto :goto_3

    .line 245
    :cond_5
    :goto_1
    goto :goto_3

    .line 236
    :cond_6
    :goto_2
    sget v2, Lfreemarker/log/Logger;->libraryEnum:I

    .line 237
    .local v2, "replacedLibraryEnum":I
    invoke-static {p0}, Lfreemarker/log/Logger;->setLibrary(I)V

    .line 238
    sget-object v3, Lfreemarker/log/Logger;->loggersByCategory:Ljava/util/Map;

    invoke-interface {v3}, Ljava/util/Map;->clear()V

    .line 239
    if-eqz v1, :cond_5

    .line 240
    new-instance v3, Ljava/lang/StringBuffer;

    invoke-direct {v3}, Ljava/lang/StringBuffer;-><init>()V

    const-string v4, "Logger library was already set earlier to \""

    invoke-virtual {v3, v4}, Ljava/lang/StringBuffer;->append(Ljava/lang/String;)Ljava/lang/StringBuffer;

    move-result-object v3

    .line 241
    invoke-static {v2}, Lfreemarker/log/Logger;->getLibraryName(I)Ljava/lang/String;

    move-result-object v4

    invoke-virtual {v3, v4}, Ljava/lang/StringBuffer;->append(Ljava/lang/String;)Ljava/lang/StringBuffer;

    move-result-object v3

    const-string v4, "\"; "

    invoke-virtual {v3, v4}, Ljava/lang/StringBuffer;->append(Ljava/lang/String;)Ljava/lang/StringBuffer;

    move-result-object v3

    const-string v4, "change to \""

    invoke-virtual {v3, v4}, Ljava/lang/StringBuffer;->append(Ljava/lang/String;)Ljava/lang/StringBuffer;

    move-result-object v3

    .line 242
    invoke-static {p0}, Lfreemarker/log/Logger;->getLibraryName(I)Ljava/lang/String;

    move-result-object v4

    invoke-virtual {v3, v4}, Ljava/lang/StringBuffer;->append(Ljava/lang/String;)Ljava/lang/StringBuffer;

    move-result-object v3

    const-string v4, "\" won\'t effect loggers created "

    invoke-virtual {v3, v4}, Ljava/lang/StringBuffer;->append(Ljava/lang/String;)Ljava/lang/StringBuffer;

    move-result-object v3

    const-string v4, "earlier."

    invoke-virtual {v3, v4}, Ljava/lang/StringBuffer;->append(Ljava/lang/String;)Ljava/lang/StringBuffer;

    move-result-object v3

    invoke-virtual {v3}, Ljava/lang/StringBuffer;->toString()Ljava/lang/String;

    move-result-object v3

    .line 240
    invoke-static {v3}, Lfreemarker/log/Logger;->logWarnInLogger(Ljava/lang/String;)V

    goto :goto_1

    .line 252
    .end local v1    # "loggerFactoryWasAlreadySet":Z
    .end local v2    # "replacedLibraryEnum":I
    :cond_7
    :goto_3
    monitor-exit v0

    .line 253
    return-void

    .line 252
    :catchall_0
    move-exception v1

    monitor-exit v0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    throw v1

    .line 225
    :cond_8
    new-instance v0, Ljava/lang/IllegalArgumentException;

    const-string v1, "Library enum value out of range"

    invoke-direct {v0, v1}, Ljava/lang/IllegalArgumentException;-><init>(Ljava/lang/String;)V

    throw v0
.end method

.method public static setCategoryPrefix(Ljava/lang/String;)V
    .locals 2
    .param p0, "prefix"    # Ljava/lang/String;

    .line 268
    sget-object v0, Lfreemarker/log/Logger;->class$freemarker$log$Logger:Ljava/lang/Class;

    if-nez v0, :cond_0

    const-string v0, "freemarker.log.Logger"

    invoke-static {v0}, Lfreemarker/log/Logger;->class$(Ljava/lang/String;)Ljava/lang/Class;

    move-result-object v0

    sput-object v0, Lfreemarker/log/Logger;->class$freemarker$log$Logger:Ljava/lang/Class;

    :cond_0
    monitor-enter v0

    .line 269
    if-eqz p0, :cond_1

    .line 273
    :try_start_0
    sput-object p0, Lfreemarker/log/Logger;->categoryPrefix:Ljava/lang/String;

    .line 274
    monitor-exit v0

    .line 275
    return-void

    .line 274
    :catchall_0
    move-exception v1

    goto :goto_0

    .line 271
    :cond_1
    new-instance v1, Ljava/lang/IllegalArgumentException;

    invoke-direct {v1}, Ljava/lang/IllegalArgumentException;-><init>()V

    .end local p0    # "prefix":Ljava/lang/String;
    throw v1

    .line 274
    .restart local p0    # "prefix":Ljava/lang/String;
    :goto_0
    monitor-exit v0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    throw v1
.end method

.method private static declared-synchronized setLibrary(I)V
    .locals 2
    .param p0, "libraryEnum"    # I
    .annotation system Ldalvik/annotation/Throws;
        value = {
            Ljava/lang/ClassNotFoundException;
        }
    .end annotation

    const-class v0, Lfreemarker/log/Logger;

    monitor-enter v0

    .line 497
    :try_start_0
    invoke-static {p0}, Lfreemarker/log/Logger;->createLoggerFactory(I)Lfreemarker/log/LoggerFactory;

    move-result-object v1

    sput-object v1, Lfreemarker/log/Logger;->loggerFactory:Lfreemarker/log/LoggerFactory;

    .line 498
    sput p0, Lfreemarker/log/Logger;->libraryEnum:I
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    .line 499
    monitor-exit v0

    return-void

    .line 496
    .end local p0    # "libraryEnum":I
    :catchall_0
    move-exception p0

    monitor-exit v0

    throw p0
.end method

.method private static tryToString(Ljava/lang/Object;)Ljava/lang/String;
    .locals 2
    .param p0, "object"    # Ljava/lang/Object;

    .line 567
    if-nez p0, :cond_0

    const/4 v0, 0x0

    return-object v0

    .line 569
    :cond_0
    :try_start_0
    invoke-virtual {p0}, Ljava/lang/Object;->toString()Ljava/lang/String;

    move-result-object v0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    return-object v0

    .line 570
    :catchall_0
    move-exception v0

    .line 571
    .local v0, "e":Ljava/lang/Throwable;
    invoke-virtual {p0}, Ljava/lang/Object;->getClass()Ljava/lang/Class;

    move-result-object v1

    invoke-virtual {v1}, Ljava/lang/Class;->getName()Ljava/lang/String;

    move-result-object v1

    return-object v1
.end method


# virtual methods
.method public abstract debug(Ljava/lang/String;)V
.end method

.method public abstract debug(Ljava/lang/String;Ljava/lang/Throwable;)V
.end method

.method public abstract error(Ljava/lang/String;)V
.end method

.method public abstract error(Ljava/lang/String;Ljava/lang/Throwable;)V
.end method

.method public abstract info(Ljava/lang/String;)V
.end method

.method public abstract info(Ljava/lang/String;Ljava/lang/Throwable;)V
.end method

.method public abstract isDebugEnabled()Z
.end method

.method public abstract isErrorEnabled()Z
.end method

.method public abstract isFatalEnabled()Z
.end method

.method public abstract isInfoEnabled()Z
.end method

.method public abstract isWarnEnabled()Z
.end method

.method public abstract warn(Ljava/lang/String;)V
.end method

.method public abstract warn(Ljava/lang/String;Ljava/lang/Throwable;)V
.end method
