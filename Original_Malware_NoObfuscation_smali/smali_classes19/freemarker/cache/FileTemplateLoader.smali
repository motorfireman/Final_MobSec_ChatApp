.class public Lfreemarker/cache/FileTemplateLoader;
.super Ljava/lang/Object;
.source "FileTemplateLoader.java"

# interfaces
.implements Lfreemarker/cache/TemplateLoader;


# static fields
.field private static final CASE_CHECH_CACHE_HARD_SIZE:I = 0x32

.field private static final CASE_CHECK_CACHE__SOFT_SIZE:I = 0x3e8

.field private static final EMULATE_CASE_SENSITIVE_FILE_SYSTEM_DEFAULT:Z

.field private static final LOG:Lfreemarker/log/Logger;

.field private static final SEP_IS_SLASH:Z

.field public static SYSTEM_PROPERTY_NAME_EMULATE_CASE_SENSITIVE_FILE_SYSTEM:Ljava/lang/String;


# instance fields
.field public final baseDir:Ljava/io/File;

.field private final canonicalBasePath:Ljava/lang/String;

.field private correctCasePaths:Lfreemarker/cache/MruCacheStorage;

.field private emulateCaseSensitiveFileSystem:Z


# direct methods
.method static constructor <clinit>()V
    .locals 4

    .line 49
    const-string v0, "org.freemarker.emulateCaseSensitiveFileSystem"

    sput-object v0, Lfreemarker/cache/FileTemplateLoader;->SYSTEM_PROPERTY_NAME_EMULATE_CASE_SENSITIVE_FILE_SYSTEM:Ljava/lang/String;

    .line 53
    const-string v1, "false"

    invoke-static {v0, v1}, Lfreemarker/template/utility/SecurityUtilities;->getSystemProperty(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;

    move-result-object v0

    .line 57
    .local v0, "s":Ljava/lang/String;
    const/4 v1, 0x0

    :try_start_0
    invoke-static {v0}, Lfreemarker/template/utility/StringUtil;->getYesNo(Ljava/lang/String;)Z

    move-result v2
    :try_end_0
    .catch Ljava/lang/Exception; {:try_start_0 .. :try_end_0} :catch_0

    .line 60
    .local v2, "emuCaseSensFS":Z
    goto :goto_0

    .line 58
    .end local v2    # "emuCaseSensFS":Z
    :catch_0
    move-exception v2

    move v3, v1

    .line 59
    .local v2, "e":Ljava/lang/Exception;
    .local v3, "emuCaseSensFS":Z
    const/4 v3, 0x0

    move v2, v3

    .line 61
    .end local v3    # "emuCaseSensFS":Z
    .local v2, "emuCaseSensFS":Z
    :goto_0
    sput-boolean v2, Lfreemarker/cache/FileTemplateLoader;->EMULATE_CASE_SENSITIVE_FILE_SYSTEM_DEFAULT:Z

    .line 66
    .end local v0    # "s":Ljava/lang/String;
    .end local v2    # "emuCaseSensFS":Z
    sget-char v0, Ljava/io/File;->separatorChar:C

    const/16 v2, 0x2f

    if-ne v0, v2, :cond_0

    const/4 v1, 0x1

    :cond_0
    sput-boolean v1, Lfreemarker/cache/FileTemplateLoader;->SEP_IS_SLASH:Z

    .line 68
    const-string v0, "freemarker.cache"

    invoke-static {v0}, Lfreemarker/log/Logger;->getLogger(Ljava/lang/String;)Lfreemarker/log/Logger;

    move-result-object v0

    sput-object v0, Lfreemarker/cache/FileTemplateLoader;->LOG:Lfreemarker/log/Logger;

    return-void
.end method

.method public constructor <init>()V
    .locals 2
    .annotation system Ldalvik/annotation/Throws;
        value = {
            Ljava/io/IOException;
        }
    .end annotation

    .line 87
    new-instance v0, Ljava/io/File;

    const-string/jumbo v1, "user.dir"

    invoke-static {v1}, Lfreemarker/template/utility/SecurityUtilities;->getSystemProperty(Ljava/lang/String;)Ljava/lang/String;

    move-result-object v1

    invoke-direct {v0, v1}, Ljava/io/File;-><init>(Ljava/lang/String;)V

    invoke-direct {p0, v0}, Lfreemarker/cache/FileTemplateLoader;-><init>(Ljava/io/File;)V

    .line 88
    return-void
.end method

.method public constructor <init>(Ljava/io/File;)V
    .locals 1
    .param p1, "baseDir"    # Ljava/io/File;
    .annotation system Ldalvik/annotation/Throws;
        value = {
            Ljava/io/IOException;
        }
    .end annotation

    .line 101
    const/4 v0, 0x0

    invoke-direct {p0, p1, v0}, Lfreemarker/cache/FileTemplateLoader;-><init>(Ljava/io/File;Z)V

    .line 102
    return-void
.end method

.method public constructor <init>(Ljava/io/File;Z)V
    .locals 2
    .param p1, "baseDir"    # Ljava/io/File;
    .param p2, "disableCanonicalPathCheck"    # Z
    .annotation system Ldalvik/annotation/Throws;
        value = {
            Ljava/io/IOException;
        }
    .end annotation

    .line 123
    invoke-direct {p0}, Ljava/lang/Object;-><init>()V

    .line 125
    :try_start_0
    new-instance v0, Lfreemarker/cache/FileTemplateLoader$1;

    invoke-direct {v0, p0, p1, p2}, Lfreemarker/cache/FileTemplateLoader$1;-><init>(Lfreemarker/cache/FileTemplateLoader;Ljava/io/File;Z)V

    invoke-static {v0}, Ljava/security/AccessController;->doPrivileged(Ljava/security/PrivilegedExceptionAction;)Ljava/lang/Object;

    move-result-object v0

    check-cast v0, [Ljava/lang/Object;

    check-cast v0, [Ljava/lang/Object;

    .line 151
    .local v0, "retval":[Ljava/lang/Object;
    const/4 v1, 0x0

    aget-object v1, v0, v1

    check-cast v1, Ljava/io/File;

    iput-object v1, p0, Lfreemarker/cache/FileTemplateLoader;->baseDir:Ljava/io/File;

    .line 152
    const/4 v1, 0x1

    aget-object v1, v0, v1

    check-cast v1, Ljava/lang/String;

    iput-object v1, p0, Lfreemarker/cache/FileTemplateLoader;->canonicalBasePath:Ljava/lang/String;

    .line 154
    invoke-virtual {p0}, Lfreemarker/cache/FileTemplateLoader;->getEmulateCaseSensitiveFileSystemDefault()Z

    move-result v1

    invoke-virtual {p0, v1}, Lfreemarker/cache/FileTemplateLoader;->setEmulateCaseSensitiveFileSystem(Z)V
    :try_end_0
    .catch Ljava/security/PrivilegedActionException; {:try_start_0 .. :try_end_0} :catch_0

    .line 159
    .end local v0    # "retval":[Ljava/lang/Object;
    nop

    .line 160
    return-void

    .line 156
    :catch_0
    move-exception v0

    .line 158
    .local v0, "e":Ljava/security/PrivilegedActionException;
    invoke-virtual {v0}, Ljava/security/PrivilegedActionException;->getException()Ljava/lang/Exception;

    move-result-object v1

    check-cast v1, Ljava/io/IOException;

    throw v1
.end method

.method static synthetic access$000()Z
    .locals 1

    .line 42
    sget-boolean v0, Lfreemarker/cache/FileTemplateLoader;->SEP_IS_SLASH:Z

    return v0
.end method

.method static synthetic access$100(Lfreemarker/cache/FileTemplateLoader;)Ljava/lang/String;
    .locals 1
    .param p0, "x0"    # Lfreemarker/cache/FileTemplateLoader;

    .line 42
    iget-object v0, p0, Lfreemarker/cache/FileTemplateLoader;->canonicalBasePath:Ljava/lang/String;

    return-object v0
.end method

.method static synthetic access$200(Lfreemarker/cache/FileTemplateLoader;)Z
    .locals 1
    .param p0, "x0"    # Lfreemarker/cache/FileTemplateLoader;

    .line 42
    iget-boolean v0, p0, Lfreemarker/cache/FileTemplateLoader;->emulateCaseSensitiveFileSystem:Z

    return v0
.end method

.method static synthetic access$300(Lfreemarker/cache/FileTemplateLoader;Ljava/io/File;)Z
    .locals 1
    .param p0, "x0"    # Lfreemarker/cache/FileTemplateLoader;
    .param p1, "x1"    # Ljava/io/File;
    .annotation system Ldalvik/annotation/Throws;
        value = {
            Ljava/io/IOException;
        }
    .end annotation

    .line 42
    invoke-direct {p0, p1}, Lfreemarker/cache/FileTemplateLoader;->isNameCaseCorrect(Ljava/io/File;)Z

    move-result v0

    return v0
.end method

.method private isNameCaseCorrect(Ljava/io/File;)Z
    .locals 11
    .param p1, "source"    # Ljava/io/File;
    .annotation system Ldalvik/annotation/Throws;
        value = {
            Ljava/io/IOException;
        }
    .end annotation

    .line 246
    invoke-virtual {p1}, Ljava/io/File;->getPath()Ljava/lang/String;

    move-result-object v0

    .line 247
    .local v0, "sourcePath":Ljava/lang/String;
    iget-object v1, p0, Lfreemarker/cache/FileTemplateLoader;->correctCasePaths:Lfreemarker/cache/MruCacheStorage;

    invoke-virtual {v1, v0}, Lfreemarker/cache/MruCacheStorage;->get(Ljava/lang/Object;)Ljava/lang/Object;

    move-result-object v1

    const/4 v2, 0x1

    if-eqz v1, :cond_0

    .line 248
    return v2

    .line 251
    :cond_0
    invoke-virtual {p1}, Ljava/io/File;->getParentFile()Ljava/io/File;

    move-result-object v1

    .line 252
    .local v1, "parentDir":Ljava/io/File;
    if-eqz v1, :cond_6

    .line 253
    iget-object v3, p0, Lfreemarker/cache/FileTemplateLoader;->baseDir:Ljava/io/File;

    invoke-virtual {v3, v1}, Ljava/io/File;->equals(Ljava/lang/Object;)Z

    move-result v3

    const/4 v4, 0x0

    if-nez v3, :cond_1

    invoke-direct {p0, v1}, Lfreemarker/cache/FileTemplateLoader;->isNameCaseCorrect(Ljava/io/File;)Z

    move-result v3

    if-nez v3, :cond_1

    .line 254
    return v4

    .line 257
    :cond_1
    invoke-virtual {v1}, Ljava/io/File;->list()[Ljava/lang/String;

    move-result-object v3

    .line 258
    .local v3, "listing":[Ljava/lang/String;
    if-eqz v3, :cond_6

    .line 259
    invoke-virtual {p1}, Ljava/io/File;->getName()Ljava/lang/String;

    move-result-object v5

    .line 261
    .local v5, "fileName":Ljava/lang/String;
    const/4 v6, 0x0

    .line 262
    .local v6, "identicalNameFound":Z
    const/4 v7, 0x0

    .local v7, "i":I
    :goto_0
    if-nez v6, :cond_3

    array-length v8, v3

    if-ge v7, v8, :cond_3

    .line 263
    aget-object v8, v3, v7

    invoke-virtual {v5, v8}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v8

    if-eqz v8, :cond_2

    .line 264
    const/4 v6, 0x1

    .line 262
    :cond_2
    add-int/lit8 v7, v7, 0x1

    goto :goto_0

    .line 268
    .end local v7    # "i":I
    :cond_3
    if-nez v6, :cond_6

    .line 270
    const/4 v7, 0x0

    .restart local v7    # "i":I
    :goto_1
    array-length v8, v3

    if-ge v7, v8, :cond_6

    .line 271
    aget-object v8, v3, v7

    .line 272
    .local v8, "listingEntry":Ljava/lang/String;
    invoke-virtual {v5, v8}, Ljava/lang/String;->equalsIgnoreCase(Ljava/lang/String;)Z

    move-result v9

    if-eqz v9, :cond_5

    .line 273
    sget-object v2, Lfreemarker/cache/FileTemplateLoader;->LOG:Lfreemarker/log/Logger;

    invoke-virtual {v2}, Lfreemarker/log/Logger;->isDebugEnabled()Z

    move-result v9

    if-eqz v9, :cond_4

    .line 274
    new-instance v9, Ljava/lang/StringBuffer;

    invoke-direct {v9}, Ljava/lang/StringBuffer;-><init>()V

    const-string v10, "Emulating file-not-found because of letter case differences to the real file, for: "

    invoke-virtual {v9, v10}, Ljava/lang/StringBuffer;->append(Ljava/lang/String;)Ljava/lang/StringBuffer;

    move-result-object v9

    invoke-virtual {v9, v0}, Ljava/lang/StringBuffer;->append(Ljava/lang/String;)Ljava/lang/StringBuffer;

    move-result-object v9

    invoke-virtual {v9}, Ljava/lang/StringBuffer;->toString()Ljava/lang/String;

    move-result-object v9

    invoke-virtual {v2, v9}, Lfreemarker/log/Logger;->debug(Ljava/lang/String;)V

    .line 277
    :cond_4
    return v4

    .line 270
    .end local v8    # "listingEntry":Ljava/lang/String;
    :cond_5
    add-int/lit8 v7, v7, 0x1

    goto :goto_1

    .line 284
    .end local v3    # "listing":[Ljava/lang/String;
    .end local v5    # "fileName":Ljava/lang/String;
    .end local v6    # "identicalNameFound":Z
    .end local v7    # "i":I
    :cond_6
    iget-object v3, p0, Lfreemarker/cache/FileTemplateLoader;->correctCasePaths:Lfreemarker/cache/MruCacheStorage;

    sget-object v4, Ljava/lang/Boolean;->TRUE:Ljava/lang/Boolean;

    invoke-virtual {v3, v0, v4}, Lfreemarker/cache/MruCacheStorage;->put(Ljava/lang/Object;Ljava/lang/Object;)V

    .line 285
    return v2
.end method


# virtual methods
.method public closeTemplateSource(Ljava/lang/Object;)V
    .locals 0
    .param p1, "templateSource"    # Ljava/lang/Object;

    .line 291
    return-void
.end method

.method public findTemplateSource(Ljava/lang/String;)Ljava/lang/Object;
    .locals 2
    .param p1, "name"    # Ljava/lang/String;
    .annotation system Ldalvik/annotation/Throws;
        value = {
            Ljava/io/IOException;
        }
    .end annotation

    .line 167
    :try_start_0
    new-instance v0, Lfreemarker/cache/FileTemplateLoader$2;

    invoke-direct {v0, p0, p1}, Lfreemarker/cache/FileTemplateLoader$2;-><init>(Lfreemarker/cache/FileTemplateLoader;Ljava/lang/String;)V

    invoke-static {v0}, Ljava/security/AccessController;->doPrivileged(Ljava/security/PrivilegedExceptionAction;)Ljava/lang/Object;

    move-result-object v0
    :try_end_0
    .catch Ljava/security/PrivilegedActionException; {:try_start_0 .. :try_end_0} :catch_0

    return-object v0

    .line 194
    :catch_0
    move-exception v0

    .line 196
    .local v0, "e":Ljava/security/PrivilegedActionException;
    invoke-virtual {v0}, Ljava/security/PrivilegedActionException;->getException()Ljava/lang/Exception;

    move-result-object v1

    check-cast v1, Ljava/io/IOException;

    throw v1
.end method

.method public getBaseDirectory()Ljava/io/File;
    .locals 1

    .line 300
    iget-object v0, p0, Lfreemarker/cache/FileTemplateLoader;->baseDir:Ljava/io/File;

    return-object v0
.end method

.method public getEmulateCaseSensitiveFileSystem()Z
    .locals 1

    .line 335
    iget-boolean v0, p0, Lfreemarker/cache/FileTemplateLoader;->emulateCaseSensitiveFileSystem:Z

    return v0
.end method

.method protected getEmulateCaseSensitiveFileSystemDefault()Z
    .locals 1

    .line 347
    sget-boolean v0, Lfreemarker/cache/FileTemplateLoader;->EMULATE_CASE_SENSITIVE_FILE_SYSTEM_DEFAULT:Z

    return v0
.end method

.method public getLastModified(Ljava/lang/Object;)J
    .locals 2
    .param p1, "templateSource"    # Ljava/lang/Object;

    .line 202
    new-instance v0, Lfreemarker/cache/FileTemplateLoader$3;

    invoke-direct {v0, p0, p1}, Lfreemarker/cache/FileTemplateLoader$3;-><init>(Lfreemarker/cache/FileTemplateLoader;Ljava/lang/Object;)V

    invoke-static {v0}, Ljava/security/AccessController;->doPrivileged(Ljava/security/PrivilegedAction;)Ljava/lang/Object;

    move-result-object v0

    check-cast v0, Ljava/lang/Long;

    move-object v1, v0

    check-cast v1, Ljava/lang/Long;

    .line 208
    invoke-virtual {v0}, Ljava/lang/Long;->longValue()J

    move-result-wide v0

    return-wide v0
.end method

.method public getReader(Ljava/lang/Object;Ljava/lang/String;)Ljava/io/Reader;
    .locals 2
    .param p1, "templateSource"    # Ljava/lang/Object;
    .param p2, "encoding"    # Ljava/lang/String;
    .annotation system Ldalvik/annotation/Throws;
        value = {
            Ljava/io/IOException;
        }
    .end annotation

    .line 219
    :try_start_0
    new-instance v0, Lfreemarker/cache/FileTemplateLoader$4;

    invoke-direct {v0, p0, p1, p2}, Lfreemarker/cache/FileTemplateLoader$4;-><init>(Lfreemarker/cache/FileTemplateLoader;Ljava/lang/Object;Ljava/lang/String;)V

    invoke-static {v0}, Ljava/security/AccessController;->doPrivileged(Ljava/security/PrivilegedExceptionAction;)Ljava/lang/Object;

    move-result-object v0

    check-cast v0, Ljava/io/Reader;
    :try_end_0
    .catch Ljava/security/PrivilegedActionException; {:try_start_0 .. :try_end_0} :catch_0

    return-object v0

    .line 234
    :catch_0
    move-exception v0

    .line 236
    .local v0, "e":Ljava/security/PrivilegedActionException;
    invoke-virtual {v0}, Ljava/security/PrivilegedActionException;->getException()Ljava/lang/Exception;

    move-result-object v1

    check-cast v1, Ljava/io/IOException;

    throw v1
.end method

.method public setEmulateCaseSensitiveFileSystem(Z)V
    .locals 3
    .param p1, "nameCaseChecked"    # Z

    .line 318
    if-eqz p1, :cond_0

    .line 319
    iget-object v0, p0, Lfreemarker/cache/FileTemplateLoader;->correctCasePaths:Lfreemarker/cache/MruCacheStorage;

    if-nez v0, :cond_1

    .line 320
    new-instance v0, Lfreemarker/cache/MruCacheStorage;

    const/16 v1, 0x32

    const/16 v2, 0x3e8

    invoke-direct {v0, v1, v2}, Lfreemarker/cache/MruCacheStorage;-><init>(II)V

    iput-object v0, p0, Lfreemarker/cache/FileTemplateLoader;->correctCasePaths:Lfreemarker/cache/MruCacheStorage;

    goto :goto_0

    .line 323
    :cond_0
    const/4 v0, 0x0

    iput-object v0, p0, Lfreemarker/cache/FileTemplateLoader;->correctCasePaths:Lfreemarker/cache/MruCacheStorage;

    .line 326
    :cond_1
    :goto_0
    iput-boolean p1, p0, Lfreemarker/cache/FileTemplateLoader;->emulateCaseSensitiveFileSystem:Z

    .line 327
    return-void
.end method

.method public toString()Ljava/lang/String;
    .locals 5

    .line 358
    new-instance v0, Ljava/lang/StringBuffer;

    invoke-direct {v0}, Ljava/lang/StringBuffer;-><init>()V

    invoke-static {p0}, Lfreemarker/cache/TemplateLoaderUtils;->getClassNameForToString(Lfreemarker/cache/TemplateLoader;)Ljava/lang/String;

    move-result-object v1

    invoke-virtual {v0, v1}, Ljava/lang/StringBuffer;->append(Ljava/lang/String;)Ljava/lang/StringBuffer;

    move-result-object v0

    const-string v1, "("

    invoke-virtual {v0, v1}, Ljava/lang/StringBuffer;->append(Ljava/lang/String;)Ljava/lang/StringBuffer;

    move-result-object v0

    const-string v1, "baseDir=\""

    invoke-virtual {v0, v1}, Ljava/lang/StringBuffer;->append(Ljava/lang/String;)Ljava/lang/StringBuffer;

    move-result-object v0

    iget-object v1, p0, Lfreemarker/cache/FileTemplateLoader;->baseDir:Ljava/io/File;

    invoke-virtual {v0, v1}, Ljava/lang/StringBuffer;->append(Ljava/lang/Object;)Ljava/lang/StringBuffer;

    move-result-object v0

    const-string v1, "\""

    invoke-virtual {v0, v1}, Ljava/lang/StringBuffer;->append(Ljava/lang/String;)Ljava/lang/StringBuffer;

    move-result-object v0

    iget-object v2, p0, Lfreemarker/cache/FileTemplateLoader;->canonicalBasePath:Ljava/lang/String;

    const-string v3, ""

    if-eqz v2, :cond_0

    new-instance v2, Ljava/lang/StringBuffer;

    invoke-direct {v2}, Ljava/lang/StringBuffer;-><init>()V

    const-string v4, ", canonicalBasePath=\""

    invoke-virtual {v2, v4}, Ljava/lang/StringBuffer;->append(Ljava/lang/String;)Ljava/lang/StringBuffer;

    move-result-object v2

    iget-object v4, p0, Lfreemarker/cache/FileTemplateLoader;->canonicalBasePath:Ljava/lang/String;

    invoke-virtual {v2, v4}, Ljava/lang/StringBuffer;->append(Ljava/lang/String;)Ljava/lang/StringBuffer;

    move-result-object v2

    invoke-virtual {v2, v1}, Ljava/lang/StringBuffer;->append(Ljava/lang/String;)Ljava/lang/StringBuffer;

    move-result-object v1

    invoke-virtual {v1}, Ljava/lang/StringBuffer;->toString()Ljava/lang/String;

    move-result-object v1

    goto :goto_0

    :cond_0
    move-object v1, v3

    :goto_0
    invoke-virtual {v0, v1}, Ljava/lang/StringBuffer;->append(Ljava/lang/String;)Ljava/lang/StringBuffer;

    move-result-object v0

    iget-boolean v1, p0, Lfreemarker/cache/FileTemplateLoader;->emulateCaseSensitiveFileSystem:Z

    if-eqz v1, :cond_1

    const-string v3, ", emulateCaseSensitiveFileSystem=true"

    :cond_1
    invoke-virtual {v0, v3}, Ljava/lang/StringBuffer;->append(Ljava/lang/String;)Ljava/lang/StringBuffer;

    move-result-object v0

    const-string v1, ")"

    invoke-virtual {v0, v1}, Ljava/lang/StringBuffer;->append(Ljava/lang/String;)Ljava/lang/StringBuffer;

    move-result-object v0

    invoke-virtual {v0}, Ljava/lang/StringBuffer;->toString()Ljava/lang/String;

    move-result-object v0

    return-object v0
.end method
