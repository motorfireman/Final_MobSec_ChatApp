.class public Lfreemarker/cache/MruCacheStorage;
.super Ljava/lang/Object;
.source "MruCacheStorage.java"

# interfaces
.implements Lfreemarker/cache/CacheStorageWithGetSize;


# annotations
.annotation system Ldalvik/annotation/MemberClasses;
    value = {
        Lfreemarker/cache/MruCacheStorage$MruReference;,
        Lfreemarker/cache/MruCacheStorage$MruEntry;
    }
.end annotation


# instance fields
.field private final map:Ljava/util/Map;

.field private final refQueue:Ljava/lang/ref/ReferenceQueue;

.field private final softHead:Lfreemarker/cache/MruCacheStorage$MruEntry;

.field private softSize:I

.field private final softSizeLimit:I

.field private final strongHead:Lfreemarker/cache/MruCacheStorage$MruEntry;

.field private strongSize:I

.field private final strongSizeLimit:I


# direct methods
.method public constructor <init>(II)V
    .locals 2
    .param p1, "strongSizeLimit"    # I
    .param p2, "softSizeLimit"    # I

    .line 76
    invoke-direct {p0}, Ljava/lang/Object;-><init>()V

    .line 56
    new-instance v0, Lfreemarker/cache/MruCacheStorage$MruEntry;

    invoke-direct {v0}, Lfreemarker/cache/MruCacheStorage$MruEntry;-><init>()V

    iput-object v0, p0, Lfreemarker/cache/MruCacheStorage;->strongHead:Lfreemarker/cache/MruCacheStorage$MruEntry;

    .line 57
    new-instance v1, Lfreemarker/cache/MruCacheStorage$MruEntry;

    invoke-direct {v1}, Lfreemarker/cache/MruCacheStorage$MruEntry;-><init>()V

    iput-object v1, p0, Lfreemarker/cache/MruCacheStorage;->softHead:Lfreemarker/cache/MruCacheStorage$MruEntry;

    .line 59
    invoke-virtual {v1, v0}, Lfreemarker/cache/MruCacheStorage$MruEntry;->linkAfter(Lfreemarker/cache/MruCacheStorage$MruEntry;)V

    .line 61
    new-instance v0, Ljava/util/HashMap;

    invoke-direct {v0}, Ljava/util/HashMap;-><init>()V

    iput-object v0, p0, Lfreemarker/cache/MruCacheStorage;->map:Ljava/util/Map;

    .line 62
    new-instance v0, Ljava/lang/ref/ReferenceQueue;

    invoke-direct {v0}, Ljava/lang/ref/ReferenceQueue;-><init>()V

    iput-object v0, p0, Lfreemarker/cache/MruCacheStorage;->refQueue:Ljava/lang/ref/ReferenceQueue;

    .line 65
    const/4 v0, 0x0

    iput v0, p0, Lfreemarker/cache/MruCacheStorage;->strongSize:I

    .line 66
    iput v0, p0, Lfreemarker/cache/MruCacheStorage;->softSize:I

    .line 77
    if-ltz p1, :cond_1

    .line 78
    if-ltz p2, :cond_0

    .line 79
    iput p1, p0, Lfreemarker/cache/MruCacheStorage;->strongSizeLimit:I

    .line 80
    iput p2, p0, Lfreemarker/cache/MruCacheStorage;->softSizeLimit:I

    .line 81
    return-void

    .line 78
    :cond_0
    new-instance v0, Ljava/lang/IllegalArgumentException;

    const-string v1, "softSizeLimit < 0"

    invoke-direct {v0, v1}, Ljava/lang/IllegalArgumentException;-><init>(Ljava/lang/String;)V

    throw v0

    .line 77
    :cond_1
    new-instance v0, Ljava/lang/IllegalArgumentException;

    const-string/jumbo v1, "strongSizeLimit < 0"

    invoke-direct {v0, v1}, Ljava/lang/IllegalArgumentException;-><init>(Ljava/lang/String;)V

    throw v0
.end method

.method private linkAfterStrongHead(Lfreemarker/cache/MruCacheStorage$MruEntry;)V
    .locals 4
    .param p1, "entry"    # Lfreemarker/cache/MruCacheStorage$MruEntry;

    .line 153
    iget-object v0, p0, Lfreemarker/cache/MruCacheStorage;->strongHead:Lfreemarker/cache/MruCacheStorage$MruEntry;

    invoke-virtual {p1, v0}, Lfreemarker/cache/MruCacheStorage$MruEntry;->linkAfter(Lfreemarker/cache/MruCacheStorage$MruEntry;)V

    .line 154
    iget v0, p0, Lfreemarker/cache/MruCacheStorage;->strongSize:I

    iget v1, p0, Lfreemarker/cache/MruCacheStorage;->strongSizeLimit:I

    if-ne v0, v1, :cond_3

    .line 156
    iget-object v0, p0, Lfreemarker/cache/MruCacheStorage;->softHead:Lfreemarker/cache/MruCacheStorage$MruEntry;

    invoke-virtual {v0}, Lfreemarker/cache/MruCacheStorage$MruEntry;->getPrevious()Lfreemarker/cache/MruCacheStorage$MruEntry;

    move-result-object v0

    .line 160
    .local v0, "lruStrong":Lfreemarker/cache/MruCacheStorage$MruEntry;
    iget-object v1, p0, Lfreemarker/cache/MruCacheStorage;->strongHead:Lfreemarker/cache/MruCacheStorage$MruEntry;

    if-eq v0, v1, :cond_2

    .line 161
    invoke-virtual {v0}, Lfreemarker/cache/MruCacheStorage$MruEntry;->unlink()V

    .line 162
    iget v1, p0, Lfreemarker/cache/MruCacheStorage;->softSizeLimit:I

    if-lez v1, :cond_1

    .line 163
    iget-object v1, p0, Lfreemarker/cache/MruCacheStorage;->softHead:Lfreemarker/cache/MruCacheStorage$MruEntry;

    invoke-virtual {v0, v1}, Lfreemarker/cache/MruCacheStorage$MruEntry;->linkAfter(Lfreemarker/cache/MruCacheStorage$MruEntry;)V

    .line 164
    new-instance v1, Lfreemarker/cache/MruCacheStorage$MruReference;

    iget-object v2, p0, Lfreemarker/cache/MruCacheStorage;->refQueue:Ljava/lang/ref/ReferenceQueue;

    invoke-direct {v1, v0, v2}, Lfreemarker/cache/MruCacheStorage$MruReference;-><init>(Lfreemarker/cache/MruCacheStorage$MruEntry;Ljava/lang/ref/ReferenceQueue;)V

    invoke-virtual {v0, v1}, Lfreemarker/cache/MruCacheStorage$MruEntry;->setValue(Ljava/lang/Object;)V

    .line 165
    iget v1, p0, Lfreemarker/cache/MruCacheStorage;->softSize:I

    iget v2, p0, Lfreemarker/cache/MruCacheStorage;->softSizeLimit:I

    if-ne v1, v2, :cond_0

    .line 167
    iget-object v1, p0, Lfreemarker/cache/MruCacheStorage;->strongHead:Lfreemarker/cache/MruCacheStorage$MruEntry;

    invoke-virtual {v1}, Lfreemarker/cache/MruCacheStorage$MruEntry;->getPrevious()Lfreemarker/cache/MruCacheStorage$MruEntry;

    move-result-object v1

    .line 168
    .local v1, "lruSoft":Lfreemarker/cache/MruCacheStorage$MruEntry;
    invoke-virtual {v1}, Lfreemarker/cache/MruCacheStorage$MruEntry;->unlink()V

    .line 169
    iget-object v2, p0, Lfreemarker/cache/MruCacheStorage;->map:Ljava/util/Map;

    invoke-virtual {v1}, Lfreemarker/cache/MruCacheStorage$MruEntry;->getKey()Ljava/lang/Object;

    move-result-object v3

    invoke-interface {v2, v3}, Ljava/util/Map;->remove(Ljava/lang/Object;)Ljava/lang/Object;

    .line 170
    .end local v1    # "lruSoft":Lfreemarker/cache/MruCacheStorage$MruEntry;
    goto :goto_0

    .line 172
    :cond_0
    add-int/lit8 v1, v1, 0x1

    iput v1, p0, Lfreemarker/cache/MruCacheStorage;->softSize:I

    goto :goto_0

    .line 176
    :cond_1
    iget-object v1, p0, Lfreemarker/cache/MruCacheStorage;->map:Ljava/util/Map;

    invoke-virtual {v0}, Lfreemarker/cache/MruCacheStorage$MruEntry;->getKey()Ljava/lang/Object;

    move-result-object v2

    invoke-interface {v1, v2}, Ljava/util/Map;->remove(Ljava/lang/Object;)Ljava/lang/Object;

    .line 179
    .end local v0    # "lruStrong":Lfreemarker/cache/MruCacheStorage$MruEntry;
    :cond_2
    :goto_0
    goto :goto_1

    .line 181
    :cond_3
    add-int/lit8 v0, v0, 0x1

    iput v0, p0, Lfreemarker/cache/MruCacheStorage;->strongSize:I

    .line 183
    :goto_1
    return-void
.end method

.method private relinkEntryAfterStrongHead(Lfreemarker/cache/MruCacheStorage$MruEntry;Ljava/lang/Object;)V
    .locals 4
    .param p1, "entry"    # Lfreemarker/cache/MruCacheStorage$MruEntry;
    .param p2, "newValue"    # Ljava/lang/Object;

    .line 134
    invoke-direct {p0, p1}, Lfreemarker/cache/MruCacheStorage;->unlinkEntryAndInspectIfSoft(Lfreemarker/cache/MruCacheStorage$MruEntry;)Z

    move-result v0

    if-eqz v0, :cond_1

    if-nez p2, :cond_1

    .line 136
    invoke-virtual {p1}, Lfreemarker/cache/MruCacheStorage$MruEntry;->getValue()Ljava/lang/Object;

    move-result-object v0

    check-cast v0, Lfreemarker/cache/MruCacheStorage$MruReference;

    .line 137
    .local v0, "mref":Lfreemarker/cache/MruCacheStorage$MruReference;
    invoke-virtual {v0}, Lfreemarker/cache/MruCacheStorage$MruReference;->get()Ljava/lang/Object;

    move-result-object v1

    .line 138
    .local v1, "strongValue":Ljava/lang/Object;
    if-eqz v1, :cond_0

    .line 139
    invoke-virtual {p1, v1}, Lfreemarker/cache/MruCacheStorage$MruEntry;->setValue(Ljava/lang/Object;)V

    .line 140
    invoke-direct {p0, p1}, Lfreemarker/cache/MruCacheStorage;->linkAfterStrongHead(Lfreemarker/cache/MruCacheStorage$MruEntry;)V

    goto :goto_0

    .line 142
    :cond_0
    iget-object v2, p0, Lfreemarker/cache/MruCacheStorage;->map:Ljava/util/Map;

    invoke-virtual {v0}, Lfreemarker/cache/MruCacheStorage$MruReference;->getKey()Ljava/lang/Object;

    move-result-object v3

    invoke-interface {v2, v3}, Ljava/util/Map;->remove(Ljava/lang/Object;)Ljava/lang/Object;

    .line 144
    .end local v0    # "mref":Lfreemarker/cache/MruCacheStorage$MruReference;
    .end local v1    # "strongValue":Ljava/lang/Object;
    :goto_0
    goto :goto_1

    .line 145
    :cond_1
    if-eqz p2, :cond_2

    .line 146
    invoke-virtual {p1, p2}, Lfreemarker/cache/MruCacheStorage$MruEntry;->setValue(Ljava/lang/Object;)V

    .line 148
    :cond_2
    invoke-direct {p0, p1}, Lfreemarker/cache/MruCacheStorage;->linkAfterStrongHead(Lfreemarker/cache/MruCacheStorage$MruEntry;)V

    .line 150
    :goto_1
    return-void
.end method

.method private removeClearedReferences()V
    .locals 2

    .line 199
    :goto_0
    iget-object v0, p0, Lfreemarker/cache/MruCacheStorage;->refQueue:Ljava/lang/ref/ReferenceQueue;

    invoke-virtual {v0}, Ljava/lang/ref/ReferenceQueue;->poll()Ljava/lang/ref/Reference;

    move-result-object v0

    check-cast v0, Lfreemarker/cache/MruCacheStorage$MruReference;

    .line 200
    .local v0, "ref":Lfreemarker/cache/MruCacheStorage$MruReference;
    if-nez v0, :cond_0

    .line 201
    nop

    .line 205
    .end local v0    # "ref":Lfreemarker/cache/MruCacheStorage$MruReference;
    return-void

    .line 203
    .restart local v0    # "ref":Lfreemarker/cache/MruCacheStorage$MruReference;
    :cond_0
    invoke-virtual {v0}, Lfreemarker/cache/MruCacheStorage$MruReference;->getKey()Ljava/lang/Object;

    move-result-object v1

    invoke-direct {p0, v1}, Lfreemarker/cache/MruCacheStorage;->removeInternal(Ljava/lang/Object;)V

    .line 204
    .end local v0    # "ref":Lfreemarker/cache/MruCacheStorage$MruReference;
    goto :goto_0
.end method

.method private removeInternal(Ljava/lang/Object;)V
    .locals 1
    .param p1, "key"    # Ljava/lang/Object;

    .line 118
    iget-object v0, p0, Lfreemarker/cache/MruCacheStorage;->map:Ljava/util/Map;

    invoke-interface {v0, p1}, Ljava/util/Map;->remove(Ljava/lang/Object;)Ljava/lang/Object;

    move-result-object v0

    check-cast v0, Lfreemarker/cache/MruCacheStorage$MruEntry;

    .line 119
    .local v0, "entry":Lfreemarker/cache/MruCacheStorage$MruEntry;
    if-eqz v0, :cond_0

    .line 120
    invoke-direct {p0, v0}, Lfreemarker/cache/MruCacheStorage;->unlinkEntryAndInspectIfSoft(Lfreemarker/cache/MruCacheStorage$MruEntry;)Z

    .line 122
    :cond_0
    return-void
.end method

.method private unlinkEntryAndInspectIfSoft(Lfreemarker/cache/MruCacheStorage$MruEntry;)Z
    .locals 2
    .param p1, "entry"    # Lfreemarker/cache/MruCacheStorage$MruEntry;

    .line 186
    invoke-virtual {p1}, Lfreemarker/cache/MruCacheStorage$MruEntry;->unlink()V

    .line 187
    invoke-virtual {p1}, Lfreemarker/cache/MruCacheStorage$MruEntry;->getValue()Ljava/lang/Object;

    move-result-object v0

    instance-of v0, v0, Lfreemarker/cache/MruCacheStorage$MruReference;

    const/4 v1, 0x1

    if-eqz v0, :cond_0

    .line 188
    iget v0, p0, Lfreemarker/cache/MruCacheStorage;->softSize:I

    sub-int/2addr v0, v1

    iput v0, p0, Lfreemarker/cache/MruCacheStorage;->softSize:I

    .line 189
    return v1

    .line 192
    :cond_0
    iget v0, p0, Lfreemarker/cache/MruCacheStorage;->strongSize:I

    sub-int/2addr v0, v1

    iput v0, p0, Lfreemarker/cache/MruCacheStorage;->strongSize:I

    .line 193
    const/4 v0, 0x0

    return v0
.end method


# virtual methods
.method public clear()V
    .locals 2

    .line 125
    iget-object v0, p0, Lfreemarker/cache/MruCacheStorage;->strongHead:Lfreemarker/cache/MruCacheStorage$MruEntry;

    invoke-virtual {v0}, Lfreemarker/cache/MruCacheStorage$MruEntry;->makeHead()V

    .line 126
    iget-object v0, p0, Lfreemarker/cache/MruCacheStorage;->softHead:Lfreemarker/cache/MruCacheStorage$MruEntry;

    iget-object v1, p0, Lfreemarker/cache/MruCacheStorage;->strongHead:Lfreemarker/cache/MruCacheStorage$MruEntry;

    invoke-virtual {v0, v1}, Lfreemarker/cache/MruCacheStorage$MruEntry;->linkAfter(Lfreemarker/cache/MruCacheStorage$MruEntry;)V

    .line 127
    iget-object v0, p0, Lfreemarker/cache/MruCacheStorage;->map:Ljava/util/Map;

    invoke-interface {v0}, Ljava/util/Map;->clear()V

    .line 128
    const/4 v0, 0x0

    iput v0, p0, Lfreemarker/cache/MruCacheStorage;->softSize:I

    iput v0, p0, Lfreemarker/cache/MruCacheStorage;->strongSize:I

    .line 130
    :goto_0
    iget-object v0, p0, Lfreemarker/cache/MruCacheStorage;->refQueue:Ljava/lang/ref/ReferenceQueue;

    invoke-virtual {v0}, Ljava/lang/ref/ReferenceQueue;->poll()Ljava/lang/ref/Reference;

    move-result-object v0

    if-eqz v0, :cond_0

    goto :goto_0

    .line 131
    :cond_0
    return-void
.end method

.method public get(Ljava/lang/Object;)Ljava/lang/Object;
    .locals 3
    .param p1, "key"    # Ljava/lang/Object;

    .line 84
    invoke-direct {p0}, Lfreemarker/cache/MruCacheStorage;->removeClearedReferences()V

    .line 85
    iget-object v0, p0, Lfreemarker/cache/MruCacheStorage;->map:Ljava/util/Map;

    invoke-interface {v0, p1}, Ljava/util/Map;->get(Ljava/lang/Object;)Ljava/lang/Object;

    move-result-object v0

    check-cast v0, Lfreemarker/cache/MruCacheStorage$MruEntry;

    .line 86
    .local v0, "entry":Lfreemarker/cache/MruCacheStorage$MruEntry;
    const/4 v1, 0x0

    if-nez v0, :cond_0

    .line 87
    return-object v1

    .line 89
    :cond_0
    invoke-direct {p0, v0, v1}, Lfreemarker/cache/MruCacheStorage;->relinkEntryAfterStrongHead(Lfreemarker/cache/MruCacheStorage$MruEntry;Ljava/lang/Object;)V

    .line 90
    invoke-virtual {v0}, Lfreemarker/cache/MruCacheStorage$MruEntry;->getValue()Ljava/lang/Object;

    move-result-object v1

    .line 91
    .local v1, "value":Ljava/lang/Object;
    instance-of v2, v1, Lfreemarker/cache/MruCacheStorage$MruReference;

    if-eqz v2, :cond_1

    .line 93
    move-object v2, v1

    check-cast v2, Lfreemarker/cache/MruCacheStorage$MruReference;

    invoke-virtual {v2}, Lfreemarker/cache/MruCacheStorage$MruReference;->get()Ljava/lang/Object;

    move-result-object v2

    return-object v2

    .line 95
    :cond_1
    return-object v1
.end method

.method public getSize()I
    .locals 2

    .line 254
    invoke-virtual {p0}, Lfreemarker/cache/MruCacheStorage;->getSoftSize()I

    move-result v0

    invoke-virtual {p0}, Lfreemarker/cache/MruCacheStorage;->getStrongSize()I

    move-result v1

    add-int/2addr v0, v1

    return v0
.end method

.method public getSoftSize()I
    .locals 1

    .line 242
    invoke-direct {p0}, Lfreemarker/cache/MruCacheStorage;->removeClearedReferences()V

    .line 243
    iget v0, p0, Lfreemarker/cache/MruCacheStorage;->softSize:I

    return v0
.end method

.method public getSoftSizeLimit()I
    .locals 1

    .line 222
    iget v0, p0, Lfreemarker/cache/MruCacheStorage;->softSizeLimit:I

    return v0
.end method

.method public getStrongSize()I
    .locals 1

    .line 232
    iget v0, p0, Lfreemarker/cache/MruCacheStorage;->strongSize:I

    return v0
.end method

.method public getStrongSizeLimit()I
    .locals 1

    .line 213
    iget v0, p0, Lfreemarker/cache/MruCacheStorage;->strongSizeLimit:I

    return v0
.end method

.method public put(Ljava/lang/Object;Ljava/lang/Object;)V
    .locals 2
    .param p1, "key"    # Ljava/lang/Object;
    .param p2, "value"    # Ljava/lang/Object;

    .line 99
    invoke-direct {p0}, Lfreemarker/cache/MruCacheStorage;->removeClearedReferences()V

    .line 100
    iget-object v0, p0, Lfreemarker/cache/MruCacheStorage;->map:Ljava/util/Map;

    invoke-interface {v0, p1}, Ljava/util/Map;->get(Ljava/lang/Object;)Ljava/lang/Object;

    move-result-object v0

    check-cast v0, Lfreemarker/cache/MruCacheStorage$MruEntry;

    .line 101
    .local v0, "entry":Lfreemarker/cache/MruCacheStorage$MruEntry;
    if-nez v0, :cond_0

    .line 102
    new-instance v1, Lfreemarker/cache/MruCacheStorage$MruEntry;

    invoke-direct {v1, p1, p2}, Lfreemarker/cache/MruCacheStorage$MruEntry;-><init>(Ljava/lang/Object;Ljava/lang/Object;)V

    move-object v0, v1

    .line 103
    iget-object v1, p0, Lfreemarker/cache/MruCacheStorage;->map:Ljava/util/Map;

    invoke-interface {v1, p1, v0}, Ljava/util/Map;->put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;

    .line 104
    invoke-direct {p0, v0}, Lfreemarker/cache/MruCacheStorage;->linkAfterStrongHead(Lfreemarker/cache/MruCacheStorage$MruEntry;)V

    goto :goto_0

    .line 107
    :cond_0
    invoke-direct {p0, v0, p2}, Lfreemarker/cache/MruCacheStorage;->relinkEntryAfterStrongHead(Lfreemarker/cache/MruCacheStorage$MruEntry;Ljava/lang/Object;)V

    .line 110
    :goto_0
    return-void
.end method

.method public remove(Ljava/lang/Object;)V
    .locals 0
    .param p1, "key"    # Ljava/lang/Object;

    .line 113
    invoke-direct {p0}, Lfreemarker/cache/MruCacheStorage;->removeClearedReferences()V

    .line 114
    invoke-direct {p0, p1}, Lfreemarker/cache/MruCacheStorage;->removeInternal(Ljava/lang/Object;)V

    .line 115
    return-void
.end method
