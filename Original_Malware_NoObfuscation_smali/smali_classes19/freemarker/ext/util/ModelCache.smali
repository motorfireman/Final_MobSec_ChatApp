.class public abstract Lfreemarker/ext/util/ModelCache;
.super Ljava/lang/Object;
.source "ModelCache.java"


# annotations
.annotation system Ldalvik/annotation/MemberClasses;
    value = {
        Lfreemarker/ext/util/ModelCache$ModelReference;
    }
.end annotation


# instance fields
.field private modelCache:Ljava/util/Map;

.field private refQueue:Ljava/lang/ref/ReferenceQueue;

.field private useCache:Z


# direct methods
.method protected constructor <init>()V
    .locals 1

    .line 37
    invoke-direct {p0}, Ljava/lang/Object;-><init>()V

    .line 32
    const/4 v0, 0x0

    iput-boolean v0, p0, Lfreemarker/ext/util/ModelCache;->useCache:Z

    .line 33
    const/4 v0, 0x0

    iput-object v0, p0, Lfreemarker/ext/util/ModelCache;->modelCache:Ljava/util/Map;

    .line 34
    iput-object v0, p0, Lfreemarker/ext/util/ModelCache;->refQueue:Ljava/lang/ref/ReferenceQueue;

    .line 38
    return-void
.end method

.method private final lookup(Ljava/lang/Object;)Lfreemarker/template/TemplateModel;
    .locals 3
    .param p1, "object"    # Ljava/lang/Object;

    .line 104
    const/4 v0, 0x0

    .line 108
    .local v0, "ref":Lfreemarker/ext/util/ModelCache$ModelReference;
    iget-object v1, p0, Lfreemarker/ext/util/ModelCache;->modelCache:Ljava/util/Map;

    monitor-enter v1

    .line 110
    :try_start_0
    iget-object v2, p0, Lfreemarker/ext/util/ModelCache;->modelCache:Ljava/util/Map;

    invoke-interface {v2, p1}, Ljava/util/Map;->get(Ljava/lang/Object;)Ljava/lang/Object;

    move-result-object v2

    check-cast v2, Lfreemarker/ext/util/ModelCache$ModelReference;

    move-object v0, v2

    .line 111
    monitor-exit v1
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    .line 113
    if-eqz v0, :cond_0

    .line 114
    invoke-virtual {v0}, Lfreemarker/ext/util/ModelCache$ModelReference;->getModel()Lfreemarker/template/TemplateModel;

    move-result-object v1

    return-object v1

    .line 116
    :cond_0
    const/4 v1, 0x0

    return-object v1

    .line 111
    :catchall_0
    move-exception v2

    :try_start_1
    monitor-exit v1
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    throw v2
.end method

.method private final register(Lfreemarker/template/TemplateModel;Ljava/lang/Object;)V
    .locals 4
    .param p1, "model"    # Lfreemarker/template/TemplateModel;
    .param p2, "object"    # Ljava/lang/Object;

    .line 121
    iget-object v0, p0, Lfreemarker/ext/util/ModelCache;->modelCache:Ljava/util/Map;

    monitor-enter v0

    .line 124
    :goto_0
    :try_start_0
    iget-object v1, p0, Lfreemarker/ext/util/ModelCache;->refQueue:Ljava/lang/ref/ReferenceQueue;

    invoke-virtual {v1}, Ljava/lang/ref/ReferenceQueue;->poll()Ljava/lang/ref/Reference;

    move-result-object v1

    check-cast v1, Lfreemarker/ext/util/ModelCache$ModelReference;

    .line 125
    .local v1, "queuedRef":Lfreemarker/ext/util/ModelCache$ModelReference;
    if-nez v1, :cond_0

    .line 126
    nop

    .line 130
    .end local v1    # "queuedRef":Lfreemarker/ext/util/ModelCache$ModelReference;
    iget-object v1, p0, Lfreemarker/ext/util/ModelCache;->modelCache:Ljava/util/Map;

    new-instance v2, Lfreemarker/ext/util/ModelCache$ModelReference;

    iget-object v3, p0, Lfreemarker/ext/util/ModelCache;->refQueue:Ljava/lang/ref/ReferenceQueue;

    invoke-direct {v2, p1, p2, v3}, Lfreemarker/ext/util/ModelCache$ModelReference;-><init>(Lfreemarker/template/TemplateModel;Ljava/lang/Object;Ljava/lang/ref/ReferenceQueue;)V

    invoke-interface {v1, p2, v2}, Ljava/util/Map;->put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;

    .line 131
    monitor-exit v0

    .line 132
    return-void

    .line 127
    .restart local v1    # "queuedRef":Lfreemarker/ext/util/ModelCache$ModelReference;
    :cond_0
    iget-object v2, p0, Lfreemarker/ext/util/ModelCache;->modelCache:Ljava/util/Map;

    iget-object v3, v1, Lfreemarker/ext/util/ModelCache$ModelReference;->object:Ljava/lang/Object;

    invoke-interface {v2, v3}, Ljava/util/Map;->remove(Ljava/lang/Object;)Ljava/lang/Object;

    .line 128
    nop

    .end local v1    # "queuedRef":Lfreemarker/ext/util/ModelCache$ModelReference;
    goto :goto_0

    .line 131
    :catchall_0
    move-exception v1

    monitor-exit v0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    throw v1
.end method


# virtual methods
.method public clearCache()V
    .locals 2

    .line 93
    iget-object v0, p0, Lfreemarker/ext/util/ModelCache;->modelCache:Ljava/util/Map;

    if-eqz v0, :cond_0

    .line 95
    monitor-enter v0

    .line 97
    :try_start_0
    iget-object v1, p0, Lfreemarker/ext/util/ModelCache;->modelCache:Ljava/util/Map;

    invoke-interface {v1}, Ljava/util/Map;->clear()V

    .line 98
    monitor-exit v0

    goto :goto_0

    :catchall_0
    move-exception v1

    monitor-exit v0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    throw v1

    .line 100
    :cond_0
    :goto_0
    return-void
.end method

.method protected abstract create(Ljava/lang/Object;)Lfreemarker/template/TemplateModel;
.end method

.method public getInstance(Ljava/lang/Object;)Lfreemarker/template/TemplateModel;
    .locals 1
    .param p1, "object"    # Ljava/lang/Object;

    .line 69
    instance-of v0, p1, Lfreemarker/template/TemplateModel;

    if-eqz v0, :cond_0

    .line 70
    move-object v0, p1

    check-cast v0, Lfreemarker/template/TemplateModel;

    return-object v0

    .line 72
    :cond_0
    instance-of v0, p1, Lfreemarker/template/TemplateModelAdapter;

    if-eqz v0, :cond_1

    .line 73
    move-object v0, p1

    check-cast v0, Lfreemarker/template/TemplateModelAdapter;

    invoke-interface {v0}, Lfreemarker/template/TemplateModelAdapter;->getTemplateModel()Lfreemarker/template/TemplateModel;

    move-result-object v0

    return-object v0

    .line 75
    :cond_1
    iget-boolean v0, p0, Lfreemarker/ext/util/ModelCache;->useCache:Z

    if-eqz v0, :cond_3

    invoke-virtual {p0, p1}, Lfreemarker/ext/util/ModelCache;->isCacheable(Ljava/lang/Object;)Z

    move-result v0

    if-eqz v0, :cond_3

    .line 76
    invoke-direct {p0, p1}, Lfreemarker/ext/util/ModelCache;->lookup(Ljava/lang/Object;)Lfreemarker/template/TemplateModel;

    move-result-object v0

    .line 77
    .local v0, "model":Lfreemarker/template/TemplateModel;
    if-nez v0, :cond_2

    .line 78
    invoke-virtual {p0, p1}, Lfreemarker/ext/util/ModelCache;->create(Ljava/lang/Object;)Lfreemarker/template/TemplateModel;

    move-result-object v0

    .line 79
    invoke-direct {p0, v0, p1}, Lfreemarker/ext/util/ModelCache;->register(Lfreemarker/template/TemplateModel;Ljava/lang/Object;)V

    .line 81
    :cond_2
    return-object v0

    .line 84
    .end local v0    # "model":Lfreemarker/template/TemplateModel;
    :cond_3
    invoke-virtual {p0, p1}, Lfreemarker/ext/util/ModelCache;->create(Ljava/lang/Object;)Lfreemarker/template/TemplateModel;

    move-result-object v0

    return-object v0
.end method

.method public declared-synchronized getUseCache()Z
    .locals 1

    monitor-enter p0

    .line 64
    :try_start_0
    iget-boolean v0, p0, Lfreemarker/ext/util/ModelCache;->useCache:Z
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    monitor-exit p0

    return v0

    .line 64
    .end local p0    # "this":Lfreemarker/ext/util/ModelCache;
    :catchall_0
    move-exception v0

    monitor-exit p0

    throw v0
.end method

.method protected abstract isCacheable(Ljava/lang/Object;)Z
.end method

.method public declared-synchronized setUseCache(Z)V
    .locals 1
    .param p1, "useCache"    # Z

    monitor-enter p0

    .line 47
    :try_start_0
    iput-boolean p1, p0, Lfreemarker/ext/util/ModelCache;->useCache:Z

    .line 48
    if-eqz p1, :cond_0

    .line 50
    new-instance v0, Lfreemarker/ext/util/IdentityHashMap;

    invoke-direct {v0}, Lfreemarker/ext/util/IdentityHashMap;-><init>()V

    iput-object v0, p0, Lfreemarker/ext/util/ModelCache;->modelCache:Ljava/util/Map;

    .line 51
    new-instance v0, Ljava/lang/ref/ReferenceQueue;

    invoke-direct {v0}, Ljava/lang/ref/ReferenceQueue;-><init>()V

    iput-object v0, p0, Lfreemarker/ext/util/ModelCache;->refQueue:Ljava/lang/ref/ReferenceQueue;

    goto :goto_0

    .line 55
    .end local p0    # "this":Lfreemarker/ext/util/ModelCache;
    :cond_0
    const/4 v0, 0x0

    iput-object v0, p0, Lfreemarker/ext/util/ModelCache;->modelCache:Ljava/util/Map;

    .line 56
    iput-object v0, p0, Lfreemarker/ext/util/ModelCache;->refQueue:Ljava/lang/ref/ReferenceQueue;
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    .line 58
    :goto_0
    monitor-exit p0

    return-void

    .line 46
    .end local p1    # "useCache":Z
    :catchall_0
    move-exception p1

    monitor-exit p0

    throw p1
.end method
