.class public Lfreemarker/ext/servlet/FreemarkerServlet;
.super Ljavax/servlet/http/HttpServlet;
.source "FreemarkerServlet.java"


# annotations
.annotation system Ldalvik/annotation/MemberClasses;
    value = {
        Lfreemarker/ext/servlet/FreemarkerServlet$MalformedWebXmlException;,
        Lfreemarker/ext/servlet/FreemarkerServlet$ConflictingInitParamsException;,
        Lfreemarker/ext/servlet/FreemarkerServlet$InitParamValueException;
    }
.end annotation


# static fields
.field private static final ATTR_APPLICATION_MODEL:Ljava/lang/String; = ".freemarker.Application"

.field private static final ATTR_JETTY_CP_TAGLIB_JAR_PATTERNS:Ljava/lang/String; = "org.eclipse.jetty.server.webapp.ContainerIncludeJarPattern"

.field private static final ATTR_JSP_TAGLIBS_MODEL:Ljava/lang/String; = ".freemarker.JspTaglibs"

.field private static final ATTR_REQUEST_MODEL:Ljava/lang/String; = ".freemarker.Request"

.field private static final ATTR_REQUEST_PARAMETERS_MODEL:Ljava/lang/String; = ".freemarker.RequestParameters"

.field private static final ATTR_SESSION_MODEL:Ljava/lang/String; = ".freemarker.Session"

.field private static final DEFAULT_CONTENT_TYPE:Ljava/lang/String; = "text/html"

.field private static final DEPR_INITPARAM_DEBUG:Ljava/lang/String; = "debug"

.field private static final DEPR_INITPARAM_ENCODING:Ljava/lang/String; = "DefaultEncoding"

.field private static final DEPR_INITPARAM_OBJECT_WRAPPER:Ljava/lang/String; = "ObjectWrapper"

.field private static final DEPR_INITPARAM_TEMPLATE_DELAY:Ljava/lang/String; = "TemplateDelay"

.field private static final DEPR_INITPARAM_TEMPLATE_EXCEPTION_HANDLER:Ljava/lang/String; = "TemplateExceptionHandler"

.field private static final DEPR_INITPARAM_TEMPLATE_EXCEPTION_HANDLER_DEBUG:Ljava/lang/String; = "debug"

.field private static final DEPR_INITPARAM_TEMPLATE_EXCEPTION_HANDLER_HTML_DEBUG:Ljava/lang/String; = "htmlDebug"

.field private static final DEPR_INITPARAM_TEMPLATE_EXCEPTION_HANDLER_IGNORE:Ljava/lang/String; = "ignore"

.field private static final DEPR_INITPARAM_TEMPLATE_EXCEPTION_HANDLER_RETHROW:Ljava/lang/String; = "rethrow"

.field private static final DEPR_INITPARAM_WRAPPER_BEANS:Ljava/lang/String; = "beans"

.field private static final DEPR_INITPARAM_WRAPPER_JYTHON:Ljava/lang/String; = "jython"

.field private static final DEPR_INITPARAM_WRAPPER_SIMPLE:Ljava/lang/String; = "simple"

.field private static final EXPIRATION_DATE:Ljava/lang/String;

.field public static final INIT_PARAM_BUFFER_SIZE:Ljava/lang/String; = "BufferSize"

.field public static final INIT_PARAM_CLASSPATH_TLDS:Ljava/lang/String; = "ClasspathTlds"

.field public static final INIT_PARAM_CONTENT_TYPE:Ljava/lang/String; = "ContentType"

.field private static final INIT_PARAM_DEBUG:Ljava/lang/String; = "Debug"

.field public static final INIT_PARAM_EXCEPTION_ON_MISSING_TEMPLATE:Ljava/lang/String; = "ExceptionOnMissingTemplate"

.field public static final INIT_PARAM_META_INF_TLD_LOCATIONS:Ljava/lang/String; = "MetaInfTldSources"

.field public static final INIT_PARAM_NO_CACHE:Ljava/lang/String; = "NoCache"

.field public static final INIT_PARAM_TEMPLATE_PATH:Ljava/lang/String; = "TemplatePath"

.field public static final KEY_APPLICATION:Ljava/lang/String; = "Application"

.field public static final KEY_APPLICATION_PRIVATE:Ljava/lang/String; = "__FreeMarkerServlet.Application__"

.field public static final KEY_INCLUDE:Ljava/lang/String; = "include_page"

.field public static final KEY_JSP_TAGLIBS:Ljava/lang/String; = "JspTaglibs"

.field public static final KEY_REQUEST:Ljava/lang/String; = "Request"

.field public static final KEY_REQUEST_PARAMETERS:Ljava/lang/String; = "RequestParameters"

.field public static final KEY_REQUEST_PRIVATE:Ljava/lang/String; = "__FreeMarkerServlet.Request__"

.field public static final KEY_SESSION:Ljava/lang/String; = "Session"

.field private static final LOG:Lfreemarker/log/Logger;

.field private static final LOG_RT:Lfreemarker/log/Logger;

.field public static final META_INF_TLD_LOCATION_CLASSPATH:Ljava/lang/String; = "classpath"

.field public static final META_INF_TLD_LOCATION_CLEAR:Ljava/lang/String; = "clear"

.field public static final META_INF_TLD_LOCATION_WEB_INF_PER_LIB_JARS:Ljava/lang/String; = "webInfPerLibJars"

.field public static final SYSTEM_PROPERTY_CLASSPATH_TLDS:Ljava/lang/String; = "org.freemarker.jsp.classpathTlds"

.field public static final SYSTEM_PROPERTY_META_INF_TLD_SOURCES:Ljava/lang/String; = "org.freemarker.jsp.metaInfTldSources"

.field static synthetic class$freemarker$ext$servlet$FreemarkerServlet:Ljava/lang/Class; = null

.field public static final serialVersionUID:J = -0x21dd63e17889c2afL


# instance fields
.field private bufferSize:Ljava/lang/Integer;

.field private classpathTlds:Ljava/util/List;

.field private config:Lfreemarker/template/Configuration;

.field private contentType:Ljava/lang/String;

.field protected debug:Z

.field private exceptionOnMissingTemplate:Z

.field private lazyInitFieldsLock:Ljava/lang/Object;

.field private metaInfTldSources:Ljava/util/List;

.field private noCache:Z

.field private noCharsetInContentType:Z

.field private objectWrapperMismatchWarnLogged:Z

.field private servletContextModel:Lfreemarker/ext/servlet/ServletContextHashModel;

.field private taglibFactory:Lfreemarker/ext/jsp/TaglibFactory;

.field private templatePath:Ljava/lang/String;

.field private wrapper:Lfreemarker/template/ObjectWrapper;


# direct methods
.method static constructor <clinit>()V
    .locals 4

    .line 242
    const-string v0, "freemarker.servlet"

    invoke-static {v0}, Lfreemarker/log/Logger;->getLogger(Ljava/lang/String;)Lfreemarker/log/Logger;

    move-result-object v0

    sput-object v0, Lfreemarker/ext/servlet/FreemarkerServlet;->LOG:Lfreemarker/log/Logger;

    .line 243
    const-string v0, "freemarker.runtime"

    invoke-static {v0}, Lfreemarker/log/Logger;->getLogger(Ljava/lang/String;)Lfreemarker/log/Logger;

    move-result-object v0

    sput-object v0, Lfreemarker/ext/servlet/FreemarkerServlet;->LOG_RT:Lfreemarker/log/Logger;

    .line 383
    new-instance v0, Ljava/util/GregorianCalendar;

    invoke-direct {v0}, Ljava/util/GregorianCalendar;-><init>()V

    .line 384
    .local v0, "expiration":Ljava/util/GregorianCalendar;
    const/4 v1, 0x1

    const/4 v2, -0x1

    invoke-virtual {v0, v1, v2}, Ljava/util/GregorianCalendar;->roll(II)V

    .line 385
    new-instance v1, Ljava/text/SimpleDateFormat;

    sget-object v2, Ljava/util/Locale;->US:Ljava/util/Locale;

    const-string v3, "EEE, dd MMM yyyy HH:mm:ss z"

    invoke-direct {v1, v3, v2}, Ljava/text/SimpleDateFormat;-><init>(Ljava/lang/String;Ljava/util/Locale;)V

    .line 389
    .local v1, "httpDate":Ljava/text/SimpleDateFormat;
    invoke-virtual {v0}, Ljava/util/GregorianCalendar;->getTime()Ljava/util/Date;

    move-result-object v2

    invoke-virtual {v1, v2}, Ljava/text/SimpleDateFormat;->format(Ljava/util/Date;)Ljava/lang/String;

    move-result-object v2

    sput-object v2, Lfreemarker/ext/servlet/FreemarkerServlet;->EXPIRATION_DATE:Ljava/lang/String;

    .line 390
    .end local v0    # "expiration":Ljava/util/GregorianCalendar;
    .end local v1    # "httpDate":Ljava/text/SimpleDateFormat;
    return-void
.end method

.method public constructor <init>()V
    .locals 1

    .line 240
    invoke-direct {p0}, Ljavax/servlet/http/HttpServlet;-><init>()V

    .line 411
    new-instance v0, Ljava/lang/Object;

    invoke-direct {v0}, Ljava/lang/Object;-><init>()V

    iput-object v0, p0, Lfreemarker/ext/servlet/FreemarkerServlet;->lazyInitFieldsLock:Ljava/lang/Object;

    .line 1344
    return-void
.end method

.method static synthetic class$(Ljava/lang/String;)Ljava/lang/Class;
    .locals 2
    .param p0, "x0"    # Ljava/lang/String;

    .line 776
    :try_start_0
    invoke-static {p0}, Ljava/lang/Class;->forName(Ljava/lang/String;)Ljava/lang/Class;

    move-result-object v0
    :try_end_0
    .catch Ljava/lang/ClassNotFoundException; {:try_start_0 .. :try_end_0} :catch_0

    return-object v0

    :catch_0
    move-exception v0

    new-instance v1, Ljava/lang/NoClassDefFoundError;

    invoke-direct {v1}, Ljava/lang/NoClassDefFoundError;-><init>()V

    invoke-virtual {v1, v0}, Ljava/lang/NoClassDefFoundError;->initCause(Ljava/lang/Throwable;)Ljava/lang/Throwable;

    move-result-object v0

    throw v0
.end method

.method private initialize()V
    .locals 16
    .annotation system Ldalvik/annotation/Throws;
        value = {
            Lfreemarker/ext/servlet/FreemarkerServlet$InitParamValueException;,
            Lfreemarker/ext/servlet/FreemarkerServlet$MalformedWebXmlException;,
            Lfreemarker/ext/servlet/FreemarkerServlet$ConflictingInitParamsException;
        }
    .end annotation

    .line 435
    move-object/from16 v1, p0

    const-string/jumbo v2, "template_exception_handler"

    const-string/jumbo v3, "template_update_delay"

    const-string v4, "default_encoding"

    const-string v5, "TemplateDelay"

    const-string v6, "DefaultEncoding"

    const-string v7, "TemplateExceptionHandler"

    invoke-virtual/range {p0 .. p0}, Lfreemarker/ext/servlet/FreemarkerServlet;->createConfiguration()Lfreemarker/template/Configuration;

    move-result-object v0

    iput-object v0, v1, Lfreemarker/ext/servlet/FreemarkerServlet;->config:Lfreemarker/template/Configuration;

    .line 438
    const-string v8, "incompatible_improvements"

    invoke-virtual {v1, v8}, Lfreemarker/ext/servlet/FreemarkerServlet;->getInitParameter(Ljava/lang/String;)Ljava/lang/String;

    move-result-object v9

    .line 439
    .local v9, "iciInitParamValue":Ljava/lang/String;
    if-eqz v9, :cond_0

    .line 441
    :try_start_0
    iget-object v0, v1, Lfreemarker/ext/servlet/FreemarkerServlet;->config:Lfreemarker/template/Configuration;

    invoke-virtual {v0, v8, v9}, Lfreemarker/template/Configuration;->setSetting(Ljava/lang/String;Ljava/lang/String;)V
    :try_end_0
    .catch Ljava/lang/Exception; {:try_start_0 .. :try_end_0} :catch_0

    .line 444
    goto :goto_0

    .line 442
    :catch_0
    move-exception v0

    .line 443
    .local v0, "e":Ljava/lang/Exception;
    new-instance v2, Lfreemarker/ext/servlet/FreemarkerServlet$InitParamValueException;

    invoke-direct {v2, v8, v9, v0}, Lfreemarker/ext/servlet/FreemarkerServlet$InitParamValueException;-><init>(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)V

    throw v2

    .line 448
    .end local v0    # "e":Ljava/lang/Exception;
    :cond_0
    :goto_0
    iget-object v0, v1, Lfreemarker/ext/servlet/FreemarkerServlet;->config:Lfreemarker/template/Configuration;

    invoke-virtual {v0}, Lfreemarker/template/Configuration;->isTemplateExceptionHandlerExplicitlySet()Z

    move-result v0

    if-nez v0, :cond_1

    .line 449
    iget-object v0, v1, Lfreemarker/ext/servlet/FreemarkerServlet;->config:Lfreemarker/template/Configuration;

    sget-object v10, Lfreemarker/template/TemplateExceptionHandler;->HTML_DEBUG_HANDLER:Lfreemarker/template/TemplateExceptionHandler;

    invoke-virtual {v0, v10}, Lfreemarker/template/Configuration;->setTemplateExceptionHandler(Lfreemarker/template/TemplateExceptionHandler;)V

    .line 451
    :cond_1
    iget-object v0, v1, Lfreemarker/ext/servlet/FreemarkerServlet;->config:Lfreemarker/template/Configuration;

    invoke-virtual {v0}, Lfreemarker/template/Configuration;->isLogTemplateExceptionsExplicitlySet()Z

    move-result v0

    const/4 v10, 0x0

    if-nez v0, :cond_2

    .line 452
    iget-object v0, v1, Lfreemarker/ext/servlet/FreemarkerServlet;->config:Lfreemarker/template/Configuration;

    invoke-virtual {v0, v10}, Lfreemarker/template/Configuration;->setLogTemplateExceptions(Z)V

    .line 455
    :cond_2
    const-string/jumbo v0, "text/html"

    iput-object v0, v1, Lfreemarker/ext/servlet/FreemarkerServlet;->contentType:Ljava/lang/String;

    .line 458
    invoke-virtual/range {p0 .. p0}, Lfreemarker/ext/servlet/FreemarkerServlet;->createObjectWrapper()Lfreemarker/template/ObjectWrapper;

    move-result-object v0

    iput-object v0, v1, Lfreemarker/ext/servlet/FreemarkerServlet;->wrapper:Lfreemarker/template/ObjectWrapper;

    .line 459
    sget-object v0, Lfreemarker/ext/servlet/FreemarkerServlet;->LOG:Lfreemarker/log/Logger;

    invoke-virtual {v0}, Lfreemarker/log/Logger;->isDebugEnabled()Z

    move-result v11

    if-eqz v11, :cond_3

    .line 460
    new-instance v11, Ljava/lang/StringBuffer;

    invoke-direct {v11}, Ljava/lang/StringBuffer;-><init>()V

    const-string v12, "Using object wrapper: "

    invoke-virtual {v11, v12}, Ljava/lang/StringBuffer;->append(Ljava/lang/String;)Ljava/lang/StringBuffer;

    move-result-object v11

    iget-object v12, v1, Lfreemarker/ext/servlet/FreemarkerServlet;->wrapper:Lfreemarker/template/ObjectWrapper;

    invoke-virtual {v11, v12}, Ljava/lang/StringBuffer;->append(Ljava/lang/Object;)Ljava/lang/StringBuffer;

    move-result-object v11

    invoke-virtual {v11}, Ljava/lang/StringBuffer;->toString()Ljava/lang/String;

    move-result-object v11

    invoke-virtual {v0, v11}, Lfreemarker/log/Logger;->debug(Ljava/lang/String;)V

    .line 462
    :cond_3
    iget-object v0, v1, Lfreemarker/ext/servlet/FreemarkerServlet;->config:Lfreemarker/template/Configuration;

    iget-object v11, v1, Lfreemarker/ext/servlet/FreemarkerServlet;->wrapper:Lfreemarker/template/ObjectWrapper;

    invoke-virtual {v0, v11}, Lfreemarker/template/Configuration;->setObjectWrapper(Lfreemarker/template/ObjectWrapper;)V

    .line 465
    const-string v11, "TemplatePath"

    invoke-virtual {v1, v11}, Lfreemarker/ext/servlet/FreemarkerServlet;->getInitParameter(Ljava/lang/String;)Ljava/lang/String;

    move-result-object v0

    iput-object v0, v1, Lfreemarker/ext/servlet/FreemarkerServlet;->templatePath:Ljava/lang/String;

    .line 466
    if-nez v0, :cond_4

    iget-object v0, v1, Lfreemarker/ext/servlet/FreemarkerServlet;->config:Lfreemarker/template/Configuration;

    invoke-virtual {v0}, Lfreemarker/template/Configuration;->isTemplateLoaderExplicitlySet()Z

    move-result v0

    if-nez v0, :cond_4

    .line 467
    const-string v0, "class://"

    iput-object v0, v1, Lfreemarker/ext/servlet/FreemarkerServlet;->templatePath:Ljava/lang/String;

    .line 469
    :cond_4
    iget-object v0, v1, Lfreemarker/ext/servlet/FreemarkerServlet;->templatePath:Ljava/lang/String;

    if-eqz v0, :cond_5

    .line 471
    :try_start_1
    iget-object v12, v1, Lfreemarker/ext/servlet/FreemarkerServlet;->config:Lfreemarker/template/Configuration;

    invoke-virtual {v1, v0}, Lfreemarker/ext/servlet/FreemarkerServlet;->createTemplateLoader(Ljava/lang/String;)Lfreemarker/cache/TemplateLoader;

    move-result-object v0

    invoke-virtual {v12, v0}, Lfreemarker/template/Configuration;->setTemplateLoader(Lfreemarker/cache/TemplateLoader;)V
    :try_end_1
    .catch Ljava/lang/Exception; {:try_start_1 .. :try_end_1} :catch_1

    .line 474
    goto :goto_1

    .line 472
    :catch_1
    move-exception v0

    .line 473
    .restart local v0    # "e":Ljava/lang/Exception;
    new-instance v2, Lfreemarker/ext/servlet/FreemarkerServlet$InitParamValueException;

    iget-object v3, v1, Lfreemarker/ext/servlet/FreemarkerServlet;->templatePath:Ljava/lang/String;

    invoke-direct {v2, v11, v3, v0}, Lfreemarker/ext/servlet/FreemarkerServlet$InitParamValueException;-><init>(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)V

    throw v2

    .line 477
    .end local v0    # "e":Ljava/lang/Exception;
    :cond_5
    :goto_1
    invoke-virtual/range {p0 .. p0}, Lfreemarker/ext/servlet/FreemarkerServlet;->createDefaultMetaInfTldSources()Ljava/util/List;

    move-result-object v0

    iput-object v0, v1, Lfreemarker/ext/servlet/FreemarkerServlet;->metaInfTldSources:Ljava/util/List;

    .line 478
    invoke-virtual/range {p0 .. p0}, Lfreemarker/ext/servlet/FreemarkerServlet;->createDefaultClassPathTlds()Ljava/util/List;

    move-result-object v0

    iput-object v0, v1, Lfreemarker/ext/servlet/FreemarkerServlet;->classpathTlds:Ljava/util/List;

    .line 481
    invoke-virtual/range {p0 .. p0}, Lfreemarker/ext/servlet/FreemarkerServlet;->getServletConfig()Ljavax/servlet/ServletConfig;

    move-result-object v0

    invoke-interface {v0}, Ljavax/servlet/ServletConfig;->getInitParameterNames()Ljava/util/Enumeration;

    move-result-object v12

    .line 482
    .local v12, "initpnames":Ljava/util/Enumeration;
    :goto_2
    invoke-interface {v12}, Ljava/util/Enumeration;->hasMoreElements()Z

    move-result v0

    if-eqz v0, :cond_1e

    .line 483
    invoke-interface {v12}, Ljava/util/Enumeration;->nextElement()Ljava/lang/Object;

    move-result-object v0

    move-object v13, v0

    check-cast v13, Ljava/lang/String;

    .line 484
    .local v13, "name":Ljava/lang/String;
    invoke-virtual {v1, v13}, Lfreemarker/ext/servlet/FreemarkerServlet;->getInitParameter(Ljava/lang/String;)Ljava/lang/String;

    move-result-object v14

    .line 485
    .local v14, "value":Ljava/lang/String;
    if-eqz v13, :cond_1d

    .line 490
    if-eqz v14, :cond_1c

    .line 497
    :try_start_2
    const-string v0, "ObjectWrapper"

    invoke-virtual {v13, v0}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v0

    if-nez v0, :cond_1b

    const-string v0, "object_wrapper"

    .line 498
    invoke-virtual {v13, v0}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v0

    if-nez v0, :cond_1b

    .line 499
    invoke-virtual {v13, v11}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v0

    if-nez v0, :cond_1b

    .line 500
    invoke-virtual {v13, v8}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v0

    if-eqz v0, :cond_6

    goto/16 :goto_4

    .line 502
    :cond_6
    invoke-virtual {v13, v6}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v0

    if-eqz v0, :cond_8

    .line 503
    invoke-virtual {v1, v4}, Lfreemarker/ext/servlet/FreemarkerServlet;->getInitParameter(Ljava/lang/String;)Ljava/lang/String;

    move-result-object v0

    if-nez v0, :cond_7

    .line 507
    iget-object v0, v1, Lfreemarker/ext/servlet/FreemarkerServlet;->config:Lfreemarker/template/Configuration;

    invoke-virtual {v0, v14}, Lfreemarker/template/Configuration;->setDefaultEncoding(Ljava/lang/String;)V

    goto/16 :goto_4

    .line 504
    :cond_7
    new-instance v0, Lfreemarker/ext/servlet/FreemarkerServlet$ConflictingInitParamsException;

    invoke-direct {v0, v4, v6}, Lfreemarker/ext/servlet/FreemarkerServlet$ConflictingInitParamsException;-><init>(Ljava/lang/String;Ljava/lang/String;)V

    .end local v9    # "iciInitParamValue":Ljava/lang/String;
    .end local v12    # "initpnames":Ljava/util/Enumeration;
    .end local v13    # "name":Ljava/lang/String;
    .end local v14    # "value":Ljava/lang/String;
    throw v0

    .line 508
    .restart local v9    # "iciInitParamValue":Ljava/lang/String;
    .restart local v12    # "initpnames":Ljava/util/Enumeration;
    .restart local v13    # "name":Ljava/lang/String;
    .restart local v14    # "value":Ljava/lang/String;
    :cond_8
    invoke-virtual {v13, v5}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v0

    if-eqz v0, :cond_a

    .line 509
    invoke-virtual {v1, v3}, Lfreemarker/ext/servlet/FreemarkerServlet;->getInitParameter(Ljava/lang/String;)Ljava/lang/String;

    move-result-object v0
    :try_end_2
    .catch Lfreemarker/ext/servlet/FreemarkerServlet$ConflictingInitParamsException; {:try_start_2 .. :try_end_2} :catch_4
    .catch Ljava/lang/Exception; {:try_start_2 .. :try_end_2} :catch_3

    if-nez v0, :cond_9

    .line 514
    :try_start_3
    iget-object v0, v1, Lfreemarker/ext/servlet/FreemarkerServlet;->config:Lfreemarker/template/Configuration;

    invoke-static {v14}, Ljava/lang/Integer;->parseInt(Ljava/lang/String;)I

    move-result v15

    invoke-virtual {v0, v15}, Lfreemarker/template/Configuration;->setTemplateUpdateDelay(I)V
    :try_end_3
    .catch Ljava/lang/NumberFormatException; {:try_start_3 .. :try_end_3} :catch_2
    .catch Lfreemarker/ext/servlet/FreemarkerServlet$ConflictingInitParamsException; {:try_start_3 .. :try_end_3} :catch_4
    .catch Ljava/lang/Exception; {:try_start_3 .. :try_end_3} :catch_3

    goto :goto_3

    .line 515
    :catch_2
    move-exception v0

    .line 517
    :goto_3
    goto/16 :goto_4

    .line 510
    :cond_9
    :try_start_4
    new-instance v0, Lfreemarker/ext/servlet/FreemarkerServlet$ConflictingInitParamsException;

    invoke-direct {v0, v3, v5}, Lfreemarker/ext/servlet/FreemarkerServlet$ConflictingInitParamsException;-><init>(Ljava/lang/String;Ljava/lang/String;)V

    .end local v9    # "iciInitParamValue":Ljava/lang/String;
    .end local v12    # "initpnames":Ljava/util/Enumeration;
    .end local v13    # "name":Ljava/lang/String;
    .end local v14    # "value":Ljava/lang/String;
    throw v0

    .line 518
    .restart local v9    # "iciInitParamValue":Ljava/lang/String;
    .restart local v12    # "initpnames":Ljava/util/Enumeration;
    .restart local v13    # "name":Ljava/lang/String;
    .restart local v14    # "value":Ljava/lang/String;
    :cond_a
    invoke-virtual {v13, v7}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v0
    :try_end_4
    .catch Lfreemarker/ext/servlet/FreemarkerServlet$ConflictingInitParamsException; {:try_start_4 .. :try_end_4} :catch_4
    .catch Ljava/lang/Exception; {:try_start_4 .. :try_end_4} :catch_3

    const-string v15, "debug"

    if-eqz v0, :cond_10

    .line 519
    :try_start_5
    invoke-virtual {v1, v2}, Lfreemarker/ext/servlet/FreemarkerServlet;->getInitParameter(Ljava/lang/String;)Ljava/lang/String;

    move-result-object v0

    if-nez v0, :cond_f

    .line 524
    const-string v0, "rethrow"

    invoke-virtual {v0, v14}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v0

    if-eqz v0, :cond_b

    .line 525
    iget-object v0, v1, Lfreemarker/ext/servlet/FreemarkerServlet;->config:Lfreemarker/template/Configuration;

    sget-object v15, Lfreemarker/template/TemplateExceptionHandler;->RETHROW_HANDLER:Lfreemarker/template/TemplateExceptionHandler;

    invoke-virtual {v0, v15}, Lfreemarker/template/Configuration;->setTemplateExceptionHandler(Lfreemarker/template/TemplateExceptionHandler;)V

    goto/16 :goto_4

    .line 526
    :cond_b
    invoke-virtual {v15, v14}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v0

    if-eqz v0, :cond_c

    .line 527
    iget-object v0, v1, Lfreemarker/ext/servlet/FreemarkerServlet;->config:Lfreemarker/template/Configuration;

    sget-object v15, Lfreemarker/template/TemplateExceptionHandler;->DEBUG_HANDLER:Lfreemarker/template/TemplateExceptionHandler;

    invoke-virtual {v0, v15}, Lfreemarker/template/Configuration;->setTemplateExceptionHandler(Lfreemarker/template/TemplateExceptionHandler;)V

    goto/16 :goto_4

    .line 528
    :cond_c
    const-string v0, "htmlDebug"

    invoke-virtual {v0, v14}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v0

    if-eqz v0, :cond_d

    .line 529
    iget-object v0, v1, Lfreemarker/ext/servlet/FreemarkerServlet;->config:Lfreemarker/template/Configuration;

    sget-object v15, Lfreemarker/template/TemplateExceptionHandler;->HTML_DEBUG_HANDLER:Lfreemarker/template/TemplateExceptionHandler;

    invoke-virtual {v0, v15}, Lfreemarker/template/Configuration;->setTemplateExceptionHandler(Lfreemarker/template/TemplateExceptionHandler;)V

    goto/16 :goto_4

    .line 530
    :cond_d
    const-string v0, "ignore"

    invoke-virtual {v0, v14}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v0

    if-eqz v0, :cond_e

    .line 531
    iget-object v0, v1, Lfreemarker/ext/servlet/FreemarkerServlet;->config:Lfreemarker/template/Configuration;

    sget-object v15, Lfreemarker/template/TemplateExceptionHandler;->IGNORE_HANDLER:Lfreemarker/template/TemplateExceptionHandler;

    invoke-virtual {v0, v15}, Lfreemarker/template/Configuration;->setTemplateExceptionHandler(Lfreemarker/template/TemplateExceptionHandler;)V

    goto/16 :goto_4

    .line 533
    :cond_e
    new-instance v0, Lfreemarker/ext/servlet/FreemarkerServlet$InitParamValueException;

    const-string v2, "Not one of the supported values."

    invoke-direct {v0, v7, v14, v2}, Lfreemarker/ext/servlet/FreemarkerServlet$InitParamValueException;-><init>(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V

    .end local v9    # "iciInitParamValue":Ljava/lang/String;
    .end local v12    # "initpnames":Ljava/util/Enumeration;
    .end local v13    # "name":Ljava/lang/String;
    .end local v14    # "value":Ljava/lang/String;
    throw v0

    .line 520
    .restart local v9    # "iciInitParamValue":Ljava/lang/String;
    .restart local v12    # "initpnames":Ljava/util/Enumeration;
    .restart local v13    # "name":Ljava/lang/String;
    .restart local v14    # "value":Ljava/lang/String;
    :cond_f
    new-instance v0, Lfreemarker/ext/servlet/FreemarkerServlet$ConflictingInitParamsException;

    invoke-direct {v0, v2, v7}, Lfreemarker/ext/servlet/FreemarkerServlet$ConflictingInitParamsException;-><init>(Ljava/lang/String;Ljava/lang/String;)V

    .end local v9    # "iciInitParamValue":Ljava/lang/String;
    .end local v12    # "initpnames":Ljava/util/Enumeration;
    .end local v13    # "name":Ljava/lang/String;
    .end local v14    # "value":Ljava/lang/String;
    throw v0

    .line 536
    .restart local v9    # "iciInitParamValue":Ljava/lang/String;
    .restart local v12    # "initpnames":Ljava/util/Enumeration;
    .restart local v13    # "name":Ljava/lang/String;
    .restart local v14    # "value":Ljava/lang/String;
    :cond_10
    const-string v0, "NoCache"

    invoke-virtual {v13, v0}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v0

    if-eqz v0, :cond_11

    .line 537
    invoke-static {v14}, Lfreemarker/template/utility/StringUtil;->getYesNo(Ljava/lang/String;)Z

    move-result v0

    iput-boolean v0, v1, Lfreemarker/ext/servlet/FreemarkerServlet;->noCache:Z

    goto/16 :goto_4

    .line 538
    :cond_11
    const-string v0, "BufferSize"

    invoke-virtual {v13, v0}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v0

    if-eqz v0, :cond_12

    .line 539
    new-instance v0, Ljava/lang/Integer;

    invoke-direct {v1, v14}, Lfreemarker/ext/servlet/FreemarkerServlet;->parseSize(Ljava/lang/String;)I

    move-result v15

    invoke-direct {v0, v15}, Ljava/lang/Integer;-><init>(I)V

    iput-object v0, v1, Lfreemarker/ext/servlet/FreemarkerServlet;->bufferSize:Ljava/lang/Integer;

    goto/16 :goto_4

    .line 540
    :cond_12
    invoke-virtual {v13, v15}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v0
    :try_end_5
    .catch Lfreemarker/ext/servlet/FreemarkerServlet$ConflictingInitParamsException; {:try_start_5 .. :try_end_5} :catch_4
    .catch Ljava/lang/Exception; {:try_start_5 .. :try_end_5} :catch_3

    const-string v10, "Debug"

    if-eqz v0, :cond_14

    .line 541
    :try_start_6
    invoke-virtual {v1, v10}, Lfreemarker/ext/servlet/FreemarkerServlet;->getInitParameter(Ljava/lang/String;)Ljava/lang/String;

    move-result-object v0

    if-nez v0, :cond_13

    .line 544
    invoke-static {v14}, Lfreemarker/template/utility/StringUtil;->getYesNo(Ljava/lang/String;)Z

    move-result v0

    iput-boolean v0, v1, Lfreemarker/ext/servlet/FreemarkerServlet;->debug:Z

    goto :goto_4

    .line 542
    :cond_13
    new-instance v0, Lfreemarker/ext/servlet/FreemarkerServlet$ConflictingInitParamsException;

    invoke-direct {v0, v10, v15}, Lfreemarker/ext/servlet/FreemarkerServlet$ConflictingInitParamsException;-><init>(Ljava/lang/String;Ljava/lang/String;)V

    .end local v9    # "iciInitParamValue":Ljava/lang/String;
    .end local v12    # "initpnames":Ljava/util/Enumeration;
    .end local v13    # "name":Ljava/lang/String;
    .end local v14    # "value":Ljava/lang/String;
    throw v0

    .line 545
    .restart local v9    # "iciInitParamValue":Ljava/lang/String;
    .restart local v12    # "initpnames":Ljava/util/Enumeration;
    .restart local v13    # "name":Ljava/lang/String;
    .restart local v14    # "value":Ljava/lang/String;
    :cond_14
    invoke-virtual {v13, v10}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v0

    if-eqz v0, :cond_15

    .line 546
    invoke-static {v14}, Lfreemarker/template/utility/StringUtil;->getYesNo(Ljava/lang/String;)Z

    move-result v0

    iput-boolean v0, v1, Lfreemarker/ext/servlet/FreemarkerServlet;->debug:Z

    goto :goto_4

    .line 547
    :cond_15
    const-string v0, "ContentType"

    invoke-virtual {v13, v0}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v0

    if-eqz v0, :cond_16

    .line 548
    iput-object v14, v1, Lfreemarker/ext/servlet/FreemarkerServlet;->contentType:Ljava/lang/String;

    goto :goto_4

    .line 549
    :cond_16
    const-string v0, "ExceptionOnMissingTemplate"

    invoke-virtual {v13, v0}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v0

    if-eqz v0, :cond_17

    .line 550
    invoke-static {v14}, Lfreemarker/template/utility/StringUtil;->getYesNo(Ljava/lang/String;)Z

    move-result v0

    iput-boolean v0, v1, Lfreemarker/ext/servlet/FreemarkerServlet;->exceptionOnMissingTemplate:Z

    goto :goto_4

    .line 551
    :cond_17
    const-string v0, "MetaInfTldSources"

    invoke-virtual {v13, v0}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v0

    if-eqz v0, :cond_18

    .line 552
    invoke-direct {v1, v14}, Lfreemarker/ext/servlet/FreemarkerServlet;->parseAsMetaInfTldLocations(Ljava/lang/String;)Ljava/util/List;

    move-result-object v0

    iput-object v0, v1, Lfreemarker/ext/servlet/FreemarkerServlet;->metaInfTldSources:Ljava/util/List;

    goto :goto_4

    .line 553
    :cond_18
    const-string v0, "ClasspathTlds"

    invoke-virtual {v13, v0}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v0

    if-eqz v0, :cond_1a

    .line 554
    new-instance v0, Ljava/util/ArrayList;

    invoke-direct {v0}, Ljava/util/ArrayList;-><init>()V

    .line 555
    .local v0, "newClasspathTlds":Ljava/util/List;
    iget-object v10, v1, Lfreemarker/ext/servlet/FreemarkerServlet;->classpathTlds:Ljava/util/List;

    if-eqz v10, :cond_19

    .line 556
    invoke-interface {v0, v10}, Ljava/util/List;->addAll(Ljava/util/Collection;)Z

    .line 558
    :cond_19
    invoke-static {v14}, Lfreemarker/ext/servlet/InitParamParser;->parseCommaSeparatedList(Ljava/lang/String;)Ljava/util/List;

    move-result-object v10

    invoke-interface {v0, v10}, Ljava/util/List;->addAll(Ljava/util/Collection;)Z

    .line 559
    iput-object v0, v1, Lfreemarker/ext/servlet/FreemarkerServlet;->classpathTlds:Ljava/util/List;

    .line 560
    .end local v0    # "newClasspathTlds":Ljava/util/List;
    goto :goto_4

    .line 561
    :cond_1a
    iget-object v0, v1, Lfreemarker/ext/servlet/FreemarkerServlet;->config:Lfreemarker/template/Configuration;

    invoke-virtual {v0, v13, v14}, Lfreemarker/template/Configuration;->setSetting(Ljava/lang/String;Ljava/lang/String;)V
    :try_end_6
    .catch Lfreemarker/ext/servlet/FreemarkerServlet$ConflictingInitParamsException; {:try_start_6 .. :try_end_6} :catch_4
    .catch Ljava/lang/Exception; {:try_start_6 .. :try_end_6} :catch_3

    .line 567
    :cond_1b
    :goto_4
    nop

    .line 568
    .end local v13    # "name":Ljava/lang/String;
    .end local v14    # "value":Ljava/lang/String;
    const/4 v10, 0x0

    goto/16 :goto_2

    .line 565
    .restart local v13    # "name":Ljava/lang/String;
    .restart local v14    # "value":Ljava/lang/String;
    :catch_3
    move-exception v0

    .line 566
    .local v0, "e":Ljava/lang/Exception;
    new-instance v2, Lfreemarker/ext/servlet/FreemarkerServlet$InitParamValueException;

    invoke-direct {v2, v13, v14, v0}, Lfreemarker/ext/servlet/FreemarkerServlet$InitParamValueException;-><init>(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)V

    throw v2

    .line 563
    .end local v0    # "e":Ljava/lang/Exception;
    :catch_4
    move-exception v0

    .line 564
    .local v0, "e":Lfreemarker/ext/servlet/FreemarkerServlet$ConflictingInitParamsException;
    throw v0

    .line 491
    .end local v0    # "e":Lfreemarker/ext/servlet/FreemarkerServlet$ConflictingInitParamsException;
    :cond_1c
    new-instance v0, Lfreemarker/ext/servlet/FreemarkerServlet$MalformedWebXmlException;

    new-instance v2, Ljava/lang/StringBuffer;

    invoke-direct {v2}, Ljava/lang/StringBuffer;-><init>()V

    const-string v3, "init-param "

    invoke-virtual {v2, v3}, Ljava/lang/StringBuffer;->append(Ljava/lang/String;)Ljava/lang/StringBuffer;

    move-result-object v2

    .line 492
    invoke-static {v13}, Lfreemarker/template/utility/StringUtil;->jQuote(Ljava/lang/String;)Ljava/lang/String;

    move-result-object v3

    invoke-virtual {v2, v3}, Ljava/lang/StringBuffer;->append(Ljava/lang/String;)Ljava/lang/StringBuffer;

    move-result-object v2

    const-string v3, " without param-value. "

    invoke-virtual {v2, v3}, Ljava/lang/StringBuffer;->append(Ljava/lang/String;)Ljava/lang/StringBuffer;

    move-result-object v2

    const-string v3, "Maybe the web.xml is not well-formed?"

    invoke-virtual {v2, v3}, Ljava/lang/StringBuffer;->append(Ljava/lang/String;)Ljava/lang/StringBuffer;

    move-result-object v2

    invoke-virtual {v2}, Ljava/lang/StringBuffer;->toString()Ljava/lang/String;

    move-result-object v2

    invoke-direct {v0, v2}, Lfreemarker/ext/servlet/FreemarkerServlet$MalformedWebXmlException;-><init>(Ljava/lang/String;)V

    throw v0

    .line 486
    :cond_1d
    new-instance v0, Lfreemarker/ext/servlet/FreemarkerServlet$MalformedWebXmlException;

    const-string v2, "init-param without param-name. Maybe the web.xml is not well-formed?"

    invoke-direct {v0, v2}, Lfreemarker/ext/servlet/FreemarkerServlet$MalformedWebXmlException;-><init>(Ljava/lang/String;)V

    throw v0

    .line 570
    .end local v13    # "name":Ljava/lang/String;
    .end local v14    # "value":Ljava/lang/String;
    :cond_1e
    const/4 v0, 0x1

    iput-boolean v0, v1, Lfreemarker/ext/servlet/FreemarkerServlet;->noCharsetInContentType:Z

    .line 571
    iget-object v0, v1, Lfreemarker/ext/servlet/FreemarkerServlet;->contentType:Ljava/lang/String;

    invoke-virtual {v0}, Ljava/lang/String;->toLowerCase()Ljava/lang/String;

    move-result-object v0

    const-string v2, "charset="

    invoke-virtual {v0, v2}, Ljava/lang/String;->indexOf(Ljava/lang/String;)I

    move-result v0

    .line 572
    .local v0, "i":I
    const/4 v2, -0x1

    if-eq v0, v2, :cond_22

    .line 573
    const/16 v3, 0x20

    .line 574
    .local v3, "c":C
    add-int/lit8 v0, v0, -0x1

    .line 575
    :goto_5
    if-ltz v0, :cond_20

    .line 576
    iget-object v4, v1, Lfreemarker/ext/servlet/FreemarkerServlet;->contentType:Ljava/lang/String;

    invoke-virtual {v4, v0}, Ljava/lang/String;->charAt(I)C

    move-result v3

    .line 577
    invoke-static {v3}, Ljava/lang/Character;->isWhitespace(C)Z

    move-result v4

    if-nez v4, :cond_1f

    goto :goto_6

    .line 578
    :cond_1f
    add-int/lit8 v0, v0, -0x1

    goto :goto_5

    .line 580
    :cond_20
    :goto_6
    if-eq v0, v2, :cond_21

    const/16 v2, 0x3b

    if-ne v3, v2, :cond_22

    .line 581
    :cond_21
    const/4 v2, 0x0

    iput-boolean v2, v1, Lfreemarker/ext/servlet/FreemarkerServlet;->noCharsetInContentType:Z

    .line 584
    .end local v3    # "c":C
    :cond_22
    return-void
.end method

.method private logWarnOnObjectWrapperMismatch()V
    .locals 4

    .line 764
    iget-object v0, p0, Lfreemarker/ext/servlet/FreemarkerServlet;->wrapper:Lfreemarker/template/ObjectWrapper;

    iget-object v1, p0, Lfreemarker/ext/servlet/FreemarkerServlet;->config:Lfreemarker/template/Configuration;

    invoke-virtual {v1}, Lfreemarker/template/Configuration;->getObjectWrapper()Lfreemarker/template/ObjectWrapper;

    move-result-object v1

    if-eq v0, v1, :cond_2

    iget-boolean v0, p0, Lfreemarker/ext/servlet/FreemarkerServlet;->objectWrapperMismatchWarnLogged:Z

    if-nez v0, :cond_2

    sget-object v0, Lfreemarker/ext/servlet/FreemarkerServlet;->LOG:Lfreemarker/log/Logger;

    invoke-virtual {v0}, Lfreemarker/log/Logger;->isWarnEnabled()Z

    move-result v1

    if-eqz v1, :cond_2

    .line 766
    monitor-enter p0

    .line 767
    :try_start_0
    iget-boolean v1, p0, Lfreemarker/ext/servlet/FreemarkerServlet;->objectWrapperMismatchWarnLogged:Z
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    const/4 v2, 0x1

    xor-int/2addr v1, v2

    .line 768
    .local v1, "logWarn":Z
    if-eqz v1, :cond_0

    .line 769
    :try_start_1
    iput-boolean v2, p0, Lfreemarker/ext/servlet/FreemarkerServlet;->objectWrapperMismatchWarnLogged:Z

    .line 771
    :cond_0
    monitor-exit p0
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_1

    .line 772
    if-eqz v1, :cond_2

    .line 773
    new-instance v2, Ljava/lang/StringBuffer;

    invoke-direct {v2}, Ljava/lang/StringBuffer;-><init>()V

    .line 774
    invoke-virtual {p0}, Ljava/lang/Object;->getClass()Ljava/lang/Class;

    move-result-object v3

    invoke-virtual {v3}, Ljava/lang/Class;->getName()Ljava/lang/String;

    move-result-object v3

    invoke-virtual {v2, v3}, Ljava/lang/StringBuffer;->append(Ljava/lang/String;)Ljava/lang/StringBuffer;

    move-result-object v2

    const-string v3, ".wrapper != config.getObjectWrapper(); possibly the result of incorrect extension of "

    invoke-virtual {v2, v3}, Ljava/lang/StringBuffer;->append(Ljava/lang/String;)Ljava/lang/StringBuffer;

    move-result-object v2

    sget-object v3, Lfreemarker/ext/servlet/FreemarkerServlet;->class$freemarker$ext$servlet$FreemarkerServlet:Ljava/lang/Class;

    if-nez v3, :cond_1

    const-string v3, "freemarker.ext.servlet.FreemarkerServlet"

    .line 776
    invoke-static {v3}, Lfreemarker/ext/servlet/FreemarkerServlet;->class$(Ljava/lang/String;)Ljava/lang/Class;

    move-result-object v3

    sput-object v3, Lfreemarker/ext/servlet/FreemarkerServlet;->class$freemarker$ext$servlet$FreemarkerServlet:Ljava/lang/Class;

    goto :goto_0

    :cond_1
    nop

    :goto_0
    invoke-virtual {v3}, Ljava/lang/Class;->getName()Ljava/lang/String;

    move-result-object v3

    invoke-virtual {v2, v3}, Ljava/lang/StringBuffer;->append(Ljava/lang/String;)Ljava/lang/StringBuffer;

    move-result-object v2

    const-string v3, "."

    invoke-virtual {v2, v3}, Ljava/lang/StringBuffer;->append(Ljava/lang/String;)Ljava/lang/StringBuffer;

    move-result-object v2

    invoke-virtual {v2}, Ljava/lang/StringBuffer;->toString()Ljava/lang/String;

    move-result-object v2

    .line 773
    invoke-virtual {v0, v2}, Lfreemarker/log/Logger;->warn(Ljava/lang/String;)V

    goto :goto_2

    .line 771
    .end local v1    # "logWarn":Z
    :catchall_0
    move-exception v0

    const/4 v1, 0x0

    .restart local v1    # "logWarn":Z
    :goto_1
    :try_start_2
    monitor-exit p0
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_1

    throw v0

    :catchall_1
    move-exception v0

    goto :goto_1

    .line 779
    .end local v1    # "logWarn":Z
    :cond_2
    :goto_2
    return-void
.end method

.method private newServletExceptionWithFreeMarkerLogging(Ljava/lang/String;Ljava/lang/Throwable;)Ljavax/servlet/ServletException;
    .locals 2
    .param p1, "message"    # Ljava/lang/String;
    .param p2, "cause"    # Ljava/lang/Throwable;
    .annotation system Ldalvik/annotation/Throws;
        value = {
            Ljavax/servlet/ServletException;
        }
    .end annotation

    .line 743
    instance-of v0, p2, Lfreemarker/template/TemplateException;

    if-eqz v0, :cond_0

    .line 746
    sget-object v0, Lfreemarker/ext/servlet/FreemarkerServlet;->LOG_RT:Lfreemarker/log/Logger;

    invoke-virtual {v0, p1, p2}, Lfreemarker/log/Logger;->error(Ljava/lang/String;Ljava/lang/Throwable;)V

    goto :goto_0

    .line 748
    :cond_0
    sget-object v0, Lfreemarker/ext/servlet/FreemarkerServlet;->LOG:Lfreemarker/log/Logger;

    invoke-virtual {v0, p1, p2}, Lfreemarker/log/Logger;->error(Ljava/lang/String;Ljava/lang/Throwable;)V

    .line 751
    :goto_0
    new-instance v0, Ljavax/servlet/ServletException;

    invoke-direct {v0, p1, p2}, Ljavax/servlet/ServletException;-><init>(Ljava/lang/String;Ljava/lang/Throwable;)V

    .line 755
    .local v0, "e":Ljavax/servlet/ServletException;
    :try_start_0
    invoke-virtual {v0, p2}, Ljavax/servlet/ServletException;->initCause(Ljava/lang/Throwable;)Ljava/lang/Throwable;
    :try_end_0
    .catch Ljava/lang/Exception; {:try_start_0 .. :try_end_0} :catch_0

    .line 758
    goto :goto_1

    .line 756
    :catch_0
    move-exception v1

    .line 759
    :goto_1
    throw v0
.end method

.method private parseAsMetaInfTldLocations(Ljava/lang/String;)Ljava/util/List;
    .locals 9
    .param p1, "value"    # Ljava/lang/String;
    .annotation system Ldalvik/annotation/Throws;
        value = {
            Ljava/text/ParseException;
        }
    .end annotation

    .line 587
    const/4 v0, 0x0

    .line 589
    .local v0, "metaInfTldSources":Ljava/util/List;
    invoke-static {p1}, Lfreemarker/ext/servlet/InitParamParser;->parseCommaSeparatedList(Ljava/lang/String;)Ljava/util/List;

    move-result-object v1

    .line 590
    .local v1, "values":Ljava/util/List;
    invoke-interface {v1}, Ljava/util/List;->iterator()Ljava/util/Iterator;

    move-result-object v2

    .local v2, "it":Ljava/util/Iterator;
    :goto_0
    invoke-interface {v2}, Ljava/util/Iterator;->hasNext()Z

    move-result v3

    if-eqz v3, :cond_7

    .line 591
    invoke-interface {v2}, Ljava/util/Iterator;->next()Ljava/lang/Object;

    move-result-object v3

    check-cast v3, Ljava/lang/String;

    .line 593
    .local v3, "itemStr":Ljava/lang/String;
    const-string/jumbo v4, "webInfPerLibJars"

    invoke-virtual {v3, v4}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v4

    if-eqz v4, :cond_0

    .line 594
    sget-object v4, Lfreemarker/ext/jsp/TaglibFactory$WebInfPerLibJarMetaInfTldSource;->INSTANCE:Lfreemarker/ext/jsp/TaglibFactory$WebInfPerLibJarMetaInfTldSource;

    .local v4, "metaInfTldSource":Lfreemarker/ext/jsp/TaglibFactory$MetaInfTldSource;
    goto/16 :goto_2

    .line 595
    .end local v4    # "metaInfTldSource":Lfreemarker/ext/jsp/TaglibFactory$MetaInfTldSource;
    :cond_0
    const-string v4, "classpath"

    invoke-virtual {v3, v4}, Ljava/lang/String;->startsWith(Ljava/lang/String;)Z

    move-result v5

    const/4 v6, -0x1

    if-eqz v5, :cond_4

    .line 596
    invoke-virtual {v4}, Ljava/lang/String;->length()I

    move-result v4

    invoke-virtual {v3, v4}, Ljava/lang/String;->substring(I)Ljava/lang/String;

    move-result-object v4

    invoke-virtual {v4}, Ljava/lang/String;->trim()Ljava/lang/String;

    move-result-object v4

    .line 597
    .local v4, "itemRightSide":Ljava/lang/String;
    invoke-virtual {v4}, Ljava/lang/String;->length()I

    move-result v5

    if-nez v5, :cond_1

    .line 598
    new-instance v5, Lfreemarker/ext/jsp/TaglibFactory$ClasspathMetaInfTldSource;

    const/16 v6, 0x20

    const-string v7, ".*"

    invoke-static {v7, v6}, Ljava/util/regex/Pattern;->compile(Ljava/lang/String;I)Ljava/util/regex/Pattern;

    move-result-object v6

    invoke-direct {v5, v6}, Lfreemarker/ext/jsp/TaglibFactory$ClasspathMetaInfTldSource;-><init>(Ljava/util/regex/Pattern;)V

    move-object v4, v5

    .local v5, "metaInfTldSource":Lfreemarker/ext/jsp/TaglibFactory$MetaInfTldSource;
    goto :goto_1

    .line 599
    .end local v5    # "metaInfTldSource":Lfreemarker/ext/jsp/TaglibFactory$MetaInfTldSource;
    :cond_1
    const-string v5, ":"

    invoke-virtual {v4, v5}, Ljava/lang/String;->startsWith(Ljava/lang/String;)Z

    move-result v5

    if-eqz v5, :cond_3

    .line 600
    const/4 v5, 0x1

    invoke-virtual {v4, v5}, Ljava/lang/String;->substring(I)Ljava/lang/String;

    move-result-object v5

    invoke-virtual {v5}, Ljava/lang/String;->trim()Ljava/lang/String;

    move-result-object v5

    .line 601
    .local v5, "regexpStr":Ljava/lang/String;
    invoke-virtual {v5}, Ljava/lang/String;->length()I

    move-result v7

    if-eqz v7, :cond_2

    .line 605
    new-instance v6, Lfreemarker/ext/jsp/TaglibFactory$ClasspathMetaInfTldSource;

    invoke-static {v5}, Ljava/util/regex/Pattern;->compile(Ljava/lang/String;)Ljava/util/regex/Pattern;

    move-result-object v7

    invoke-direct {v6, v7}, Lfreemarker/ext/jsp/TaglibFactory$ClasspathMetaInfTldSource;-><init>(Ljava/util/regex/Pattern;)V

    move-object v5, v6

    .line 606
    .local v5, "metaInfTldSource":Lfreemarker/ext/jsp/TaglibFactory$MetaInfTldSource;
    move-object v4, v5

    .line 610
    .end local v5    # "metaInfTldSource":Lfreemarker/ext/jsp/TaglibFactory$MetaInfTldSource;
    .local v4, "metaInfTldSource":Lfreemarker/ext/jsp/TaglibFactory$MetaInfTldSource;
    :goto_1
    goto :goto_2

    .line 602
    .local v4, "itemRightSide":Ljava/lang/String;
    .local v5, "regexpStr":Ljava/lang/String;
    :cond_2
    new-instance v7, Ljava/text/ParseException;

    const-string v8, "Empty regular expression after \"classpath:\""

    invoke-direct {v7, v8, v6}, Ljava/text/ParseException;-><init>(Ljava/lang/String;I)V

    throw v7

    .line 607
    .end local v5    # "regexpStr":Ljava/lang/String;
    :cond_3
    new-instance v5, Ljava/text/ParseException;

    new-instance v7, Ljava/lang/StringBuffer;

    invoke-direct {v7}, Ljava/lang/StringBuffer;-><init>()V

    const-string v8, "Invalid \"classpath\" value syntax: "

    invoke-virtual {v7, v8}, Ljava/lang/StringBuffer;->append(Ljava/lang/String;)Ljava/lang/StringBuffer;

    move-result-object v7

    invoke-virtual {v7, p1}, Ljava/lang/StringBuffer;->append(Ljava/lang/String;)Ljava/lang/StringBuffer;

    move-result-object v7

    invoke-virtual {v7}, Ljava/lang/StringBuffer;->toString()Ljava/lang/String;

    move-result-object v7

    invoke-direct {v5, v7, v6}, Ljava/text/ParseException;-><init>(Ljava/lang/String;I)V

    throw v5

    .line 610
    .end local v4    # "itemRightSide":Ljava/lang/String;
    :cond_4
    const-string v4, "clear"

    invoke-virtual {v3, v4}, Ljava/lang/String;->startsWith(Ljava/lang/String;)Z

    move-result v4

    if-eqz v4, :cond_6

    .line 611
    sget-object v4, Lfreemarker/ext/jsp/TaglibFactory$ClearMetaInfTldSource;->INSTANCE:Lfreemarker/ext/jsp/TaglibFactory$ClearMetaInfTldSource;

    .line 615
    .local v4, "metaInfTldSource":Lfreemarker/ext/jsp/TaglibFactory$MetaInfTldSource;
    :goto_2
    if-nez v0, :cond_5

    .line 616
    new-instance v5, Ljava/util/ArrayList;

    invoke-direct {v5}, Ljava/util/ArrayList;-><init>()V

    move-object v0, v5

    .line 618
    :cond_5
    invoke-interface {v0, v4}, Ljava/util/List;->add(Ljava/lang/Object;)Z

    .line 619
    .end local v3    # "itemStr":Ljava/lang/String;
    .end local v4    # "metaInfTldSource":Lfreemarker/ext/jsp/TaglibFactory$MetaInfTldSource;
    goto/16 :goto_0

    .line 613
    .restart local v3    # "itemStr":Ljava/lang/String;
    :cond_6
    new-instance v4, Ljava/text/ParseException;

    new-instance v5, Ljava/lang/StringBuffer;

    invoke-direct {v5}, Ljava/lang/StringBuffer;-><init>()V

    const-string v7, "Item has no recognized source type prefix: "

    invoke-virtual {v5, v7}, Ljava/lang/StringBuffer;->append(Ljava/lang/String;)Ljava/lang/StringBuffer;

    move-result-object v5

    invoke-virtual {v5, v3}, Ljava/lang/StringBuffer;->append(Ljava/lang/String;)Ljava/lang/StringBuffer;

    move-result-object v5

    invoke-virtual {v5}, Ljava/lang/StringBuffer;->toString()Ljava/lang/String;

    move-result-object v5

    invoke-direct {v4, v5, v6}, Ljava/text/ParseException;-><init>(Ljava/lang/String;I)V

    throw v4

    .line 621
    .end local v2    # "it":Ljava/util/Iterator;
    .end local v3    # "itemStr":Ljava/lang/String;
    :cond_7
    return-object v0
.end method

.method private parseSize(Ljava/lang/String;)I
    .locals 8
    .param p1, "value"    # Ljava/lang/String;
    .annotation system Ldalvik/annotation/Throws;
        value = {
            Ljava/text/ParseException;
        }
    .end annotation

    .line 1289
    invoke-virtual {p1}, Ljava/lang/String;->length()I

    move-result v0

    add-int/lit8 v0, v0, -0x1

    .local v0, "lastDigitIdx":I
    :goto_0
    if-ltz v0, :cond_1

    .line 1290
    invoke-virtual {p1, v0}, Ljava/lang/String;->charAt(I)C

    move-result v1

    .line 1291
    .local v1, "c":C
    const/16 v2, 0x30

    if-lt v1, v2, :cond_0

    const/16 v2, 0x39

    if-gt v1, v2, :cond_0

    .line 1292
    goto :goto_1

    .line 1289
    .end local v1    # "c":C
    :cond_0
    add-int/lit8 v0, v0, -0x1

    goto :goto_0

    .line 1296
    :cond_1
    :goto_1
    const/4 v1, 0x0

    add-int/lit8 v2, v0, 0x1

    invoke-virtual {p1, v1, v2}, Ljava/lang/String;->substring(II)Ljava/lang/String;

    move-result-object v1

    invoke-virtual {v1}, Ljava/lang/String;->trim()Ljava/lang/String;

    move-result-object v1

    invoke-static {v1}, Ljava/lang/Integer;->parseInt(Ljava/lang/String;)I

    move-result v1

    .line 1298
    .local v1, "n":I
    add-int/lit8 v2, v0, 0x1

    invoke-virtual {p1, v2}, Ljava/lang/String;->substring(I)Ljava/lang/String;

    move-result-object v2

    invoke-virtual {v2}, Ljava/lang/String;->trim()Ljava/lang/String;

    move-result-object v2

    invoke-virtual {v2}, Ljava/lang/String;->toUpperCase()Ljava/lang/String;

    move-result-object v2

    .line 1300
    .local v2, "unitStr":Ljava/lang/String;
    invoke-virtual {v2}, Ljava/lang/String;->length()I

    move-result v3

    if-eqz v3, :cond_7

    const-string v3, "B"

    invoke-virtual {v2, v3}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v3

    if-eqz v3, :cond_2

    goto :goto_4

    .line 1302
    :cond_2
    const-string v3, "K"

    invoke-virtual {v2, v3}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v3

    if-nez v3, :cond_6

    const-string v3, "KB"

    invoke-virtual {v2, v3}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v3

    if-nez v3, :cond_6

    const-string v3, "KIB"

    invoke-virtual {v2, v3}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v3

    if-eqz v3, :cond_3

    goto :goto_3

    .line 1304
    :cond_3
    const-string v3, "M"

    invoke-virtual {v2, v3}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v3

    if-nez v3, :cond_5

    const-string v3, "MB"

    invoke-virtual {v2, v3}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v3

    if-nez v3, :cond_5

    const-string v3, "MIB"

    invoke-virtual {v2, v3}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v3

    if-eqz v3, :cond_4

    goto :goto_2

    .line 1307
    :cond_4
    new-instance v3, Ljava/text/ParseException;

    new-instance v4, Ljava/lang/StringBuffer;

    invoke-direct {v4}, Ljava/lang/StringBuffer;-><init>()V

    const-string v5, "Unknown unit: "

    invoke-virtual {v4, v5}, Ljava/lang/StringBuffer;->append(Ljava/lang/String;)Ljava/lang/StringBuffer;

    move-result-object v4

    invoke-virtual {v4, v2}, Ljava/lang/StringBuffer;->append(Ljava/lang/String;)Ljava/lang/StringBuffer;

    move-result-object v4

    invoke-virtual {v4}, Ljava/lang/StringBuffer;->toString()Ljava/lang/String;

    move-result-object v4

    add-int/lit8 v5, v0, 0x1

    invoke-direct {v3, v4, v5}, Ljava/text/ParseException;-><init>(Ljava/lang/String;I)V

    throw v3

    .line 1305
    :cond_5
    :goto_2
    const/high16 v3, 0x100000

    .local v3, "unit":I
    goto :goto_5

    .line 1303
    .end local v3    # "unit":I
    :cond_6
    :goto_3
    const/16 v3, 0x400

    .restart local v3    # "unit":I
    goto :goto_5

    .line 1301
    .end local v3    # "unit":I
    :cond_7
    :goto_4
    const/4 v3, 0x1

    .line 1310
    .restart local v3    # "unit":I
    :goto_5
    int-to-long v4, v1

    int-to-long v6, v3

    mul-long/2addr v4, v6

    .line 1311
    .local v4, "size":J
    const-wide/16 v6, 0x0

    cmp-long v6, v4, v6

    if-ltz v6, :cond_9

    .line 1314
    const-wide/32 v6, 0x7fffffff

    cmp-long v6, v4, v6

    if-gtz v6, :cond_8

    .line 1317
    long-to-int v6, v4

    return v6

    .line 1315
    :cond_8
    new-instance v6, Ljava/lang/IllegalArgumentException;

    const-string v7, "Buffer size can\'t bigger than 2147483647"

    invoke-direct {v6, v7}, Ljava/lang/IllegalArgumentException;-><init>(Ljava/lang/String;)V

    throw v6

    .line 1312
    :cond_9
    new-instance v6, Ljava/lang/IllegalArgumentException;

    const-string v7, "Buffer size can\'t be negative"

    invoke-direct {v6, v7}, Ljava/lang/IllegalArgumentException;-><init>(Ljava/lang/String;)V

    throw v6
.end method

.method private process(Ljavax/servlet/http/HttpServletRequest;Ljavax/servlet/http/HttpServletResponse;)V
    .locals 9
    .param p1, "request"    # Ljavax/servlet/http/HttpServletRequest;
    .param p2, "response"    # Ljavax/servlet/http/HttpServletResponse;
    .annotation system Ldalvik/annotation/Throws;
        value = {
            Ljavax/servlet/ServletException;,
            Ljava/io/IOException;
        }
    .end annotation

    .line 659
    invoke-virtual {p0, p1, p2}, Lfreemarker/ext/servlet/FreemarkerServlet;->preprocessRequest(Ljavax/servlet/http/HttpServletRequest;Ljavax/servlet/http/HttpServletResponse;)Z

    move-result v0

    if-eqz v0, :cond_0

    .line 660
    return-void

    .line 663
    :cond_0
    iget-object v0, p0, Lfreemarker/ext/servlet/FreemarkerServlet;->bufferSize:Ljava/lang/Integer;

    if-eqz v0, :cond_1

    invoke-interface {p2}, Ljavax/servlet/http/HttpServletResponse;->isCommitted()Z

    move-result v0

    if-nez v0, :cond_1

    .line 665
    :try_start_0
    iget-object v0, p0, Lfreemarker/ext/servlet/FreemarkerServlet;->bufferSize:Ljava/lang/Integer;

    invoke-virtual {v0}, Ljava/lang/Integer;->intValue()I

    move-result v0

    invoke-interface {p2, v0}, Ljavax/servlet/http/HttpServletResponse;->setBufferSize(I)V
    :try_end_0
    .catch Ljava/lang/IllegalStateException; {:try_start_0 .. :try_end_0} :catch_0

    .line 668
    goto :goto_0

    .line 666
    :catch_0
    move-exception v0

    .line 667
    .local v0, "e":Ljava/lang/IllegalStateException;
    sget-object v1, Lfreemarker/ext/servlet/FreemarkerServlet;->LOG:Lfreemarker/log/Logger;

    const-string v2, "Can\'t set buffer size any more,"

    invoke-virtual {v1, v2, v0}, Lfreemarker/log/Logger;->debug(Ljava/lang/String;Ljava/lang/Throwable;)V

    .line 671
    .end local v0    # "e":Ljava/lang/IllegalStateException;
    :cond_1
    :goto_0
    invoke-virtual {p0, p1}, Lfreemarker/ext/servlet/FreemarkerServlet;->requestUrlToTemplatePath(Ljavax/servlet/http/HttpServletRequest;)Ljava/lang/String;

    move-result-object v0

    .line 673
    .local v0, "templatePath":Ljava/lang/String;
    sget-object v1, Lfreemarker/ext/servlet/FreemarkerServlet;->LOG:Lfreemarker/log/Logger;

    invoke-virtual {v1}, Lfreemarker/log/Logger;->isDebugEnabled()Z

    move-result v2

    const-string v3, "."

    if-eqz v2, :cond_2

    .line 674
    new-instance v2, Ljava/lang/StringBuffer;

    invoke-direct {v2}, Ljava/lang/StringBuffer;-><init>()V

    const-string v4, "Requested template "

    invoke-virtual {v2, v4}, Ljava/lang/StringBuffer;->append(Ljava/lang/String;)Ljava/lang/StringBuffer;

    move-result-object v2

    invoke-static {v0}, Lfreemarker/template/utility/StringUtil;->jQuoteNoXSS(Ljava/lang/String;)Ljava/lang/String;

    move-result-object v4

    invoke-virtual {v2, v4}, Ljava/lang/StringBuffer;->append(Ljava/lang/String;)Ljava/lang/StringBuffer;

    move-result-object v2

    invoke-virtual {v2, v3}, Ljava/lang/StringBuffer;->append(Ljava/lang/String;)Ljava/lang/StringBuffer;

    move-result-object v2

    invoke-virtual {v2}, Ljava/lang/StringBuffer;->toString()Ljava/lang/String;

    move-result-object v2

    invoke-virtual {v1, v2}, Lfreemarker/log/Logger;->debug(Ljava/lang/String;)V

    .line 677
    :cond_2
    invoke-virtual {p0, v0, p1, p2}, Lfreemarker/ext/servlet/FreemarkerServlet;->deduceLocale(Ljava/lang/String;Ljavax/servlet/http/HttpServletRequest;Ljavax/servlet/http/HttpServletResponse;)Ljava/util/Locale;

    move-result-object v1

    .line 681
    .local v1, "locale":Ljava/util/Locale;
    :try_start_1
    iget-object v2, p0, Lfreemarker/ext/servlet/FreemarkerServlet;->config:Lfreemarker/template/Configuration;

    invoke-virtual {v2, v0, v1}, Lfreemarker/template/Configuration;->getTemplate(Ljava/lang/String;Ljava/util/Locale;)Lfreemarker/template/Template;

    move-result-object v2
    :try_end_1
    .catch Lfreemarker/template/TemplateNotFoundException; {:try_start_1 .. :try_end_1} :catch_4
    .catch Lfreemarker/core/ParseException; {:try_start_1 .. :try_end_1} :catch_3
    .catch Ljava/lang/Exception; {:try_start_1 .. :try_end_1} :catch_2

    .line 700
    .local v2, "template":Lfreemarker/template/Template;
    nop

    .line 702
    const-string v3, "content_type"

    invoke-virtual {v2, v3}, Lfreemarker/template/Template;->getCustomAttribute(Ljava/lang/String;)Ljava/lang/Object;

    move-result-object v3

    .line 703
    .local v3, "attrContentType":Ljava/lang/Object;
    if-eqz v3, :cond_3

    .line 704
    invoke-virtual {v3}, Ljava/lang/Object;->toString()Ljava/lang/String;

    move-result-object v4

    invoke-interface {p2, v4}, Ljavax/servlet/http/HttpServletResponse;->setContentType(Ljava/lang/String;)V

    goto :goto_1

    .line 706
    :cond_3
    iget-boolean v4, p0, Lfreemarker/ext/servlet/FreemarkerServlet;->noCharsetInContentType:Z

    if-eqz v4, :cond_4

    .line 707
    new-instance v4, Ljava/lang/StringBuffer;

    invoke-direct {v4}, Ljava/lang/StringBuffer;-><init>()V

    iget-object v5, p0, Lfreemarker/ext/servlet/FreemarkerServlet;->contentType:Ljava/lang/String;

    invoke-virtual {v4, v5}, Ljava/lang/StringBuffer;->append(Ljava/lang/String;)Ljava/lang/StringBuffer;

    move-result-object v4

    const-string v5, "; charset="

    invoke-virtual {v4, v5}, Ljava/lang/StringBuffer;->append(Ljava/lang/String;)Ljava/lang/StringBuffer;

    move-result-object v4

    invoke-virtual {v2}, Lfreemarker/template/Template;->getEncoding()Ljava/lang/String;

    move-result-object v5

    invoke-virtual {v4, v5}, Ljava/lang/StringBuffer;->append(Ljava/lang/String;)Ljava/lang/StringBuffer;

    move-result-object v4

    invoke-virtual {v4}, Ljava/lang/StringBuffer;->toString()Ljava/lang/String;

    move-result-object v4

    invoke-interface {p2, v4}, Ljavax/servlet/http/HttpServletResponse;->setContentType(Ljava/lang/String;)V

    goto :goto_1

    .line 709
    :cond_4
    iget-object v4, p0, Lfreemarker/ext/servlet/FreemarkerServlet;->contentType:Ljava/lang/String;

    invoke-interface {p2, v4}, Ljavax/servlet/http/HttpServletResponse;->setContentType(Ljava/lang/String;)V

    .line 713
    :goto_1
    invoke-direct {p0, p2}, Lfreemarker/ext/servlet/FreemarkerServlet;->setBrowserCachingPolicy(Ljavax/servlet/http/HttpServletResponse;)V

    .line 715
    invoke-virtual {p0}, Lfreemarker/ext/servlet/FreemarkerServlet;->getServletContext()Ljavax/servlet/ServletContext;

    move-result-object v4

    .line 717
    .local v4, "servletContext":Ljavax/servlet/ServletContext;
    :try_start_2
    invoke-direct {p0}, Lfreemarker/ext/servlet/FreemarkerServlet;->logWarnOnObjectWrapperMismatch()V

    .line 719
    iget-object v5, p0, Lfreemarker/ext/servlet/FreemarkerServlet;->wrapper:Lfreemarker/template/ObjectWrapper;

    invoke-virtual {p0, v5, v4, p1, p2}, Lfreemarker/ext/servlet/FreemarkerServlet;->createModel(Lfreemarker/template/ObjectWrapper;Ljavax/servlet/ServletContext;Ljavax/servlet/http/HttpServletRequest;Ljavax/servlet/http/HttpServletResponse;)Lfreemarker/template/TemplateModel;

    move-result-object v5

    .line 722
    .local v5, "model":Lfreemarker/template/TemplateModel;
    invoke-virtual {p0, p1, p2, v2, v5}, Lfreemarker/ext/servlet/FreemarkerServlet;->preTemplateProcess(Ljavax/servlet/http/HttpServletRequest;Ljavax/servlet/http/HttpServletResponse;Lfreemarker/template/Template;Lfreemarker/template/TemplateModel;)Z

    move-result v6
    :try_end_2
    .catch Lfreemarker/template/TemplateException; {:try_start_2 .. :try_end_2} :catch_1

    if-eqz v6, :cond_5

    .line 725
    :try_start_3
    invoke-interface {p2}, Ljavax/servlet/http/HttpServletResponse;->getWriter()Ljava/io/PrintWriter;

    move-result-object v6

    invoke-virtual {v2, v5, v6}, Lfreemarker/template/Template;->process(Ljava/lang/Object;Ljava/io/Writer;)V
    :try_end_3
    .catchall {:try_start_3 .. :try_end_3} :catchall_0

    .line 728
    :try_start_4
    invoke-virtual {p0, p1, p2, v2, v5}, Lfreemarker/ext/servlet/FreemarkerServlet;->postTemplateProcess(Ljavax/servlet/http/HttpServletRequest;Ljavax/servlet/http/HttpServletResponse;Lfreemarker/template/Template;Lfreemarker/template/TemplateModel;)V

    .line 729
    goto :goto_2

    .line 728
    :catchall_0
    move-exception v6

    invoke-virtual {p0, p1, p2, v2, v5}, Lfreemarker/ext/servlet/FreemarkerServlet;->postTemplateProcess(Ljavax/servlet/http/HttpServletRequest;Ljavax/servlet/http/HttpServletResponse;Lfreemarker/template/Template;Lfreemarker/template/TemplateModel;)V

    .end local v0    # "templatePath":Ljava/lang/String;
    .end local v1    # "locale":Ljava/util/Locale;
    .end local v2    # "template":Lfreemarker/template/Template;
    .end local v3    # "attrContentType":Ljava/lang/Object;
    .end local v4    # "servletContext":Ljavax/servlet/ServletContext;
    .end local p1    # "request":Ljavax/servlet/http/HttpServletRequest;
    .end local p2    # "response":Ljavax/servlet/http/HttpServletResponse;
    throw v6
    :try_end_4
    .catch Lfreemarker/template/TemplateException; {:try_start_4 .. :try_end_4} :catch_1

    .line 739
    .end local v5    # "model":Lfreemarker/template/TemplateModel;
    .restart local v0    # "templatePath":Ljava/lang/String;
    .restart local v1    # "locale":Ljava/util/Locale;
    .restart local v2    # "template":Lfreemarker/template/Template;
    .restart local v3    # "attrContentType":Ljava/lang/Object;
    .restart local v4    # "servletContext":Ljavax/servlet/ServletContext;
    .restart local p1    # "request":Ljavax/servlet/http/HttpServletRequest;
    .restart local p2    # "response":Ljavax/servlet/http/HttpServletResponse;
    :cond_5
    :goto_2
    nop

    .line 740
    return-void

    .line 731
    :catch_1
    move-exception v5

    .line 732
    .local v5, "e":Lfreemarker/template/TemplateException;
    iget-object v6, p0, Lfreemarker/ext/servlet/FreemarkerServlet;->config:Lfreemarker/template/Configuration;

    invoke-virtual {v6}, Lfreemarker/template/Configuration;->getTemplateExceptionHandler()Lfreemarker/template/TemplateExceptionHandler;

    move-result-object v6

    .line 734
    .local v6, "teh":Lfreemarker/template/TemplateExceptionHandler;
    sget-object v7, Lfreemarker/template/TemplateExceptionHandler;->HTML_DEBUG_HANDLER:Lfreemarker/template/TemplateExceptionHandler;

    if-eq v6, v7, :cond_6

    sget-object v7, Lfreemarker/template/TemplateExceptionHandler;->DEBUG_HANDLER:Lfreemarker/template/TemplateExceptionHandler;

    if-eq v6, v7, :cond_6

    .line 735
    invoke-virtual {v6}, Ljava/lang/Object;->getClass()Ljava/lang/Class;

    move-result-object v7

    invoke-virtual {v7}, Ljava/lang/Class;->getName()Ljava/lang/String;

    move-result-object v7

    const-string v8, "Debug"

    invoke-virtual {v7, v8}, Ljava/lang/String;->indexOf(Ljava/lang/String;)I

    move-result v7

    const/4 v8, -0x1

    if-eq v7, v8, :cond_7

    .line 736
    :cond_6
    invoke-interface {p2}, Ljavax/servlet/http/HttpServletResponse;->flushBuffer()V

    .line 738
    :cond_7
    const-string v7, "Error executing FreeMarker template"

    invoke-direct {p0, v7, v5}, Lfreemarker/ext/servlet/FreemarkerServlet;->newServletExceptionWithFreeMarkerLogging(Ljava/lang/String;Ljava/lang/Throwable;)Ljavax/servlet/ServletException;

    move-result-object v7

    throw v7

    .line 697
    .end local v2    # "template":Lfreemarker/template/Template;
    .end local v3    # "attrContentType":Ljava/lang/Object;
    .end local v4    # "servletContext":Ljavax/servlet/ServletContext;
    .end local v5    # "e":Lfreemarker/template/TemplateException;
    .end local v6    # "teh":Lfreemarker/template/TemplateExceptionHandler;
    :catch_2
    move-exception v2

    .line 698
    .local v2, "e":Ljava/lang/Exception;
    new-instance v4, Ljava/lang/StringBuffer;

    invoke-direct {v4}, Ljava/lang/StringBuffer;-><init>()V

    const-string v5, "Unexpected error when loading template "

    invoke-virtual {v4, v5}, Ljava/lang/StringBuffer;->append(Ljava/lang/String;)Ljava/lang/StringBuffer;

    move-result-object v4

    .line 699
    invoke-static {v0}, Lfreemarker/template/utility/StringUtil;->jQuoteNoXSS(Ljava/lang/String;)Ljava/lang/String;

    move-result-object v5

    invoke-virtual {v4, v5}, Ljava/lang/StringBuffer;->append(Ljava/lang/String;)Ljava/lang/StringBuffer;

    move-result-object v4

    invoke-virtual {v4, v3}, Ljava/lang/StringBuffer;->append(Ljava/lang/String;)Ljava/lang/StringBuffer;

    move-result-object v3

    invoke-virtual {v3}, Ljava/lang/StringBuffer;->toString()Ljava/lang/String;

    move-result-object v3

    .line 698
    invoke-direct {p0, v3, v2}, Lfreemarker/ext/servlet/FreemarkerServlet;->newServletExceptionWithFreeMarkerLogging(Ljava/lang/String;Ljava/lang/Throwable;)Ljavax/servlet/ServletException;

    move-result-object v3

    throw v3

    .line 694
    .end local v2    # "e":Ljava/lang/Exception;
    :catch_3
    move-exception v2

    .line 695
    .local v2, "e":Lfreemarker/core/ParseException;
    new-instance v4, Ljava/lang/StringBuffer;

    invoke-direct {v4}, Ljava/lang/StringBuffer;-><init>()V

    const-string v5, "Parsing error with template "

    invoke-virtual {v4, v5}, Ljava/lang/StringBuffer;->append(Ljava/lang/String;)Ljava/lang/StringBuffer;

    move-result-object v4

    .line 696
    invoke-static {v0}, Lfreemarker/template/utility/StringUtil;->jQuoteNoXSS(Ljava/lang/String;)Ljava/lang/String;

    move-result-object v5

    invoke-virtual {v4, v5}, Ljava/lang/StringBuffer;->append(Ljava/lang/String;)Ljava/lang/StringBuffer;

    move-result-object v4

    invoke-virtual {v4, v3}, Ljava/lang/StringBuffer;->append(Ljava/lang/String;)Ljava/lang/StringBuffer;

    move-result-object v3

    invoke-virtual {v3}, Ljava/lang/StringBuffer;->toString()Ljava/lang/String;

    move-result-object v3

    .line 695
    invoke-direct {p0, v3, v2}, Lfreemarker/ext/servlet/FreemarkerServlet;->newServletExceptionWithFreeMarkerLogging(Ljava/lang/String;Ljava/lang/Throwable;)Ljavax/servlet/ServletException;

    move-result-object v3

    throw v3

    .line 682
    .end local v2    # "e":Lfreemarker/core/ParseException;
    :catch_4
    move-exception v2

    .line 683
    .local v2, "e":Lfreemarker/template/TemplateNotFoundException;
    iget-boolean v4, p0, Lfreemarker/ext/servlet/FreemarkerServlet;->exceptionOnMissingTemplate:Z

    if-nez v4, :cond_9

    .line 687
    sget-object v4, Lfreemarker/ext/servlet/FreemarkerServlet;->LOG:Lfreemarker/log/Logger;

    invoke-virtual {v4}, Lfreemarker/log/Logger;->isDebugEnabled()Z

    move-result v5

    if-eqz v5, :cond_8

    .line 688
    new-instance v5, Ljava/lang/StringBuffer;

    invoke-direct {v5}, Ljava/lang/StringBuffer;-><init>()V

    const-string v6, "Responding HTTP 404 \"Not found\" for missing template "

    invoke-virtual {v5, v6}, Ljava/lang/StringBuffer;->append(Ljava/lang/String;)Ljava/lang/StringBuffer;

    move-result-object v5

    .line 689
    invoke-static {v0}, Lfreemarker/template/utility/StringUtil;->jQuoteNoXSS(Ljava/lang/String;)Ljava/lang/String;

    move-result-object v6

    invoke-virtual {v5, v6}, Ljava/lang/StringBuffer;->append(Ljava/lang/String;)Ljava/lang/StringBuffer;

    move-result-object v5

    invoke-virtual {v5, v3}, Ljava/lang/StringBuffer;->append(Ljava/lang/String;)Ljava/lang/StringBuffer;

    move-result-object v3

    invoke-virtual {v3}, Ljava/lang/StringBuffer;->toString()Ljava/lang/String;

    move-result-object v3

    .line 688
    invoke-virtual {v4, v3, v2}, Lfreemarker/log/Logger;->debug(Ljava/lang/String;Ljava/lang/Throwable;)V

    .line 691
    :cond_8
    const/16 v3, 0x194

    const-string v4, "Page template not found"

    invoke-interface {p2, v3, v4}, Ljavax/servlet/http/HttpServletResponse;->sendError(ILjava/lang/String;)V

    .line 692
    return-void

    .line 684
    :cond_9
    new-instance v4, Ljava/lang/StringBuffer;

    invoke-direct {v4}, Ljava/lang/StringBuffer;-><init>()V

    const-string v5, "Template not found for name "

    invoke-virtual {v4, v5}, Ljava/lang/StringBuffer;->append(Ljava/lang/String;)Ljava/lang/StringBuffer;

    move-result-object v4

    .line 685
    invoke-static {v0}, Lfreemarker/template/utility/StringUtil;->jQuoteNoXSS(Ljava/lang/String;)Ljava/lang/String;

    move-result-object v5

    invoke-virtual {v4, v5}, Ljava/lang/StringBuffer;->append(Ljava/lang/String;)Ljava/lang/StringBuffer;

    move-result-object v4

    invoke-virtual {v4, v3}, Ljava/lang/StringBuffer;->append(Ljava/lang/String;)Ljava/lang/StringBuffer;

    move-result-object v3

    invoke-virtual {v3}, Ljava/lang/StringBuffer;->toString()Ljava/lang/String;

    move-result-object v3

    .line 684
    invoke-direct {p0, v3, v2}, Lfreemarker/ext/servlet/FreemarkerServlet;->newServletExceptionWithFreeMarkerLogging(Ljava/lang/String;Ljava/lang/Throwable;)Ljavax/servlet/ServletException;

    move-result-object v3

    throw v3
.end method

.method private setBrowserCachingPolicy(Ljavax/servlet/http/HttpServletResponse;)V
    .locals 2
    .param p1, "res"    # Ljavax/servlet/http/HttpServletResponse;

    .line 1275
    iget-boolean v0, p0, Lfreemarker/ext/servlet/FreemarkerServlet;->noCache:Z

    if-eqz v0, :cond_0

    .line 1278
    const-string v0, "Cache-Control"

    const-string v1, "no-store, no-cache, must-revalidate, post-check=0, pre-check=0"

    invoke-interface {p1, v0, v1}, Ljavax/servlet/http/HttpServletResponse;->setHeader(Ljava/lang/String;Ljava/lang/String;)V

    .line 1281
    const-string v0, "Pragma"

    const-string v1, "no-cache"

    invoke-interface {p1, v0, v1}, Ljavax/servlet/http/HttpServletResponse;->setHeader(Ljava/lang/String;Ljava/lang/String;)V

    .line 1283
    sget-object v0, Lfreemarker/ext/servlet/FreemarkerServlet;->EXPIRATION_DATE:Ljava/lang/String;

    const-string v1, "Expires"

    invoke-interface {p1, v1, v0}, Ljavax/servlet/http/HttpServletResponse;->setHeader(Ljava/lang/String;Ljava/lang/String;)V

    .line 1285
    :cond_0
    return-void
.end method


# virtual methods
.method protected createConfiguration()Lfreemarker/template/Configuration;
    .locals 1

    .line 1060
    new-instance v0, Lfreemarker/template/Configuration;

    invoke-direct {v0}, Lfreemarker/template/Configuration;-><init>()V

    return-object v0
.end method

.method protected createDefaultClassPathTlds()Ljava/util/List;
    .locals 1

    .line 962
    sget-object v0, Lfreemarker/ext/jsp/TaglibFactory;->DEFAULT_CLASSPATH_TLDS:Ljava/util/List;

    return-object v0
.end method

.method protected createDefaultMetaInfTldSources()Ljava/util/List;
    .locals 1

    .line 977
    sget-object v0, Lfreemarker/ext/jsp/TaglibFactory;->DEFAULT_META_INF_TLD_SOURCES:Ljava/util/List;

    return-object v0
.end method

.method protected createDefaultObjectWrapper()Lfreemarker/template/ObjectWrapper;
    .locals 1

    .line 1150
    iget-object v0, p0, Lfreemarker/ext/servlet/FreemarkerServlet;->config:Lfreemarker/template/Configuration;

    invoke-virtual {v0}, Lfreemarker/template/Configuration;->getIncompatibleImprovements()Lfreemarker/template/Version;

    move-result-object v0

    invoke-static {v0}, Lfreemarker/template/Configuration;->getDefaultObjectWrapper(Lfreemarker/template/Version;)Lfreemarker/template/ObjectWrapper;

    move-result-object v0

    return-object v0
.end method

.method protected createModel(Lfreemarker/template/ObjectWrapper;Ljavax/servlet/ServletContext;Ljavax/servlet/http/HttpServletRequest;Ljavax/servlet/http/HttpServletResponse;)Lfreemarker/template/TemplateModel;
    .locals 8
    .param p1, "objectWrapper"    # Lfreemarker/template/ObjectWrapper;
    .param p2, "servletContext"    # Ljavax/servlet/ServletContext;
    .param p3, "request"    # Ljavax/servlet/http/HttpServletRequest;
    .param p4, "response"    # Ljavax/servlet/http/HttpServletResponse;
    .annotation system Ldalvik/annotation/Throws;
        value = {
            Lfreemarker/template/TemplateModelException;
        }
    .end annotation

    .line 803
    :try_start_0
    new-instance v0, Lfreemarker/ext/servlet/AllHttpScopesHashModel;

    invoke-direct {v0, p1, p2, p3}, Lfreemarker/ext/servlet/AllHttpScopesHashModel;-><init>(Lfreemarker/template/ObjectWrapper;Ljavax/servlet/ServletContext;Ljavax/servlet/http/HttpServletRequest;)V

    .line 808
    .local v0, "params":Lfreemarker/ext/servlet/AllHttpScopesHashModel;
    iget-object v1, p0, Lfreemarker/ext/servlet/FreemarkerServlet;->lazyInitFieldsLock:Ljava/lang/Object;

    monitor-enter v1
    :try_end_0
    .catch Ljavax/servlet/ServletException; {:try_start_0 .. :try_end_0} :catch_1
    .catch Ljava/io/IOException; {:try_start_0 .. :try_end_0} :catch_0

    .line 809
    const/4 v2, 0x0

    :try_start_1
    iget-object v3, p0, Lfreemarker/ext/servlet/FreemarkerServlet;->servletContextModel:Lfreemarker/ext/servlet/ServletContextHashModel;

    if-nez v3, :cond_0

    .line 810
    new-instance v3, Lfreemarker/ext/servlet/ServletContextHashModel;

    invoke-direct {v3, p0, p1}, Lfreemarker/ext/servlet/ServletContextHashModel;-><init>(Ljavax/servlet/GenericServlet;Lfreemarker/template/ObjectWrapper;)V
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_1

    .line 811
    .local v3, "servletContextModel":Lfreemarker/ext/servlet/ServletContextHashModel;
    :try_start_2
    invoke-virtual {p0, p1, p2}, Lfreemarker/ext/servlet/FreemarkerServlet;->createTaglibFactory(Lfreemarker/template/ObjectWrapper;Ljavax/servlet/ServletContext;)Lfreemarker/ext/jsp/TaglibFactory;

    move-result-object v2
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_0

    .line 814
    .local v2, "taglibFactory":Lfreemarker/ext/jsp/TaglibFactory;
    :try_start_3
    const-string v4, ".freemarker.Application"

    invoke-interface {p2, v4, v3}, Ljavax/servlet/ServletContext;->setAttribute(Ljava/lang/String;Ljava/lang/Object;)V

    .line 815
    const-string v4, ".freemarker.JspTaglibs"

    invoke-interface {p2, v4, v2}, Ljavax/servlet/ServletContext;->setAttribute(Ljava/lang/String;Ljava/lang/Object;)V

    .line 817
    invoke-virtual {p0, p3, p4}, Lfreemarker/ext/servlet/FreemarkerServlet;->initializeServletContext(Ljavax/servlet/http/HttpServletRequest;Ljavax/servlet/http/HttpServletResponse;)V

    .line 819
    iput-object v2, p0, Lfreemarker/ext/servlet/FreemarkerServlet;->taglibFactory:Lfreemarker/ext/jsp/TaglibFactory;

    .line 820
    iput-object v3, p0, Lfreemarker/ext/servlet/FreemarkerServlet;->servletContextModel:Lfreemarker/ext/servlet/ServletContextHashModel;
    :try_end_3
    .catchall {:try_start_3 .. :try_end_3} :catchall_2

    goto :goto_0

    .line 822
    .end local v2    # "taglibFactory":Lfreemarker/ext/jsp/TaglibFactory;
    .end local v3    # "servletContextModel":Lfreemarker/ext/servlet/ServletContextHashModel;
    :cond_0
    nop

    .line 823
    .restart local v3    # "servletContextModel":Lfreemarker/ext/servlet/ServletContextHashModel;
    :try_start_4
    iget-object v2, p0, Lfreemarker/ext/servlet/FreemarkerServlet;->taglibFactory:Lfreemarker/ext/jsp/TaglibFactory;
    :try_end_4
    .catchall {:try_start_4 .. :try_end_4} :catchall_0

    .line 825
    .restart local v2    # "taglibFactory":Lfreemarker/ext/jsp/TaglibFactory;
    :goto_0
    :try_start_5
    monitor-exit v1
    :try_end_5
    .catchall {:try_start_5 .. :try_end_5} :catchall_2

    .line 827
    :try_start_6
    const-string v1, "Application"

    invoke-virtual {v0, v1, v3}, Lfreemarker/ext/servlet/AllHttpScopesHashModel;->putUnlistedModel(Ljava/lang/String;Lfreemarker/template/TemplateModel;)V

    .line 828
    const-string v1, "__FreeMarkerServlet.Application__"

    invoke-virtual {v0, v1, v3}, Lfreemarker/ext/servlet/AllHttpScopesHashModel;->putUnlistedModel(Ljava/lang/String;Lfreemarker/template/TemplateModel;)V

    .line 829
    const-string v1, "JspTaglibs"

    invoke-virtual {v0, v1, v2}, Lfreemarker/ext/servlet/AllHttpScopesHashModel;->putUnlistedModel(Ljava/lang/String;Lfreemarker/template/TemplateModel;)V

    .line 832
    const/4 v1, 0x0

    invoke-interface {p3, v1}, Ljavax/servlet/http/HttpServletRequest;->getSession(Z)Ljavax/servlet/http/HttpSession;

    move-result-object v1

    .line 833
    .local v1, "session":Ljavax/servlet/http/HttpSession;
    if-eqz v1, :cond_2

    .line 834
    const-string v4, ".freemarker.Session"

    invoke-interface {v1, v4}, Ljavax/servlet/http/HttpSession;->getAttribute(Ljava/lang/String;)Ljava/lang/Object;

    move-result-object v4

    check-cast v4, Lfreemarker/ext/servlet/HttpSessionHashModel;

    .line 835
    .local v4, "sessionModel":Lfreemarker/ext/servlet/HttpSessionHashModel;
    if-eqz v4, :cond_1

    invoke-virtual {v4, v1}, Lfreemarker/ext/servlet/HttpSessionHashModel;->isOrphaned(Ljavax/servlet/http/HttpSession;)Z

    move-result v5

    if-eqz v5, :cond_3

    .line 836
    :cond_1
    new-instance v5, Lfreemarker/ext/servlet/HttpSessionHashModel;

    invoke-direct {v5, v1, p1}, Lfreemarker/ext/servlet/HttpSessionHashModel;-><init>(Ljavax/servlet/http/HttpSession;Lfreemarker/template/ObjectWrapper;)V

    move-object v4, v5

    .line 837
    invoke-virtual {p0, p3, p4, v4, v1}, Lfreemarker/ext/servlet/FreemarkerServlet;->initializeSessionAndInstallModel(Ljavax/servlet/http/HttpServletRequest;Ljavax/servlet/http/HttpServletResponse;Lfreemarker/ext/servlet/HttpSessionHashModel;Ljavax/servlet/http/HttpSession;)V

    goto :goto_1

    .line 842
    .end local v4    # "sessionModel":Lfreemarker/ext/servlet/HttpSessionHashModel;
    :cond_2
    new-instance v4, Lfreemarker/ext/servlet/HttpSessionHashModel;

    invoke-direct {v4, p0, p3, p4, p1}, Lfreemarker/ext/servlet/HttpSessionHashModel;-><init>(Lfreemarker/ext/servlet/FreemarkerServlet;Ljavax/servlet/http/HttpServletRequest;Ljavax/servlet/http/HttpServletResponse;Lfreemarker/template/ObjectWrapper;)V

    .line 844
    .restart local v4    # "sessionModel":Lfreemarker/ext/servlet/HttpSessionHashModel;
    :cond_3
    :goto_1
    const-string v5, "Session"

    invoke-virtual {v0, v5, v4}, Lfreemarker/ext/servlet/AllHttpScopesHashModel;->putUnlistedModel(Ljava/lang/String;Lfreemarker/template/TemplateModel;)V

    .line 847
    const-string v5, ".freemarker.Request"

    .line 848
    invoke-interface {p3, v5}, Ljavax/servlet/http/HttpServletRequest;->getAttribute(Ljava/lang/String;)Ljava/lang/Object;

    move-result-object v5

    check-cast v5, Lfreemarker/ext/servlet/HttpRequestHashModel;

    .line 849
    .local v5, "requestModel":Lfreemarker/ext/servlet/HttpRequestHashModel;
    if-eqz v5, :cond_4

    invoke-virtual {v5}, Lfreemarker/ext/servlet/HttpRequestHashModel;->getRequest()Ljavax/servlet/http/HttpServletRequest;

    move-result-object v6

    if-eq v6, p3, :cond_5

    .line 851
    :cond_4
    new-instance v6, Lfreemarker/ext/servlet/HttpRequestHashModel;

    invoke-direct {v6, p3, p4, p1}, Lfreemarker/ext/servlet/HttpRequestHashModel;-><init>(Ljavax/servlet/http/HttpServletRequest;Ljavax/servlet/http/HttpServletResponse;Lfreemarker/template/ObjectWrapper;)V

    move-object v5, v6

    .line 852
    const-string v6, ".freemarker.Request"

    invoke-interface {p3, v6, v5}, Ljavax/servlet/http/HttpServletRequest;->setAttribute(Ljava/lang/String;Ljava/lang/Object;)V

    .line 853
    const-string v6, ".freemarker.RequestParameters"

    .line 855
    invoke-virtual {p0, p3}, Lfreemarker/ext/servlet/FreemarkerServlet;->createRequestParametersHashModel(Ljavax/servlet/http/HttpServletRequest;)Lfreemarker/ext/servlet/HttpRequestParametersHashModel;

    move-result-object v7

    .line 853
    invoke-interface {p3, v6, v7}, Ljavax/servlet/http/HttpServletRequest;->setAttribute(Ljava/lang/String;Ljava/lang/Object;)V

    .line 857
    :cond_5
    const-string v6, "Request"

    invoke-virtual {v0, v6, v5}, Lfreemarker/ext/servlet/AllHttpScopesHashModel;->putUnlistedModel(Ljava/lang/String;Lfreemarker/template/TemplateModel;)V

    .line 858
    const-string v6, "include_page"

    new-instance v7, Lfreemarker/ext/servlet/IncludePage;

    invoke-direct {v7, p3, p4}, Lfreemarker/ext/servlet/IncludePage;-><init>(Ljavax/servlet/http/HttpServletRequest;Ljavax/servlet/http/HttpServletResponse;)V

    invoke-virtual {v0, v6, v7}, Lfreemarker/ext/servlet/AllHttpScopesHashModel;->putUnlistedModel(Ljava/lang/String;Lfreemarker/template/TemplateModel;)V

    .line 859
    const-string v6, "__FreeMarkerServlet.Request__"

    invoke-virtual {v0, v6, v5}, Lfreemarker/ext/servlet/AllHttpScopesHashModel;->putUnlistedModel(Ljava/lang/String;Lfreemarker/template/TemplateModel;)V

    .line 862
    const-string v6, ".freemarker.RequestParameters"

    .line 863
    invoke-interface {p3, v6}, Ljavax/servlet/http/HttpServletRequest;->getAttribute(Ljava/lang/String;)Ljava/lang/Object;

    move-result-object v6

    check-cast v6, Lfreemarker/ext/servlet/HttpRequestParametersHashModel;

    .line 865
    .local v6, "requestParametersModel":Lfreemarker/ext/servlet/HttpRequestParametersHashModel;
    const-string v7, "RequestParameters"

    invoke-virtual {v0, v7, v6}, Lfreemarker/ext/servlet/AllHttpScopesHashModel;->putUnlistedModel(Ljava/lang/String;Lfreemarker/template/TemplateModel;)V
    :try_end_6
    .catch Ljavax/servlet/ServletException; {:try_start_6 .. :try_end_6} :catch_1
    .catch Ljava/io/IOException; {:try_start_6 .. :try_end_6} :catch_0

    .line 866
    return-object v0

    .line 825
    .end local v1    # "session":Ljavax/servlet/http/HttpSession;
    .end local v2    # "taglibFactory":Lfreemarker/ext/jsp/TaglibFactory;
    .end local v4    # "sessionModel":Lfreemarker/ext/servlet/HttpSessionHashModel;
    .end local v5    # "requestModel":Lfreemarker/ext/servlet/HttpRequestHashModel;
    .end local v6    # "requestParametersModel":Lfreemarker/ext/servlet/HttpRequestParametersHashModel;
    :catchall_0
    move-exception v4

    goto :goto_2

    .end local v3    # "servletContextModel":Lfreemarker/ext/servlet/ServletContextHashModel;
    :catchall_1
    move-exception v4

    move-object v3, v2

    .restart local v2    # "taglibFactory":Lfreemarker/ext/jsp/TaglibFactory;
    .restart local v3    # "servletContextModel":Lfreemarker/ext/servlet/ServletContextHashModel;
    :goto_2
    :try_start_7
    monitor-exit v1
    :try_end_7
    .catchall {:try_start_7 .. :try_end_7} :catchall_2

    .end local p1    # "objectWrapper":Lfreemarker/template/ObjectWrapper;
    .end local p2    # "servletContext":Ljavax/servlet/ServletContext;
    .end local p3    # "request":Ljavax/servlet/http/HttpServletRequest;
    .end local p4    # "response":Ljavax/servlet/http/HttpServletResponse;
    :try_start_8
    throw v4
    :try_end_8
    .catch Ljavax/servlet/ServletException; {:try_start_8 .. :try_end_8} :catch_1
    .catch Ljava/io/IOException; {:try_start_8 .. :try_end_8} :catch_0

    .restart local p1    # "objectWrapper":Lfreemarker/template/ObjectWrapper;
    .restart local p2    # "servletContext":Ljavax/servlet/ServletContext;
    .restart local p3    # "request":Ljavax/servlet/http/HttpServletRequest;
    .restart local p4    # "response":Ljavax/servlet/http/HttpServletResponse;
    :catchall_2
    move-exception v4

    goto :goto_2

    .line 869
    .end local v0    # "params":Lfreemarker/ext/servlet/AllHttpScopesHashModel;
    .end local v2    # "taglibFactory":Lfreemarker/ext/jsp/TaglibFactory;
    .end local v3    # "servletContextModel":Lfreemarker/ext/servlet/ServletContextHashModel;
    :catch_0
    move-exception v0

    .line 870
    .local v0, "e":Ljava/io/IOException;
    new-instance v1, Lfreemarker/template/TemplateModelException;

    invoke-direct {v1, v0}, Lfreemarker/template/TemplateModelException;-><init>(Ljava/lang/Exception;)V

    throw v1

    .line 867
    .end local v0    # "e":Ljava/io/IOException;
    :catch_1
    move-exception v0

    .line 868
    .local v0, "e":Ljavax/servlet/ServletException;
    new-instance v1, Lfreemarker/template/TemplateModelException;

    invoke-direct {v1, v0}, Lfreemarker/template/TemplateModelException;-><init>(Ljava/lang/Exception;)V

    throw v1
.end method

.method protected createObjectWrapper()Lfreemarker/template/ObjectWrapper;
    .locals 4

    .line 1089
    invoke-virtual {p0}, Lfreemarker/ext/servlet/FreemarkerServlet;->getServletConfig()Ljavax/servlet/ServletConfig;

    move-result-object v0

    const-string v1, "ObjectWrapper"

    invoke-interface {v0, v1}, Ljavax/servlet/ServletConfig;->getInitParameter(Ljava/lang/String;)Ljava/lang/String;

    move-result-object v0

    .line 1090
    .local v0, "wrapper":Ljava/lang/String;
    const-string v1, "object_wrapper"

    if-eqz v0, :cond_4

    .line 1091
    invoke-virtual {p0, v1}, Lfreemarker/ext/servlet/FreemarkerServlet;->getInitParameter(Ljava/lang/String;)Ljava/lang/String;

    move-result-object v1

    if-nez v1, :cond_3

    .line 1096
    const-string v1, "beans"

    invoke-virtual {v1, v0}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v1

    if-eqz v1, :cond_0

    .line 1097
    sget-object v1, Lfreemarker/template/ObjectWrapper;->BEANS_WRAPPER:Lfreemarker/template/ObjectWrapper;

    return-object v1

    .line 1099
    :cond_0
    const-string v1, "simple"

    invoke-virtual {v1, v0}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v1

    if-eqz v1, :cond_1

    .line 1100
    sget-object v1, Lfreemarker/template/ObjectWrapper;->SIMPLE_WRAPPER:Lfreemarker/template/ObjectWrapper;

    return-object v1

    .line 1102
    :cond_1
    const-string v1, "jython"

    invoke-virtual {v1, v0}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v1

    if-eqz v1, :cond_2

    .line 1105
    :try_start_0
    const-string v1, "freemarker.ext.jython.JythonWrapper"

    invoke-static {v1}, Ljava/lang/Class;->forName(Ljava/lang/String;)Ljava/lang/Class;

    move-result-object v1

    .line 1106
    invoke-virtual {v1}, Ljava/lang/Class;->newInstance()Ljava/lang/Object;

    move-result-object v1

    check-cast v1, Lfreemarker/template/ObjectWrapper;
    :try_end_0
    .catch Ljava/lang/InstantiationException; {:try_start_0 .. :try_end_0} :catch_2
    .catch Ljava/lang/IllegalAccessException; {:try_start_0 .. :try_end_0} :catch_1
    .catch Ljava/lang/ClassNotFoundException; {:try_start_0 .. :try_end_0} :catch_0

    return-object v1

    .line 1111
    :catch_0
    move-exception v1

    .line 1112
    .local v1, "e":Ljava/lang/ClassNotFoundException;
    new-instance v2, Ljava/lang/NoClassDefFoundError;

    invoke-virtual {v1}, Ljava/lang/ClassNotFoundException;->getMessage()Ljava/lang/String;

    move-result-object v3

    invoke-direct {v2, v3}, Ljava/lang/NoClassDefFoundError;-><init>(Ljava/lang/String;)V

    throw v2

    .line 1109
    .end local v1    # "e":Ljava/lang/ClassNotFoundException;
    :catch_1
    move-exception v1

    .line 1110
    .local v1, "e":Ljava/lang/IllegalAccessException;
    new-instance v2, Ljava/lang/IllegalAccessError;

    invoke-virtual {v1}, Ljava/lang/IllegalAccessException;->getMessage()Ljava/lang/String;

    move-result-object v3

    invoke-direct {v2, v3}, Ljava/lang/IllegalAccessError;-><init>(Ljava/lang/String;)V

    throw v2

    .line 1107
    .end local v1    # "e":Ljava/lang/IllegalAccessException;
    :catch_2
    move-exception v1

    .line 1108
    .local v1, "e":Ljava/lang/InstantiationException;
    new-instance v2, Ljava/lang/InstantiationError;

    invoke-virtual {v1}, Ljava/lang/InstantiationException;->getMessage()Ljava/lang/String;

    move-result-object v3

    invoke-direct {v2, v3}, Ljava/lang/InstantiationError;-><init>(Ljava/lang/String;)V

    throw v2

    .line 1115
    .end local v1    # "e":Ljava/lang/InstantiationException;
    :cond_2
    invoke-virtual {p0}, Lfreemarker/ext/servlet/FreemarkerServlet;->createDefaultObjectWrapper()Lfreemarker/template/ObjectWrapper;

    move-result-object v1

    return-object v1

    .line 1092
    :cond_3
    new-instance v1, Ljava/lang/RuntimeException;

    const-string v2, "Conflicting init-params: object_wrapper and ObjectWrapper"

    invoke-direct {v1, v2}, Ljava/lang/RuntimeException;-><init>(Ljava/lang/String;)V

    throw v1

    .line 1117
    :cond_4
    invoke-virtual {p0, v1}, Lfreemarker/ext/servlet/FreemarkerServlet;->getInitParameter(Ljava/lang/String;)Ljava/lang/String;

    move-result-object v0

    .line 1118
    if-nez v0, :cond_6

    .line 1119
    iget-object v1, p0, Lfreemarker/ext/servlet/FreemarkerServlet;->config:Lfreemarker/template/Configuration;

    invoke-virtual {v1}, Lfreemarker/template/Configuration;->isObjectWrapperExplicitlySet()Z

    move-result v1

    if-nez v1, :cond_5

    .line 1120
    invoke-virtual {p0}, Lfreemarker/ext/servlet/FreemarkerServlet;->createDefaultObjectWrapper()Lfreemarker/template/ObjectWrapper;

    move-result-object v1

    return-object v1

    .line 1122
    :cond_5
    iget-object v1, p0, Lfreemarker/ext/servlet/FreemarkerServlet;->config:Lfreemarker/template/Configuration;

    invoke-virtual {v1}, Lfreemarker/template/Configuration;->getObjectWrapper()Lfreemarker/template/ObjectWrapper;

    move-result-object v1

    return-object v1

    .line 1126
    :cond_6
    :try_start_1
    iget-object v2, p0, Lfreemarker/ext/servlet/FreemarkerServlet;->config:Lfreemarker/template/Configuration;

    invoke-virtual {v2, v1, v0}, Lfreemarker/template/Configuration;->setSetting(Ljava/lang/String;Ljava/lang/String;)V
    :try_end_1
    .catch Lfreemarker/template/TemplateException; {:try_start_1 .. :try_end_1} :catch_3

    .line 1129
    nop

    .line 1130
    iget-object v1, p0, Lfreemarker/ext/servlet/FreemarkerServlet;->config:Lfreemarker/template/Configuration;

    invoke-virtual {v1}, Lfreemarker/template/Configuration;->getObjectWrapper()Lfreemarker/template/ObjectWrapper;

    move-result-object v1

    return-object v1

    .line 1127
    :catch_3
    move-exception v1

    .line 1128
    .local v1, "e":Lfreemarker/template/TemplateException;
    new-instance v2, Ljava/lang/RuntimeException;

    const-string v3, "Failed to set object_wrapper"

    invoke-direct {v2, v3, v1}, Ljava/lang/RuntimeException;-><init>(Ljava/lang/String;Ljava/lang/Throwable;)V

    throw v2
.end method

.method protected createRequestParametersHashModel(Ljavax/servlet/http/HttpServletRequest;)Lfreemarker/ext/servlet/HttpRequestParametersHashModel;
    .locals 1
    .param p1, "request"    # Ljavax/servlet/http/HttpServletRequest;

    .line 1172
    new-instance v0, Lfreemarker/ext/servlet/HttpRequestParametersHashModel;

    invoke-direct {v0, p1}, Lfreemarker/ext/servlet/HttpRequestParametersHashModel;-><init>(Ljavax/servlet/http/HttpServletRequest;)V

    return-object v0
.end method

.method protected createTaglibFactory(Lfreemarker/template/ObjectWrapper;Ljavax/servlet/ServletContext;)Lfreemarker/ext/jsp/TaglibFactory;
    .locals 8
    .param p1, "objectWrapper"    # Lfreemarker/template/ObjectWrapper;
    .param p2, "servletContext"    # Ljavax/servlet/ServletContext;
    .annotation system Ldalvik/annotation/Throws;
        value = {
            Lfreemarker/template/TemplateModelException;
        }
    .end annotation

    .line 883
    new-instance v0, Lfreemarker/ext/jsp/TaglibFactory;

    invoke-direct {v0, p2}, Lfreemarker/ext/jsp/TaglibFactory;-><init>(Ljavax/servlet/ServletContext;)V

    .line 885
    .local v0, "taglibFactory":Lfreemarker/ext/jsp/TaglibFactory;
    invoke-virtual {v0, p1}, Lfreemarker/ext/jsp/TaglibFactory;->setObjectWrapper(Lfreemarker/template/ObjectWrapper;)V

    .line 888
    new-instance v1, Ljava/util/ArrayList;

    invoke-direct {v1}, Ljava/util/ArrayList;-><init>()V

    .line 890
    .local v1, "mergedMetaInfTldSources":Ljava/util/List;
    iget-object v2, p0, Lfreemarker/ext/servlet/FreemarkerServlet;->metaInfTldSources:Ljava/util/List;

    if-eqz v2, :cond_0

    .line 891
    invoke-interface {v1, v2}, Ljava/util/List;->addAll(Ljava/util/Collection;)Z

    .line 894
    :cond_0
    const-string v2, "org.freemarker.jsp.metaInfTldSources"

    const/4 v3, 0x0

    invoke-static {v2, v3}, Lfreemarker/template/utility/SecurityUtilities;->getSystemProperty(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;

    move-result-object v2

    .line 895
    .local v2, "sysPropVal":Ljava/lang/String;
    if-eqz v2, :cond_2

    .line 897
    :try_start_0
    invoke-direct {p0, v2}, Lfreemarker/ext/servlet/FreemarkerServlet;->parseAsMetaInfTldLocations(Ljava/lang/String;)Ljava/util/List;

    move-result-object v4

    .line 898
    .local v4, "metaInfTldSourcesSysProp":Ljava/util/List;
    if-eqz v4, :cond_1

    .line 899
    invoke-interface {v1, v4}, Ljava/util/List;->addAll(Ljava/util/Collection;)Z
    :try_end_0
    .catch Ljava/text/ParseException; {:try_start_0 .. :try_end_0} :catch_0

    .line 904
    .end local v4    # "metaInfTldSourcesSysProp":Ljava/util/List;
    :cond_1
    goto :goto_0

    .line 901
    :catch_0
    move-exception v3

    .line 902
    .local v3, "e":Ljava/text/ParseException;
    new-instance v4, Lfreemarker/template/TemplateModelException;

    const-string v5, "Failed to parse system property \"org.freemarker.jsp.metaInfTldSources\""

    invoke-direct {v4, v5, v3}, Lfreemarker/template/TemplateModelException;-><init>(Ljava/lang/String;Ljava/lang/Exception;)V

    throw v4

    .line 907
    .end local v3    # "e":Ljava/text/ParseException;
    :cond_2
    :goto_0
    const/4 v4, 0x0

    .line 909
    .local v4, "jettyTaglibJarPatterns":Ljava/util/List;
    :try_start_1
    const-string v5, "org.eclipse.jetty.server.webapp.ContainerIncludeJarPattern"

    invoke-interface {p2, v5}, Ljavax/servlet/ServletContext;->getAttribute(Ljava/lang/String;)Ljava/lang/Object;

    move-result-object v5

    check-cast v5, Ljava/lang/String;

    .line 910
    .local v5, "attrVal":Ljava/lang/String;
    if-eqz v5, :cond_3

    invoke-static {v5}, Lfreemarker/ext/servlet/InitParamParser;->parseCommaSeparatedPatterns(Ljava/lang/String;)Ljava/util/List;

    move-result-object v6
    :try_end_1
    .catch Ljava/lang/Exception; {:try_start_1 .. :try_end_1} :catch_1

    goto :goto_1

    :cond_3
    move-object v6, v3

    :goto_1
    move-object v4, v6

    .line 914
    .end local v5    # "attrVal":Ljava/lang/String;
    goto :goto_2

    .line 911
    :catch_1
    move-exception v5

    .line 912
    .local v5, "e":Ljava/lang/Exception;
    sget-object v6, Lfreemarker/ext/servlet/FreemarkerServlet;->LOG:Lfreemarker/log/Logger;

    const-string v7, "Failed to parse application context attribute \"org.eclipse.jetty.server.webapp.ContainerIncludeJarPattern\" - it will be ignored"

    invoke-virtual {v6, v7, v5}, Lfreemarker/log/Logger;->error(Ljava/lang/String;Ljava/lang/Throwable;)V

    .line 915
    .end local v5    # "e":Ljava/lang/Exception;
    :goto_2
    if-eqz v4, :cond_4

    .line 916
    invoke-interface {v4}, Ljava/util/List;->iterator()Ljava/util/Iterator;

    move-result-object v5

    .local v5, "it":Ljava/util/Iterator;
    :goto_3
    invoke-interface {v5}, Ljava/util/Iterator;->hasNext()Z

    move-result v6

    if-eqz v6, :cond_4

    .line 917
    invoke-interface {v5}, Ljava/util/Iterator;->next()Ljava/lang/Object;

    move-result-object v6

    check-cast v6, Ljava/util/regex/Pattern;

    .line 918
    .local v6, "pattern":Ljava/util/regex/Pattern;
    new-instance v7, Lfreemarker/ext/jsp/TaglibFactory$ClasspathMetaInfTldSource;

    invoke-direct {v7, v6}, Lfreemarker/ext/jsp/TaglibFactory$ClasspathMetaInfTldSource;-><init>(Ljava/util/regex/Pattern;)V

    invoke-interface {v1, v7}, Ljava/util/List;->add(Ljava/lang/Object;)Z

    .line 919
    .end local v6    # "pattern":Ljava/util/regex/Pattern;
    goto :goto_3

    .line 922
    .end local v5    # "it":Ljava/util/Iterator;
    :cond_4
    invoke-virtual {v0, v1}, Lfreemarker/ext/jsp/TaglibFactory;->setMetaInfTldSources(Ljava/util/List;)V

    .line 926
    .end local v1    # "mergedMetaInfTldSources":Ljava/util/List;
    .end local v2    # "sysPropVal":Ljava/lang/String;
    .end local v4    # "jettyTaglibJarPatterns":Ljava/util/List;
    new-instance v1, Ljava/util/ArrayList;

    invoke-direct {v1}, Ljava/util/ArrayList;-><init>()V

    .line 927
    .local v1, "mergedClassPathTlds":Ljava/util/List;
    iget-object v2, p0, Lfreemarker/ext/servlet/FreemarkerServlet;->classpathTlds:Ljava/util/List;

    if-eqz v2, :cond_5

    .line 928
    invoke-interface {v1, v2}, Ljava/util/List;->addAll(Ljava/util/Collection;)Z

    .line 931
    :cond_5
    const-string v2, "org.freemarker.jsp.classpathTlds"

    invoke-static {v2, v3}, Lfreemarker/template/utility/SecurityUtilities;->getSystemProperty(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;

    move-result-object v2

    .line 932
    .restart local v2    # "sysPropVal":Ljava/lang/String;
    if-eqz v2, :cond_7

    .line 934
    :try_start_2
    invoke-static {v2}, Lfreemarker/ext/servlet/InitParamParser;->parseCommaSeparatedList(Ljava/lang/String;)Ljava/util/List;

    move-result-object v3

    .line 935
    .local v3, "classpathTldsSysProp":Ljava/util/List;
    if-eqz v3, :cond_6

    .line 936
    invoke-interface {v1, v3}, Ljava/util/List;->addAll(Ljava/util/Collection;)Z
    :try_end_2
    .catch Ljava/text/ParseException; {:try_start_2 .. :try_end_2} :catch_2

    .line 941
    .end local v3    # "classpathTldsSysProp":Ljava/util/List;
    :cond_6
    goto :goto_4

    .line 938
    :catch_2
    move-exception v3

    .line 939
    .local v3, "e":Ljava/text/ParseException;
    new-instance v4, Lfreemarker/template/TemplateModelException;

    const-string v5, "Failed to parse system property \"org.freemarker.jsp.classpathTlds\""

    invoke-direct {v4, v5, v3}, Lfreemarker/template/TemplateModelException;-><init>(Ljava/lang/String;Ljava/lang/Exception;)V

    throw v4

    .line 944
    .end local v3    # "e":Ljava/text/ParseException;
    :cond_7
    :goto_4
    invoke-virtual {v0, v1}, Lfreemarker/ext/jsp/TaglibFactory;->setClasspathTlds(Ljava/util/List;)V

    .line 947
    .end local v1    # "mergedClassPathTlds":Ljava/util/List;
    .end local v2    # "sysPropVal":Ljava/lang/String;
    return-object v0
.end method

.method protected createTemplateLoader(Ljava/lang/String;)Lfreemarker/cache/TemplateLoader;
    .locals 3
    .param p1, "templatePath"    # Ljava/lang/String;
    .annotation system Ldalvik/annotation/Throws;
        value = {
            Ljava/io/IOException;
        }
    .end annotation

    .line 636
    invoke-virtual {p0}, Lfreemarker/ext/servlet/FreemarkerServlet;->getConfiguration()Lfreemarker/template/Configuration;

    move-result-object v0

    invoke-virtual {p0}, Ljava/lang/Object;->getClass()Ljava/lang/Class;

    move-result-object v1

    invoke-virtual {p0}, Lfreemarker/ext/servlet/FreemarkerServlet;->getServletContext()Ljavax/servlet/ServletContext;

    move-result-object v2

    invoke-static {p1, v0, v1, v2}, Lfreemarker/ext/servlet/InitParamParser;->createTemplateLoader(Ljava/lang/String;Lfreemarker/template/Configuration;Ljava/lang/Class;Ljavax/servlet/ServletContext;)Lfreemarker/cache/TemplateLoader;

    move-result-object v0

    return-object v0
.end method

.method protected deduceLocale(Ljava/lang/String;Ljavax/servlet/http/HttpServletRequest;Ljavax/servlet/http/HttpServletResponse;)Ljava/util/Locale;
    .locals 1
    .param p1, "templatePath"    # Ljava/lang/String;
    .param p2, "request"    # Ljavax/servlet/http/HttpServletRequest;
    .param p3, "response"    # Ljavax/servlet/http/HttpServletResponse;
    .annotation system Ldalvik/annotation/Throws;
        value = {
            Ljavax/servlet/ServletException;
        }
    .end annotation

    .line 795
    iget-object v0, p0, Lfreemarker/ext/servlet/FreemarkerServlet;->config:Lfreemarker/template/Configuration;

    invoke-virtual {v0}, Lfreemarker/template/Configuration;->getLocale()Ljava/util/Locale;

    move-result-object v0

    return-object v0
.end method

.method public doGet(Ljavax/servlet/http/HttpServletRequest;Ljavax/servlet/http/HttpServletResponse;)V
    .locals 0
    .param p1, "request"    # Ljavax/servlet/http/HttpServletRequest;
    .param p2, "response"    # Ljavax/servlet/http/HttpServletResponse;
    .annotation system Ldalvik/annotation/Throws;
        value = {
            Ljavax/servlet/ServletException;,
            Ljava/io/IOException;
        }
    .end annotation

    .line 642
    invoke-direct {p0, p1, p2}, Lfreemarker/ext/servlet/FreemarkerServlet;->process(Ljavax/servlet/http/HttpServletRequest;Ljavax/servlet/http/HttpServletResponse;)V

    .line 643
    return-void
.end method

.method public doPost(Ljavax/servlet/http/HttpServletRequest;Ljavax/servlet/http/HttpServletResponse;)V
    .locals 0
    .param p1, "request"    # Ljavax/servlet/http/HttpServletRequest;
    .param p2, "response"    # Ljavax/servlet/http/HttpServletResponse;
    .annotation system Ldalvik/annotation/Throws;
        value = {
            Ljavax/servlet/ServletException;,
            Ljava/io/IOException;
        }
    .end annotation

    .line 650
    invoke-direct {p0, p1, p2}, Lfreemarker/ext/servlet/FreemarkerServlet;->process(Ljavax/servlet/http/HttpServletRequest;Ljavax/servlet/http/HttpServletResponse;)V

    .line 651
    return-void
.end method

.method protected getConfiguration()Lfreemarker/template/Configuration;
    .locals 1

    .line 1266
    iget-object v0, p0, Lfreemarker/ext/servlet/FreemarkerServlet;->config:Lfreemarker/template/Configuration;

    return-object v0
.end method

.method protected getObjectWrapper()Lfreemarker/template/ObjectWrapper;
    .locals 1

    .line 1158
    iget-object v0, p0, Lfreemarker/ext/servlet/FreemarkerServlet;->wrapper:Lfreemarker/template/ObjectWrapper;

    return-object v0
.end method

.method protected final getTemplatePath()Ljava/lang/String;
    .locals 1

    .line 1168
    iget-object v0, p0, Lfreemarker/ext/servlet/FreemarkerServlet;->templatePath:Ljava/lang/String;

    return-object v0
.end method

.method public init()V
    .locals 4
    .annotation system Ldalvik/annotation/Throws;
        value = {
            Ljavax/servlet/ServletException;
        }
    .end annotation

    .line 425
    :try_start_0
    invoke-direct {p0}, Lfreemarker/ext/servlet/FreemarkerServlet;->initialize()V
    :try_end_0
    .catch Ljava/lang/Exception; {:try_start_0 .. :try_end_0} :catch_0

    .line 431
    nop

    .line 432
    return-void

    .line 426
    :catch_0
    move-exception v0

    .line 429
    .local v0, "e":Ljava/lang/Exception;
    new-instance v1, Ljavax/servlet/ServletException;

    new-instance v2, Ljava/lang/StringBuffer;

    invoke-direct {v2}, Ljava/lang/StringBuffer;-><init>()V

    const-string v3, "Error while initializing "

    invoke-virtual {v2, v3}, Ljava/lang/StringBuffer;->append(Ljava/lang/String;)Ljava/lang/StringBuffer;

    move-result-object v2

    invoke-virtual {p0}, Ljava/lang/Object;->getClass()Ljava/lang/Class;

    move-result-object v3

    invoke-virtual {v3}, Ljava/lang/Class;->getName()Ljava/lang/String;

    move-result-object v3

    invoke-virtual {v2, v3}, Ljava/lang/StringBuffer;->append(Ljava/lang/String;)Ljava/lang/StringBuffer;

    move-result-object v2

    const-string v3, " servlet; see cause exception."

    invoke-virtual {v2, v3}, Ljava/lang/StringBuffer;->append(Ljava/lang/String;)Ljava/lang/StringBuffer;

    move-result-object v2

    invoke-virtual {v2}, Ljava/lang/StringBuffer;->toString()Ljava/lang/String;

    move-result-object v2

    invoke-direct {v1, v2, v0}, Ljavax/servlet/ServletException;-><init>(Ljava/lang/String;Ljava/lang/Throwable;)V

    throw v1
.end method

.method protected initializeServletContext(Ljavax/servlet/http/HttpServletRequest;Ljavax/servlet/http/HttpServletResponse;)V
    .locals 0
    .param p1, "request"    # Ljavax/servlet/http/HttpServletRequest;
    .param p2, "response"    # Ljavax/servlet/http/HttpServletResponse;
    .annotation system Ldalvik/annotation/Throws;
        value = {
            Ljavax/servlet/ServletException;,
            Ljava/io/IOException;
        }
    .end annotation

    .line 1188
    return-void
.end method

.method protected initializeSession(Ljavax/servlet/http/HttpServletRequest;Ljavax/servlet/http/HttpServletResponse;)V
    .locals 0
    .param p1, "request"    # Ljavax/servlet/http/HttpServletRequest;
    .param p2, "response"    # Ljavax/servlet/http/HttpServletResponse;
    .annotation system Ldalvik/annotation/Throws;
        value = {
            Ljavax/servlet/ServletException;,
            Ljava/io/IOException;
        }
    .end annotation

    .line 1206
    return-void
.end method

.method initializeSessionAndInstallModel(Ljavax/servlet/http/HttpServletRequest;Ljavax/servlet/http/HttpServletResponse;Lfreemarker/ext/servlet/HttpSessionHashModel;Ljavax/servlet/http/HttpSession;)V
    .locals 1
    .param p1, "request"    # Ljavax/servlet/http/HttpServletRequest;
    .param p2, "response"    # Ljavax/servlet/http/HttpServletResponse;
    .param p3, "sessionModel"    # Lfreemarker/ext/servlet/HttpSessionHashModel;
    .param p4, "session"    # Ljavax/servlet/http/HttpSession;
    .annotation system Ldalvik/annotation/Throws;
        value = {
            Ljavax/servlet/ServletException;,
            Ljava/io/IOException;
        }
    .end annotation

    .line 985
    const-string v0, ".freemarker.Session"

    invoke-interface {p4, v0, p3}, Ljavax/servlet/http/HttpSession;->setAttribute(Ljava/lang/String;Ljava/lang/Object;)V

    .line 986
    invoke-virtual {p0, p1, p2}, Lfreemarker/ext/servlet/FreemarkerServlet;->initializeSession(Ljavax/servlet/http/HttpServletRequest;Ljavax/servlet/http/HttpServletResponse;)V

    .line 987
    return-void
.end method

.method protected postTemplateProcess(Ljavax/servlet/http/HttpServletRequest;Ljavax/servlet/http/HttpServletResponse;Lfreemarker/template/Template;Lfreemarker/template/TemplateModel;)V
    .locals 0
    .param p1, "request"    # Ljavax/servlet/http/HttpServletRequest;
    .param p2, "response"    # Ljavax/servlet/http/HttpServletResponse;
    .param p3, "template"    # Lfreemarker/template/Template;
    .param p4, "data"    # Lfreemarker/template/TemplateModel;
    .annotation system Ldalvik/annotation/Throws;
        value = {
            Ljavax/servlet/ServletException;,
            Ljava/io/IOException;
        }
    .end annotation

    .line 1258
    return-void
.end method

.method protected preTemplateProcess(Ljavax/servlet/http/HttpServletRequest;Ljavax/servlet/http/HttpServletResponse;Lfreemarker/template/Template;Lfreemarker/template/TemplateModel;)Z
    .locals 1
    .param p1, "request"    # Ljavax/servlet/http/HttpServletRequest;
    .param p2, "response"    # Ljavax/servlet/http/HttpServletResponse;
    .param p3, "template"    # Lfreemarker/template/Template;
    .param p4, "data"    # Lfreemarker/template/TemplateModel;
    .annotation system Ldalvik/annotation/Throws;
        value = {
            Ljavax/servlet/ServletException;,
            Ljava/io/IOException;
        }
    .end annotation

    .line 1238
    const/4 v0, 0x1

    return v0
.end method

.method protected preprocessRequest(Ljavax/servlet/http/HttpServletRequest;Ljavax/servlet/http/HttpServletResponse;)Z
    .locals 1
    .param p1, "request"    # Ljavax/servlet/http/HttpServletRequest;
    .param p2, "response"    # Ljavax/servlet/http/HttpServletResponse;
    .annotation system Ldalvik/annotation/Throws;
        value = {
            Ljavax/servlet/ServletException;,
            Ljava/io/IOException;
        }
    .end annotation

    .line 1041
    const/4 v0, 0x0

    return v0
.end method

.method protected requestUrlToTemplatePath(Ljavax/servlet/http/HttpServletRequest;)Ljava/lang/String;
    .locals 3
    .param p1, "request"    # Ljavax/servlet/http/HttpServletRequest;
    .annotation system Ldalvik/annotation/Throws;
        value = {
            Ljavax/servlet/ServletException;
        }
    .end annotation

    .line 1008
    const-string v0, "javax.servlet.include.servlet_path"

    invoke-interface {p1, v0}, Ljavax/servlet/http/HttpServletRequest;->getAttribute(Ljava/lang/String;)Ljava/lang/Object;

    move-result-object v0

    check-cast v0, Ljava/lang/String;

    .line 1009
    .local v0, "includeServletPath":Ljava/lang/String;
    if-eqz v0, :cond_1

    .line 1013
    const-string v1, "javax.servlet.include.path_info"

    invoke-interface {p1, v1}, Ljavax/servlet/http/HttpServletRequest;->getAttribute(Ljava/lang/String;)Ljava/lang/Object;

    move-result-object v1

    check-cast v1, Ljava/lang/String;

    .line 1014
    .local v1, "includePathInfo":Ljava/lang/String;
    if-nez v1, :cond_0

    move-object v2, v0

    goto :goto_0

    :cond_0
    move-object v2, v1

    :goto_0
    return-object v2

    .line 1019
    .end local v1    # "includePathInfo":Ljava/lang/String;
    :cond_1
    invoke-interface {p1}, Ljavax/servlet/http/HttpServletRequest;->getPathInfo()Ljava/lang/String;

    move-result-object v1

    .line 1020
    .local v1, "path":Ljava/lang/String;
    if-eqz v1, :cond_2

    return-object v1

    .line 1021
    :cond_2
    invoke-interface {p1}, Ljavax/servlet/http/HttpServletRequest;->getServletPath()Ljava/lang/String;

    move-result-object v1

    .line 1022
    if-eqz v1, :cond_3

    return-object v1

    .line 1024
    :cond_3
    const-string v2, ""

    return-object v2
.end method

.method protected setConfigurationDefaults()V
    .locals 0

    .line 1069
    return-void
.end method
