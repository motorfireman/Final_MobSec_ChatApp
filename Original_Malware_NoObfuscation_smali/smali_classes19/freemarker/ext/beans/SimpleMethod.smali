.class Lfreemarker/ext/beans/SimpleMethod;
.super Ljava/lang/Object;
.source "SimpleMethod.java"


# instance fields
.field private final argTypes:[Ljava/lang/Class;

.field private final member:Ljava/lang/reflect/Member;


# direct methods
.method protected constructor <init>(Ljava/lang/reflect/Member;[Ljava/lang/Class;)V
    .locals 0
    .param p1, "member"    # Ljava/lang/reflect/Member;
    .param p2, "argTypes"    # [Ljava/lang/Class;

    .line 42
    invoke-direct {p0}, Ljava/lang/Object;-><init>()V

    .line 43
    iput-object p1, p0, Lfreemarker/ext/beans/SimpleMethod;->member:Ljava/lang/reflect/Member;

    .line 44
    iput-object p2, p0, Lfreemarker/ext/beans/SimpleMethod;->argTypes:[Ljava/lang/Class;

    .line 45
    return-void
.end method

.method private createArgumentTypeMismarchException(ILfreemarker/template/TemplateModel;Ljava/lang/Class;)Lfreemarker/template/TemplateModelException;
    .locals 5
    .param p1, "argIdx"    # I
    .param p2, "argVal"    # Lfreemarker/template/TemplateModel;
    .param p3, "targetType"    # Ljava/lang/Class;

    .line 147
    new-instance v0, Lfreemarker/core/_TemplateModelException;

    const/4 v1, 0x7

    new-array v1, v1, [Ljava/lang/Object;

    iget-object v2, p0, Lfreemarker/ext/beans/SimpleMethod;->member:Ljava/lang/reflect/Member;

    .line 148
    invoke-static {v2}, Lfreemarker/ext/beans/_MethodUtil;->invocationErrorMessageStart(Ljava/lang/reflect/Member;)[Ljava/lang/Object;

    move-result-object v2

    const/4 v3, 0x0

    aput-object v2, v1, v3

    const-string v2, " couldn\'t be called: Can\'t convert the "

    const/4 v3, 0x1

    aput-object v2, v1, v3

    new-instance v2, Lfreemarker/core/_DelayedOrdinal;

    new-instance v3, Ljava/lang/Integer;

    add-int/lit8 v4, p1, 0x1

    invoke-direct {v3, v4}, Ljava/lang/Integer;-><init>(I)V

    invoke-direct {v2, v3}, Lfreemarker/core/_DelayedOrdinal;-><init>(Ljava/lang/Object;)V

    const/4 v3, 0x2

    aput-object v2, v1, v3

    const/4 v2, 0x3

    const-string v3, " argument\'s value to the target Java type, "

    aput-object v3, v1, v2

    .line 150
    invoke-static {p3}, Lfreemarker/template/utility/ClassUtil;->getShortClassName(Ljava/lang/Class;)Ljava/lang/String;

    move-result-object v2

    const/4 v3, 0x4

    aput-object v2, v1, v3

    const/4 v2, 0x5

    const-string v3, ". The type of the actual value was: "

    aput-object v3, v1, v2

    new-instance v2, Lfreemarker/core/_DelayedFTLTypeDescription;

    invoke-direct {v2, p2}, Lfreemarker/core/_DelayedFTLTypeDescription;-><init>(Lfreemarker/template/TemplateModel;)V

    const/4 v3, 0x6

    aput-object v2, v1, v3

    invoke-direct {v0, v1}, Lfreemarker/core/_TemplateModelException;-><init>([Ljava/lang/Object;)V

    return-object v0
.end method

.method private createNullToPrimitiveArgumentException(ILjava/lang/Class;)Lfreemarker/template/TemplateModelException;
    .locals 5
    .param p1, "argIdx"    # I
    .param p2, "targetType"    # Ljava/lang/Class;

    .line 156
    new-instance v0, Lfreemarker/core/_TemplateModelException;

    const/4 v1, 0x6

    new-array v1, v1, [Ljava/lang/Object;

    iget-object v2, p0, Lfreemarker/ext/beans/SimpleMethod;->member:Ljava/lang/reflect/Member;

    .line 157
    invoke-static {v2}, Lfreemarker/ext/beans/_MethodUtil;->invocationErrorMessageStart(Ljava/lang/reflect/Member;)[Ljava/lang/Object;

    move-result-object v2

    const/4 v3, 0x0

    aput-object v2, v1, v3

    const-string v2, " couldn\'t be called: The value of the "

    const/4 v3, 0x1

    aput-object v2, v1, v3

    new-instance v2, Lfreemarker/core/_DelayedOrdinal;

    new-instance v3, Ljava/lang/Integer;

    add-int/lit8 v4, p1, 0x1

    invoke-direct {v3, v4}, Ljava/lang/Integer;-><init>(I)V

    invoke-direct {v2, v3}, Lfreemarker/core/_DelayedOrdinal;-><init>(Ljava/lang/Object;)V

    const/4 v3, 0x2

    aput-object v2, v1, v3

    const/4 v2, 0x3

    const-string v3, " argument was null, but the target Java parameter type ("

    aput-object v3, v1, v2

    .line 159
    invoke-static {p2}, Lfreemarker/template/utility/ClassUtil;->getShortClassName(Ljava/lang/Class;)Ljava/lang/String;

    move-result-object v2

    const/4 v3, 0x4

    aput-object v2, v1, v3

    const/4 v2, 0x5

    const-string v3, ") is primitive and so can\'t store null."

    aput-object v3, v1, v2

    invoke-direct {v0, v1}, Lfreemarker/core/_TemplateModelException;-><init>([Ljava/lang/Object;)V

    return-object v0
.end method

.method private unwrapArguments(Ljava/util/List;[Ljava/lang/Class;ZLfreemarker/ext/beans/BeansWrapper;)[Ljava/lang/Object;
    .locals 16
    .param p1, "args"    # Ljava/util/List;
    .param p2, "argTypes"    # [Ljava/lang/Class;
    .param p3, "isVarargs"    # Z
    .param p4, "w"    # Lfreemarker/ext/beans/BeansWrapper;
    .annotation system Ldalvik/annotation/Throws;
        value = {
            Lfreemarker/template/TemplateModelException;
        }
    .end annotation

    .line 77
    move-object/from16 v0, p0

    move-object/from16 v1, p2

    move-object/from16 v2, p4

    if-nez p1, :cond_0

    const/4 v3, 0x0

    return-object v3

    .line 79
    :cond_0
    array-length v3, v1

    .line 80
    .local v3, "typesLen":I
    invoke-interface/range {p1 .. p1}, Ljava/util/List;->size()I

    move-result v4

    .line 82
    .local v4, "argsLen":I
    new-array v5, v3, [Ljava/lang/Object;

    .line 85
    .local v5, "unwrappedArgs":[Ljava/lang/Object;
    invoke-interface/range {p1 .. p1}, Ljava/util/List;->iterator()Ljava/util/Iterator;

    move-result-object v6

    .line 86
    .local v6, "it":Ljava/util/Iterator;
    if-eqz p3, :cond_1

    add-int/lit8 v7, v3, -0x1

    goto :goto_0

    :cond_1
    move v7, v3

    .line 87
    .local v7, "normalArgCnt":I
    :goto_0
    const/4 v8, 0x0

    .line 88
    .local v8, "argIdx":I
    :goto_1
    if-ge v8, v7, :cond_5

    .line 89
    aget-object v9, v1, v8

    .line 90
    .local v9, "argType":Ljava/lang/Class;
    invoke-interface {v6}, Ljava/util/Iterator;->next()Ljava/lang/Object;

    move-result-object v10

    check-cast v10, Lfreemarker/template/TemplateModel;

    .line 91
    .local v10, "argVal":Lfreemarker/template/TemplateModel;
    invoke-virtual {v2, v10, v9}, Lfreemarker/ext/beans/BeansWrapper;->tryUnwrapTo(Lfreemarker/template/TemplateModel;Ljava/lang/Class;)Ljava/lang/Object;

    move-result-object v11

    .line 92
    .local v11, "unwrappedArgVal":Ljava/lang/Object;
    sget-object v12, Lfreemarker/template/ObjectWrapperAndUnwrapper;->CANT_UNWRAP_TO_TARGET_CLASS:Ljava/lang/Object;

    if-eq v11, v12, :cond_4

    .line 95
    if-nez v11, :cond_3

    invoke-virtual {v9}, Ljava/lang/Class;->isPrimitive()Z

    move-result v12

    if-nez v12, :cond_2

    goto :goto_2

    .line 96
    :cond_2
    invoke-direct {v0, v8, v9}, Lfreemarker/ext/beans/SimpleMethod;->createNullToPrimitiveArgumentException(ILjava/lang/Class;)Lfreemarker/template/TemplateModelException;

    move-result-object v12

    throw v12

    .line 99
    :cond_3
    :goto_2
    add-int/lit8 v12, v8, 0x1

    .end local v8    # "argIdx":I
    .local v12, "argIdx":I
    aput-object v11, v5, v8

    .line 100
    .end local v9    # "argType":Ljava/lang/Class;
    .end local v10    # "argVal":Lfreemarker/template/TemplateModel;
    .end local v11    # "unwrappedArgVal":Ljava/lang/Object;
    move v8, v12

    goto :goto_1

    .line 93
    .end local v12    # "argIdx":I
    .restart local v8    # "argIdx":I
    .restart local v9    # "argType":Ljava/lang/Class;
    .restart local v10    # "argVal":Lfreemarker/template/TemplateModel;
    .restart local v11    # "unwrappedArgVal":Ljava/lang/Object;
    :cond_4
    invoke-direct {v0, v8, v10, v9}, Lfreemarker/ext/beans/SimpleMethod;->createArgumentTypeMismarchException(ILfreemarker/template/TemplateModel;Ljava/lang/Class;)Lfreemarker/template/TemplateModelException;

    move-result-object v12

    throw v12

    .line 101
    .end local v9    # "argType":Ljava/lang/Class;
    .end local v10    # "argVal":Lfreemarker/template/TemplateModel;
    .end local v11    # "unwrappedArgVal":Ljava/lang/Object;
    :cond_5
    if-eqz p3, :cond_d

    .line 104
    add-int/lit8 v9, v3, -0x1

    aget-object v9, v1, v9

    .line 105
    .local v9, "varargType":Ljava/lang/Class;
    invoke-virtual {v9}, Ljava/lang/Class;->getComponentType()Ljava/lang/Class;

    move-result-object v10

    .line 106
    .local v10, "varargItemType":Ljava/lang/Class;
    invoke-interface {v6}, Ljava/util/Iterator;->hasNext()Z

    move-result v11

    if-nez v11, :cond_6

    .line 107
    add-int/lit8 v11, v8, 0x1

    .end local v8    # "argIdx":I
    .local v11, "argIdx":I
    const/4 v12, 0x0

    invoke-static {v10, v12}, Ljava/lang/reflect/Array;->newInstance(Ljava/lang/Class;I)Ljava/lang/Object;

    move-result-object v12

    aput-object v12, v5, v8

    move v8, v11

    goto :goto_6

    .line 109
    .end local v11    # "argIdx":I
    .restart local v8    # "argIdx":I
    :cond_6
    invoke-interface {v6}, Ljava/util/Iterator;->next()Ljava/lang/Object;

    move-result-object v11

    check-cast v11, Lfreemarker/template/TemplateModel;

    .line 114
    .local v11, "argVal":Lfreemarker/template/TemplateModel;
    sub-int v12, v4, v8

    const/4 v13, 0x1

    if-ne v12, v13, :cond_7

    .line 115
    invoke-virtual {v2, v11, v9}, Lfreemarker/ext/beans/BeansWrapper;->tryUnwrapTo(Lfreemarker/template/TemplateModel;Ljava/lang/Class;)Ljava/lang/Object;

    move-result-object v12

    move-object v13, v12

    .local v13, "unwrappedArgVal":Ljava/lang/Object;
    sget-object v14, Lfreemarker/template/ObjectWrapperAndUnwrapper;->CANT_UNWRAP_TO_TARGET_CLASS:Ljava/lang/Object;

    if-eq v12, v14, :cond_7

    .line 118
    add-int/lit8 v12, v8, 0x1

    .end local v8    # "argIdx":I
    .restart local v12    # "argIdx":I
    aput-object v13, v5, v8

    move v8, v12

    goto :goto_6

    .line 122
    .end local v12    # "argIdx":I
    .end local v13    # "unwrappedArgVal":Ljava/lang/Object;
    .restart local v8    # "argIdx":I
    :cond_7
    sub-int v12, v4, v8

    .line 123
    .local v12, "varargArrayLen":I
    invoke-static {v10, v12}, Ljava/lang/reflect/Array;->newInstance(Ljava/lang/Class;I)Ljava/lang/Object;

    move-result-object v13

    .line 124
    .local v13, "varargArray":Ljava/lang/Object;
    const/4 v14, 0x0

    .local v14, "varargIdx":I
    :goto_3
    if-ge v14, v12, :cond_c

    .line 125
    if-nez v14, :cond_8

    move-object v15, v11

    goto :goto_4

    :cond_8
    invoke-interface {v6}, Ljava/util/Iterator;->next()Ljava/lang/Object;

    move-result-object v15

    :goto_4
    check-cast v15, Lfreemarker/template/TemplateModel;

    check-cast v15, Lfreemarker/template/TemplateModel;

    .line 126
    .local v15, "varargVal":Lfreemarker/template/TemplateModel;
    invoke-virtual {v2, v15, v10}, Lfreemarker/ext/beans/BeansWrapper;->tryUnwrapTo(Lfreemarker/template/TemplateModel;Ljava/lang/Class;)Ljava/lang/Object;

    move-result-object v1

    .line 127
    .local v1, "unwrappedVarargVal":Ljava/lang/Object;
    sget-object v2, Lfreemarker/template/ObjectWrapperAndUnwrapper;->CANT_UNWRAP_TO_TARGET_CLASS:Ljava/lang/Object;

    if-eq v1, v2, :cond_b

    .line 132
    if-nez v1, :cond_a

    invoke-virtual {v10}, Ljava/lang/Class;->isPrimitive()Z

    move-result v2

    if-nez v2, :cond_9

    goto :goto_5

    .line 133
    :cond_9
    add-int v2, v8, v14

    invoke-direct {v0, v2, v10}, Lfreemarker/ext/beans/SimpleMethod;->createNullToPrimitiveArgumentException(ILjava/lang/Class;)Lfreemarker/template/TemplateModelException;

    move-result-object v2

    throw v2

    .line 135
    :cond_a
    :goto_5
    invoke-static {v13, v14, v1}, Ljava/lang/reflect/Array;->set(Ljava/lang/Object;ILjava/lang/Object;)V

    .line 124
    .end local v1    # "unwrappedVarargVal":Ljava/lang/Object;
    .end local v15    # "varargVal":Lfreemarker/template/TemplateModel;
    add-int/lit8 v14, v14, 0x1

    move-object/from16 v1, p2

    move-object/from16 v2, p4

    goto :goto_3

    .line 128
    .restart local v1    # "unwrappedVarargVal":Ljava/lang/Object;
    .restart local v15    # "varargVal":Lfreemarker/template/TemplateModel;
    :cond_b
    add-int v2, v8, v14

    invoke-direct {v0, v2, v15, v10}, Lfreemarker/ext/beans/SimpleMethod;->createArgumentTypeMismarchException(ILfreemarker/template/TemplateModel;Ljava/lang/Class;)Lfreemarker/template/TemplateModelException;

    move-result-object v2

    throw v2

    .line 137
    .end local v1    # "unwrappedVarargVal":Ljava/lang/Object;
    .end local v14    # "varargIdx":I
    .end local v15    # "varargVal":Lfreemarker/template/TemplateModel;
    :cond_c
    add-int/lit8 v1, v8, 0x1

    .end local v8    # "argIdx":I
    .local v1, "argIdx":I
    aput-object v13, v5, v8

    move v8, v1

    .line 142
    .end local v1    # "argIdx":I
    .end local v9    # "varargType":Ljava/lang/Class;
    .end local v10    # "varargItemType":Ljava/lang/Class;
    .end local v11    # "argVal":Lfreemarker/template/TemplateModel;
    .end local v12    # "varargArrayLen":I
    .end local v13    # "varargArray":Ljava/lang/Object;
    .restart local v8    # "argIdx":I
    :cond_d
    :goto_6
    return-object v5
.end method


# virtual methods
.method protected getMember()Ljava/lang/reflect/Member;
    .locals 1

    .line 164
    iget-object v0, p0, Lfreemarker/ext/beans/SimpleMethod;->member:Ljava/lang/reflect/Member;

    return-object v0
.end method

.method unwrapArguments(Ljava/util/List;Lfreemarker/ext/beans/BeansWrapper;)[Ljava/lang/Object;
    .locals 16
    .param p1, "arguments"    # Ljava/util/List;
    .param p2, "wrapper"    # Lfreemarker/ext/beans/BeansWrapper;
    .annotation system Ldalvik/annotation/Throws;
        value = {
            Lfreemarker/template/TemplateModelException;
        }
    .end annotation

    .line 49
    move-object/from16 v0, p0

    if-nez p1, :cond_0

    .line 50
    sget-object v1, Ljava/util/Collections;->EMPTY_LIST:Ljava/util/List;

    .end local p1    # "arguments":Ljava/util/List;
    .local v1, "arguments":Ljava/util/List;
    goto :goto_0

    .line 49
    .end local v1    # "arguments":Ljava/util/List;
    .restart local p1    # "arguments":Ljava/util/List;
    :cond_0
    move-object/from16 v1, p1

    .line 52
    .end local p1    # "arguments":Ljava/util/List;
    .restart local v1    # "arguments":Ljava/util/List;
    :goto_0
    iget-object v2, v0, Lfreemarker/ext/beans/SimpleMethod;->member:Ljava/lang/reflect/Member;

    invoke-static {v2}, Lfreemarker/ext/beans/_MethodUtil;->isVarargs(Ljava/lang/reflect/Member;)Z

    move-result v2

    .line 53
    .local v2, "isVarArg":Z
    iget-object v3, v0, Lfreemarker/ext/beans/SimpleMethod;->argTypes:[Ljava/lang/Class;

    array-length v3, v3

    .line 54
    .local v3, "typesLen":I
    const-string v4, " was given."

    const-string v7, ", but "

    const/4 v8, 0x4

    const-string v9, " argument"

    const-string v10, " arguments"

    const/4 v11, 0x3

    const/4 v12, 0x2

    const/4 v13, 0x0

    const/4 v14, 0x7

    const/4 v15, 0x1

    if-eqz v2, :cond_2

    .line 55
    add-int/lit8 v5, v3, -0x1

    invoke-interface {v1}, Ljava/util/List;->size()I

    move-result v6

    if-le v5, v6, :cond_4

    .line 56
    new-instance v5, Lfreemarker/core/_TemplateModelException;

    new-array v6, v14, [Ljava/lang/Object;

    iget-object v14, v0, Lfreemarker/ext/beans/SimpleMethod;->member:Ljava/lang/reflect/Member;

    .line 57
    invoke-static {v14}, Lfreemarker/ext/beans/_MethodUtil;->invocationErrorMessageStart(Ljava/lang/reflect/Member;)[Ljava/lang/Object;

    move-result-object v14

    aput-object v14, v6, v13

    const-string v13, " takes at least "

    aput-object v13, v6, v15

    new-instance v13, Ljava/lang/Integer;

    add-int/lit8 v14, v3, -0x1

    invoke-direct {v13, v14}, Ljava/lang/Integer;-><init>(I)V

    aput-object v13, v6, v12

    add-int/lit8 v12, v3, -0x1

    if-ne v12, v15, :cond_1

    goto :goto_1

    :cond_1
    move-object v9, v10

    :goto_1
    aput-object v9, v6, v11

    aput-object v7, v6, v8

    new-instance v7, Ljava/lang/Integer;

    .line 60
    invoke-interface {v1}, Ljava/util/List;->size()I

    move-result v8

    invoke-direct {v7, v8}, Ljava/lang/Integer;-><init>(I)V

    const/4 v8, 0x5

    aput-object v7, v6, v8

    const/4 v7, 0x6

    aput-object v4, v6, v7

    invoke-direct {v5, v6}, Lfreemarker/core/_TemplateModelException;-><init>([Ljava/lang/Object;)V

    throw v5

    .line 63
    :cond_2
    invoke-interface {v1}, Ljava/util/List;->size()I

    move-result v5

    if-eq v3, v5, :cond_4

    .line 64
    new-instance v5, Lfreemarker/core/_TemplateModelException;

    new-array v6, v14, [Ljava/lang/Object;

    iget-object v14, v0, Lfreemarker/ext/beans/SimpleMethod;->member:Ljava/lang/reflect/Member;

    .line 65
    invoke-static {v14}, Lfreemarker/ext/beans/_MethodUtil;->invocationErrorMessageStart(Ljava/lang/reflect/Member;)[Ljava/lang/Object;

    move-result-object v14

    aput-object v14, v6, v13

    const-string v13, " takes "

    aput-object v13, v6, v15

    new-instance v13, Ljava/lang/Integer;

    invoke-direct {v13, v3}, Ljava/lang/Integer;-><init>(I)V

    aput-object v13, v6, v12

    if-ne v3, v15, :cond_3

    goto :goto_2

    :cond_3
    move-object v9, v10

    :goto_2
    aput-object v9, v6, v11

    aput-object v7, v6, v8

    new-instance v7, Ljava/lang/Integer;

    .line 67
    invoke-interface {v1}, Ljava/util/List;->size()I

    move-result v8

    invoke-direct {v7, v8}, Ljava/lang/Integer;-><init>(I)V

    const/4 v8, 0x5

    aput-object v7, v6, v8

    const/4 v7, 0x6

    aput-object v4, v6, v7

    invoke-direct {v5, v6}, Lfreemarker/core/_TemplateModelException;-><init>([Ljava/lang/Object;)V

    throw v5

    .line 70
    :cond_4
    iget-object v4, v0, Lfreemarker/ext/beans/SimpleMethod;->argTypes:[Ljava/lang/Class;

    move-object/from16 v5, p2

    invoke-direct {v0, v1, v4, v2, v5}, Lfreemarker/ext/beans/SimpleMethod;->unwrapArguments(Ljava/util/List;[Ljava/lang/Class;ZLfreemarker/ext/beans/BeansWrapper;)[Ljava/lang/Object;

    move-result-object v4

    .line 71
    .local v4, "args":[Ljava/lang/Object;
    return-object v4
.end method
