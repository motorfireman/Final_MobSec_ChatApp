.class Lfreemarker/ext/beans/OverloadedVarArgsMethods;
.super Lfreemarker/ext/beans/OverloadedMethodsSubset;
.source "OverloadedVarArgsMethods.java"


# direct methods
.method constructor <init>(Z)V
    .locals 0
    .param p1, "bugfixed"    # Z

    .line 35
    invoke-direct {p0, p1}, Lfreemarker/ext/beans/OverloadedMethodsSubset;-><init>(Z)V

    .line 36
    return-void
.end method

.method private replaceVarargsSectionWithArray([Ljava/lang/Object;Ljava/util/List;Lfreemarker/ext/beans/CallableMemberDescriptor;Lfreemarker/ext/beans/BeansWrapper;)Ljava/lang/Object;
    .locals 11
    .param p1, "args"    # [Ljava/lang/Object;
    .param p2, "modelArgs"    # Ljava/util/List;
    .param p3, "memberDesc"    # Lfreemarker/ext/beans/CallableMemberDescriptor;
    .param p4, "unwrapper"    # Lfreemarker/ext/beans/BeansWrapper;
    .annotation system Ldalvik/annotation/Throws;
        value = {
            Lfreemarker/template/TemplateModelException;
        }
    .end annotation

    .line 216
    invoke-virtual {p3}, Lfreemarker/ext/beans/CallableMemberDescriptor;->getParamTypes()[Ljava/lang/Class;

    move-result-object v0

    .line 217
    .local v0, "paramTypes":[Ljava/lang/Class;
    array-length v1, v0

    .line 218
    .local v1, "paramCount":I
    add-int/lit8 v2, v1, -0x1

    aget-object v2, v0, v2

    invoke-virtual {v2}, Ljava/lang/Class;->getComponentType()Ljava/lang/Class;

    move-result-object v2

    .line 219
    .local v2, "varArgsCompType":Ljava/lang/Class;
    array-length v3, p1

    .line 220
    .local v3, "totalArgCount":I
    add-int/lit8 v4, v1, -0x1

    .line 221
    .local v4, "fixArgCount":I
    array-length v5, p1

    const/4 v6, 0x0

    if-eq v5, v1, :cond_2

    .line 222
    new-array v5, v1, [Ljava/lang/Object;

    .line 223
    .local v5, "packedArgs":[Ljava/lang/Object;
    invoke-static {p1, v6, v5, v6, v4}, Ljava/lang/System;->arraycopy(Ljava/lang/Object;ILjava/lang/Object;II)V

    .line 224
    sub-int v6, v3, v4

    invoke-static {v2, v6}, Ljava/lang/reflect/Array;->newInstance(Ljava/lang/Class;I)Ljava/lang/Object;

    move-result-object v6

    .line 225
    .local v6, "varargs":Ljava/lang/Object;
    move v7, v4

    .local v7, "i":I
    :goto_0
    if-ge v7, v3, :cond_1

    .line 226
    invoke-interface {p2, v7}, Ljava/util/List;->get(I)Ljava/lang/Object;

    move-result-object v8

    check-cast v8, Lfreemarker/template/TemplateModel;

    invoke-virtual {p4, v8, v2}, Lfreemarker/ext/beans/BeansWrapper;->tryUnwrapTo(Lfreemarker/template/TemplateModel;Ljava/lang/Class;)Ljava/lang/Object;

    move-result-object v8

    .line 227
    .local v8, "val":Ljava/lang/Object;
    sget-object v9, Lfreemarker/template/ObjectWrapperAndUnwrapper;->CANT_UNWRAP_TO_TARGET_CLASS:Ljava/lang/Object;

    if-ne v8, v9, :cond_0

    .line 228
    new-instance v9, Ljava/lang/Integer;

    add-int/lit8 v10, v7, 0x1

    invoke-direct {v9, v10}, Ljava/lang/Integer;-><init>(I)V

    return-object v9

    .line 230
    :cond_0
    sub-int v9, v7, v4

    invoke-static {v6, v9, v8}, Ljava/lang/reflect/Array;->set(Ljava/lang/Object;ILjava/lang/Object;)V

    .line 225
    .end local v8    # "val":Ljava/lang/Object;
    add-int/lit8 v7, v7, 0x1

    goto :goto_0

    .line 232
    .end local v7    # "i":I
    :cond_1
    aput-object v6, v5, v4

    .line 233
    return-object v5

    .line 235
    .end local v5    # "packedArgs":[Ljava/lang/Object;
    .end local v6    # "varargs":Ljava/lang/Object;
    :cond_2
    invoke-interface {p2, v4}, Ljava/util/List;->get(I)Ljava/lang/Object;

    move-result-object v5

    check-cast v5, Lfreemarker/template/TemplateModel;

    invoke-virtual {p4, v5, v2}, Lfreemarker/ext/beans/BeansWrapper;->tryUnwrapTo(Lfreemarker/template/TemplateModel;Ljava/lang/Class;)Ljava/lang/Object;

    move-result-object v5

    .line 236
    .local v5, "val":Ljava/lang/Object;
    sget-object v7, Lfreemarker/template/ObjectWrapperAndUnwrapper;->CANT_UNWRAP_TO_TARGET_CLASS:Ljava/lang/Object;

    if-ne v5, v7, :cond_3

    .line 237
    new-instance v6, Ljava/lang/Integer;

    add-int/lit8 v7, v4, 0x1

    invoke-direct {v6, v7}, Ljava/lang/Integer;-><init>(I)V

    return-object v6

    .line 239
    :cond_3
    const/4 v7, 0x1

    invoke-static {v2, v7}, Ljava/lang/reflect/Array;->newInstance(Ljava/lang/Class;I)Ljava/lang/Object;

    move-result-object v7

    .line 240
    .local v7, "array":Ljava/lang/Object;
    invoke-static {v7, v6, v5}, Ljava/lang/reflect/Array;->set(Ljava/lang/Object;ILjava/lang/Object;)V

    .line 241
    aput-object v7, p1, v4

    .line 242
    return-object p1
.end method

.method private widenHintsToCommonSupertypes(I[Ljava/lang/Class;[I)V
    .locals 7
    .param p1, "paramCountOfWidened"    # I
    .param p2, "wideningTypes"    # [Ljava/lang/Class;
    .param p3, "wideningTypeFlags"    # [I

    .line 114
    invoke-virtual {p0}, Lfreemarker/ext/beans/OverloadedVarArgsMethods;->getUnwrappingHintsByParamCount()[[Ljava/lang/Class;

    move-result-object v0

    aget-object v0, v0, p1

    .line 115
    .local v0, "typesToWiden":[Ljava/lang/Class;
    if-nez v0, :cond_0

    .line 116
    return-void

    .line 119
    :cond_0
    array-length v1, v0

    .line 120
    .local v1, "typesToWidenLen":I
    array-length v2, p2

    .line 121
    .local v2, "wideningTypesLen":I
    invoke-static {v2, v1}, Ljava/lang/Math;->min(II)I

    move-result v3

    .line 122
    .local v3, "min":I
    const/4 v4, 0x0

    .local v4, "i":I
    :goto_0
    if-ge v4, v3, :cond_1

    .line 123
    aget-object v5, v0, v4

    aget-object v6, p2, v4

    invoke-virtual {p0, v5, v6}, Lfreemarker/ext/beans/OverloadedVarArgsMethods;->getCommonSupertypeForUnwrappingHint(Ljava/lang/Class;Ljava/lang/Class;)Ljava/lang/Class;

    move-result-object v5

    aput-object v5, v0, v4

    .line 122
    add-int/lit8 v4, v4, 0x1

    goto :goto_0

    .line 125
    .end local v4    # "i":I
    :cond_1
    if-le v1, v2, :cond_2

    .line 126
    add-int/lit8 v4, v2, -0x1

    aget-object v4, p2, v4

    .line 127
    .local v4, "varargsComponentType":Ljava/lang/Class;
    move v5, v2

    .local v5, "i":I
    :goto_1
    if-ge v5, v1, :cond_2

    .line 128
    aget-object v6, v0, v5

    invoke-virtual {p0, v6, v4}, Lfreemarker/ext/beans/OverloadedVarArgsMethods;->getCommonSupertypeForUnwrappingHint(Ljava/lang/Class;Ljava/lang/Class;)Ljava/lang/Class;

    move-result-object v6

    aput-object v6, v0, v5

    .line 127
    add-int/lit8 v5, v5, 0x1

    goto :goto_1

    .line 132
    .end local v4    # "varargsComponentType":Ljava/lang/Class;
    .end local v5    # "i":I
    :cond_2
    iget-boolean v4, p0, Lfreemarker/ext/beans/OverloadedVarArgsMethods;->bugfixed:Z

    if-eqz v4, :cond_3

    .line 133
    invoke-virtual {p0, p1, p3}, Lfreemarker/ext/beans/OverloadedVarArgsMethods;->mergeInTypesFlags(I[I)V

    .line 135
    :cond_3
    return-void
.end method


# virtual methods
.method afterWideningUnwrappingHints([Ljava/lang/Class;[I)V
    .locals 5
    .param p1, "paramTypes"    # [Ljava/lang/Class;
    .param p2, "paramNumericalTypes"    # [I

    .line 65
    array-length v0, p1

    .line 66
    .local v0, "paramCount":I
    invoke-virtual {p0}, Lfreemarker/ext/beans/OverloadedVarArgsMethods;->getUnwrappingHintsByParamCount()[[Ljava/lang/Class;

    move-result-object v1

    .line 73
    .local v1, "unwrappingHintsByParamCount":[[Ljava/lang/Class;
    add-int/lit8 v2, v0, -0x1

    .local v2, "i":I
    :goto_0
    if-ltz v2, :cond_1

    .line 74
    aget-object v3, v1, v2

    .line 75
    .local v3, "previousHints":[Ljava/lang/Class;
    if-eqz v3, :cond_0

    .line 76
    nop

    .line 78
    invoke-virtual {p0, v2}, Lfreemarker/ext/beans/OverloadedVarArgsMethods;->getTypeFlags(I)[I

    move-result-object v4

    .line 76
    invoke-direct {p0, v0, v3, v4}, Lfreemarker/ext/beans/OverloadedVarArgsMethods;->widenHintsToCommonSupertypes(I[Ljava/lang/Class;[I)V

    .line 79
    goto :goto_1

    .line 73
    .end local v3    # "previousHints":[Ljava/lang/Class;
    :cond_0
    add-int/lit8 v2, v2, -0x1

    goto :goto_0

    .line 86
    .end local v2    # "i":I
    :cond_1
    :goto_1
    add-int/lit8 v2, v0, 0x1

    array-length v3, v1

    if-ge v2, v3, :cond_2

    .line 87
    add-int/lit8 v2, v0, 0x1

    aget-object v2, v1, v2

    .line 88
    .local v2, "oneLongerHints":[Ljava/lang/Class;
    if-eqz v2, :cond_2

    .line 89
    add-int/lit8 v3, v0, 0x1

    .line 91
    invoke-virtual {p0, v3}, Lfreemarker/ext/beans/OverloadedVarArgsMethods;->getTypeFlags(I)[I

    move-result-object v3

    .line 89
    invoke-direct {p0, v0, v2, v3}, Lfreemarker/ext/beans/OverloadedVarArgsMethods;->widenHintsToCommonSupertypes(I[Ljava/lang/Class;[I)V

    .line 97
    .end local v2    # "oneLongerHints":[Ljava/lang/Class;
    :cond_2
    add-int/lit8 v2, v0, 0x1

    .local v2, "i":I
    :goto_2
    array-length v3, v1

    if-ge v2, v3, :cond_3

    .line 98
    invoke-direct {p0, v2, p1, p2}, Lfreemarker/ext/beans/OverloadedVarArgsMethods;->widenHintsToCommonSupertypes(I[Ljava/lang/Class;[I)V

    .line 97
    add-int/lit8 v2, v2, 0x1

    goto :goto_2

    .line 104
    .end local v2    # "i":I
    :cond_3
    if-lez v0, :cond_4

    .line 105
    add-int/lit8 v2, v0, -0x1

    invoke-direct {p0, v2, p1, p2}, Lfreemarker/ext/beans/OverloadedVarArgsMethods;->widenHintsToCommonSupertypes(I[Ljava/lang/Class;[I)V

    .line 110
    :cond_4
    return-void
.end method

.method getMemberAndArguments(Ljava/util/List;Lfreemarker/ext/beans/BeansWrapper;)Lfreemarker/ext/beans/MaybeEmptyMemberAndArguments;
    .locals 13
    .param p1, "tmArgs"    # Ljava/util/List;
    .param p2, "unwrapper"    # Lfreemarker/ext/beans/BeansWrapper;
    .annotation system Ldalvik/annotation/Throws;
        value = {
            Lfreemarker/template/TemplateModelException;
        }
    .end annotation

    .line 139
    if-nez p1, :cond_0

    .line 141
    sget-object p1, Ljava/util/Collections;->EMPTY_LIST:Ljava/util/List;

    .line 143
    :cond_0
    invoke-interface {p1}, Ljava/util/List;->size()I

    move-result v0

    .line 144
    .local v0, "argsLen":I
    invoke-virtual {p0}, Lfreemarker/ext/beans/OverloadedVarArgsMethods;->getUnwrappingHintsByParamCount()[[Ljava/lang/Class;

    move-result-object v1

    .line 145
    .local v1, "unwrappingHintsByParamCount":[[Ljava/lang/Class;
    new-array v2, v0, [Ljava/lang/Object;

    .line 146
    .local v2, "pojoArgs":[Ljava/lang/Object;
    const/4 v3, 0x0

    .line 149
    .local v3, "typesFlags":[I
    add-int/lit8 v4, v0, 0x1

    array-length v5, v1

    const/4 v6, 0x1

    sub-int/2addr v5, v6

    invoke-static {v4, v5}, Ljava/lang/Math;->min(II)I

    move-result v4

    .local v4, "paramCount":I
    :goto_0
    if-ltz v4, :cond_7

    .line 150
    aget-object v5, v1, v4

    .line 151
    .local v5, "unwarappingHints":[Ljava/lang/Class;
    if-nez v5, :cond_1

    .line 152
    if-nez v4, :cond_5

    .line 153
    sget-object v6, Lfreemarker/ext/beans/EmptyMemberAndArguments;->WRONG_NUMBER_OF_ARGUMENTS:Lfreemarker/ext/beans/EmptyMemberAndArguments;

    return-object v6

    .line 158
    :cond_1
    invoke-virtual {p0, v4}, Lfreemarker/ext/beans/OverloadedVarArgsMethods;->getTypeFlags(I)[I

    move-result-object v3

    .line 159
    sget-object v7, Lfreemarker/ext/beans/OverloadedVarArgsMethods;->ALL_ZEROS_ARRAY:[I

    if-ne v3, v7, :cond_2

    .line 160
    const/4 v3, 0x0

    .line 164
    :cond_2
    invoke-interface {p1}, Ljava/util/List;->iterator()Ljava/util/Iterator;

    move-result-object v7

    .line 165
    .local v7, "it":Ljava/util/Iterator;
    const/4 v8, 0x0

    .local v8, "i":I
    :goto_1
    if-ge v8, v0, :cond_7

    .line 166
    if-ge v8, v4, :cond_3

    move v9, v8

    goto :goto_2

    :cond_3
    add-int/lit8 v9, v4, -0x1

    .line 167
    .local v9, "paramIdx":I
    :goto_2
    nop

    .line 168
    invoke-interface {v7}, Ljava/util/Iterator;->next()Ljava/lang/Object;

    move-result-object v10

    check-cast v10, Lfreemarker/template/TemplateModel;

    aget-object v11, v5, v9

    if-eqz v3, :cond_4

    aget v12, v3, v9

    goto :goto_3

    :cond_4
    const/4 v12, 0x0

    .line 167
    :goto_3
    invoke-virtual {p2, v10, v11, v12}, Lfreemarker/ext/beans/BeansWrapper;->tryUnwrapTo(Lfreemarker/template/TemplateModel;Ljava/lang/Class;I)Ljava/lang/Object;

    move-result-object v10

    .line 171
    .local v10, "pojo":Ljava/lang/Object;
    sget-object v11, Lfreemarker/template/ObjectWrapperAndUnwrapper;->CANT_UNWRAP_TO_TARGET_CLASS:Ljava/lang/Object;

    if-ne v10, v11, :cond_6

    .line 172
    nop

    .line 149
    .end local v5    # "unwarappingHints":[Ljava/lang/Class;
    .end local v7    # "it":Ljava/util/Iterator;
    .end local v8    # "i":I
    .end local v9    # "paramIdx":I
    .end local v10    # "pojo":Ljava/lang/Object;
    :cond_5
    add-int/lit8 v4, v4, -0x1

    goto :goto_0

    .line 174
    .restart local v5    # "unwarappingHints":[Ljava/lang/Class;
    .restart local v7    # "it":Ljava/util/Iterator;
    .restart local v8    # "i":I
    .restart local v9    # "paramIdx":I
    .restart local v10    # "pojo":Ljava/lang/Object;
    :cond_6
    aput-object v10, v2, v8

    .line 165
    .end local v9    # "paramIdx":I
    .end local v10    # "pojo":Ljava/lang/Object;
    add-int/lit8 v8, v8, 0x1

    goto :goto_1

    .line 179
    .end local v4    # "paramCount":I
    .end local v5    # "unwarappingHints":[Ljava/lang/Class;
    .end local v7    # "it":Ljava/util/Iterator;
    .end local v8    # "i":I
    :cond_7
    invoke-virtual {p0, v2, v6}, Lfreemarker/ext/beans/OverloadedVarArgsMethods;->getMemberDescriptorForArgs([Ljava/lang/Object;Z)Lfreemarker/ext/beans/MaybeEmptyCallableMemberDescriptor;

    move-result-object v4

    .line 180
    .local v4, "maybeEmtpyMemberDesc":Lfreemarker/ext/beans/MaybeEmptyCallableMemberDescriptor;
    instance-of v5, v4, Lfreemarker/ext/beans/CallableMemberDescriptor;

    if-eqz v5, :cond_b

    .line 181
    move-object v5, v4

    check-cast v5, Lfreemarker/ext/beans/CallableMemberDescriptor;

    .line 183
    .local v5, "memberDesc":Lfreemarker/ext/beans/CallableMemberDescriptor;
    invoke-direct {p0, v2, p1, v5, p2}, Lfreemarker/ext/beans/OverloadedVarArgsMethods;->replaceVarargsSectionWithArray([Ljava/lang/Object;Ljava/util/List;Lfreemarker/ext/beans/CallableMemberDescriptor;Lfreemarker/ext/beans/BeansWrapper;)Ljava/lang/Object;

    move-result-object v6

    .line 184
    .local v6, "argsOrErrorIdx":Ljava/lang/Object;
    instance-of v7, v6, [Ljava/lang/Object;

    if-eqz v7, :cond_a

    .line 185
    move-object v7, v6

    check-cast v7, [Ljava/lang/Object;

    check-cast v7, [Ljava/lang/Object;

    .line 189
    .local v7, "pojoArgsWithArray":[Ljava/lang/Object;
    iget-boolean v8, p0, Lfreemarker/ext/beans/OverloadedVarArgsMethods;->bugfixed:Z

    if-eqz v8, :cond_8

    .line 190
    if-eqz v3, :cond_9

    .line 194
    invoke-virtual {v5}, Lfreemarker/ext/beans/CallableMemberDescriptor;->getParamTypes()[Ljava/lang/Class;

    move-result-object v8

    invoke-virtual {p0, v7, v8, v3}, Lfreemarker/ext/beans/OverloadedVarArgsMethods;->forceNumberArgumentsToParameterTypes([Ljava/lang/Object;[Ljava/lang/Class;[I)V

    goto :goto_4

    .line 197
    :cond_8
    invoke-virtual {v5}, Lfreemarker/ext/beans/CallableMemberDescriptor;->getParamTypes()[Ljava/lang/Class;

    move-result-object v8

    invoke-static {v8, v7}, Lfreemarker/ext/beans/BeansWrapper;->coerceBigDecimals([Ljava/lang/Class;[Ljava/lang/Object;)V

    .line 199
    :cond_9
    :goto_4
    new-instance v8, Lfreemarker/ext/beans/MemberAndArguments;

    invoke-direct {v8, v5, v7}, Lfreemarker/ext/beans/MemberAndArguments;-><init>(Lfreemarker/ext/beans/CallableMemberDescriptor;[Ljava/lang/Object;)V

    return-object v8

    .line 187
    .end local v7    # "pojoArgsWithArray":[Ljava/lang/Object;
    :cond_a
    move-object v7, v6

    check-cast v7, Ljava/lang/Integer;

    invoke-virtual {v7}, Ljava/lang/Integer;->intValue()I

    move-result v7

    invoke-static {v7}, Lfreemarker/ext/beans/EmptyMemberAndArguments;->noCompatibleOverload(I)Lfreemarker/ext/beans/EmptyMemberAndArguments;

    move-result-object v7

    return-object v7

    .line 201
    .end local v5    # "memberDesc":Lfreemarker/ext/beans/CallableMemberDescriptor;
    .end local v6    # "argsOrErrorIdx":Ljava/lang/Object;
    :cond_b
    move-object v5, v4

    check-cast v5, Lfreemarker/ext/beans/EmptyCallableMemberDescriptor;

    invoke-static {v5, v2}, Lfreemarker/ext/beans/EmptyMemberAndArguments;->from(Lfreemarker/ext/beans/EmptyCallableMemberDescriptor;[Ljava/lang/Object;)Lfreemarker/ext/beans/MaybeEmptyMemberAndArguments;

    move-result-object v5

    return-object v5
.end method

.method preprocessParameterTypes(Lfreemarker/ext/beans/CallableMemberDescriptor;)[Ljava/lang/Class;
    .locals 5
    .param p1, "memberDesc"    # Lfreemarker/ext/beans/CallableMemberDescriptor;

    .line 42
    invoke-virtual {p1}, Lfreemarker/ext/beans/CallableMemberDescriptor;->getParamTypes()[Ljava/lang/Class;

    move-result-object v0

    invoke-virtual {v0}, Ljava/lang/Object;->clone()Ljava/lang/Object;

    move-result-object v0

    check-cast v0, [Ljava/lang/Class;

    check-cast v0, [Ljava/lang/Class;

    .line 43
    .local v0, "preprocessedParamTypes":[Ljava/lang/Class;
    array-length v1, v0

    .line 44
    .local v1, "ln":I
    add-int/lit8 v2, v1, -0x1

    aget-object v2, v0, v2

    invoke-virtual {v2}, Ljava/lang/Class;->getComponentType()Ljava/lang/Class;

    move-result-object v2

    .line 45
    .local v2, "varArgsCompType":Ljava/lang/Class;
    if-eqz v2, :cond_0

    .line 48
    add-int/lit8 v3, v1, -0x1

    aput-object v2, v0, v3

    .line 49
    return-object v0

    .line 46
    :cond_0
    new-instance v3, Lfreemarker/core/BugException;

    const-string v4, "Only varargs methods should be handled here"

    invoke-direct {v3, v4}, Lfreemarker/core/BugException;-><init>(Ljava/lang/String;)V

    throw v3
.end method
