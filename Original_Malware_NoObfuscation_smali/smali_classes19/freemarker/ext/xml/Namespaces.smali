.class Lfreemarker/ext/xml/Namespaces;
.super Ljava/lang/Object;
.source "Namespaces.java"

# interfaces
.implements Lfreemarker/template/TemplateMethodModel;
.implements Ljava/lang/Cloneable;


# instance fields
.field private namespaces:Ljava/util/HashMap;

.field private shared:Z


# direct methods
.method constructor <init>()V
    .locals 3

    .line 35
    invoke-direct {p0}, Ljava/lang/Object;-><init>()V

    .line 36
    new-instance v0, Ljava/util/HashMap;

    invoke-direct {v0}, Ljava/util/HashMap;-><init>()V

    iput-object v0, p0, Lfreemarker/ext/xml/Namespaces;->namespaces:Ljava/util/HashMap;

    .line 37
    const-string v1, ""

    invoke-virtual {v0, v1, v1}, Ljava/util/HashMap;->put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;

    .line 38
    iget-object v0, p0, Lfreemarker/ext/xml/Namespaces;->namespaces:Ljava/util/HashMap;

    const-string/jumbo v1, "xml"

    const-string v2, "http://www.w3.org/XML/1998/namespace"

    invoke-virtual {v0, v1, v2}, Ljava/util/HashMap;->put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;

    .line 39
    const/4 v0, 0x0

    iput-boolean v0, p0, Lfreemarker/ext/xml/Namespaces;->shared:Z

    .line 40
    return-void
.end method


# virtual methods
.method public clone()Ljava/lang/Object;
    .locals 2

    .line 44
    :try_start_0
    invoke-super {p0}, Ljava/lang/Object;->clone()Ljava/lang/Object;

    move-result-object v0

    check-cast v0, Lfreemarker/ext/xml/Namespaces;

    .line 45
    .local v0, "clone":Lfreemarker/ext/xml/Namespaces;
    iget-object v1, p0, Lfreemarker/ext/xml/Namespaces;->namespaces:Ljava/util/HashMap;

    invoke-virtual {v1}, Ljava/util/HashMap;->clone()Ljava/lang/Object;

    move-result-object v1

    check-cast v1, Ljava/util/HashMap;

    iput-object v1, v0, Lfreemarker/ext/xml/Namespaces;->namespaces:Ljava/util/HashMap;

    .line 46
    const/4 v1, 0x0

    iput-boolean v1, v0, Lfreemarker/ext/xml/Namespaces;->shared:Z
    :try_end_0
    .catch Ljava/lang/CloneNotSupportedException; {:try_start_0 .. :try_end_0} :catch_0

    .line 47
    return-object v0

    .line 49
    .end local v0    # "clone":Lfreemarker/ext/xml/Namespaces;
    :catch_0
    move-exception v0

    .line 50
    .local v0, "e":Ljava/lang/CloneNotSupportedException;
    new-instance v1, Ljava/lang/Error;

    invoke-direct {v1}, Ljava/lang/Error;-><init>()V

    throw v1
.end method

.method public exec(Ljava/util/List;)Ljava/lang/Object;
    .locals 2
    .param p1, "arguments"    # Ljava/util/List;
    .annotation system Ldalvik/annotation/Throws;
        value = {
            Lfreemarker/template/TemplateModelException;
        }
    .end annotation

    .line 61
    invoke-interface {p1}, Ljava/util/List;->size()I

    move-result v0

    const/4 v1, 0x2

    if-ne v0, v1, :cond_0

    .line 64
    const/4 v0, 0x0

    invoke-interface {p1, v0}, Ljava/util/List;->get(I)Ljava/lang/Object;

    move-result-object v0

    check-cast v0, Ljava/lang/String;

    const/4 v1, 0x1

    invoke-interface {p1, v1}, Ljava/util/List;->get(I)Ljava/lang/Object;

    move-result-object v1

    check-cast v1, Ljava/lang/String;

    invoke-virtual {p0, v0, v1}, Lfreemarker/ext/xml/Namespaces;->registerNamespace(Ljava/lang/String;Ljava/lang/String;)V

    .line 65
    sget-object v0, Lfreemarker/template/TemplateScalarModel;->EMPTY_STRING:Lfreemarker/template/TemplateModel;

    return-object v0

    .line 62
    :cond_0
    new-instance v0, Lfreemarker/template/TemplateModelException;

    const-string v1, "_registerNamespace(prefix, uri) requires two arguments"

    invoke-direct {v0, v1}, Lfreemarker/template/TemplateModelException;-><init>(Ljava/lang/String;)V

    throw v0
.end method

.method isShared()Z
    .locals 1

    .line 81
    iget-boolean v0, p0, Lfreemarker/ext/xml/Namespaces;->shared:Z

    return v0
.end method

.method markShared()V
    .locals 1

    .line 75
    iget-boolean v0, p0, Lfreemarker/ext/xml/Namespaces;->shared:Z

    if-nez v0, :cond_0

    .line 76
    const/4 v0, 0x1

    iput-boolean v0, p0, Lfreemarker/ext/xml/Namespaces;->shared:Z

    .line 78
    :cond_0
    return-void
.end method

.method registerNamespace(Ljava/lang/String;Ljava/lang/String;)V
    .locals 2
    .param p1, "prefix"    # Ljava/lang/String;
    .param p2, "uri"    # Ljava/lang/String;

    .line 69
    iget-object v0, p0, Lfreemarker/ext/xml/Namespaces;->namespaces:Ljava/util/HashMap;

    monitor-enter v0

    .line 70
    :try_start_0
    iget-object v1, p0, Lfreemarker/ext/xml/Namespaces;->namespaces:Ljava/util/HashMap;

    invoke-virtual {v1, p1, p2}, Ljava/util/HashMap;->put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;

    .line 71
    monitor-exit v0

    .line 72
    return-void

    .line 71
    :catchall_0
    move-exception v1

    monitor-exit v0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    throw v1
.end method

.method public translateNamespacePrefixToUri(Ljava/lang/String;)Ljava/lang/String;
    .locals 2
    .param p1, "prefix"    # Ljava/lang/String;

    .line 55
    iget-object v0, p0, Lfreemarker/ext/xml/Namespaces;->namespaces:Ljava/util/HashMap;

    monitor-enter v0

    .line 56
    :try_start_0
    iget-object v1, p0, Lfreemarker/ext/xml/Namespaces;->namespaces:Ljava/util/HashMap;

    invoke-virtual {v1, p1}, Ljava/util/HashMap;->get(Ljava/lang/Object;)Ljava/lang/Object;

    move-result-object v1

    check-cast v1, Ljava/lang/String;

    monitor-exit v0

    return-object v1

    .line 57
    :catchall_0
    move-exception v1

    monitor-exit v0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    throw v1
.end method
