.class Lfreemarker/template/utility/StandardCompress$StandardCompressWriter;
.super Ljava/io/Writer;
.source "StandardCompress.java"


# annotations
.annotation system Ldalvik/annotation/EnclosingClass;
    value = Lfreemarker/template/utility/StandardCompress;
.end annotation

.annotation system Ldalvik/annotation/InnerClass;
    accessFlags = 0xa
    name = "StandardCompressWriter"
.end annotation


# static fields
.field private static final AT_BEGINNING:I = 0x0

.field private static final INIT:I = 0x2

.field private static final LINEBREAK_CR:I = 0x4

.field private static final LINEBREAK_CRLF:I = 0x5

.field private static final LINEBREAK_LF:I = 0x6

.field private static final MAX_EOL_LENGTH:I = 0x2

.field private static final SAW_CR:I = 0x3

.field private static final SINGLE_LINE:I = 0x1


# instance fields
.field private final buf:[C

.field private inWhitespace:Z

.field private lineBreakState:I

.field private final out:Ljava/io/Writer;

.field private pos:I

.field private final singleLine:Z


# direct methods
.method public constructor <init>(Ljava/io/Writer;IZ)V
    .locals 2
    .param p1, "out"    # Ljava/io/Writer;
    .param p2, "bufSize"    # I
    .param p3, "singleLine"    # Z

    .line 133
    invoke-direct {p0}, Ljava/io/Writer;-><init>()V

    .line 129
    const/4 v0, 0x0

    iput v0, p0, Lfreemarker/template/utility/StandardCompress$StandardCompressWriter;->pos:I

    .line 130
    const/4 v1, 0x1

    iput-boolean v1, p0, Lfreemarker/template/utility/StandardCompress$StandardCompressWriter;->inWhitespace:Z

    .line 131
    iput v0, p0, Lfreemarker/template/utility/StandardCompress$StandardCompressWriter;->lineBreakState:I

    .line 134
    iput-object p1, p0, Lfreemarker/template/utility/StandardCompress$StandardCompressWriter;->out:Ljava/io/Writer;

    .line 135
    iput-boolean p3, p0, Lfreemarker/template/utility/StandardCompress$StandardCompressWriter;->singleLine:Z

    .line 136
    new-array v0, p2, [C

    iput-object v0, p0, Lfreemarker/template/utility/StandardCompress$StandardCompressWriter;->buf:[C

    .line 137
    return-void
.end method

.method private flushInternal()V
    .locals 4
    .annotation system Ldalvik/annotation/Throws;
        value = {
            Ljava/io/IOException;
        }
    .end annotation

    .line 224
    iget-object v0, p0, Lfreemarker/template/utility/StandardCompress$StandardCompressWriter;->out:Ljava/io/Writer;

    iget-object v1, p0, Lfreemarker/template/utility/StandardCompress$StandardCompressWriter;->buf:[C

    iget v2, p0, Lfreemarker/template/utility/StandardCompress$StandardCompressWriter;->pos:I

    const/4 v3, 0x0

    invoke-virtual {v0, v1, v3, v2}, Ljava/io/Writer;->write([CII)V

    .line 225
    iput v3, p0, Lfreemarker/template/utility/StandardCompress$StandardCompressWriter;->pos:I

    .line 226
    return-void
.end method

.method private updateLineBreakState(C)V
    .locals 2
    .param p1, "c"    # C

    .line 182
    iget v0, p0, Lfreemarker/template/utility/StandardCompress$StandardCompressWriter;->lineBreakState:I

    const/16 v1, 0xa

    packed-switch v0, :pswitch_data_0

    goto :goto_0

    .line 191
    :pswitch_0
    if-ne p1, v1, :cond_0

    .line 192
    const/4 v0, 0x5

    iput v0, p0, Lfreemarker/template/utility/StandardCompress$StandardCompressWriter;->lineBreakState:I

    goto :goto_0

    .line 194
    :cond_0
    const/4 v0, 0x4

    iput v0, p0, Lfreemarker/template/utility/StandardCompress$StandardCompressWriter;->lineBreakState:I

    goto :goto_0

    .line 184
    :pswitch_1
    const/16 v0, 0xd

    if-ne p1, v0, :cond_1

    .line 185
    const/4 v0, 0x3

    iput v0, p0, Lfreemarker/template/utility/StandardCompress$StandardCompressWriter;->lineBreakState:I

    goto :goto_0

    .line 186
    :cond_1
    if-ne p1, v1, :cond_2

    .line 187
    const/4 v0, 0x6

    iput v0, p0, Lfreemarker/template/utility/StandardCompress$StandardCompressWriter;->lineBreakState:I

    .line 197
    :cond_2
    :goto_0
    return-void

    :pswitch_data_0
    .packed-switch 0x2
        :pswitch_1
        :pswitch_0
    .end packed-switch
.end method

.method private writeHelper([CII)V
    .locals 6
    .param p1, "cbuf"    # [C
    .param p2, "off"    # I
    .param p3, "len"    # I

    .line 158
    move v0, p2

    .local v0, "i":I
    add-int v1, p2, p3

    .local v1, "end":I
    :goto_0
    if-ge v0, v1, :cond_2

    .line 159
    aget-char v2, p1, v0

    .line 160
    .local v2, "c":C
    invoke-static {v2}, Ljava/lang/Character;->isWhitespace(C)Z

    move-result v3

    if-eqz v3, :cond_0

    .line 161
    const/4 v3, 0x1

    iput-boolean v3, p0, Lfreemarker/template/utility/StandardCompress$StandardCompressWriter;->inWhitespace:Z

    .line 162
    invoke-direct {p0, v2}, Lfreemarker/template/utility/StandardCompress$StandardCompressWriter;->updateLineBreakState(C)V

    goto :goto_1

    .line 163
    :cond_0
    iget-boolean v3, p0, Lfreemarker/template/utility/StandardCompress$StandardCompressWriter;->inWhitespace:Z

    if-eqz v3, :cond_1

    .line 164
    const/4 v3, 0x0

    iput-boolean v3, p0, Lfreemarker/template/utility/StandardCompress$StandardCompressWriter;->inWhitespace:Z

    .line 165
    invoke-direct {p0}, Lfreemarker/template/utility/StandardCompress$StandardCompressWriter;->writeLineBreakOrSpace()V

    .line 166
    iget-object v3, p0, Lfreemarker/template/utility/StandardCompress$StandardCompressWriter;->buf:[C

    iget v4, p0, Lfreemarker/template/utility/StandardCompress$StandardCompressWriter;->pos:I

    add-int/lit8 v5, v4, 0x1

    iput v5, p0, Lfreemarker/template/utility/StandardCompress$StandardCompressWriter;->pos:I

    aput-char v2, v3, v4

    goto :goto_1

    .line 168
    :cond_1
    iget-object v3, p0, Lfreemarker/template/utility/StandardCompress$StandardCompressWriter;->buf:[C

    iget v4, p0, Lfreemarker/template/utility/StandardCompress$StandardCompressWriter;->pos:I

    add-int/lit8 v5, v4, 0x1

    iput v5, p0, Lfreemarker/template/utility/StandardCompress$StandardCompressWriter;->pos:I

    aput-char v2, v3, v4

    .line 158
    .end local v2    # "c":C
    :goto_1
    add-int/lit8 v0, v0, 0x1

    goto :goto_0

    .line 171
    .end local v0    # "i":I
    .end local v1    # "end":I
    :cond_2
    return-void
.end method

.method private writeLineBreakOrSpace()V
    .locals 4

    .line 201
    iget v0, p0, Lfreemarker/template/utility/StandardCompress$StandardCompressWriter;->lineBreakState:I

    const/16 v1, 0xd

    packed-switch v0, :pswitch_data_0

    goto :goto_0

    .line 208
    :pswitch_0
    iget-object v0, p0, Lfreemarker/template/utility/StandardCompress$StandardCompressWriter;->buf:[C

    iget v2, p0, Lfreemarker/template/utility/StandardCompress$StandardCompressWriter;->pos:I

    add-int/lit8 v3, v2, 0x1

    iput v3, p0, Lfreemarker/template/utility/StandardCompress$StandardCompressWriter;->pos:I

    aput-char v1, v0, v2

    .line 211
    :pswitch_1
    iget-object v0, p0, Lfreemarker/template/utility/StandardCompress$StandardCompressWriter;->buf:[C

    iget v1, p0, Lfreemarker/template/utility/StandardCompress$StandardCompressWriter;->pos:I

    add-int/lit8 v2, v1, 0x1

    iput v2, p0, Lfreemarker/template/utility/StandardCompress$StandardCompressWriter;->pos:I

    const/16 v2, 0xa

    aput-char v2, v0, v1

    .line 212
    goto :goto_0

    .line 205
    :pswitch_2
    iget-object v0, p0, Lfreemarker/template/utility/StandardCompress$StandardCompressWriter;->buf:[C

    iget v2, p0, Lfreemarker/template/utility/StandardCompress$StandardCompressWriter;->pos:I

    add-int/lit8 v3, v2, 0x1

    iput v3, p0, Lfreemarker/template/utility/StandardCompress$StandardCompressWriter;->pos:I

    aput-char v1, v0, v2

    .line 206
    goto :goto_0

    .line 218
    :pswitch_3
    iget-object v0, p0, Lfreemarker/template/utility/StandardCompress$StandardCompressWriter;->buf:[C

    iget v1, p0, Lfreemarker/template/utility/StandardCompress$StandardCompressWriter;->pos:I

    add-int/lit8 v2, v1, 0x1

    iput v2, p0, Lfreemarker/template/utility/StandardCompress$StandardCompressWriter;->pos:I

    const/16 v2, 0x20

    aput-char v2, v0, v1

    goto :goto_0

    .line 215
    :pswitch_4
    nop

    .line 220
    :goto_0
    iget-boolean v0, p0, Lfreemarker/template/utility/StandardCompress$StandardCompressWriter;->singleLine:Z

    if-eqz v0, :cond_0

    const/4 v0, 0x1

    goto :goto_1

    :cond_0
    const/4 v0, 0x2

    :goto_1
    iput v0, p0, Lfreemarker/template/utility/StandardCompress$StandardCompressWriter;->lineBreakState:I

    .line 221
    return-void

    :pswitch_data_0
    .packed-switch 0x0
        :pswitch_4
        :pswitch_3
        :pswitch_3
        :pswitch_2
        :pswitch_2
        :pswitch_0
        :pswitch_1
    .end packed-switch
.end method


# virtual methods
.method public close()V
    .locals 0
    .annotation system Ldalvik/annotation/Throws;
        value = {
            Ljava/io/IOException;
        }
    .end annotation

    .line 234
    invoke-direct {p0}, Lfreemarker/template/utility/StandardCompress$StandardCompressWriter;->flushInternal()V

    .line 235
    return-void
.end method

.method public flush()V
    .locals 1
    .annotation system Ldalvik/annotation/Throws;
        value = {
            Ljava/io/IOException;
        }
    .end annotation

    .line 229
    invoke-direct {p0}, Lfreemarker/template/utility/StandardCompress$StandardCompressWriter;->flushInternal()V

    .line 230
    iget-object v0, p0, Lfreemarker/template/utility/StandardCompress$StandardCompressWriter;->out:Ljava/io/Writer;

    invoke-virtual {v0}, Ljava/io/Writer;->flush()V

    .line 231
    return-void
.end method

.method public write([CII)V
    .locals 2
    .param p1, "cbuf"    # [C
    .param p2, "off"    # I
    .param p3, "len"    # I
    .annotation system Ldalvik/annotation/Throws;
        value = {
            Ljava/io/IOException;
        }
    .end annotation

    .line 142
    :goto_0
    iget-object v0, p0, Lfreemarker/template/utility/StandardCompress$StandardCompressWriter;->buf:[C

    array-length v0, v0

    iget v1, p0, Lfreemarker/template/utility/StandardCompress$StandardCompressWriter;->pos:I

    sub-int/2addr v0, v1

    add-int/lit8 v0, v0, -0x2

    .line 143
    .local v0, "room":I
    if-lt v0, p3, :cond_0

    .line 144
    invoke-direct {p0, p1, p2, p3}, Lfreemarker/template/utility/StandardCompress$StandardCompressWriter;->writeHelper([CII)V

    .line 145
    nop

    .line 155
    .end local v0    # "room":I
    return-void

    .line 146
    .restart local v0    # "room":I
    :cond_0
    if-gtz v0, :cond_1

    .line 147
    invoke-direct {p0}, Lfreemarker/template/utility/StandardCompress$StandardCompressWriter;->flushInternal()V

    goto :goto_1

    .line 149
    :cond_1
    invoke-direct {p0, p1, p2, v0}, Lfreemarker/template/utility/StandardCompress$StandardCompressWriter;->writeHelper([CII)V

    .line 150
    invoke-direct {p0}, Lfreemarker/template/utility/StandardCompress$StandardCompressWriter;->flushInternal()V

    .line 151
    add-int/2addr p2, v0

    .line 152
    sub-int/2addr p3, v0

    .line 154
    .end local v0    # "room":I
    :goto_1
    goto :goto_0
.end method
