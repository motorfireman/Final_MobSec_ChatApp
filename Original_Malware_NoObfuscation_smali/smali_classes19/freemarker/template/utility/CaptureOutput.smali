.class public Lfreemarker/template/utility/CaptureOutput;
.super Ljava/lang/Object;
.source "CaptureOutput.java"

# interfaces
.implements Lfreemarker/template/TemplateTransformModel;


# direct methods
.method public constructor <init>()V
    .locals 0

    .line 58
    invoke-direct {p0}, Ljava/lang/Object;-><init>()V

    return-void
.end method


# virtual methods
.method public getWriter(Ljava/io/Writer;Ljava/util/Map;)Ljava/io/Writer;
    .locals 18
    .param p1, "out"    # Ljava/io/Writer;
    .param p2, "args"    # Ljava/util/Map;
    .annotation system Ldalvik/annotation/Throws;
        value = {
            Lfreemarker/template/TemplateModelException;
        }
    .end annotation

    .line 61
    move-object/from16 v0, p2

    const-string v1, "Must specify the name of the variable in which to capture the output with the \'var\' or \'local\' or \'global\' parameter."

    .line 63
    .local v1, "errmsg":Ljava/lang/String;
    if-eqz v0, :cond_b

    .line 65
    const/4 v2, 0x0

    .local v2, "local":Z
    const/4 v3, 0x0

    .line 66
    .local v3, "global":Z
    const-string v4, "namespace"

    invoke-interface {v0, v4}, Ljava/util/Map;->get(Ljava/lang/Object;)Ljava/lang/Object;

    move-result-object v4

    check-cast v4, Lfreemarker/template/TemplateModel;

    .line 67
    .local v4, "nsModel":Lfreemarker/template/TemplateModel;
    const-string/jumbo v5, "var"

    invoke-interface {v0, v5}, Ljava/util/Map;->get(Ljava/lang/Object;)Ljava/lang/Object;

    move-result-object v5

    .line 68
    .local v5, "varNameModel":Ljava/lang/Object;
    if-nez v5, :cond_2

    .line 69
    const-string v6, "local"

    invoke-interface {v0, v6}, Ljava/util/Map;->get(Ljava/lang/Object;)Ljava/lang/Object;

    move-result-object v5

    .line 70
    if-nez v5, :cond_0

    .line 71
    const-string v6, "global"

    invoke-interface {v0, v6}, Ljava/util/Map;->get(Ljava/lang/Object;)Ljava/lang/Object;

    move-result-object v5

    .line 72
    const/4 v3, 0x1

    goto :goto_0

    .line 74
    :cond_0
    const/4 v2, 0x1

    .line 76
    :goto_0
    if-eqz v5, :cond_1

    move-object v14, v5

    goto :goto_1

    .line 77
    :cond_1
    new-instance v6, Lfreemarker/template/TemplateModelException;

    invoke-direct {v6, v1}, Lfreemarker/template/TemplateModelException;-><init>(Ljava/lang/String;)V

    throw v6

    .line 68
    :cond_2
    move-object v14, v5

    .line 80
    .end local v5    # "varNameModel":Ljava/lang/Object;
    .local v14, "varNameModel":Ljava/lang/Object;
    :goto_1
    invoke-interface/range {p2 .. p2}, Ljava/util/Map;->size()I

    move-result v5

    const/4 v6, 0x2

    if-ne v5, v6, :cond_7

    .line 81
    if-eqz v4, :cond_6

    .line 84
    if-nez v2, :cond_5

    .line 87
    if-nez v3, :cond_4

    .line 90
    instance-of v5, v4, Lfreemarker/core/Environment$Namespace;

    if-eqz v5, :cond_3

    goto :goto_2

    .line 91
    :cond_3
    new-instance v5, Lfreemarker/template/TemplateModelException;

    new-instance v6, Ljava/lang/StringBuffer;

    invoke-direct {v6}, Ljava/lang/StringBuffer;-><init>()V

    const-string v7, "namespace parameter does not specify a namespace. It is a "

    invoke-virtual {v6, v7}, Ljava/lang/StringBuffer;->append(Ljava/lang/String;)Ljava/lang/StringBuffer;

    move-result-object v6

    invoke-virtual {v4}, Ljava/lang/Object;->getClass()Ljava/lang/Class;

    move-result-object v7

    invoke-virtual {v7}, Ljava/lang/Class;->getName()Ljava/lang/String;

    move-result-object v7

    invoke-virtual {v6, v7}, Ljava/lang/StringBuffer;->append(Ljava/lang/String;)Ljava/lang/StringBuffer;

    move-result-object v6

    invoke-virtual {v6}, Ljava/lang/StringBuffer;->toString()Ljava/lang/String;

    move-result-object v6

    invoke-direct {v5, v6}, Lfreemarker/template/TemplateModelException;-><init>(Ljava/lang/String;)V

    throw v5

    .line 88
    :cond_4
    new-instance v5, Lfreemarker/template/TemplateModelException;

    const-string v6, "Cannot specify namespace for a global assignment"

    invoke-direct {v5, v6}, Lfreemarker/template/TemplateModelException;-><init>(Ljava/lang/String;)V

    throw v5

    .line 85
    :cond_5
    new-instance v5, Lfreemarker/template/TemplateModelException;

    const-string v6, "Cannot specify namespace for a local assignment"

    invoke-direct {v5, v6}, Lfreemarker/template/TemplateModelException;-><init>(Ljava/lang/String;)V

    throw v5

    .line 82
    :cond_6
    new-instance v5, Lfreemarker/template/TemplateModelException;

    const-string v6, "Second parameter can only be namespace"

    invoke-direct {v5, v6}, Lfreemarker/template/TemplateModelException;-><init>(Ljava/lang/String;)V

    throw v5

    .line 94
    :cond_7
    invoke-interface/range {p2 .. p2}, Ljava/util/Map;->size()I

    move-result v5

    const/4 v6, 0x1

    if-ne v5, v6, :cond_a

    .line 97
    :goto_2
    instance-of v5, v14, Lfreemarker/template/TemplateScalarModel;

    if-eqz v5, :cond_9

    .line 100
    move-object v5, v14

    check-cast v5, Lfreemarker/template/TemplateScalarModel;

    invoke-interface {v5}, Lfreemarker/template/TemplateScalarModel;->getAsString()Ljava/lang/String;

    move-result-object v15

    .line 101
    .local v15, "varName":Ljava/lang/String;
    if-eqz v15, :cond_8

    .line 105
    new-instance v7, Ljava/lang/StringBuffer;

    invoke-direct {v7}, Ljava/lang/StringBuffer;-><init>()V

    .line 106
    .local v7, "buf":Ljava/lang/StringBuffer;
    invoke-static {}, Lfreemarker/core/Environment;->getCurrentEnvironment()Lfreemarker/core/Environment;

    move-result-object v16

    .line 107
    .local v16, "env":Lfreemarker/core/Environment;
    move v9, v2

    .line 108
    .local v9, "localVar":Z
    move v12, v3

    .line 110
    .local v12, "globalVar":Z
    new-instance v17, Lfreemarker/template/utility/CaptureOutput$1;

    move-object/from16 v5, v17

    move-object/from16 v6, p0

    move-object/from16 v8, p1

    move-object/from16 v10, v16

    move-object v11, v15

    move-object v13, v4

    invoke-direct/range {v5 .. v13}, Lfreemarker/template/utility/CaptureOutput$1;-><init>(Lfreemarker/template/utility/CaptureOutput;Ljava/lang/StringBuffer;Ljava/io/Writer;ZLfreemarker/core/Environment;Ljava/lang/String;ZLfreemarker/template/TemplateModel;)V

    return-object v17

    .line 102
    .end local v7    # "buf":Ljava/lang/StringBuffer;
    .end local v9    # "localVar":Z
    .end local v12    # "globalVar":Z
    .end local v16    # "env":Lfreemarker/core/Environment;
    :cond_8
    new-instance v5, Lfreemarker/template/TemplateModelException;

    const-string v6, "\'var\' or \'local\' or \'global\' parameter evaluates to null string"

    invoke-direct {v5, v6}, Lfreemarker/template/TemplateModelException;-><init>(Ljava/lang/String;)V

    throw v5

    .line 98
    .end local v15    # "varName":Ljava/lang/String;
    :cond_9
    new-instance v5, Lfreemarker/template/TemplateModelException;

    const-string v6, "\'var\' or \'local\' or \'global\' parameter doesn\'t evaluate to a string"

    invoke-direct {v5, v6}, Lfreemarker/template/TemplateModelException;-><init>(Ljava/lang/String;)V

    throw v5

    .line 94
    :cond_a
    new-instance v5, Lfreemarker/template/TemplateModelException;

    const-string v6, "Bad parameters. Use only one of \'var\' or \'local\' or \'global\' parameters."

    invoke-direct {v5, v6}, Lfreemarker/template/TemplateModelException;-><init>(Ljava/lang/String;)V

    throw v5

    .line 63
    .end local v2    # "local":Z
    .end local v3    # "global":Z
    .end local v4    # "nsModel":Lfreemarker/template/TemplateModel;
    .end local v14    # "varNameModel":Ljava/lang/Object;
    :cond_b
    new-instance v2, Lfreemarker/template/TemplateModelException;

    invoke-direct {v2, v1}, Lfreemarker/template/TemplateModelException;-><init>(Ljava/lang/String;)V

    throw v2
.end method
