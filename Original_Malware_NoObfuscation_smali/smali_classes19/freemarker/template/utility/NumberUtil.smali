.class public Lfreemarker/template/utility/NumberUtil;
.super Ljava/lang/Object;
.source "NumberUtil.java"


# static fields
.field private static final BIG_DECIMAL_INT_MAX:Ljava/math/BigDecimal;

.field private static final BIG_DECIMAL_INT_MIN:Ljava/math/BigDecimal;

.field private static final BIG_INTEGER_INT_MAX:Ljava/math/BigInteger;

.field private static final BIG_INTEGER_INT_MIN:Ljava/math/BigInteger;

.field static synthetic class$java$lang$Integer:Ljava/lang/Class;


# direct methods
.method static constructor <clinit>()V
    .locals 3

    .line 29
    const-wide/32 v0, -0x80000000

    invoke-static {v0, v1}, Ljava/math/BigDecimal;->valueOf(J)Ljava/math/BigDecimal;

    move-result-object v0

    sput-object v0, Lfreemarker/template/utility/NumberUtil;->BIG_DECIMAL_INT_MIN:Ljava/math/BigDecimal;

    .line 30
    const-wide/32 v1, 0x7fffffff

    invoke-static {v1, v2}, Ljava/math/BigDecimal;->valueOf(J)Ljava/math/BigDecimal;

    move-result-object v1

    sput-object v1, Lfreemarker/template/utility/NumberUtil;->BIG_DECIMAL_INT_MAX:Ljava/math/BigDecimal;

    .line 31
    invoke-virtual {v0}, Ljava/math/BigDecimal;->toBigInteger()Ljava/math/BigInteger;

    move-result-object v0

    sput-object v0, Lfreemarker/template/utility/NumberUtil;->BIG_INTEGER_INT_MIN:Ljava/math/BigInteger;

    .line 32
    invoke-virtual {v1}, Ljava/math/BigDecimal;->toBigInteger()Ljava/math/BigInteger;

    move-result-object v0

    sput-object v0, Lfreemarker/template/utility/NumberUtil;->BIG_INTEGER_INT_MAX:Ljava/math/BigInteger;

    return-void
.end method

.method private constructor <init>()V
    .locals 0

    .line 34
    invoke-direct {p0}, Ljava/lang/Object;-><init>()V

    return-void
.end method

.method static synthetic class$(Ljava/lang/String;)Ljava/lang/Class;
    .locals 2
    .param p0, "x0"    # Ljava/lang/String;

    .line 134
    :try_start_0
    invoke-static {p0}, Ljava/lang/Class;->forName(Ljava/lang/String;)Ljava/lang/Class;

    move-result-object v0
    :try_end_0
    .catch Ljava/lang/ClassNotFoundException; {:try_start_0 .. :try_end_0} :catch_0

    return-object v0

    :catch_0
    move-exception v0

    new-instance v1, Ljava/lang/NoClassDefFoundError;

    invoke-direct {v1}, Ljava/lang/NoClassDefFoundError;-><init>()V

    invoke-virtual {v1, v0}, Ljava/lang/NoClassDefFoundError;->initCause(Ljava/lang/Throwable;)Ljava/lang/Throwable;

    move-result-object v0

    throw v0
.end method

.method public static getSignum(Ljava/lang/Number;)I
    .locals 10
    .param p0, "num"    # Ljava/lang/Number;
    .annotation system Ldalvik/annotation/Throws;
        value = {
            Ljava/lang/ArithmeticException;
        }
    .end annotation

    .line 65
    instance-of v0, p0, Ljava/lang/Integer;

    const/4 v1, 0x0

    const/4 v2, -0x1

    const/4 v3, 0x1

    if-eqz v0, :cond_2

    .line 66
    move-object v0, p0

    check-cast v0, Ljava/lang/Integer;

    invoke-virtual {v0}, Ljava/lang/Integer;->intValue()I

    move-result v0

    .line 67
    .local v0, "n":I
    if-lez v0, :cond_0

    move v1, v3

    goto :goto_0

    :cond_0
    if-nez v0, :cond_1

    goto :goto_0

    :cond_1
    move v1, v2

    :goto_0
    return v1

    .line 68
    .end local v0    # "n":I
    :cond_2
    instance-of v0, p0, Ljava/math/BigDecimal;

    if-eqz v0, :cond_3

    .line 69
    move-object v0, p0

    check-cast v0, Ljava/math/BigDecimal;

    .line 70
    .local v0, "n":Ljava/math/BigDecimal;
    invoke-virtual {v0}, Ljava/math/BigDecimal;->signum()I

    move-result v1

    return v1

    .line 71
    .end local v0    # "n":Ljava/math/BigDecimal;
    :cond_3
    instance-of v0, p0, Ljava/lang/Double;

    const-string v4, " is not defined."

    const-string v5, "The signum of "

    if-eqz v0, :cond_7

    .line 72
    move-object v0, p0

    check-cast v0, Ljava/lang/Double;

    invoke-virtual {v0}, Ljava/lang/Double;->doubleValue()D

    move-result-wide v6

    .line 73
    .local v6, "n":D
    const-wide/16 v8, 0x0

    cmpl-double v0, v6, v8

    if-lez v0, :cond_4

    return v3

    .line 74
    :cond_4
    cmpl-double v0, v6, v8

    if-nez v0, :cond_5

    return v1

    .line 75
    :cond_5
    cmpg-double v0, v6, v8

    if-gez v0, :cond_6

    return v2

    .line 76
    :cond_6
    new-instance v0, Ljava/lang/ArithmeticException;

    new-instance v1, Ljava/lang/StringBuffer;

    invoke-direct {v1}, Ljava/lang/StringBuffer;-><init>()V

    invoke-virtual {v1, v5}, Ljava/lang/StringBuffer;->append(Ljava/lang/String;)Ljava/lang/StringBuffer;

    move-result-object v1

    invoke-virtual {v1, v6, v7}, Ljava/lang/StringBuffer;->append(D)Ljava/lang/StringBuffer;

    move-result-object v1

    invoke-virtual {v1, v4}, Ljava/lang/StringBuffer;->append(Ljava/lang/String;)Ljava/lang/StringBuffer;

    move-result-object v1

    invoke-virtual {v1}, Ljava/lang/StringBuffer;->toString()Ljava/lang/String;

    move-result-object v1

    invoke-direct {v0, v1}, Ljava/lang/ArithmeticException;-><init>(Ljava/lang/String;)V

    throw v0

    .line 77
    .end local v6    # "n":D
    :cond_7
    instance-of v0, p0, Ljava/lang/Float;

    if-eqz v0, :cond_b

    .line 78
    move-object v0, p0

    check-cast v0, Ljava/lang/Float;

    invoke-virtual {v0}, Ljava/lang/Float;->floatValue()F

    move-result v0

    .line 79
    .local v0, "n":F
    const/4 v6, 0x0

    cmpl-float v7, v0, v6

    if-lez v7, :cond_8

    return v3

    .line 80
    :cond_8
    cmpl-float v3, v0, v6

    if-nez v3, :cond_9

    return v1

    .line 81
    :cond_9
    cmpg-float v1, v0, v6

    if-gez v1, :cond_a

    return v2

    .line 82
    :cond_a
    new-instance v1, Ljava/lang/ArithmeticException;

    new-instance v2, Ljava/lang/StringBuffer;

    invoke-direct {v2}, Ljava/lang/StringBuffer;-><init>()V

    invoke-virtual {v2, v5}, Ljava/lang/StringBuffer;->append(Ljava/lang/String;)Ljava/lang/StringBuffer;

    move-result-object v2

    invoke-virtual {v2, v0}, Ljava/lang/StringBuffer;->append(F)Ljava/lang/StringBuffer;

    move-result-object v2

    invoke-virtual {v2, v4}, Ljava/lang/StringBuffer;->append(Ljava/lang/String;)Ljava/lang/StringBuffer;

    move-result-object v2

    invoke-virtual {v2}, Ljava/lang/StringBuffer;->toString()Ljava/lang/String;

    move-result-object v2

    invoke-direct {v1, v2}, Ljava/lang/ArithmeticException;-><init>(Ljava/lang/String;)V

    throw v1

    .line 83
    .end local v0    # "n":F
    :cond_b
    instance-of v0, p0, Ljava/lang/Long;

    if-eqz v0, :cond_e

    .line 84
    move-object v0, p0

    check-cast v0, Ljava/lang/Long;

    invoke-virtual {v0}, Ljava/lang/Long;->longValue()J

    move-result-wide v4

    .line 85
    .local v4, "n":J
    const-wide/16 v6, 0x0

    cmp-long v0, v4, v6

    if-lez v0, :cond_c

    move v1, v3

    goto :goto_1

    :cond_c
    cmp-long v0, v4, v6

    if-nez v0, :cond_d

    goto :goto_1

    :cond_d
    move v1, v2

    :goto_1
    return v1

    .line 86
    .end local v4    # "n":J
    :cond_e
    instance-of v0, p0, Ljava/lang/Short;

    if-eqz v0, :cond_11

    .line 87
    move-object v0, p0

    check-cast v0, Ljava/lang/Short;

    invoke-virtual {v0}, Ljava/lang/Short;->shortValue()S

    move-result v0

    .line 88
    .local v0, "n":S
    if-lez v0, :cond_f

    move v1, v3

    goto :goto_2

    :cond_f
    if-nez v0, :cond_10

    goto :goto_2

    :cond_10
    move v1, v2

    :goto_2
    return v1

    .line 89
    .end local v0    # "n":S
    :cond_11
    instance-of v0, p0, Ljava/lang/Byte;

    if-eqz v0, :cond_14

    .line 90
    move-object v0, p0

    check-cast v0, Ljava/lang/Byte;

    invoke-virtual {v0}, Ljava/lang/Byte;->byteValue()B

    move-result v0

    .line 91
    .local v0, "n":B
    if-lez v0, :cond_12

    move v1, v3

    goto :goto_3

    :cond_12
    if-nez v0, :cond_13

    goto :goto_3

    :cond_13
    move v1, v2

    :goto_3
    return v1

    .line 92
    .end local v0    # "n":B
    :cond_14
    instance-of v0, p0, Ljava/math/BigInteger;

    if-eqz v0, :cond_15

    .line 93
    move-object v0, p0

    check-cast v0, Ljava/math/BigInteger;

    .line 94
    .local v0, "n":Ljava/math/BigInteger;
    invoke-virtual {v0}, Ljava/math/BigInteger;->signum()I

    move-result v1

    return v1

    .line 96
    .end local v0    # "n":Ljava/math/BigInteger;
    :cond_15
    new-instance v0, Lfreemarker/template/utility/UnsupportedNumberClassException;

    invoke-virtual {p0}, Ljava/lang/Object;->getClass()Ljava/lang/Class;

    move-result-object v1

    invoke-direct {v0, v1}, Lfreemarker/template/utility/UnsupportedNumberClassException;-><init>(Ljava/lang/Class;)V

    throw v0
.end method

.method public static isInfinite(Ljava/lang/Number;)Z
    .locals 2
    .param p0, "num"    # Ljava/lang/Number;

    .line 37
    instance-of v0, p0, Ljava/lang/Double;

    if-eqz v0, :cond_0

    .line 38
    move-object v0, p0

    check-cast v0, Ljava/lang/Double;

    invoke-virtual {v0}, Ljava/lang/Double;->isInfinite()Z

    move-result v0

    return v0

    .line 39
    :cond_0
    instance-of v0, p0, Ljava/lang/Float;

    if-eqz v0, :cond_1

    .line 40
    move-object v0, p0

    check-cast v0, Ljava/lang/Float;

    invoke-virtual {v0}, Ljava/lang/Float;->isInfinite()Z

    move-result v0

    return v0

    .line 41
    :cond_1
    invoke-static {p0}, Lfreemarker/template/utility/NumberUtil;->isNonFPNumberOfSupportedClass(Ljava/lang/Number;)Z

    move-result v0

    if-eqz v0, :cond_2

    .line 42
    const/4 v0, 0x0

    return v0

    .line 44
    :cond_2
    new-instance v0, Lfreemarker/template/utility/UnsupportedNumberClassException;

    invoke-virtual {p0}, Ljava/lang/Object;->getClass()Ljava/lang/Class;

    move-result-object v1

    invoke-direct {v0, v1}, Lfreemarker/template/utility/UnsupportedNumberClassException;-><init>(Ljava/lang/Class;)V

    throw v0
.end method

.method public static isIntegerBigDecimal(Ljava/math/BigDecimal;)Z
    .locals 3
    .param p0, "bd"    # Ljava/math/BigDecimal;

    .line 108
    invoke-virtual {p0}, Ljava/math/BigDecimal;->scale()I

    move-result v0

    const/4 v1, 0x0

    const/4 v2, 0x1

    if-lez v0, :cond_0

    .line 109
    invoke-virtual {p0, v1, v2}, Ljava/math/BigDecimal;->setScale(II)Ljava/math/BigDecimal;

    move-result-object v0

    invoke-virtual {v0, p0}, Ljava/math/BigDecimal;->compareTo(Ljava/math/BigDecimal;)I

    move-result v0

    if-nez v0, :cond_1

    :cond_0
    move v1, v2

    :cond_1
    return v1
.end method

.method public static isNaN(Ljava/lang/Number;)Z
    .locals 2
    .param p0, "num"    # Ljava/lang/Number;

    .line 49
    instance-of v0, p0, Ljava/lang/Double;

    if-eqz v0, :cond_0

    .line 50
    move-object v0, p0

    check-cast v0, Ljava/lang/Double;

    invoke-virtual {v0}, Ljava/lang/Double;->isNaN()Z

    move-result v0

    return v0

    .line 51
    :cond_0
    instance-of v0, p0, Ljava/lang/Float;

    if-eqz v0, :cond_1

    .line 52
    move-object v0, p0

    check-cast v0, Ljava/lang/Float;

    invoke-virtual {v0}, Ljava/lang/Float;->isNaN()Z

    move-result v0

    return v0

    .line 53
    :cond_1
    invoke-static {p0}, Lfreemarker/template/utility/NumberUtil;->isNonFPNumberOfSupportedClass(Ljava/lang/Number;)Z

    move-result v0

    if-eqz v0, :cond_2

    .line 54
    const/4 v0, 0x0

    return v0

    .line 56
    :cond_2
    new-instance v0, Lfreemarker/template/utility/UnsupportedNumberClassException;

    invoke-virtual {p0}, Ljava/lang/Object;->getClass()Ljava/lang/Class;

    move-result-object v1

    invoke-direct {v0, v1}, Lfreemarker/template/utility/UnsupportedNumberClassException;-><init>(Ljava/lang/Class;)V

    throw v0
.end method

.method private static isNonFPNumberOfSupportedClass(Ljava/lang/Number;)Z
    .locals 1
    .param p0, "num"    # Ljava/lang/Number;

    .line 115
    instance-of v0, p0, Ljava/lang/Integer;

    if-nez v0, :cond_1

    instance-of v0, p0, Ljava/math/BigDecimal;

    if-nez v0, :cond_1

    instance-of v0, p0, Ljava/lang/Long;

    if-nez v0, :cond_1

    instance-of v0, p0, Ljava/lang/Short;

    if-nez v0, :cond_1

    instance-of v0, p0, Ljava/lang/Byte;

    if-nez v0, :cond_1

    instance-of v0, p0, Ljava/math/BigInteger;

    if-eqz v0, :cond_0

    goto :goto_0

    :cond_0
    const/4 v0, 0x0

    goto :goto_1

    :cond_1
    :goto_0
    const/4 v0, 0x1

    :goto_1
    return v0
.end method

.method private static newLossyConverionException(Ljava/lang/Number;Ljava/lang/Class;)Ljava/lang/ArithmeticException;
    .locals 3
    .param p0, "fromValue"    # Ljava/lang/Number;
    .param p1, "toType"    # Ljava/lang/Class;

    .line 163
    new-instance v0, Ljava/lang/ArithmeticException;

    new-instance v1, Ljava/lang/StringBuffer;

    invoke-direct {v1}, Ljava/lang/StringBuffer;-><init>()V

    const-string v2, "Can\'t convert "

    invoke-virtual {v1, v2}, Ljava/lang/StringBuffer;->append(Ljava/lang/String;)Ljava/lang/StringBuffer;

    move-result-object v1

    invoke-virtual {v1, p0}, Ljava/lang/StringBuffer;->append(Ljava/lang/Object;)Ljava/lang/StringBuffer;

    move-result-object v1

    const-string v2, " to type "

    invoke-virtual {v1, v2}, Ljava/lang/StringBuffer;->append(Ljava/lang/String;)Ljava/lang/StringBuffer;

    move-result-object v1

    .line 164
    invoke-static {p1}, Lfreemarker/template/utility/ClassUtil;->getShortClassName(Ljava/lang/Class;)Ljava/lang/String;

    move-result-object v2

    invoke-virtual {v1, v2}, Ljava/lang/StringBuffer;->append(Ljava/lang/String;)Ljava/lang/StringBuffer;

    move-result-object v1

    const-string v2, " without loss."

    invoke-virtual {v1, v2}, Ljava/lang/StringBuffer;->append(Ljava/lang/String;)Ljava/lang/StringBuffer;

    move-result-object v1

    invoke-virtual {v1}, Ljava/lang/StringBuffer;->toString()Ljava/lang/String;

    move-result-object v1

    invoke-direct {v0, v1}, Ljava/lang/ArithmeticException;-><init>(Ljava/lang/String;)V

    return-object v0
.end method

.method public static toIntExact(Ljava/lang/Number;)I
    .locals 8
    .param p0, "num"    # Ljava/lang/Number;

    .line 128
    instance-of v0, p0, Ljava/lang/Integer;

    if-nez v0, :cond_11

    instance-of v0, p0, Ljava/lang/Short;

    if-nez v0, :cond_11

    instance-of v0, p0, Ljava/lang/Byte;

    if-eqz v0, :cond_0

    goto/16 :goto_4

    .line 130
    :cond_0
    instance-of v0, p0, Ljava/lang/Long;

    const-string v1, "java.lang.Integer"

    if-eqz v0, :cond_3

    .line 131
    invoke-virtual {p0}, Ljava/lang/Number;->longValue()J

    move-result-wide v2

    .line 132
    .local v2, "n":J
    long-to-int v0, v2

    .line 133
    .local v0, "result":I
    int-to-long v4, v0

    cmp-long v4, v2, v4

    if-eqz v4, :cond_2

    .line 134
    sget-object v4, Lfreemarker/template/utility/NumberUtil;->class$java$lang$Integer:Ljava/lang/Class;

    if-nez v4, :cond_1

    invoke-static {v1}, Lfreemarker/template/utility/NumberUtil;->class$(Ljava/lang/String;)Ljava/lang/Class;

    move-result-object v4

    sput-object v4, Lfreemarker/template/utility/NumberUtil;->class$java$lang$Integer:Ljava/lang/Class;

    :cond_1
    invoke-static {p0, v4}, Lfreemarker/template/utility/NumberUtil;->newLossyConverionException(Ljava/lang/Number;Ljava/lang/Class;)Ljava/lang/ArithmeticException;

    move-result-object v1

    throw v1

    .line 136
    :cond_2
    return v0

    .line 137
    .end local v0    # "result":I
    .end local v2    # "n":J
    :cond_3
    instance-of v0, p0, Ljava/lang/Double;

    if-nez v0, :cond_d

    instance-of v0, p0, Ljava/lang/Float;

    if-eqz v0, :cond_4

    goto :goto_2

    .line 143
    :cond_4
    instance-of v0, p0, Ljava/math/BigDecimal;

    if-eqz v0, :cond_8

    .line 145
    move-object v0, p0

    check-cast v0, Ljava/math/BigDecimal;

    .line 146
    .local v0, "n":Ljava/math/BigDecimal;
    invoke-static {v0}, Lfreemarker/template/utility/NumberUtil;->isIntegerBigDecimal(Ljava/math/BigDecimal;)Z

    move-result v2

    if-eqz v2, :cond_6

    sget-object v2, Lfreemarker/template/utility/NumberUtil;->BIG_DECIMAL_INT_MAX:Ljava/math/BigDecimal;

    .line 147
    invoke-virtual {v0, v2}, Ljava/math/BigDecimal;->compareTo(Ljava/math/BigDecimal;)I

    move-result v2

    if-gtz v2, :cond_6

    sget-object v2, Lfreemarker/template/utility/NumberUtil;->BIG_DECIMAL_INT_MIN:Ljava/math/BigDecimal;

    invoke-virtual {v0, v2}, Ljava/math/BigDecimal;->compareTo(Ljava/math/BigDecimal;)I

    move-result v2

    if-gez v2, :cond_5

    goto :goto_0

    .line 150
    :cond_5
    invoke-virtual {v0}, Ljava/math/BigDecimal;->intValue()I

    move-result v1

    return v1

    .line 148
    :cond_6
    :goto_0
    sget-object v2, Lfreemarker/template/utility/NumberUtil;->class$java$lang$Integer:Ljava/lang/Class;

    if-nez v2, :cond_7

    invoke-static {v1}, Lfreemarker/template/utility/NumberUtil;->class$(Ljava/lang/String;)Ljava/lang/Class;

    move-result-object v2

    sput-object v2, Lfreemarker/template/utility/NumberUtil;->class$java$lang$Integer:Ljava/lang/Class;

    :cond_7
    invoke-static {p0, v2}, Lfreemarker/template/utility/NumberUtil;->newLossyConverionException(Ljava/lang/Number;Ljava/lang/Class;)Ljava/lang/ArithmeticException;

    move-result-object v1

    throw v1

    .line 151
    .end local v0    # "n":Ljava/math/BigDecimal;
    :cond_8
    instance-of v0, p0, Ljava/math/BigInteger;

    if-eqz v0, :cond_c

    .line 152
    move-object v0, p0

    check-cast v0, Ljava/math/BigInteger;

    .line 153
    .local v0, "n":Ljava/math/BigInteger;
    sget-object v2, Lfreemarker/template/utility/NumberUtil;->BIG_INTEGER_INT_MAX:Ljava/math/BigInteger;

    invoke-virtual {v0, v2}, Ljava/math/BigInteger;->compareTo(Ljava/math/BigInteger;)I

    move-result v2

    if-gtz v2, :cond_a

    sget-object v2, Lfreemarker/template/utility/NumberUtil;->BIG_INTEGER_INT_MIN:Ljava/math/BigInteger;

    invoke-virtual {v0, v2}, Ljava/math/BigInteger;->compareTo(Ljava/math/BigInteger;)I

    move-result v2

    if-gez v2, :cond_9

    goto :goto_1

    .line 156
    :cond_9
    invoke-virtual {v0}, Ljava/math/BigInteger;->intValue()I

    move-result v1

    return v1

    .line 154
    :cond_a
    :goto_1
    sget-object v2, Lfreemarker/template/utility/NumberUtil;->class$java$lang$Integer:Ljava/lang/Class;

    if-nez v2, :cond_b

    invoke-static {v1}, Lfreemarker/template/utility/NumberUtil;->class$(Ljava/lang/String;)Ljava/lang/Class;

    move-result-object v2

    sput-object v2, Lfreemarker/template/utility/NumberUtil;->class$java$lang$Integer:Ljava/lang/Class;

    :cond_b
    invoke-static {p0, v2}, Lfreemarker/template/utility/NumberUtil;->newLossyConverionException(Ljava/lang/Number;Ljava/lang/Class;)Ljava/lang/ArithmeticException;

    move-result-object v1

    throw v1

    .line 158
    .end local v0    # "n":Ljava/math/BigInteger;
    :cond_c
    new-instance v0, Lfreemarker/template/utility/UnsupportedNumberClassException;

    invoke-virtual {p0}, Ljava/lang/Object;->getClass()Ljava/lang/Class;

    move-result-object v1

    invoke-direct {v0, v1}, Lfreemarker/template/utility/UnsupportedNumberClassException;-><init>(Ljava/lang/Class;)V

    throw v0

    .line 138
    :cond_d
    :goto_2
    invoke-virtual {p0}, Ljava/lang/Number;->doubleValue()D

    move-result-wide v2

    .line 139
    .local v2, "n":D
    const-wide/high16 v4, 0x3ff0000000000000L    # 1.0

    rem-double v4, v2, v4

    const-wide/16 v6, 0x0

    cmpl-double v0, v4, v6

    if-nez v0, :cond_f

    const-wide/high16 v4, -0x3e20000000000000L    # -2.147483648E9

    cmpg-double v0, v2, v4

    if-ltz v0, :cond_f

    const-wide v4, 0x41dfffffffc00000L    # 2.147483647E9

    cmpl-double v0, v2, v4

    if-lez v0, :cond_e

    goto :goto_3

    .line 142
    :cond_e
    double-to-int v0, v2

    return v0

    .line 140
    :cond_f
    :goto_3
    sget-object v0, Lfreemarker/template/utility/NumberUtil;->class$java$lang$Integer:Ljava/lang/Class;

    if-nez v0, :cond_10

    invoke-static {v1}, Lfreemarker/template/utility/NumberUtil;->class$(Ljava/lang/String;)Ljava/lang/Class;

    move-result-object v0

    sput-object v0, Lfreemarker/template/utility/NumberUtil;->class$java$lang$Integer:Ljava/lang/Class;

    :cond_10
    invoke-static {p0, v0}, Lfreemarker/template/utility/NumberUtil;->newLossyConverionException(Ljava/lang/Number;Ljava/lang/Class;)Ljava/lang/ArithmeticException;

    move-result-object v0

    throw v0

    .line 129
    .end local v2    # "n":D
    :cond_11
    :goto_4
    invoke-virtual {p0}, Ljava/lang/Number;->intValue()I

    move-result v0

    return v0
.end method
