.class public Lfreemarker/template/utility/DateUtil;
.super Ljava/lang/Object;
.source "DateUtil.java"


# annotations
.annotation system Ldalvik/annotation/MemberClasses;
    value = {
        Lfreemarker/template/utility/DateUtil$DateParseException;,
        Lfreemarker/template/utility/DateUtil$TrivialCalendarFieldsToDateConverter;,
        Lfreemarker/template/utility/DateUtil$TrivialDateToISO8601CalendarFactory;,
        Lfreemarker/template/utility/DateUtil$CalendarFieldsToDateConverter;,
        Lfreemarker/template/utility/DateUtil$DateToISO8601CalendarFactory;
    }
.end annotation


# static fields
.field public static final ACCURACY_HOURS:I = 0x4

.field public static final ACCURACY_MILLISECONDS:I = 0x7

.field public static final ACCURACY_MILLISECONDS_FORCED:I = 0x8

.field public static final ACCURACY_MINUTES:I = 0x5

.field public static final ACCURACY_SECONDS:I = 0x6

.field private static final MSG_YEAR_0_NOT_ALLOWED:Ljava/lang/String; = "Year 0 is not allowed in XML schema dates. BC 1 is -1, AD 1 is 1."

.field private static final PATTERN_ISO8601_BASIC_DATE:Ljava/util/regex/Pattern;

.field private static final PATTERN_ISO8601_BASIC_DATE_TIME:Ljava/util/regex/Pattern;

.field private static final PATTERN_ISO8601_BASIC_TIME:Ljava/util/regex/Pattern;

.field private static final PATTERN_ISO8601_EXTENDED_DATE:Ljava/util/regex/Pattern;

.field private static final PATTERN_ISO8601_EXTENDED_DATE_TIME:Ljava/util/regex/Pattern;

.field private static final PATTERN_ISO8601_EXTENDED_TIME:Ljava/util/regex/Pattern;

.field private static final PATTERN_XS_DATE:Ljava/util/regex/Pattern;

.field private static final PATTERN_XS_DATE_TIME:Ljava/util/regex/Pattern;

.field private static final PATTERN_XS_TIME:Ljava/util/regex/Pattern;

.field private static final PATTERN_XS_TIME_ZONE:Ljava/util/regex/Pattern;

.field private static final REGEX_ISO8601_BASIC_DATE_BASE:Ljava/lang/String; = "(-?[0-9]{4,}?)([0-9]{2})([0-9]{2})"

.field private static final REGEX_ISO8601_BASIC_OPTIONAL_TIME_ZONE:Ljava/lang/String; = "(Z|(?:[-+][0-9]{2}(?:[0-9]{2})?))?"

.field private static final REGEX_ISO8601_BASIC_TIME_BASE:Ljava/lang/String; = "([0-9]{2})(?:([0-9]{2})(?:([0-9]{2})(?:[\\.,]([0-9]+))?)?)?"

.field private static final REGEX_ISO8601_BASIC_TIME_ZONE:Ljava/lang/String; = "Z|(?:[-+][0-9]{2}(?:[0-9]{2})?)"

.field private static final REGEX_ISO8601_EXTENDED_DATE_BASE:Ljava/lang/String; = "(-?[0-9]{4,})-([0-9]{2})-([0-9]{2})"

.field private static final REGEX_ISO8601_EXTENDED_OPTIONAL_TIME_ZONE:Ljava/lang/String; = "(Z|(?:[-+][0-9]{2}(?::[0-9]{2})?))?"

.field private static final REGEX_ISO8601_EXTENDED_TIME_BASE:Ljava/lang/String; = "([0-9]{2})(?::([0-9]{2})(?::([0-9]{2})(?:[\\.,]([0-9]+))?)?)?"

.field private static final REGEX_ISO8601_EXTENDED_TIME_ZONE:Ljava/lang/String; = "Z|(?:[-+][0-9]{2}(?::[0-9]{2})?)"

.field private static final REGEX_XS_DATE_BASE:Ljava/lang/String; = "(-?[0-9]+)-([0-9]{2})-([0-9]{2})"

.field private static final REGEX_XS_OPTIONAL_TIME_ZONE:Ljava/lang/String; = "(Z|(?:[-+][0-9]{2}:[0-9]{2}))?"

.field private static final REGEX_XS_TIME_BASE:Ljava/lang/String; = "([0-9]{2}):([0-9]{2}):([0-9]{2})(?:\\.([0-9]+))?"

.field private static final REGEX_XS_TIME_ZONE:Ljava/lang/String; = "Z|(?:[-+][0-9]{2}:[0-9]{2})"

.field public static final UTC:Ljava/util/TimeZone;


# direct methods
.method static constructor <clinit>()V
    .locals 1

    .line 58
    const-string v0, "UTC"

    invoke-static {v0}, Ljava/util/TimeZone;->getTimeZone(Ljava/lang/String;)Ljava/util/TimeZone;

    move-result-object v0

    sput-object v0, Lfreemarker/template/utility/DateUtil;->UTC:Ljava/util/TimeZone;

    .line 88
    const-string v0, "(-?[0-9]+)-([0-9]{2})-([0-9]{2})(Z|(?:[-+][0-9]{2}:[0-9]{2}))?"

    invoke-static {v0}, Ljava/util/regex/Pattern;->compile(Ljava/lang/String;)Ljava/util/regex/Pattern;

    move-result-object v0

    sput-object v0, Lfreemarker/template/utility/DateUtil;->PATTERN_XS_DATE:Ljava/util/regex/Pattern;

    .line 90
    const-string v0, "(-?[0-9]{4,}?)([0-9]{2})([0-9]{2})"

    invoke-static {v0}, Ljava/util/regex/Pattern;->compile(Ljava/lang/String;)Ljava/util/regex/Pattern;

    move-result-object v0

    sput-object v0, Lfreemarker/template/utility/DateUtil;->PATTERN_ISO8601_BASIC_DATE:Ljava/util/regex/Pattern;

    .line 92
    const-string v0, "(-?[0-9]{4,})-([0-9]{2})-([0-9]{2})"

    invoke-static {v0}, Ljava/util/regex/Pattern;->compile(Ljava/lang/String;)Ljava/util/regex/Pattern;

    move-result-object v0

    sput-object v0, Lfreemarker/template/utility/DateUtil;->PATTERN_ISO8601_EXTENDED_DATE:Ljava/util/regex/Pattern;

    .line 95
    const-string v0, "([0-9]{2}):([0-9]{2}):([0-9]{2})(?:\\.([0-9]+))?(Z|(?:[-+][0-9]{2}:[0-9]{2}))?"

    invoke-static {v0}, Ljava/util/regex/Pattern;->compile(Ljava/lang/String;)Ljava/util/regex/Pattern;

    move-result-object v0

    sput-object v0, Lfreemarker/template/utility/DateUtil;->PATTERN_XS_TIME:Ljava/util/regex/Pattern;

    .line 97
    const-string v0, "([0-9]{2})(?:([0-9]{2})(?:([0-9]{2})(?:[\\.,]([0-9]+))?)?)?(Z|(?:[-+][0-9]{2}(?:[0-9]{2})?))?"

    invoke-static {v0}, Ljava/util/regex/Pattern;->compile(Ljava/lang/String;)Ljava/util/regex/Pattern;

    move-result-object v0

    sput-object v0, Lfreemarker/template/utility/DateUtil;->PATTERN_ISO8601_BASIC_TIME:Ljava/util/regex/Pattern;

    .line 99
    const-string v0, "([0-9]{2})(?::([0-9]{2})(?::([0-9]{2})(?:[\\.,]([0-9]+))?)?)?(Z|(?:[-+][0-9]{2}(?::[0-9]{2})?))?"

    invoke-static {v0}, Ljava/util/regex/Pattern;->compile(Ljava/lang/String;)Ljava/util/regex/Pattern;

    move-result-object v0

    sput-object v0, Lfreemarker/template/utility/DateUtil;->PATTERN_ISO8601_EXTENDED_TIME:Ljava/util/regex/Pattern;

    .line 102
    const-string v0, "(-?[0-9]+)-([0-9]{2})-([0-9]{2})T([0-9]{2}):([0-9]{2}):([0-9]{2})(?:\\.([0-9]+))?(Z|(?:[-+][0-9]{2}:[0-9]{2}))?"

    invoke-static {v0}, Ljava/util/regex/Pattern;->compile(Ljava/lang/String;)Ljava/util/regex/Pattern;

    move-result-object v0

    sput-object v0, Lfreemarker/template/utility/DateUtil;->PATTERN_XS_DATE_TIME:Ljava/util/regex/Pattern;

    .line 106
    const-string v0, "(-?[0-9]{4,}?)([0-9]{2})([0-9]{2})T([0-9]{2})(?:([0-9]{2})(?:([0-9]{2})(?:[\\.,]([0-9]+))?)?)?(Z|(?:[-+][0-9]{2}(?:[0-9]{2})?))?"

    invoke-static {v0}, Ljava/util/regex/Pattern;->compile(Ljava/lang/String;)Ljava/util/regex/Pattern;

    move-result-object v0

    sput-object v0, Lfreemarker/template/utility/DateUtil;->PATTERN_ISO8601_BASIC_DATE_TIME:Ljava/util/regex/Pattern;

    .line 110
    const-string v0, "(-?[0-9]{4,})-([0-9]{2})-([0-9]{2})T([0-9]{2})(?::([0-9]{2})(?::([0-9]{2})(?:[\\.,]([0-9]+))?)?)?(Z|(?:[-+][0-9]{2}(?::[0-9]{2})?))?"

    invoke-static {v0}, Ljava/util/regex/Pattern;->compile(Ljava/lang/String;)Ljava/util/regex/Pattern;

    move-result-object v0

    sput-object v0, Lfreemarker/template/utility/DateUtil;->PATTERN_ISO8601_EXTENDED_DATE_TIME:Ljava/util/regex/Pattern;

    .line 115
    const-string v0, "Z|(?:[-+][0-9]{2}:[0-9]{2})"

    invoke-static {v0}, Ljava/util/regex/Pattern;->compile(Ljava/lang/String;)Ljava/util/regex/Pattern;

    move-result-object v0

    sput-object v0, Lfreemarker/template/utility/DateUtil;->PATTERN_XS_TIME_ZONE:Ljava/util/regex/Pattern;

    return-void
.end method

.method private constructor <init>()V
    .locals 0

    .line 121
    invoke-direct {p0}, Ljava/lang/Object;-><init>()V

    .line 123
    return-void
.end method

.method private static append00([CII)I
    .locals 2
    .param p0, "res"    # [C
    .param p1, "dstIdx"    # I
    .param p2, "x"    # I

    .line 408
    add-int/lit8 v0, p1, 0x1

    .end local p1    # "dstIdx":I
    .local v0, "dstIdx":I
    div-int/lit8 v1, p2, 0xa

    add-int/lit8 v1, v1, 0x30

    int-to-char v1, v1

    aput-char v1, p0, p1

    .line 409
    add-int/lit8 p1, v0, 0x1

    .end local v0    # "dstIdx":I
    .restart local p1    # "dstIdx":I
    rem-int/lit8 v1, p2, 0xa

    add-int/lit8 v1, v1, 0x30

    int-to-char v1, v1

    aput-char v1, p0, v0

    .line 410
    return p1
.end method

.method public static dateToISO8601String(Ljava/util/Date;ZZZILjava/util/TimeZone;Lfreemarker/template/utility/DateUtil$DateToISO8601CalendarFactory;)Ljava/lang/String;
    .locals 8
    .param p0, "date"    # Ljava/util/Date;
    .param p1, "datePart"    # Z
    .param p2, "timePart"    # Z
    .param p3, "offsetPart"    # Z
    .param p4, "accuracy"    # I
    .param p5, "timeZone"    # Ljava/util/TimeZone;
    .param p6, "calendarFactory"    # Lfreemarker/template/utility/DateUtil$DateToISO8601CalendarFactory;

    .line 246
    const/4 v6, 0x0

    move-object v0, p0

    move v1, p1

    move v2, p2

    move v3, p3

    move v4, p4

    move-object v5, p5

    move-object v7, p6

    invoke-static/range {v0 .. v7}, Lfreemarker/template/utility/DateUtil;->dateToString(Ljava/util/Date;ZZZILjava/util/TimeZone;ZLfreemarker/template/utility/DateUtil$DateToISO8601CalendarFactory;)Ljava/lang/String;

    move-result-object v0

    return-object v0
.end method

.method private static dateToString(Ljava/util/Date;ZZZILjava/util/TimeZone;ZLfreemarker/template/utility/DateUtil$DateToISO8601CalendarFactory;)Ljava/lang/String;
    .locals 17
    .param p0, "date"    # Ljava/util/Date;
    .param p1, "datePart"    # Z
    .param p2, "timePart"    # Z
    .param p3, "offsetPart"    # Z
    .param p4, "accuracy"    # I
    .param p5, "timeZone"    # Ljava/util/TimeZone;
    .param p6, "xsMode"    # Z
    .param p7, "calendarFactory"    # Lfreemarker/template/utility/DateUtil$DateToISO8601CalendarFactory;

    .line 267
    move/from16 v0, p4

    if-nez p6, :cond_1

    if-nez p2, :cond_1

    if-nez p3, :cond_0

    goto :goto_0

    .line 268
    :cond_0
    new-instance v1, Ljava/lang/IllegalArgumentException;

    const-string v2, "ISO 8601:2004 doesn\'t specify any formats where the offset is shown but the time isn\'t."

    invoke-direct {v1, v2}, Ljava/lang/IllegalArgumentException;-><init>(Ljava/lang/String;)V

    throw v1

    .line 273
    :cond_1
    :goto_0
    if-nez p5, :cond_2

    .line 274
    sget-object v1, Lfreemarker/template/utility/DateUtil;->UTC:Ljava/util/TimeZone;

    .end local p5    # "timeZone":Ljava/util/TimeZone;
    .local v1, "timeZone":Ljava/util/TimeZone;
    goto :goto_1

    .line 273
    .end local v1    # "timeZone":Ljava/util/TimeZone;
    .restart local p5    # "timeZone":Ljava/util/TimeZone;
    :cond_2
    move-object/from16 v1, p5

    .line 277
    .end local p5    # "timeZone":Ljava/util/TimeZone;
    .restart local v1    # "timeZone":Ljava/util/TimeZone;
    :goto_1
    move-object/from16 v2, p0

    move-object/from16 v3, p7

    invoke-interface {v3, v1, v2}, Lfreemarker/template/utility/DateUtil$DateToISO8601CalendarFactory;->get(Ljava/util/TimeZone;Ljava/util/Date;)Ljava/util/GregorianCalendar;

    move-result-object v4

    .line 280
    .local v4, "cal":Ljava/util/GregorianCalendar;
    const/4 v5, 0x6

    const/4 v6, 0x0

    if-nez p2, :cond_4

    .line 281
    if-eqz p6, :cond_3

    move v7, v5

    goto :goto_2

    :cond_3
    move v7, v6

    :goto_2
    add-int/lit8 v7, v7, 0xa

    .local v7, "maxLength":I
    goto :goto_3

    .line 283
    .end local v7    # "maxLength":I
    :cond_4
    if-nez p1, :cond_5

    .line 284
    const/16 v7, 0x12

    .restart local v7    # "maxLength":I
    goto :goto_3

    .line 286
    .end local v7    # "maxLength":I
    :cond_5
    const/16 v7, 0x1d

    .line 289
    .restart local v7    # "maxLength":I
    :goto_3
    new-array v8, v7, [C

    .line 290
    .local v8, "res":[C
    const/4 v9, 0x0

    .line 292
    .local v9, "dstIdx":I
    const/4 v10, 0x5

    const/16 v11, 0x2d

    if-eqz p1, :cond_9

    .line 293
    const/4 v12, 0x1

    invoke-virtual {v4, v12}, Ljava/util/GregorianCalendar;->get(I)I

    move-result v13

    .line 294
    .local v13, "x":I
    if-lez v13, :cond_6

    invoke-virtual {v4, v6}, Ljava/util/GregorianCalendar;->get(I)I

    move-result v14

    if-nez v14, :cond_6

    .line 295
    neg-int v14, v13

    xor-int/lit8 v15, p6, 0x1

    add-int v13, v14, v15

    .line 297
    :cond_6
    if-ltz v13, :cond_7

    const/16 v14, 0x270f

    if-ge v13, v14, :cond_7

    .line 298
    add-int/lit8 v14, v9, 0x1

    .end local v9    # "dstIdx":I
    .local v14, "dstIdx":I
    div-int/lit16 v15, v13, 0x3e8

    add-int/lit8 v15, v15, 0x30

    int-to-char v15, v15

    aput-char v15, v8, v9

    .line 299
    add-int/lit8 v9, v14, 0x1

    .end local v14    # "dstIdx":I
    .restart local v9    # "dstIdx":I
    rem-int/lit16 v15, v13, 0x3e8

    div-int/lit8 v15, v15, 0x64

    add-int/lit8 v15, v15, 0x30

    int-to-char v15, v15

    aput-char v15, v8, v14

    .line 300
    add-int/lit8 v14, v9, 0x1

    .end local v9    # "dstIdx":I
    .restart local v14    # "dstIdx":I
    rem-int/lit8 v15, v13, 0x64

    div-int/lit8 v15, v15, 0xa

    add-int/lit8 v15, v15, 0x30

    int-to-char v15, v15

    aput-char v15, v8, v9

    .line 301
    add-int/lit8 v9, v14, 0x1

    .end local v14    # "dstIdx":I
    .restart local v9    # "dstIdx":I
    rem-int/lit8 v15, v13, 0xa

    add-int/lit8 v15, v15, 0x30

    int-to-char v15, v15

    aput-char v15, v8, v14

    goto :goto_5

    .line 303
    :cond_7
    invoke-static {v13}, Ljava/lang/String;->valueOf(I)Ljava/lang/String;

    move-result-object v14

    .line 306
    .local v14, "yearString":Ljava/lang/String;
    add-int/lit8 v15, v7, -0x4

    invoke-virtual {v14}, Ljava/lang/String;->length()I

    move-result v16

    add-int v7, v15, v16

    .line 307
    new-array v8, v7, [C

    .line 309
    const/4 v15, 0x0

    .local v15, "i":I
    :goto_4
    invoke-virtual {v14}, Ljava/lang/String;->length()I

    move-result v6

    if-ge v15, v6, :cond_8

    .line 310
    add-int/lit8 v6, v9, 0x1

    .end local v9    # "dstIdx":I
    .local v6, "dstIdx":I
    invoke-virtual {v14, v15}, Ljava/lang/String;->charAt(I)C

    move-result v16

    aput-char v16, v8, v9

    .line 309
    add-int/lit8 v15, v15, 0x1

    move v9, v6

    const/4 v6, 0x0

    goto :goto_4

    .line 314
    .end local v6    # "dstIdx":I
    .end local v14    # "yearString":Ljava/lang/String;
    .end local v15    # "i":I
    .restart local v9    # "dstIdx":I
    :cond_8
    :goto_5
    add-int/lit8 v6, v9, 0x1

    .end local v9    # "dstIdx":I
    .restart local v6    # "dstIdx":I
    aput-char v11, v8, v9

    .line 316
    const/4 v9, 0x2

    invoke-virtual {v4, v9}, Ljava/util/GregorianCalendar;->get(I)I

    move-result v9

    add-int/2addr v9, v12

    .line 317
    .end local v13    # "x":I
    .local v9, "x":I
    invoke-static {v8, v6, v9}, Lfreemarker/template/utility/DateUtil;->append00([CII)I

    move-result v6

    .line 319
    add-int/lit8 v12, v6, 0x1

    .end local v6    # "dstIdx":I
    .local v12, "dstIdx":I
    aput-char v11, v8, v6

    .line 321
    invoke-virtual {v4, v10}, Ljava/util/GregorianCalendar;->get(I)I

    move-result v6

    .line 322
    .end local v9    # "x":I
    .local v6, "x":I
    invoke-static {v8, v12, v6}, Lfreemarker/template/utility/DateUtil;->append00([CII)I

    move-result v9

    .line 324
    .end local v12    # "dstIdx":I
    .local v9, "dstIdx":I
    if-eqz p2, :cond_9

    .line 325
    add-int/lit8 v12, v9, 0x1

    .end local v9    # "dstIdx":I
    .restart local v12    # "dstIdx":I
    const/16 v13, 0x54

    aput-char v13, v8, v9

    move v9, v12

    .line 329
    .end local v6    # "x":I
    .end local v12    # "dstIdx":I
    .restart local v9    # "dstIdx":I
    :cond_9
    const/16 v6, 0x3a

    if-eqz p2, :cond_10

    .line 330
    const/16 v12, 0xb

    invoke-virtual {v4, v12}, Ljava/util/GregorianCalendar;->get(I)I

    move-result v12

    .line 331
    .local v12, "x":I
    invoke-static {v8, v9, v12}, Lfreemarker/template/utility/DateUtil;->append00([CII)I

    move-result v9

    .line 333
    if-lt v0, v10, :cond_10

    .line 334
    add-int/lit8 v10, v9, 0x1

    .end local v9    # "dstIdx":I
    .local v10, "dstIdx":I
    aput-char v6, v8, v9

    .line 336
    const/16 v9, 0xc

    invoke-virtual {v4, v9}, Ljava/util/GregorianCalendar;->get(I)I

    move-result v9

    .line 337
    .end local v12    # "x":I
    .local v9, "x":I
    invoke-static {v8, v10, v9}, Lfreemarker/template/utility/DateUtil;->append00([CII)I

    move-result v10

    .line 339
    if-lt v0, v5, :cond_f

    .line 340
    add-int/lit8 v5, v10, 0x1

    .end local v10    # "dstIdx":I
    .local v5, "dstIdx":I
    aput-char v6, v8, v10

    .line 342
    const/16 v10, 0xd

    invoke-virtual {v4, v10}, Ljava/util/GregorianCalendar;->get(I)I

    move-result v9

    .line 343
    invoke-static {v8, v5, v9}, Lfreemarker/template/utility/DateUtil;->append00([CII)I

    move-result v5

    .line 345
    const/4 v10, 0x7

    if-lt v0, v10, :cond_e

    .line 346
    const/16 v10, 0xe

    invoke-virtual {v4, v10}, Ljava/util/GregorianCalendar;->get(I)I

    move-result v9

    .line 347
    const/16 v10, 0x8

    if-ne v0, v10, :cond_a

    const/4 v10, 0x3

    goto :goto_6

    :cond_a
    const/4 v10, 0x0

    .line 348
    .local v10, "forcedDigits":I
    :goto_6
    if-nez v9, :cond_b

    if-eqz v10, :cond_e

    .line 349
    :cond_b
    const/16 v12, 0x3e7

    if-gt v9, v12, :cond_d

    .line 354
    add-int/lit8 v12, v5, 0x1

    .end local v5    # "dstIdx":I
    .local v12, "dstIdx":I
    const/16 v13, 0x2e

    aput-char v13, v8, v5

    .line 356
    :goto_7
    add-int/lit8 v5, v12, 0x1

    .end local v12    # "dstIdx":I
    .restart local v5    # "dstIdx":I
    div-int/lit8 v13, v9, 0x64

    add-int/lit8 v13, v13, 0x30

    int-to-char v13, v13

    aput-char v13, v8, v12

    .line 357
    add-int/lit8 v10, v10, -0x1

    .line 358
    rem-int/lit8 v12, v9, 0x64

    mul-int/lit8 v9, v12, 0xa

    .line 359
    if-nez v9, :cond_c

    if-gtz v10, :cond_c

    move v9, v5

    goto :goto_8

    .line 356
    :cond_c
    move v12, v5

    goto :goto_7

    .line 351
    :cond_d
    new-instance v6, Ljava/lang/RuntimeException;

    const-string v11, "Calendar.MILLISECOND > 999"

    invoke-direct {v6, v11}, Ljava/lang/RuntimeException;-><init>(Ljava/lang/String;)V

    throw v6

    .line 366
    .end local v9    # "x":I
    .end local v10    # "forcedDigits":I
    :cond_e
    move v9, v5

    goto :goto_8

    .line 339
    .end local v5    # "dstIdx":I
    .restart local v9    # "x":I
    .local v10, "dstIdx":I
    :cond_f
    move v9, v10

    .line 366
    .end local v10    # "dstIdx":I
    .local v9, "dstIdx":I
    :cond_10
    :goto_8
    if-eqz p3, :cond_15

    .line 367
    sget-object v5, Lfreemarker/template/utility/DateUtil;->UTC:Ljava/util/TimeZone;

    const/16 v10, 0x5a

    if-ne v1, v5, :cond_11

    .line 368
    add-int/lit8 v5, v9, 0x1

    .end local v9    # "dstIdx":I
    .restart local v5    # "dstIdx":I
    aput-char v10, v8, v9

    move v9, v5

    goto :goto_a

    .line 370
    .end local v5    # "dstIdx":I
    .restart local v9    # "dstIdx":I
    :cond_11
    invoke-virtual/range {p0 .. p0}, Ljava/util/Date;->getTime()J

    move-result-wide v12

    invoke-virtual {v1, v12, v13}, Ljava/util/TimeZone;->getOffset(J)I

    move-result v5

    .line 372
    .local v5, "dt":I
    if-gez v5, :cond_12

    .line 373
    const/4 v12, 0x0

    .line 374
    .local v12, "positive":Z
    neg-int v5, v5

    goto :goto_9

    .line 376
    .end local v12    # "positive":Z
    :cond_12
    const/4 v12, 0x1

    .line 379
    .restart local v12    # "positive":Z
    :goto_9
    div-int/lit16 v5, v5, 0x3e8

    .line 380
    rem-int/lit8 v13, v5, 0x3c

    .line 381
    .local v13, "offS":I
    div-int/lit8 v5, v5, 0x3c

    .line 382
    rem-int/lit8 v14, v5, 0x3c

    .line 383
    .local v14, "offM":I
    div-int/lit8 v5, v5, 0x3c

    .line 384
    move v15, v5

    .line 386
    .local v15, "offH":I
    if-nez v13, :cond_13

    if-nez v14, :cond_13

    if-nez v15, :cond_13

    .line 387
    add-int/lit8 v6, v9, 0x1

    .end local v9    # "dstIdx":I
    .local v6, "dstIdx":I
    aput-char v10, v8, v9

    move v9, v6

    goto :goto_a

    .line 389
    .end local v6    # "dstIdx":I
    .restart local v9    # "dstIdx":I
    :cond_13
    add-int/lit8 v10, v9, 0x1

    .end local v9    # "dstIdx":I
    .restart local v10    # "dstIdx":I
    if-eqz v12, :cond_14

    const/16 v11, 0x2b

    :cond_14
    aput-char v11, v8, v9

    .line 390
    invoke-static {v8, v10, v15}, Lfreemarker/template/utility/DateUtil;->append00([CII)I

    move-result v9

    .line 391
    .end local v10    # "dstIdx":I
    .restart local v9    # "dstIdx":I
    add-int/lit8 v10, v9, 0x1

    .end local v9    # "dstIdx":I
    .restart local v10    # "dstIdx":I
    aput-char v6, v8, v9

    .line 392
    invoke-static {v8, v10, v14}, Lfreemarker/template/utility/DateUtil;->append00([CII)I

    move-result v9

    .line 393
    .end local v10    # "dstIdx":I
    .restart local v9    # "dstIdx":I
    if-eqz v13, :cond_15

    .line 394
    add-int/lit8 v10, v9, 0x1

    .end local v9    # "dstIdx":I
    .restart local v10    # "dstIdx":I
    aput-char v6, v8, v9

    .line 395
    invoke-static {v8, v10, v13}, Lfreemarker/template/utility/DateUtil;->append00([CII)I

    move-result v9

    .line 401
    .end local v5    # "dt":I
    .end local v10    # "dstIdx":I
    .end local v12    # "positive":Z
    .end local v13    # "offS":I
    .end local v14    # "offM":I
    .end local v15    # "offH":I
    .restart local v9    # "dstIdx":I
    :cond_15
    :goto_a
    new-instance v5, Ljava/lang/String;

    const/4 v6, 0x0

    invoke-direct {v5, v8, v6, v9}, Ljava/lang/String;-><init>([CII)V

    return-object v5
.end method

.method public static dateToXSString(Ljava/util/Date;ZZZILjava/util/TimeZone;Lfreemarker/template/utility/DateUtil$DateToISO8601CalendarFactory;)Ljava/lang/String;
    .locals 8
    .param p0, "date"    # Ljava/util/Date;
    .param p1, "datePart"    # Z
    .param p2, "timePart"    # Z
    .param p3, "offsetPart"    # Z
    .param p4, "accuracy"    # I
    .param p5, "timeZone"    # Ljava/util/TimeZone;
    .param p6, "calendarFactory"    # Lfreemarker/template/utility/DateUtil$DateToISO8601CalendarFactory;

    .line 258
    const/4 v6, 0x1

    move-object v0, p0

    move v1, p1

    move v2, p2

    move v3, p3

    move v4, p4

    move-object v5, p5

    move-object v7, p6

    invoke-static/range {v0 .. v7}, Lfreemarker/template/utility/DateUtil;->dateToString(Ljava/util/Date;ZZZILjava/util/TimeZone;ZLfreemarker/template/utility/DateUtil$DateToISO8601CalendarFactory;)Ljava/lang/String;

    move-result-object v0

    return-object v0
.end method

.method public static getTimeZone(Ljava/lang/String;)Ljava/util/TimeZone;
    .locals 2
    .param p0, "name"    # Ljava/lang/String;
    .annotation system Ldalvik/annotation/Throws;
        value = {
            Lfreemarker/template/utility/UnrecognizedTimeZoneException;
        }
    .end annotation

    .line 135
    invoke-static {p0}, Lfreemarker/template/utility/DateUtil;->isGMTish(Ljava/lang/String;)Z

    move-result v0

    if-eqz v0, :cond_1

    .line 136
    const-string v0, "UTC"

    invoke-virtual {p0, v0}, Ljava/lang/String;->equalsIgnoreCase(Ljava/lang/String;)Z

    move-result v0

    if-eqz v0, :cond_0

    .line 137
    sget-object v0, Lfreemarker/template/utility/DateUtil;->UTC:Ljava/util/TimeZone;

    return-object v0

    .line 139
    :cond_0
    invoke-static {p0}, Ljava/util/TimeZone;->getTimeZone(Ljava/lang/String;)Ljava/util/TimeZone;

    move-result-object v0

    return-object v0

    .line 141
    :cond_1
    invoke-static {p0}, Ljava/util/TimeZone;->getTimeZone(Ljava/lang/String;)Ljava/util/TimeZone;

    move-result-object v0

    .line 142
    .local v0, "tz":Ljava/util/TimeZone;
    invoke-virtual {v0}, Ljava/util/TimeZone;->getID()Ljava/lang/String;

    move-result-object v1

    invoke-static {v1}, Lfreemarker/template/utility/DateUtil;->isGMTish(Ljava/lang/String;)Z

    move-result v1

    if-nez v1, :cond_2

    .line 145
    return-object v0

    .line 143
    :cond_2
    new-instance v1, Lfreemarker/template/utility/UnrecognizedTimeZoneException;

    invoke-direct {v1, p0}, Lfreemarker/template/utility/UnrecognizedTimeZoneException;-><init>(Ljava/lang/String;)V

    throw v1
.end method

.method private static groupToInt(Ljava/lang/String;Ljava/lang/String;II)I
    .locals 9
    .param p0, "g"    # Ljava/lang/String;
    .param p1, "gName"    # Ljava/lang/String;
    .param p2, "min"    # I
    .param p3, "max"    # I
    .annotation system Ldalvik/annotation/Throws;
        value = {
            Lfreemarker/template/utility/DateUtil$DateParseException;
        }
    .end annotation

    .line 715
    const-string v0, " part "

    const-string v1, "The "

    if-eqz p0, :cond_6

    .line 724
    const-string v2, "-"

    invoke-virtual {p0, v2}, Ljava/lang/String;->startsWith(Ljava/lang/String;)Z

    move-result v2

    if-eqz v2, :cond_0

    .line 725
    const/4 v2, 0x1

    .line 726
    .local v2, "negative":Z
    const/4 v3, 0x1

    .local v3, "start":I
    goto :goto_0

    .line 728
    .end local v2    # "negative":Z
    .end local v3    # "start":I
    :cond_0
    const/4 v2, 0x0

    .line 729
    .restart local v2    # "negative":Z
    const/4 v3, 0x0

    .line 733
    .restart local v3    # "start":I
    :goto_0
    invoke-virtual {p0}, Ljava/lang/String;->length()I

    move-result v4

    add-int/lit8 v4, v4, -0x1

    if-ge v3, v4, :cond_1

    invoke-virtual {p0, v3}, Ljava/lang/String;->charAt(I)C

    move-result v4

    const/16 v5, 0x30

    if-ne v4, v5, :cond_1

    .line 734
    add-int/lit8 v3, v3, 0x1

    goto :goto_0

    .line 736
    :cond_1
    if-eqz v3, :cond_2

    .line 737
    invoke-virtual {p0, v3}, Ljava/lang/String;->substring(I)Ljava/lang/String;

    move-result-object p0

    .line 741
    :cond_2
    :try_start_0
    invoke-static {p0}, Ljava/lang/Integer;->parseInt(Ljava/lang/String;)I

    move-result v4
    :try_end_0
    .catch Ljava/lang/NumberFormatException; {:try_start_0 .. :try_end_0} :catch_0

    .line 742
    .local v4, "r":I
    if-eqz v2, :cond_3

    .line 743
    neg-int v4, v4

    .line 745
    :cond_3
    const-string v5, "."

    if-lt v4, p2, :cond_5

    .line 749
    if-gt v4, p3, :cond_4

    .line 753
    return v4

    .line 750
    :cond_4
    :try_start_1
    new-instance v6, Lfreemarker/template/utility/DateUtil$DateParseException;

    new-instance v7, Ljava/lang/StringBuffer;

    invoke-direct {v7}, Ljava/lang/StringBuffer;-><init>()V

    invoke-virtual {v7, v1}, Ljava/lang/StringBuffer;->append(Ljava/lang/String;)Ljava/lang/StringBuffer;

    move-result-object v7

    invoke-virtual {v7, p1}, Ljava/lang/StringBuffer;->append(Ljava/lang/String;)Ljava/lang/StringBuffer;

    move-result-object v7

    invoke-virtual {v7, v0}, Ljava/lang/StringBuffer;->append(Ljava/lang/String;)Ljava/lang/StringBuffer;

    move-result-object v7

    const-string v8, "can\'t be more than "

    invoke-virtual {v7, v8}, Ljava/lang/StringBuffer;->append(Ljava/lang/String;)Ljava/lang/StringBuffer;

    move-result-object v7

    invoke-virtual {v7, p3}, Ljava/lang/StringBuffer;->append(I)Ljava/lang/StringBuffer;

    move-result-object v7

    invoke-virtual {v7, v5}, Ljava/lang/StringBuffer;->append(Ljava/lang/String;)Ljava/lang/StringBuffer;

    move-result-object v5

    invoke-virtual {v5}, Ljava/lang/StringBuffer;->toString()Ljava/lang/String;

    move-result-object v5

    invoke-direct {v6, v5}, Lfreemarker/template/utility/DateUtil$DateParseException;-><init>(Ljava/lang/String;)V

    .end local v2    # "negative":Z
    .end local v3    # "start":I
    .end local p0    # "g":Ljava/lang/String;
    .end local p1    # "gName":Ljava/lang/String;
    .end local p2    # "min":I
    .end local p3    # "max":I
    throw v6

    .line 746
    .restart local v2    # "negative":Z
    .restart local v3    # "start":I
    .restart local p0    # "g":Ljava/lang/String;
    .restart local p1    # "gName":Ljava/lang/String;
    .restart local p2    # "min":I
    .restart local p3    # "max":I
    :cond_5
    new-instance v6, Lfreemarker/template/utility/DateUtil$DateParseException;

    new-instance v7, Ljava/lang/StringBuffer;

    invoke-direct {v7}, Ljava/lang/StringBuffer;-><init>()V

    invoke-virtual {v7, v1}, Ljava/lang/StringBuffer;->append(Ljava/lang/String;)Ljava/lang/StringBuffer;

    move-result-object v7

    invoke-virtual {v7, p1}, Ljava/lang/StringBuffer;->append(Ljava/lang/String;)Ljava/lang/StringBuffer;

    move-result-object v7

    invoke-virtual {v7, v0}, Ljava/lang/StringBuffer;->append(Ljava/lang/String;)Ljava/lang/StringBuffer;

    move-result-object v7

    const-string v8, "must be at least "

    invoke-virtual {v7, v8}, Ljava/lang/StringBuffer;->append(Ljava/lang/String;)Ljava/lang/StringBuffer;

    move-result-object v7

    invoke-virtual {v7, p2}, Ljava/lang/StringBuffer;->append(I)Ljava/lang/StringBuffer;

    move-result-object v7

    invoke-virtual {v7, v5}, Ljava/lang/StringBuffer;->append(Ljava/lang/String;)Ljava/lang/StringBuffer;

    move-result-object v5

    invoke-virtual {v5}, Ljava/lang/StringBuffer;->toString()Ljava/lang/String;

    move-result-object v5

    invoke-direct {v6, v5}, Lfreemarker/template/utility/DateUtil$DateParseException;-><init>(Ljava/lang/String;)V

    .end local v2    # "negative":Z
    .end local v3    # "start":I
    .end local p0    # "g":Ljava/lang/String;
    .end local p1    # "gName":Ljava/lang/String;
    .end local p2    # "min":I
    .end local p3    # "max":I
    throw v6
    :try_end_1
    .catch Ljava/lang/NumberFormatException; {:try_start_1 .. :try_end_1} :catch_0

    .line 754
    .end local v4    # "r":I
    .restart local v2    # "negative":Z
    .restart local v3    # "start":I
    .restart local p0    # "g":Ljava/lang/String;
    .restart local p1    # "gName":Ljava/lang/String;
    .restart local p2    # "min":I
    .restart local p3    # "max":I
    :catch_0
    move-exception v4

    .line 755
    .local v4, "e":Ljava/lang/NumberFormatException;
    new-instance v5, Lfreemarker/template/utility/DateUtil$DateParseException;

    new-instance v6, Ljava/lang/StringBuffer;

    invoke-direct {v6}, Ljava/lang/StringBuffer;-><init>()V

    invoke-virtual {v6, v1}, Ljava/lang/StringBuffer;->append(Ljava/lang/String;)Ljava/lang/StringBuffer;

    move-result-object v1

    invoke-virtual {v1, p1}, Ljava/lang/StringBuffer;->append(Ljava/lang/String;)Ljava/lang/StringBuffer;

    move-result-object v1

    invoke-virtual {v1, v0}, Ljava/lang/StringBuffer;->append(Ljava/lang/String;)Ljava/lang/StringBuffer;

    move-result-object v0

    const-string v1, "is a malformed integer."

    invoke-virtual {v0, v1}, Ljava/lang/StringBuffer;->append(Ljava/lang/String;)Ljava/lang/StringBuffer;

    move-result-object v0

    invoke-virtual {v0}, Ljava/lang/StringBuffer;->toString()Ljava/lang/String;

    move-result-object v0

    invoke-direct {v5, v0}, Lfreemarker/template/utility/DateUtil$DateParseException;-><init>(Ljava/lang/String;)V

    throw v5

    .line 716
    .end local v2    # "negative":Z
    .end local v3    # "start":I
    .end local v4    # "e":Ljava/lang/NumberFormatException;
    :cond_6
    new-instance v2, Lfreemarker/template/utility/DateUtil$DateParseException;

    new-instance v3, Ljava/lang/StringBuffer;

    invoke-direct {v3}, Ljava/lang/StringBuffer;-><init>()V

    invoke-virtual {v3, v1}, Ljava/lang/StringBuffer;->append(Ljava/lang/String;)Ljava/lang/StringBuffer;

    move-result-object v1

    invoke-virtual {v1, p1}, Ljava/lang/StringBuffer;->append(Ljava/lang/String;)Ljava/lang/StringBuffer;

    move-result-object v1

    invoke-virtual {v1, v0}, Ljava/lang/StringBuffer;->append(Ljava/lang/String;)Ljava/lang/StringBuffer;

    move-result-object v0

    const-string v1, "is missing."

    invoke-virtual {v0, v1}, Ljava/lang/StringBuffer;->append(Ljava/lang/String;)Ljava/lang/StringBuffer;

    move-result-object v0

    invoke-virtual {v0}, Ljava/lang/StringBuffer;->toString()Ljava/lang/String;

    move-result-object v0

    invoke-direct {v2, v0}, Lfreemarker/template/utility/DateUtil$DateParseException;-><init>(Ljava/lang/String;)V

    throw v2
.end method

.method private static groupToMillisecond(Ljava/lang/String;)I
    .locals 3
    .param p0, "g"    # Ljava/lang/String;
    .annotation system Ldalvik/annotation/Throws;
        value = {
            Lfreemarker/template/utility/DateUtil$DateParseException;
        }
    .end annotation

    .line 793
    const/4 v0, 0x0

    if-nez p0, :cond_0

    .line 794
    return v0

    .line 797
    :cond_0
    invoke-virtual {p0}, Ljava/lang/String;->length()I

    move-result v1

    const/4 v2, 0x3

    if-le v1, v2, :cond_1

    .line 798
    invoke-virtual {p0, v0, v2}, Ljava/lang/String;->substring(II)Ljava/lang/String;

    move-result-object p0

    .line 800
    :cond_1
    const v1, 0x7fffffff

    const-string v2, "partial-seconds"

    invoke-static {p0, v2, v0, v1}, Lfreemarker/template/utility/DateUtil;->groupToInt(Ljava/lang/String;Ljava/lang/String;II)I

    move-result v0

    .line 801
    .local v0, "i":I
    invoke-virtual {p0}, Ljava/lang/String;->length()I

    move-result v1

    const/4 v2, 0x1

    if-ne v1, v2, :cond_2

    mul-int/lit8 v1, v0, 0x64

    goto :goto_0

    :cond_2
    invoke-virtual {p0}, Ljava/lang/String;->length()I

    move-result v1

    const/4 v2, 0x2

    if-ne v1, v2, :cond_3

    mul-int/lit8 v1, v0, 0xa

    goto :goto_0

    :cond_3
    move v1, v0

    :goto_0
    return v1
.end method

.method private static isGMTish(Ljava/lang/String;)Z
    .locals 11
    .param p0, "name"    # Ljava/lang/String;

    .line 153
    invoke-virtual {p0}, Ljava/lang/String;->length()I

    move-result v0

    const/4 v1, 0x3

    const/4 v2, 0x0

    if-ge v0, v1, :cond_0

    .line 154
    return v2

    .line 156
    :cond_0
    invoke-virtual {p0, v2}, Ljava/lang/String;->charAt(I)C

    move-result v0

    .line 157
    .local v0, "c1":C
    const/4 v3, 0x1

    invoke-virtual {p0, v3}, Ljava/lang/String;->charAt(I)C

    move-result v4

    .line 158
    .local v4, "c2":C
    const/4 v5, 0x2

    invoke-virtual {p0, v5}, Ljava/lang/String;->charAt(I)C

    move-result v5

    .line 159
    .local v5, "c3":C
    const/16 v6, 0x47

    const/16 v7, 0x74

    const/16 v8, 0x54

    if-eq v0, v6, :cond_1

    const/16 v6, 0x67

    if-ne v0, v6, :cond_3

    :cond_1
    const/16 v6, 0x4d

    if-eq v4, v6, :cond_2

    const/16 v6, 0x6d

    if-ne v4, v6, :cond_3

    :cond_2
    if-eq v5, v8, :cond_a

    if-eq v5, v7, :cond_a

    :cond_3
    const/16 v6, 0x75

    const/16 v9, 0x55

    if-eq v0, v9, :cond_4

    if-ne v0, v6, :cond_6

    :cond_4
    if-eq v4, v8, :cond_5

    if-ne v4, v7, :cond_6

    :cond_5
    const/16 v10, 0x43

    if-eq v5, v10, :cond_a

    const/16 v10, 0x63

    if-eq v5, v10, :cond_a

    :cond_6
    if-eq v0, v9, :cond_7

    if-ne v0, v6, :cond_9

    :cond_7
    if-eq v4, v8, :cond_8

    if-ne v4, v7, :cond_9

    :cond_8
    const/16 v6, 0x31

    if-eq v5, v6, :cond_a

    .line 178
    :cond_9
    return v2

    .line 181
    :cond_a
    invoke-virtual {p0}, Ljava/lang/String;->length()I

    move-result v6

    if-ne v6, v1, :cond_b

    .line 182
    return v3

    .line 185
    :cond_b
    invoke-virtual {p0, v1}, Ljava/lang/String;->substring(I)Ljava/lang/String;

    move-result-object v1

    .line 186
    .local v1, "offset":Ljava/lang/String;
    const-string v6, "+"

    invoke-virtual {v1, v6}, Ljava/lang/String;->startsWith(Ljava/lang/String;)Z

    move-result v6

    if-eqz v6, :cond_e

    .line 187
    const-string v6, "+0"

    invoke-virtual {v1, v6}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v6

    if-nez v6, :cond_c

    const-string v6, "+00"

    invoke-virtual {v1, v6}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v6

    if-nez v6, :cond_c

    .line 188
    const-string v6, "+00:00"

    invoke-virtual {v1, v6}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v6

    if-eqz v6, :cond_d

    :cond_c
    move v2, v3

    :cond_d
    return v2

    .line 190
    :cond_e
    const-string v6, "-0"

    invoke-virtual {v1, v6}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v6

    if-nez v6, :cond_f

    const-string v6, "-00"

    invoke-virtual {v1, v6}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v6

    if-nez v6, :cond_f

    .line 191
    const-string v6, "-00:00"

    invoke-virtual {v1, v6}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v6

    if-eqz v6, :cond_10

    :cond_f
    move v2, v3

    :cond_10
    return v2
.end method

.method private static parseDateTime_parseMatcher(Ljava/util/regex/Matcher;Ljava/util/TimeZone;ZLfreemarker/template/utility/DateUtil$CalendarFieldsToDateConverter;)Ljava/util/Date;
    .locals 23
    .param p0, "m"    # Ljava/util/regex/Matcher;
    .param p1, "defaultTZ"    # Ljava/util/TimeZone;
    .param p2, "xsMode"    # Z
    .param p3, "calToDateConverter"    # Lfreemarker/template/utility/DateUtil$CalendarFieldsToDateConverter;
    .annotation system Ldalvik/annotation/Throws;
        value = {
            Lfreemarker/template/utility/DateUtil$DateParseException;
        }
    .end annotation

    .line 631
    move-object/from16 v1, p0

    move-object/from16 v2, p1

    const-string v0, "defaultTZ"

    invoke-static {v0, v2}, Lfreemarker/template/utility/NullArgumentException;->check(Ljava/lang/String;Ljava/lang/Object;)V

    .line 633
    const/4 v0, 0x1

    :try_start_0
    invoke-virtual {v1, v0}, Ljava/util/regex/Matcher;->group(I)Ljava/lang/String;

    move-result-object v3

    const-string/jumbo v4, "year"

    const/high16 v5, -0x80000000

    const v6, 0x7fffffff

    invoke-static {v3, v4, v5, v6}, Lfreemarker/template/utility/DateUtil;->groupToInt(Ljava/lang/String;Ljava/lang/String;II)I

    move-result v3

    .line 639
    .local v3, "year":I
    if-gtz v3, :cond_1

    .line 640
    const/4 v4, 0x0

    .line 641
    .local v4, "era":I
    neg-int v5, v3

    xor-int/lit8 v6, p2, 0x1

    add-int v3, v5, v6

    .line 642
    if-eqz v3, :cond_0

    goto :goto_0

    .line 643
    :cond_0
    new-instance v0, Lfreemarker/template/utility/DateUtil$DateParseException;

    const-string v5, "Year 0 is not allowed in XML schema dates. BC 1 is -1, AD 1 is 1."

    invoke-direct {v0, v5}, Lfreemarker/template/utility/DateUtil$DateParseException;-><init>(Ljava/lang/String;)V

    .end local p0    # "m":Ljava/util/regex/Matcher;
    .end local p1    # "defaultTZ":Ljava/util/TimeZone;
    .end local p2    # "xsMode":Z
    .end local p3    # "calToDateConverter":Lfreemarker/template/utility/DateUtil$CalendarFieldsToDateConverter;
    throw v0

    .line 646
    .end local v4    # "era":I
    .restart local p0    # "m":Ljava/util/regex/Matcher;
    .restart local p1    # "defaultTZ":Ljava/util/TimeZone;
    .restart local p2    # "xsMode":Z
    .restart local p3    # "calToDateConverter":Lfreemarker/template/utility/DateUtil$CalendarFieldsToDateConverter;
    :cond_1
    const/4 v4, 0x1

    .line 649
    .restart local v4    # "era":I
    :goto_0
    const/4 v5, 0x2

    invoke-virtual {v1, v5}, Ljava/util/regex/Matcher;->group(I)Ljava/lang/String;

    move-result-object v5

    const-string v6, "month"

    const/16 v7, 0xc

    invoke-static {v5, v6, v0, v7}, Lfreemarker/template/utility/DateUtil;->groupToInt(Ljava/lang/String;Ljava/lang/String;II)I

    move-result v5

    add-int/lit8 v16, v5, -0x1

    .line 650
    .local v16, "month":I
    const/4 v5, 0x3

    invoke-virtual {v1, v5}, Ljava/util/regex/Matcher;->group(I)Ljava/lang/String;

    move-result-object v5

    const-string v6, "day-of-month"

    const/16 v7, 0x1f

    invoke-static {v5, v6, v0, v7}, Lfreemarker/template/utility/DateUtil;->groupToInt(Ljava/lang/String;Ljava/lang/String;II)I

    move-result v9

    .line 654
    .local v9, "day":I
    const/4 v0, 0x4

    invoke-virtual {v1, v0}, Ljava/util/regex/Matcher;->group(I)Ljava/lang/String;

    move-result-object v0

    const-string v5, "hour-of-day"

    const/16 v6, 0x18

    const/4 v7, 0x0

    invoke-static {v0, v5, v7, v6}, Lfreemarker/template/utility/DateUtil;->groupToInt(Ljava/lang/String;Ljava/lang/String;II)I

    move-result v0

    .line 656
    .local v0, "hours":I
    if-ne v0, v6, :cond_2

    .line 657
    const/4 v0, 0x0

    .line 658
    const/4 v5, 0x1

    move/from16 v17, v5

    .local v5, "hourWas24":Z
    goto :goto_1

    .line 661
    .end local v5    # "hourWas24":Z
    :cond_2
    const/4 v5, 0x0

    move/from16 v17, v5

    .line 664
    .local v17, "hourWas24":Z
    :goto_1
    const/4 v5, 0x5

    invoke-virtual {v1, v5}, Ljava/util/regex/Matcher;->group(I)Ljava/lang/String;

    move-result-object v5

    move-object v14, v5

    .line 665
    .local v14, "minutesStr":Ljava/lang/String;
    if-eqz v14, :cond_3

    const-string v5, "minute"

    const/16 v6, 0x3b

    invoke-static {v14, v5, v7, v6}, Lfreemarker/template/utility/DateUtil;->groupToInt(Ljava/lang/String;Ljava/lang/String;II)I

    move-result v5

    goto :goto_2

    :cond_3
    move v5, v7

    :goto_2
    move/from16 v18, v5

    .line 667
    .local v18, "minutes":I
    const/4 v5, 0x6

    invoke-virtual {v1, v5}, Ljava/util/regex/Matcher;->group(I)Ljava/lang/String;

    move-result-object v5

    move-object v13, v5

    .line 669
    .local v13, "secsStr":Ljava/lang/String;
    if-eqz v13, :cond_4

    const-string v5, "second"

    const/16 v6, 0x3c

    invoke-static {v13, v5, v7, v6}, Lfreemarker/template/utility/DateUtil;->groupToInt(Ljava/lang/String;Ljava/lang/String;II)I

    move-result v7

    :cond_4
    move/from16 v19, v7

    .line 671
    .local v19, "secs":I
    const/4 v5, 0x7

    invoke-virtual {v1, v5}, Ljava/util/regex/Matcher;->group(I)Ljava/lang/String;

    move-result-object v5

    invoke-static {v5}, Lfreemarker/template/utility/DateUtil;->groupToMillisecond(Ljava/lang/String;)I

    move-result v5

    move/from16 v20, v5

    .line 675
    .local v20, "millisecs":I
    const/16 v5, 0x8

    invoke-virtual {v1, v5}, Ljava/util/regex/Matcher;->group(I)Ljava/lang/String;

    move-result-object v5

    invoke-static {v5, v2}, Lfreemarker/template/utility/DateUtil;->parseMatchingTimeZone(Ljava/lang/String;Ljava/util/TimeZone;)Ljava/util/TimeZone;

    move-result-object v15

    .line 678
    .local v15, "tz":Ljava/util/TimeZone;
    if-eqz v17, :cond_6

    .line 679
    if-nez v18, :cond_5

    if-nez v19, :cond_5

    if-nez v20, :cond_5

    goto :goto_3

    .line 680
    :cond_5
    new-instance v5, Lfreemarker/template/utility/DateUtil$DateParseException;

    const-string v6, "Hour 24 is only allowed in the case of midnight."

    invoke-direct {v5, v6}, Lfreemarker/template/utility/DateUtil$DateParseException;-><init>(Ljava/lang/String;)V

    .end local p0    # "m":Ljava/util/regex/Matcher;
    .end local p1    # "defaultTZ":Ljava/util/TimeZone;
    .end local p2    # "xsMode":Z
    .end local p3    # "calToDateConverter":Lfreemarker/template/utility/DateUtil$CalendarFieldsToDateConverter;
    throw v5

    .line 686
    .restart local p0    # "m":Ljava/util/regex/Matcher;
    .restart local p1    # "defaultTZ":Ljava/util/TimeZone;
    .restart local p2    # "xsMode":Z
    .restart local p3    # "calToDateConverter":Lfreemarker/template/utility/DateUtil$CalendarFieldsToDateConverter;
    :cond_6
    :goto_3
    move-object/from16 v5, p3

    move v6, v4

    move v7, v3

    move/from16 v8, v16

    move v10, v0

    move/from16 v11, v18

    move/from16 v12, v19

    move-object/from16 v21, v13

    .end local v13    # "secsStr":Ljava/lang/String;
    .local v21, "secsStr":Ljava/lang/String;
    move/from16 v13, v20

    move-object/from16 v22, v14

    .end local v14    # "minutesStr":Ljava/lang/String;
    .local v22, "minutesStr":Ljava/lang/String;
    move/from16 v14, v17

    invoke-interface/range {v5 .. v15}, Lfreemarker/template/utility/DateUtil$CalendarFieldsToDateConverter;->calculate(IIIIIIIIZLjava/util/TimeZone;)Ljava/util/Date;

    move-result-object v5
    :try_end_0
    .catch Ljava/lang/IllegalArgumentException; {:try_start_0 .. :try_end_0} :catch_0

    return-object v5

    .line 688
    .end local v0    # "hours":I
    .end local v3    # "year":I
    .end local v4    # "era":I
    .end local v9    # "day":I
    .end local v15    # "tz":Ljava/util/TimeZone;
    .end local v16    # "month":I
    .end local v17    # "hourWas24":Z
    .end local v18    # "minutes":I
    .end local v19    # "secs":I
    .end local v20    # "millisecs":I
    .end local v21    # "secsStr":Ljava/lang/String;
    .end local v22    # "minutesStr":Ljava/lang/String;
    :catch_0
    move-exception v0

    .line 690
    .local v0, "e":Ljava/lang/IllegalArgumentException;
    new-instance v3, Lfreemarker/template/utility/DateUtil$DateParseException;

    const-string v4, "Date-time calculation faliure. Probably the date-time is formally correct, but refers to an unexistent date-time (like February 30)."

    invoke-direct {v3, v4}, Lfreemarker/template/utility/DateUtil$DateParseException;-><init>(Ljava/lang/String;)V

    throw v3
.end method

.method private static parseDate_parseMatcher(Ljava/util/regex/Matcher;Ljava/util/TimeZone;ZLfreemarker/template/utility/DateUtil$CalendarFieldsToDateConverter;)Ljava/util/Date;
    .locals 17
    .param p0, "m"    # Ljava/util/regex/Matcher;
    .param p1, "defaultTZ"    # Ljava/util/TimeZone;
    .param p2, "xsMode"    # Z
    .param p3, "calToDateConverter"    # Lfreemarker/template/utility/DateUtil$CalendarFieldsToDateConverter;
    .annotation system Ldalvik/annotation/Throws;
        value = {
            Lfreemarker/template/utility/DateUtil$DateParseException;
        }
    .end annotation

    .line 465
    move-object/from16 v1, p0

    move-object/from16 v2, p1

    const-string v0, "defaultTZ"

    invoke-static {v0, v2}, Lfreemarker/template/utility/NullArgumentException;->check(Ljava/lang/String;Ljava/lang/Object;)V

    .line 467
    const/4 v0, 0x1

    :try_start_0
    invoke-virtual {v1, v0}, Ljava/util/regex/Matcher;->group(I)Ljava/lang/String;

    move-result-object v3

    const-string/jumbo v4, "year"

    const/high16 v5, -0x80000000

    const v6, 0x7fffffff

    invoke-static {v3, v4, v5, v6}, Lfreemarker/template/utility/DateUtil;->groupToInt(Ljava/lang/String;Ljava/lang/String;II)I

    move-result v3

    .line 473
    .local v3, "year":I
    if-gtz v3, :cond_1

    .line 474
    const/4 v4, 0x0

    .line 475
    .local v4, "era":I
    neg-int v5, v3

    xor-int/lit8 v6, p2, 0x1

    add-int v3, v5, v6

    .line 476
    if-eqz v3, :cond_0

    goto :goto_0

    .line 477
    :cond_0
    new-instance v0, Lfreemarker/template/utility/DateUtil$DateParseException;

    const-string v5, "Year 0 is not allowed in XML schema dates. BC 1 is -1, AD 1 is 1."

    invoke-direct {v0, v5}, Lfreemarker/template/utility/DateUtil$DateParseException;-><init>(Ljava/lang/String;)V

    .end local p0    # "m":Ljava/util/regex/Matcher;
    .end local p1    # "defaultTZ":Ljava/util/TimeZone;
    .end local p2    # "xsMode":Z
    .end local p3    # "calToDateConverter":Lfreemarker/template/utility/DateUtil$CalendarFieldsToDateConverter;
    throw v0

    .line 480
    .end local v4    # "era":I
    .restart local p0    # "m":Ljava/util/regex/Matcher;
    .restart local p1    # "defaultTZ":Ljava/util/TimeZone;
    .restart local p2    # "xsMode":Z
    .restart local p3    # "calToDateConverter":Lfreemarker/template/utility/DateUtil$CalendarFieldsToDateConverter;
    :cond_1
    const/4 v4, 0x1

    .line 483
    .restart local v4    # "era":I
    :goto_0
    const/4 v5, 0x2

    invoke-virtual {v1, v5}, Ljava/util/regex/Matcher;->group(I)Ljava/lang/String;

    move-result-object v5

    const-string v6, "month"

    const/16 v7, 0xc

    invoke-static {v5, v6, v0, v7}, Lfreemarker/template/utility/DateUtil;->groupToInt(Ljava/lang/String;Ljava/lang/String;II)I

    move-result v5

    add-int/lit8 v16, v5, -0x1

    .line 484
    .local v16, "month":I
    const/4 v5, 0x3

    invoke-virtual {v1, v5}, Ljava/util/regex/Matcher;->group(I)Ljava/lang/String;

    move-result-object v5

    const-string v6, "day-of-month"

    const/16 v7, 0x1f

    invoke-static {v5, v6, v0, v7}, Lfreemarker/template/utility/DateUtil;->groupToInt(Ljava/lang/String;Ljava/lang/String;II)I

    move-result v9

    .line 486
    .local v9, "day":I
    if-eqz p2, :cond_2

    const/4 v0, 0x4

    invoke-virtual {v1, v0}, Ljava/util/regex/Matcher;->group(I)Ljava/lang/String;

    move-result-object v0

    invoke-static {v0, v2}, Lfreemarker/template/utility/DateUtil;->parseMatchingTimeZone(Ljava/lang/String;Ljava/util/TimeZone;)Ljava/util/TimeZone;

    move-result-object v0

    move-object v15, v0

    goto :goto_1

    :cond_2
    move-object v15, v2

    .line 488
    .local v15, "tz":Ljava/util/TimeZone;
    :goto_1
    const/4 v10, 0x0

    const/4 v11, 0x0

    const/4 v12, 0x0

    const/4 v13, 0x0

    const/4 v14, 0x0

    move-object/from16 v5, p3

    move v6, v4

    move v7, v3

    move/from16 v8, v16

    invoke-interface/range {v5 .. v15}, Lfreemarker/template/utility/DateUtil$CalendarFieldsToDateConverter;->calculate(IIIIIIIIZLjava/util/TimeZone;)Ljava/util/Date;

    move-result-object v0
    :try_end_0
    .catch Ljava/lang/IllegalArgumentException; {:try_start_0 .. :try_end_0} :catch_0

    return-object v0

    .line 489
    .end local v3    # "year":I
    .end local v4    # "era":I
    .end local v9    # "day":I
    .end local v15    # "tz":Ljava/util/TimeZone;
    .end local v16    # "month":I
    :catch_0
    move-exception v0

    .line 491
    .local v0, "e":Ljava/lang/IllegalArgumentException;
    new-instance v3, Lfreemarker/template/utility/DateUtil$DateParseException;

    const-string v4, "Date calculation faliure. Probably the date is formally correct, but refers to an unexistent date (like February 30)."

    invoke-direct {v3, v4}, Lfreemarker/template/utility/DateUtil$DateParseException;-><init>(Ljava/lang/String;)V

    throw v3
.end method

.method public static parseISO8601Date(Ljava/lang/String;Ljava/util/TimeZone;Lfreemarker/template/utility/DateUtil$CalendarFieldsToDateConverter;)Ljava/util/Date;
    .locals 6
    .param p0, "dateStr"    # Ljava/lang/String;
    .param p1, "defaultTimeZone"    # Ljava/util/TimeZone;
    .param p2, "calToDateConverter"    # Lfreemarker/template/utility/DateUtil$CalendarFieldsToDateConverter;
    .annotation system Ldalvik/annotation/Throws;
        value = {
            Lfreemarker/template/utility/DateUtil$DateParseException;
        }
    .end annotation

    .line 447
    sget-object v0, Lfreemarker/template/utility/DateUtil;->PATTERN_ISO8601_EXTENDED_DATE:Ljava/util/regex/Pattern;

    invoke-virtual {v0, p0}, Ljava/util/regex/Pattern;->matcher(Ljava/lang/CharSequence;)Ljava/util/regex/Matcher;

    move-result-object v1

    .line 448
    .local v1, "m":Ljava/util/regex/Matcher;
    invoke-virtual {v1}, Ljava/util/regex/Matcher;->matches()Z

    move-result v2

    if-nez v2, :cond_1

    .line 449
    sget-object v2, Lfreemarker/template/utility/DateUtil;->PATTERN_ISO8601_BASIC_DATE:Ljava/util/regex/Pattern;

    invoke-virtual {v2, p0}, Ljava/util/regex/Pattern;->matcher(Ljava/lang/CharSequence;)Ljava/util/regex/Matcher;

    move-result-object v1

    .line 450
    invoke-virtual {v1}, Ljava/util/regex/Matcher;->matches()Z

    move-result v3

    if-eqz v3, :cond_0

    goto :goto_0

    .line 451
    :cond_0
    new-instance v3, Lfreemarker/template/utility/DateUtil$DateParseException;

    new-instance v4, Ljava/lang/StringBuffer;

    invoke-direct {v4}, Ljava/lang/StringBuffer;-><init>()V

    const-string v5, "The value didn\'t match the expected pattern: "

    invoke-virtual {v4, v5}, Ljava/lang/StringBuffer;->append(Ljava/lang/String;)Ljava/lang/StringBuffer;

    move-result-object v4

    invoke-virtual {v4, v0}, Ljava/lang/StringBuffer;->append(Ljava/lang/Object;)Ljava/lang/StringBuffer;

    move-result-object v0

    const-string v4, " or "

    invoke-virtual {v0, v4}, Ljava/lang/StringBuffer;->append(Ljava/lang/String;)Ljava/lang/StringBuffer;

    move-result-object v0

    invoke-virtual {v0, v2}, Ljava/lang/StringBuffer;->append(Ljava/lang/Object;)Ljava/lang/StringBuffer;

    move-result-object v0

    invoke-virtual {v0}, Ljava/lang/StringBuffer;->toString()Ljava/lang/String;

    move-result-object v0

    invoke-direct {v3, v0}, Lfreemarker/template/utility/DateUtil$DateParseException;-><init>(Ljava/lang/String;)V

    throw v3

    .line 456
    :cond_1
    :goto_0
    const/4 v0, 0x0

    invoke-static {v1, p1, v0, p2}, Lfreemarker/template/utility/DateUtil;->parseDate_parseMatcher(Ljava/util/regex/Matcher;Ljava/util/TimeZone;ZLfreemarker/template/utility/DateUtil$CalendarFieldsToDateConverter;)Ljava/util/Date;

    move-result-object v0

    return-object v0
.end method

.method public static parseISO8601DateTime(Ljava/lang/String;Ljava/util/TimeZone;Lfreemarker/template/utility/DateUtil$CalendarFieldsToDateConverter;)Ljava/util/Date;
    .locals 6
    .param p0, "dateTimeStr"    # Ljava/lang/String;
    .param p1, "defaultTZ"    # Ljava/util/TimeZone;
    .param p2, "calToDateConverter"    # Lfreemarker/template/utility/DateUtil$CalendarFieldsToDateConverter;
    .annotation system Ldalvik/annotation/Throws;
        value = {
            Lfreemarker/template/utility/DateUtil$DateParseException;
        }
    .end annotation

    .line 613
    sget-object v0, Lfreemarker/template/utility/DateUtil;->PATTERN_ISO8601_EXTENDED_DATE_TIME:Ljava/util/regex/Pattern;

    invoke-virtual {v0, p0}, Ljava/util/regex/Pattern;->matcher(Ljava/lang/CharSequence;)Ljava/util/regex/Matcher;

    move-result-object v1

    .line 614
    .local v1, "m":Ljava/util/regex/Matcher;
    invoke-virtual {v1}, Ljava/util/regex/Matcher;->matches()Z

    move-result v2

    if-nez v2, :cond_1

    .line 615
    sget-object v2, Lfreemarker/template/utility/DateUtil;->PATTERN_ISO8601_BASIC_DATE_TIME:Ljava/util/regex/Pattern;

    invoke-virtual {v2, p0}, Ljava/util/regex/Pattern;->matcher(Ljava/lang/CharSequence;)Ljava/util/regex/Matcher;

    move-result-object v1

    .line 616
    invoke-virtual {v1}, Ljava/util/regex/Matcher;->matches()Z

    move-result v3

    if-eqz v3, :cond_0

    goto :goto_0

    .line 617
    :cond_0
    new-instance v3, Lfreemarker/template/utility/DateUtil$DateParseException;

    new-instance v4, Ljava/lang/StringBuffer;

    invoke-direct {v4}, Ljava/lang/StringBuffer;-><init>()V

    const-string v5, "The value ("

    invoke-virtual {v4, v5}, Ljava/lang/StringBuffer;->append(Ljava/lang/String;)Ljava/lang/StringBuffer;

    move-result-object v4

    invoke-virtual {v4, p0}, Ljava/lang/StringBuffer;->append(Ljava/lang/String;)Ljava/lang/StringBuffer;

    move-result-object v4

    const-string v5, ") didn\'t match the expected pattern: "

    invoke-virtual {v4, v5}, Ljava/lang/StringBuffer;->append(Ljava/lang/String;)Ljava/lang/StringBuffer;

    move-result-object v4

    invoke-virtual {v4, v0}, Ljava/lang/StringBuffer;->append(Ljava/lang/Object;)Ljava/lang/StringBuffer;

    move-result-object v0

    const-string v4, " or "

    invoke-virtual {v0, v4}, Ljava/lang/StringBuffer;->append(Ljava/lang/String;)Ljava/lang/StringBuffer;

    move-result-object v0

    invoke-virtual {v0, v2}, Ljava/lang/StringBuffer;->append(Ljava/lang/Object;)Ljava/lang/StringBuffer;

    move-result-object v0

    invoke-virtual {v0}, Ljava/lang/StringBuffer;->toString()Ljava/lang/String;

    move-result-object v0

    invoke-direct {v3, v0}, Lfreemarker/template/utility/DateUtil$DateParseException;-><init>(Ljava/lang/String;)V

    throw v3

    .line 622
    :cond_1
    :goto_0
    const/4 v0, 0x0

    invoke-static {v1, p1, v0, p2}, Lfreemarker/template/utility/DateUtil;->parseDateTime_parseMatcher(Ljava/util/regex/Matcher;Ljava/util/TimeZone;ZLfreemarker/template/utility/DateUtil$CalendarFieldsToDateConverter;)Ljava/util/Date;

    move-result-object v0

    return-object v0
.end method

.method public static parseISO8601Time(Ljava/lang/String;Ljava/util/TimeZone;Lfreemarker/template/utility/DateUtil$CalendarFieldsToDateConverter;)Ljava/util/Date;
    .locals 6
    .param p0, "timeStr"    # Ljava/lang/String;
    .param p1, "defaultTZ"    # Ljava/util/TimeZone;
    .param p2, "calToDateConverter"    # Lfreemarker/template/utility/DateUtil$CalendarFieldsToDateConverter;
    .annotation system Ldalvik/annotation/Throws;
        value = {
            Lfreemarker/template/utility/DateUtil$DateParseException;
        }
    .end annotation

    .line 519
    sget-object v0, Lfreemarker/template/utility/DateUtil;->PATTERN_ISO8601_EXTENDED_TIME:Ljava/util/regex/Pattern;

    invoke-virtual {v0, p0}, Ljava/util/regex/Pattern;->matcher(Ljava/lang/CharSequence;)Ljava/util/regex/Matcher;

    move-result-object v1

    .line 520
    .local v1, "m":Ljava/util/regex/Matcher;
    invoke-virtual {v1}, Ljava/util/regex/Matcher;->matches()Z

    move-result v2

    if-nez v2, :cond_1

    .line 521
    sget-object v2, Lfreemarker/template/utility/DateUtil;->PATTERN_ISO8601_BASIC_TIME:Ljava/util/regex/Pattern;

    invoke-virtual {v2, p0}, Ljava/util/regex/Pattern;->matcher(Ljava/lang/CharSequence;)Ljava/util/regex/Matcher;

    move-result-object v1

    .line 522
    invoke-virtual {v1}, Ljava/util/regex/Matcher;->matches()Z

    move-result v3

    if-eqz v3, :cond_0

    goto :goto_0

    .line 523
    :cond_0
    new-instance v3, Lfreemarker/template/utility/DateUtil$DateParseException;

    new-instance v4, Ljava/lang/StringBuffer;

    invoke-direct {v4}, Ljava/lang/StringBuffer;-><init>()V

    const-string v5, "The value didn\'t match the expected pattern: "

    invoke-virtual {v4, v5}, Ljava/lang/StringBuffer;->append(Ljava/lang/String;)Ljava/lang/StringBuffer;

    move-result-object v4

    invoke-virtual {v4, v0}, Ljava/lang/StringBuffer;->append(Ljava/lang/Object;)Ljava/lang/StringBuffer;

    move-result-object v0

    const-string v4, " or "

    invoke-virtual {v0, v4}, Ljava/lang/StringBuffer;->append(Ljava/lang/String;)Ljava/lang/StringBuffer;

    move-result-object v0

    invoke-virtual {v0, v2}, Ljava/lang/StringBuffer;->append(Ljava/lang/Object;)Ljava/lang/StringBuffer;

    move-result-object v0

    invoke-virtual {v0}, Ljava/lang/StringBuffer;->toString()Ljava/lang/String;

    move-result-object v0

    invoke-direct {v3, v0}, Lfreemarker/template/utility/DateUtil$DateParseException;-><init>(Ljava/lang/String;)V

    throw v3

    .line 528
    :cond_1
    :goto_0
    invoke-static {v1, p1, p2}, Lfreemarker/template/utility/DateUtil;->parseTime_parseMatcher(Ljava/util/regex/Matcher;Ljava/util/TimeZone;Lfreemarker/template/utility/DateUtil$CalendarFieldsToDateConverter;)Ljava/util/Date;

    move-result-object v0

    return-object v0
.end method

.method private static parseMatchingTimeZone(Ljava/lang/String;Ljava/util/TimeZone;)Ljava/util/TimeZone;
    .locals 9
    .param p0, "s"    # Ljava/lang/String;
    .param p1, "defaultZone"    # Ljava/util/TimeZone;
    .annotation system Ldalvik/annotation/Throws;
        value = {
            Lfreemarker/template/utility/DateUtil$DateParseException;
        }
    .end annotation

    .line 763
    if-nez p0, :cond_0

    .line 764
    return-object p1

    .line 766
    :cond_0
    const-string v0, "Z"

    invoke-virtual {p0, v0}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v0

    if-eqz v0, :cond_1

    .line 767
    sget-object v0, Lfreemarker/template/utility/DateUtil;->UTC:Ljava/util/TimeZone;

    return-object v0

    .line 770
    :cond_1
    new-instance v0, Ljava/lang/StringBuffer;

    const/16 v1, 0x9

    invoke-direct {v0, v1}, Ljava/lang/StringBuffer;-><init>(I)V

    .line 771
    .local v0, "sb":Ljava/lang/StringBuffer;
    const-string v1, "GMT"

    invoke-virtual {v0, v1}, Ljava/lang/StringBuffer;->append(Ljava/lang/String;)Ljava/lang/StringBuffer;

    .line 772
    const/4 v1, 0x0

    invoke-virtual {p0, v1}, Ljava/lang/String;->charAt(I)C

    move-result v2

    invoke-virtual {v0, v2}, Ljava/lang/StringBuffer;->append(C)Ljava/lang/StringBuffer;

    .line 774
    const/4 v2, 0x1

    const/4 v3, 0x3

    invoke-virtual {p0, v2, v3}, Ljava/lang/String;->substring(II)Ljava/lang/String;

    move-result-object v2

    .line 775
    .local v2, "h":Ljava/lang/String;
    const/16 v4, 0x17

    const-string v5, "offset-hours"

    invoke-static {v2, v5, v1, v4}, Lfreemarker/template/utility/DateUtil;->groupToInt(Ljava/lang/String;Ljava/lang/String;II)I

    .line 776
    invoke-virtual {v0, v2}, Ljava/lang/StringBuffer;->append(Ljava/lang/String;)Ljava/lang/StringBuffer;

    .line 779
    invoke-virtual {p0}, Ljava/lang/String;->length()I

    move-result v4

    .line 780
    .local v4, "ln":I
    if-le v4, v3, :cond_3

    .line 781
    invoke-virtual {p0, v3}, Ljava/lang/String;->charAt(I)C

    move-result v5

    const/16 v6, 0x3a

    if-ne v5, v6, :cond_2

    const/4 v3, 0x4

    .line 782
    .local v3, "startIdx":I
    :cond_2
    add-int/lit8 v5, v3, 0x2

    invoke-virtual {p0, v3, v5}, Ljava/lang/String;->substring(II)Ljava/lang/String;

    move-result-object v5

    .line 783
    .local v5, "m":Ljava/lang/String;
    const/16 v7, 0x3b

    const-string v8, "offset-minutes"

    invoke-static {v5, v8, v1, v7}, Lfreemarker/template/utility/DateUtil;->groupToInt(Ljava/lang/String;Ljava/lang/String;II)I

    .line 784
    invoke-virtual {v0, v6}, Ljava/lang/StringBuffer;->append(C)Ljava/lang/StringBuffer;

    .line 785
    invoke-virtual {v0, v5}, Ljava/lang/StringBuffer;->append(Ljava/lang/String;)Ljava/lang/StringBuffer;

    .line 788
    .end local v3    # "startIdx":I
    .end local v5    # "m":Ljava/lang/String;
    :cond_3
    invoke-virtual {v0}, Ljava/lang/StringBuffer;->toString()Ljava/lang/String;

    move-result-object v1

    invoke-static {v1}, Ljava/util/TimeZone;->getTimeZone(Ljava/lang/String;)Ljava/util/TimeZone;

    move-result-object v1

    return-object v1
.end method

.method private static parseTime_parseMatcher(Ljava/util/regex/Matcher;Ljava/util/TimeZone;Lfreemarker/template/utility/DateUtil$CalendarFieldsToDateConverter;)Ljava/util/Date;
    .locals 22
    .param p0, "m"    # Ljava/util/regex/Matcher;
    .param p1, "defaultTZ"    # Ljava/util/TimeZone;
    .param p2, "calToDateConverter"    # Lfreemarker/template/utility/DateUtil$CalendarFieldsToDateConverter;
    .annotation system Ldalvik/annotation/Throws;
        value = {
            Lfreemarker/template/utility/DateUtil$DateParseException;
        }
    .end annotation

    .line 535
    move-object/from16 v1, p0

    move-object/from16 v2, p1

    const-string v0, "defaultTZ"

    invoke-static {v0, v2}, Lfreemarker/template/utility/NullArgumentException;->check(Ljava/lang/String;Ljava/lang/Object;)V

    .line 539
    const/4 v0, 0x1

    :try_start_0
    invoke-virtual {v1, v0}, Ljava/util/regex/Matcher;->group(I)Ljava/lang/String;

    move-result-object v0

    const-string v3, "hour-of-day"

    const/16 v4, 0x18

    const/4 v5, 0x0

    invoke-static {v0, v3, v5, v4}, Lfreemarker/template/utility/DateUtil;->groupToInt(Ljava/lang/String;Ljava/lang/String;II)I

    move-result v0

    .line 541
    .local v0, "hours":I
    if-ne v0, v4, :cond_0

    .line 542
    const/4 v0, 0x0

    .line 543
    const/4 v3, 0x1

    .local v3, "hourWas24":Z
    goto :goto_0

    .line 546
    .end local v3    # "hourWas24":Z
    :cond_0
    const/4 v3, 0x0

    .line 549
    .restart local v3    # "hourWas24":Z
    :goto_0
    const/4 v4, 0x2

    invoke-virtual {v1, v4}, Ljava/util/regex/Matcher;->group(I)Ljava/lang/String;

    move-result-object v4

    .line 550
    .local v4, "minutesStr":Ljava/lang/String;
    if-eqz v4, :cond_1

    const-string v6, "minute"

    const/16 v7, 0x3b

    invoke-static {v4, v6, v5, v7}, Lfreemarker/template/utility/DateUtil;->groupToInt(Ljava/lang/String;Ljava/lang/String;II)I

    move-result v6

    goto :goto_1

    :cond_1
    move v6, v5

    :goto_1
    move/from16 v17, v6

    .line 552
    .local v17, "minutes":I
    const/4 v6, 0x3

    invoke-virtual {v1, v6}, Ljava/util/regex/Matcher;->group(I)Ljava/lang/String;

    move-result-object v6

    move-object v15, v6

    .line 554
    .local v15, "secsStr":Ljava/lang/String;
    if-eqz v15, :cond_2

    const-string v6, "second"

    const/16 v7, 0x3c

    invoke-static {v15, v6, v5, v7}, Lfreemarker/template/utility/DateUtil;->groupToInt(Ljava/lang/String;Ljava/lang/String;II)I

    move-result v5

    .line 556
    .local v5, "secs":I
    :cond_2
    const/4 v6, 0x4

    invoke-virtual {v1, v6}, Ljava/util/regex/Matcher;->group(I)Ljava/lang/String;

    move-result-object v6

    invoke-static {v6}, Lfreemarker/template/utility/DateUtil;->groupToMillisecond(Ljava/lang/String;)I

    move-result v6

    move/from16 v18, v6

    .line 560
    .local v18, "millisecs":I
    const/4 v6, 0x5

    invoke-virtual {v1, v6}, Ljava/util/regex/Matcher;->group(I)Ljava/lang/String;

    move-result-object v6

    invoke-static {v6, v2}, Lfreemarker/template/utility/DateUtil;->parseMatchingTimeZone(Ljava/lang/String;Ljava/util/TimeZone;)Ljava/util/TimeZone;

    move-result-object v16

    .line 564
    .local v16, "tz":Ljava/util/TimeZone;
    if-eqz v3, :cond_4

    .line 565
    if-nez v17, :cond_3

    if-nez v5, :cond_3

    if-nez v18, :cond_3

    .line 566
    const/4 v6, 0x2

    move/from16 v19, v6

    .local v6, "day":I
    goto :goto_2

    .line 568
    .end local v6    # "day":I
    :cond_3
    new-instance v6, Lfreemarker/template/utility/DateUtil$DateParseException;

    const-string v7, "Hour 24 is only allowed in the case of midnight."

    invoke-direct {v6, v7}, Lfreemarker/template/utility/DateUtil$DateParseException;-><init>(Ljava/lang/String;)V

    .end local p0    # "m":Ljava/util/regex/Matcher;
    .end local p1    # "defaultTZ":Ljava/util/TimeZone;
    .end local p2    # "calToDateConverter":Lfreemarker/template/utility/DateUtil$CalendarFieldsToDateConverter;
    throw v6

    .line 573
    .restart local p0    # "m":Ljava/util/regex/Matcher;
    .restart local p1    # "defaultTZ":Ljava/util/TimeZone;
    .restart local p2    # "calToDateConverter":Lfreemarker/template/utility/DateUtil$CalendarFieldsToDateConverter;
    :cond_4
    const/4 v6, 0x1

    move/from16 v19, v6

    .line 576
    .local v19, "day":I
    :goto_2
    const/4 v7, 0x1

    const/16 v8, 0x7b2

    const/4 v9, 0x0

    const/16 v20, 0x0

    move-object/from16 v6, p2

    move/from16 v10, v19

    move v11, v0

    move/from16 v12, v17

    move v13, v5

    move/from16 v14, v18

    move-object/from16 v21, v15

    .end local v15    # "secsStr":Ljava/lang/String;
    .local v21, "secsStr":Ljava/lang/String;
    move/from16 v15, v20

    invoke-interface/range {v6 .. v16}, Lfreemarker/template/utility/DateUtil$CalendarFieldsToDateConverter;->calculate(IIIIIIIIZLjava/util/TimeZone;)Ljava/util/Date;

    move-result-object v6
    :try_end_0
    .catch Ljava/lang/IllegalArgumentException; {:try_start_0 .. :try_end_0} :catch_0

    return-object v6

    .line 578
    .end local v0    # "hours":I
    .end local v3    # "hourWas24":Z
    .end local v4    # "minutesStr":Ljava/lang/String;
    .end local v5    # "secs":I
    .end local v16    # "tz":Ljava/util/TimeZone;
    .end local v17    # "minutes":I
    .end local v18    # "millisecs":I
    .end local v19    # "day":I
    .end local v21    # "secsStr":Ljava/lang/String;
    :catch_0
    move-exception v0

    .line 580
    .local v0, "e":Ljava/lang/IllegalArgumentException;
    new-instance v3, Lfreemarker/template/utility/DateUtil$DateParseException;

    const-string v4, "Unexpected time calculation faliure."

    invoke-direct {v3, v4}, Lfreemarker/template/utility/DateUtil$DateParseException;-><init>(Ljava/lang/String;)V

    throw v3
.end method

.method public static parseXSDate(Ljava/lang/String;Ljava/util/TimeZone;Lfreemarker/template/utility/DateUtil$CalendarFieldsToDateConverter;)Ljava/util/Date;
    .locals 5
    .param p0, "dateStr"    # Ljava/lang/String;
    .param p1, "defaultTimeZone"    # Ljava/util/TimeZone;
    .param p2, "calToDateConverter"    # Lfreemarker/template/utility/DateUtil$CalendarFieldsToDateConverter;
    .annotation system Ldalvik/annotation/Throws;
        value = {
            Lfreemarker/template/utility/DateUtil$DateParseException;
        }
    .end annotation

    .line 432
    sget-object v0, Lfreemarker/template/utility/DateUtil;->PATTERN_XS_DATE:Ljava/util/regex/Pattern;

    invoke-virtual {v0, p0}, Ljava/util/regex/Pattern;->matcher(Ljava/lang/CharSequence;)Ljava/util/regex/Matcher;

    move-result-object v1

    .line 433
    .local v1, "m":Ljava/util/regex/Matcher;
    invoke-virtual {v1}, Ljava/util/regex/Matcher;->matches()Z

    move-result v2

    if-eqz v2, :cond_0

    .line 436
    const/4 v0, 0x1

    invoke-static {v1, p1, v0, p2}, Lfreemarker/template/utility/DateUtil;->parseDate_parseMatcher(Ljava/util/regex/Matcher;Ljava/util/TimeZone;ZLfreemarker/template/utility/DateUtil$CalendarFieldsToDateConverter;)Ljava/util/Date;

    move-result-object v0

    return-object v0

    .line 434
    :cond_0
    new-instance v2, Lfreemarker/template/utility/DateUtil$DateParseException;

    new-instance v3, Ljava/lang/StringBuffer;

    invoke-direct {v3}, Ljava/lang/StringBuffer;-><init>()V

    const-string v4, "The value didn\'t match the expected pattern: "

    invoke-virtual {v3, v4}, Ljava/lang/StringBuffer;->append(Ljava/lang/String;)Ljava/lang/StringBuffer;

    move-result-object v3

    invoke-virtual {v3, v0}, Ljava/lang/StringBuffer;->append(Ljava/lang/Object;)Ljava/lang/StringBuffer;

    move-result-object v0

    invoke-virtual {v0}, Ljava/lang/StringBuffer;->toString()Ljava/lang/String;

    move-result-object v0

    invoke-direct {v2, v0}, Lfreemarker/template/utility/DateUtil$DateParseException;-><init>(Ljava/lang/String;)V

    throw v2
.end method

.method public static parseXSDateTime(Ljava/lang/String;Ljava/util/TimeZone;Lfreemarker/template/utility/DateUtil$CalendarFieldsToDateConverter;)Ljava/util/Date;
    .locals 5
    .param p0, "dateTimeStr"    # Ljava/lang/String;
    .param p1, "defaultTZ"    # Ljava/util/TimeZone;
    .param p2, "calToDateConverter"    # Lfreemarker/template/utility/DateUtil$CalendarFieldsToDateConverter;
    .annotation system Ldalvik/annotation/Throws;
        value = {
            Lfreemarker/template/utility/DateUtil$DateParseException;
        }
    .end annotation

    .line 598
    sget-object v0, Lfreemarker/template/utility/DateUtil;->PATTERN_XS_DATE_TIME:Ljava/util/regex/Pattern;

    invoke-virtual {v0, p0}, Ljava/util/regex/Pattern;->matcher(Ljava/lang/CharSequence;)Ljava/util/regex/Matcher;

    move-result-object v1

    .line 599
    .local v1, "m":Ljava/util/regex/Matcher;
    invoke-virtual {v1}, Ljava/util/regex/Matcher;->matches()Z

    move-result v2

    if-eqz v2, :cond_0

    .line 603
    const/4 v0, 0x1

    invoke-static {v1, p1, v0, p2}, Lfreemarker/template/utility/DateUtil;->parseDateTime_parseMatcher(Ljava/util/regex/Matcher;Ljava/util/TimeZone;ZLfreemarker/template/utility/DateUtil$CalendarFieldsToDateConverter;)Ljava/util/Date;

    move-result-object v0

    return-object v0

    .line 600
    :cond_0
    new-instance v2, Lfreemarker/template/utility/DateUtil$DateParseException;

    new-instance v3, Ljava/lang/StringBuffer;

    invoke-direct {v3}, Ljava/lang/StringBuffer;-><init>()V

    const-string v4, "The value didn\'t match the expected pattern: "

    invoke-virtual {v3, v4}, Ljava/lang/StringBuffer;->append(Ljava/lang/String;)Ljava/lang/StringBuffer;

    move-result-object v3

    invoke-virtual {v3, v0}, Ljava/lang/StringBuffer;->append(Ljava/lang/Object;)Ljava/lang/StringBuffer;

    move-result-object v0

    invoke-virtual {v0}, Ljava/lang/StringBuffer;->toString()Ljava/lang/String;

    move-result-object v0

    invoke-direct {v2, v0}, Lfreemarker/template/utility/DateUtil$DateParseException;-><init>(Ljava/lang/String;)V

    throw v2
.end method

.method public static parseXSTime(Ljava/lang/String;Ljava/util/TimeZone;Lfreemarker/template/utility/DateUtil$CalendarFieldsToDateConverter;)Ljava/util/Date;
    .locals 5
    .param p0, "timeStr"    # Ljava/lang/String;
    .param p1, "defaultTZ"    # Ljava/util/TimeZone;
    .param p2, "calToDateConverter"    # Lfreemarker/template/utility/DateUtil$CalendarFieldsToDateConverter;
    .annotation system Ldalvik/annotation/Throws;
        value = {
            Lfreemarker/template/utility/DateUtil$DateParseException;
        }
    .end annotation

    .line 506
    sget-object v0, Lfreemarker/template/utility/DateUtil;->PATTERN_XS_TIME:Ljava/util/regex/Pattern;

    invoke-virtual {v0, p0}, Ljava/util/regex/Pattern;->matcher(Ljava/lang/CharSequence;)Ljava/util/regex/Matcher;

    move-result-object v1

    .line 507
    .local v1, "m":Ljava/util/regex/Matcher;
    invoke-virtual {v1}, Ljava/util/regex/Matcher;->matches()Z

    move-result v2

    if-eqz v2, :cond_0

    .line 510
    invoke-static {v1, p1, p2}, Lfreemarker/template/utility/DateUtil;->parseTime_parseMatcher(Ljava/util/regex/Matcher;Ljava/util/TimeZone;Lfreemarker/template/utility/DateUtil$CalendarFieldsToDateConverter;)Ljava/util/Date;

    move-result-object v0

    return-object v0

    .line 508
    :cond_0
    new-instance v2, Lfreemarker/template/utility/DateUtil$DateParseException;

    new-instance v3, Ljava/lang/StringBuffer;

    invoke-direct {v3}, Ljava/lang/StringBuffer;-><init>()V

    const-string v4, "The value didn\'t match the expected pattern: "

    invoke-virtual {v3, v4}, Ljava/lang/StringBuffer;->append(Ljava/lang/String;)Ljava/lang/StringBuffer;

    move-result-object v3

    invoke-virtual {v3, v0}, Ljava/lang/StringBuffer;->append(Ljava/lang/Object;)Ljava/lang/StringBuffer;

    move-result-object v0

    invoke-virtual {v0}, Ljava/lang/StringBuffer;->toString()Ljava/lang/String;

    move-result-object v0

    invoke-direct {v2, v0}, Lfreemarker/template/utility/DateUtil$DateParseException;-><init>(Ljava/lang/String;)V

    throw v2
.end method

.method public static parseXSTimeZone(Ljava/lang/String;)Ljava/util/TimeZone;
    .locals 5
    .param p0, "timeZoneStr"    # Ljava/lang/String;
    .annotation system Ldalvik/annotation/Throws;
        value = {
            Lfreemarker/template/utility/DateUtil$DateParseException;
        }
    .end annotation

    .line 704
    sget-object v0, Lfreemarker/template/utility/DateUtil;->PATTERN_XS_TIME_ZONE:Ljava/util/regex/Pattern;

    invoke-virtual {v0, p0}, Ljava/util/regex/Pattern;->matcher(Ljava/lang/CharSequence;)Ljava/util/regex/Matcher;

    move-result-object v1

    .line 705
    .local v1, "m":Ljava/util/regex/Matcher;
    invoke-virtual {v1}, Ljava/util/regex/Matcher;->matches()Z

    move-result v2

    if-eqz v2, :cond_0

    .line 709
    const/4 v0, 0x0

    invoke-static {p0, v0}, Lfreemarker/template/utility/DateUtil;->parseMatchingTimeZone(Ljava/lang/String;Ljava/util/TimeZone;)Ljava/util/TimeZone;

    move-result-object v0

    return-object v0

    .line 706
    :cond_0
    new-instance v2, Lfreemarker/template/utility/DateUtil$DateParseException;

    new-instance v3, Ljava/lang/StringBuffer;

    invoke-direct {v3}, Ljava/lang/StringBuffer;-><init>()V

    const-string v4, "The time zone offset didn\'t match the expected pattern: "

    invoke-virtual {v3, v4}, Ljava/lang/StringBuffer;->append(Ljava/lang/String;)Ljava/lang/StringBuffer;

    move-result-object v3

    invoke-virtual {v3, v0}, Ljava/lang/StringBuffer;->append(Ljava/lang/Object;)Ljava/lang/StringBuffer;

    move-result-object v0

    invoke-virtual {v0}, Ljava/lang/StringBuffer;->toString()Ljava/lang/String;

    move-result-object v0

    invoke-direct {v2, v0}, Lfreemarker/template/utility/DateUtil$DateParseException;-><init>(Ljava/lang/String;)V

    throw v2
.end method
