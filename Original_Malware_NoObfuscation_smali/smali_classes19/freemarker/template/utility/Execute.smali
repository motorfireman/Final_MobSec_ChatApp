.class public Lfreemarker/template/utility/Execute;
.super Ljava/lang/Object;
.source "Execute.java"

# interfaces
.implements Lfreemarker/template/TemplateMethodModel;


# static fields
.field private static final OUTPUT_BUFFER_SIZE:I = 0x400


# direct methods
.method public constructor <init>()V
    .locals 0

    .line 58
    invoke-direct {p0}, Ljava/lang/Object;-><init>()V

    return-void
.end method


# virtual methods
.method public exec(Ljava/util/List;)Ljava/lang/Object;
    .locals 9
    .param p1, "arguments"    # Ljava/util/List;
    .annotation system Ldalvik/annotation/Throws;
        value = {
            Lfreemarker/template/TemplateModelException;
        }
    .end annotation

    .line 71
    new-instance v0, Ljava/lang/StringBuffer;

    invoke-direct {v0}, Ljava/lang/StringBuffer;-><init>()V

    .line 73
    .local v0, "aOutputBuffer":Ljava/lang/StringBuffer;
    invoke-interface {p1}, Ljava/util/List;->size()I

    move-result v1

    const/4 v2, 0x1

    if-lt v1, v2, :cond_1

    .line 77
    const/4 v1, 0x0

    invoke-interface {p1, v1}, Ljava/util/List;->get(I)Ljava/lang/Object;

    move-result-object v2

    check-cast v2, Ljava/lang/String;

    check-cast v2, Ljava/lang/String;

    .line 80
    .local v2, "aExecute":Ljava/lang/String;
    :try_start_0
    invoke-static {}, Ljava/lang/Runtime;->getRuntime()Ljava/lang/Runtime;

    move-result-object v3

    invoke-virtual {v3, v2}, Ljava/lang/Runtime;->exec(Ljava/lang/String;)Ljava/lang/Process;

    move-result-object v3

    .line 83
    .local v3, "exec":Ljava/lang/Process;
    invoke-virtual {v3}, Ljava/lang/Process;->getInputStream()Ljava/io/InputStream;

    move-result-object v4
    :try_end_0
    .catch Ljava/io/IOException; {:try_start_0 .. :try_end_0} :catch_0

    .line 85
    .local v4, "execOut":Ljava/io/InputStream;
    :try_start_1
    new-instance v5, Ljava/io/InputStreamReader;

    invoke-direct {v5, v4}, Ljava/io/InputStreamReader;-><init>(Ljava/io/InputStream;)V

    .line 87
    .local v5, "execReader":Ljava/io/Reader;
    const/16 v6, 0x400

    new-array v6, v6, [C

    .line 88
    .local v6, "buffer":[C
    invoke-virtual {v5, v6}, Ljava/io/Reader;->read([C)I

    move-result v7

    .line 89
    .local v7, "bytes_read":I
    :goto_0
    if-lez v7, :cond_0

    .line 90
    invoke-virtual {v0, v6, v1, v7}, Ljava/lang/StringBuffer;->append([CII)Ljava/lang/StringBuffer;

    .line 91
    invoke-virtual {v5, v6}, Ljava/io/Reader;->read([C)I

    move-result v8
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    move v7, v8

    goto :goto_0

    .line 94
    .end local v5    # "execReader":Ljava/io/Reader;
    .end local v6    # "buffer":[C
    .end local v7    # "bytes_read":I
    :cond_0
    :try_start_2
    invoke-virtual {v4}, Ljava/io/InputStream;->close()V
    :try_end_2
    .catch Ljava/io/IOException; {:try_start_2 .. :try_end_2} :catch_0

    .line 95
    nop

    .line 99
    .end local v3    # "exec":Ljava/lang/Process;
    .end local v4    # "execOut":Ljava/io/InputStream;
    nop

    .line 100
    invoke-virtual {v0}, Ljava/lang/StringBuffer;->toString()Ljava/lang/String;

    move-result-object v1

    return-object v1

    .line 94
    .restart local v3    # "exec":Ljava/lang/Process;
    .restart local v4    # "execOut":Ljava/io/InputStream;
    :catchall_0
    move-exception v1

    :try_start_3
    invoke-virtual {v4}, Ljava/io/InputStream;->close()V

    .end local v0    # "aOutputBuffer":Ljava/lang/StringBuffer;
    .end local v2    # "aExecute":Ljava/lang/String;
    .end local p1    # "arguments":Ljava/util/List;
    throw v1
    :try_end_3
    .catch Ljava/io/IOException; {:try_start_3 .. :try_end_3} :catch_0

    .line 97
    .end local v3    # "exec":Ljava/lang/Process;
    .end local v4    # "execOut":Ljava/io/InputStream;
    .restart local v0    # "aOutputBuffer":Ljava/lang/StringBuffer;
    .restart local v2    # "aExecute":Ljava/lang/String;
    .restart local p1    # "arguments":Ljava/util/List;
    :catch_0
    move-exception v1

    .line 98
    .local v1, "ioe":Ljava/io/IOException;
    new-instance v3, Lfreemarker/template/TemplateModelException;

    invoke-virtual {v1}, Ljava/io/IOException;->getMessage()Ljava/lang/String;

    move-result-object v4

    invoke-direct {v3, v4}, Lfreemarker/template/TemplateModelException;-><init>(Ljava/lang/String;)V

    throw v3

    .line 74
    .end local v1    # "ioe":Ljava/io/IOException;
    .end local v2    # "aExecute":Ljava/lang/String;
    :cond_1
    new-instance v1, Lfreemarker/template/TemplateModelException;

    const-string v2, "Need an argument to execute"

    invoke-direct {v1, v2}, Lfreemarker/template/TemplateModelException;-><init>(Ljava/lang/String;)V

    throw v1
.end method
