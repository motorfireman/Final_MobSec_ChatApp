.class public Lfreemarker/template/utility/DeepUnwrap;
.super Ljava/lang/Object;
.source "DeepUnwrap.java"


# static fields
.field private static final OBJECT_CLASS:Ljava/lang/Class;

.field static synthetic class$java$lang$Object:Ljava/lang/Class;


# direct methods
.method static constructor <clinit>()V
    .locals 1

    .line 42
    sget-object v0, Lfreemarker/template/utility/DeepUnwrap;->class$java$lang$Object:Ljava/lang/Class;

    if-nez v0, :cond_0

    const-string v0, "java.lang.Object"

    invoke-static {v0}, Lfreemarker/template/utility/DeepUnwrap;->class$(Ljava/lang/String;)Ljava/lang/Class;

    move-result-object v0

    sput-object v0, Lfreemarker/template/utility/DeepUnwrap;->class$java$lang$Object:Ljava/lang/Class;

    :cond_0
    sput-object v0, Lfreemarker/template/utility/DeepUnwrap;->OBJECT_CLASS:Ljava/lang/Class;

    return-void
.end method

.method public constructor <init>()V
    .locals 0

    .line 40
    invoke-direct {p0}, Ljava/lang/Object;-><init>()V

    return-void
.end method

.method static synthetic class$(Ljava/lang/String;)Ljava/lang/Class;
    .locals 2
    .param p0, "x0"    # Ljava/lang/String;

    .line 42
    :try_start_0
    invoke-static {p0}, Ljava/lang/Class;->forName(Ljava/lang/String;)Ljava/lang/Class;

    move-result-object v0
    :try_end_0
    .catch Ljava/lang/ClassNotFoundException; {:try_start_0 .. :try_end_0} :catch_0

    return-object v0

    :catch_0
    move-exception v0

    new-instance v1, Ljava/lang/NoClassDefFoundError;

    invoke-direct {v1}, Ljava/lang/NoClassDefFoundError;-><init>()V

    invoke-virtual {v1, v0}, Ljava/lang/NoClassDefFoundError;->initCause(Ljava/lang/Throwable;)Ljava/lang/Throwable;

    move-result-object v0

    throw v0
.end method

.method public static permissiveUnwrap(Lfreemarker/template/TemplateModel;)Ljava/lang/Object;
    .locals 1
    .param p0, "model"    # Lfreemarker/template/TemplateModel;
    .annotation system Ldalvik/annotation/Throws;
        value = {
            Lfreemarker/template/TemplateModelException;
        }
    .end annotation

    .line 82
    const/4 v0, 0x1

    invoke-static {p0, v0}, Lfreemarker/template/utility/DeepUnwrap;->unwrap(Lfreemarker/template/TemplateModel;Z)Ljava/lang/Object;

    move-result-object v0

    return-object v0
.end method

.method public static premissiveUnwrap(Lfreemarker/template/TemplateModel;)Ljava/lang/Object;
    .locals 1
    .param p0, "model"    # Lfreemarker/template/TemplateModel;
    .annotation system Ldalvik/annotation/Throws;
        value = {
            Lfreemarker/template/TemplateModelException;
        }
    .end annotation

    .line 90
    const/4 v0, 0x1

    invoke-static {p0, v0}, Lfreemarker/template/utility/DeepUnwrap;->unwrap(Lfreemarker/template/TemplateModel;Z)Ljava/lang/Object;

    move-result-object v0

    return-object v0
.end method

.method public static unwrap(Lfreemarker/template/TemplateModel;)Ljava/lang/Object;
    .locals 1
    .param p0, "model"    # Lfreemarker/template/TemplateModel;
    .annotation system Ldalvik/annotation/Throws;
        value = {
            Lfreemarker/template/TemplateModelException;
        }
    .end annotation

    .line 73
    const/4 v0, 0x0

    invoke-static {p0, v0}, Lfreemarker/template/utility/DeepUnwrap;->unwrap(Lfreemarker/template/TemplateModel;Z)Ljava/lang/Object;

    move-result-object v0

    return-object v0
.end method

.method private static unwrap(Lfreemarker/template/TemplateModel;Lfreemarker/template/TemplateModel;Z)Ljava/lang/Object;
    .locals 5
    .param p0, "model"    # Lfreemarker/template/TemplateModel;
    .param p1, "nullModel"    # Lfreemarker/template/TemplateModel;
    .param p2, "permissive"    # Z
    .annotation system Ldalvik/annotation/Throws;
        value = {
            Lfreemarker/template/TemplateModelException;
        }
    .end annotation

    .line 106
    instance-of v0, p0, Lfreemarker/template/AdapterTemplateModel;

    if-eqz v0, :cond_0

    .line 107
    move-object v0, p0

    check-cast v0, Lfreemarker/template/AdapterTemplateModel;

    sget-object v1, Lfreemarker/template/utility/DeepUnwrap;->OBJECT_CLASS:Ljava/lang/Class;

    invoke-interface {v0, v1}, Lfreemarker/template/AdapterTemplateModel;->getAdaptedObject(Ljava/lang/Class;)Ljava/lang/Object;

    move-result-object v0

    return-object v0

    .line 109
    :cond_0
    instance-of v0, p0, Lfreemarker/ext/util/WrapperTemplateModel;

    if-eqz v0, :cond_1

    .line 110
    move-object v0, p0

    check-cast v0, Lfreemarker/ext/util/WrapperTemplateModel;

    invoke-interface {v0}, Lfreemarker/ext/util/WrapperTemplateModel;->getWrappedObject()Ljava/lang/Object;

    move-result-object v0

    return-object v0

    .line 112
    :cond_1
    if-ne p0, p1, :cond_2

    .line 113
    const/4 v0, 0x0

    return-object v0

    .line 115
    :cond_2
    instance-of v0, p0, Lfreemarker/template/TemplateScalarModel;

    if-eqz v0, :cond_3

    .line 116
    move-object v0, p0

    check-cast v0, Lfreemarker/template/TemplateScalarModel;

    invoke-interface {v0}, Lfreemarker/template/TemplateScalarModel;->getAsString()Ljava/lang/String;

    move-result-object v0

    return-object v0

    .line 118
    :cond_3
    instance-of v0, p0, Lfreemarker/template/TemplateNumberModel;

    if-eqz v0, :cond_4

    .line 119
    move-object v0, p0

    check-cast v0, Lfreemarker/template/TemplateNumberModel;

    invoke-interface {v0}, Lfreemarker/template/TemplateNumberModel;->getAsNumber()Ljava/lang/Number;

    move-result-object v0

    return-object v0

    .line 121
    :cond_4
    instance-of v0, p0, Lfreemarker/template/TemplateDateModel;

    if-eqz v0, :cond_5

    .line 122
    move-object v0, p0

    check-cast v0, Lfreemarker/template/TemplateDateModel;

    invoke-interface {v0}, Lfreemarker/template/TemplateDateModel;->getAsDate()Ljava/util/Date;

    move-result-object v0

    return-object v0

    .line 124
    :cond_5
    instance-of v0, p0, Lfreemarker/template/TemplateBooleanModel;

    if-eqz v0, :cond_6

    .line 125
    move-object v0, p0

    check-cast v0, Lfreemarker/template/TemplateBooleanModel;

    invoke-interface {v0}, Lfreemarker/template/TemplateBooleanModel;->getAsBoolean()Z

    move-result v0

    invoke-static {v0}, Ljava/lang/Boolean;->valueOf(Z)Ljava/lang/Boolean;

    move-result-object v0

    return-object v0

    .line 127
    :cond_6
    instance-of v0, p0, Lfreemarker/template/TemplateSequenceModel;

    if-eqz v0, :cond_8

    .line 128
    move-object v0, p0

    check-cast v0, Lfreemarker/template/TemplateSequenceModel;

    .line 129
    .local v0, "seq":Lfreemarker/template/TemplateSequenceModel;
    new-instance v1, Ljava/util/ArrayList;

    invoke-interface {v0}, Lfreemarker/template/TemplateSequenceModel;->size()I

    move-result v2

    invoke-direct {v1, v2}, Ljava/util/ArrayList;-><init>(I)V

    .line 130
    .local v1, "list":Ljava/util/ArrayList;
    const/4 v2, 0x0

    .local v2, "i":I
    :goto_0
    invoke-interface {v0}, Lfreemarker/template/TemplateSequenceModel;->size()I

    move-result v3

    if-ge v2, v3, :cond_7

    .line 131
    invoke-interface {v0, v2}, Lfreemarker/template/TemplateSequenceModel;->get(I)Lfreemarker/template/TemplateModel;

    move-result-object v3

    invoke-static {v3, p1, p2}, Lfreemarker/template/utility/DeepUnwrap;->unwrap(Lfreemarker/template/TemplateModel;Lfreemarker/template/TemplateModel;Z)Ljava/lang/Object;

    move-result-object v3

    invoke-virtual {v1, v3}, Ljava/util/ArrayList;->add(Ljava/lang/Object;)Z

    .line 130
    add-int/lit8 v2, v2, 0x1

    goto :goto_0

    .line 133
    .end local v2    # "i":I
    :cond_7
    return-object v1

    .line 135
    .end local v0    # "seq":Lfreemarker/template/TemplateSequenceModel;
    .end local v1    # "list":Ljava/util/ArrayList;
    :cond_8
    instance-of v0, p0, Lfreemarker/template/TemplateCollectionModel;

    if-eqz v0, :cond_a

    .line 136
    move-object v0, p0

    check-cast v0, Lfreemarker/template/TemplateCollectionModel;

    .line 137
    .local v0, "coll":Lfreemarker/template/TemplateCollectionModel;
    new-instance v1, Ljava/util/ArrayList;

    invoke-direct {v1}, Ljava/util/ArrayList;-><init>()V

    .line 138
    .restart local v1    # "list":Ljava/util/ArrayList;
    invoke-interface {v0}, Lfreemarker/template/TemplateCollectionModel;->iterator()Lfreemarker/template/TemplateModelIterator;

    move-result-object v2

    .line 139
    .local v2, "it":Lfreemarker/template/TemplateModelIterator;
    :goto_1
    invoke-interface {v2}, Lfreemarker/template/TemplateModelIterator;->hasNext()Z

    move-result v3

    if-eqz v3, :cond_9

    .line 140
    invoke-interface {v2}, Lfreemarker/template/TemplateModelIterator;->next()Lfreemarker/template/TemplateModel;

    move-result-object v3

    invoke-static {v3, p1, p2}, Lfreemarker/template/utility/DeepUnwrap;->unwrap(Lfreemarker/template/TemplateModel;Lfreemarker/template/TemplateModel;Z)Ljava/lang/Object;

    move-result-object v3

    invoke-virtual {v1, v3}, Ljava/util/ArrayList;->add(Ljava/lang/Object;)Z

    goto :goto_1

    .line 142
    :cond_9
    return-object v1

    .line 144
    .end local v0    # "coll":Lfreemarker/template/TemplateCollectionModel;
    .end local v1    # "list":Ljava/util/ArrayList;
    .end local v2    # "it":Lfreemarker/template/TemplateModelIterator;
    :cond_a
    instance-of v0, p0, Lfreemarker/template/TemplateHashModelEx;

    if-eqz v0, :cond_c

    .line 145
    move-object v0, p0

    check-cast v0, Lfreemarker/template/TemplateHashModelEx;

    .line 146
    .local v0, "hash":Lfreemarker/template/TemplateHashModelEx;
    new-instance v1, Ljava/util/HashMap;

    invoke-direct {v1}, Ljava/util/HashMap;-><init>()V

    .line 147
    .local v1, "map":Ljava/util/HashMap;
    invoke-interface {v0}, Lfreemarker/template/TemplateHashModelEx;->keys()Lfreemarker/template/TemplateCollectionModel;

    move-result-object v2

    invoke-interface {v2}, Lfreemarker/template/TemplateCollectionModel;->iterator()Lfreemarker/template/TemplateModelIterator;

    move-result-object v2

    .line 148
    .local v2, "keys":Lfreemarker/template/TemplateModelIterator;
    :goto_2
    invoke-interface {v2}, Lfreemarker/template/TemplateModelIterator;->hasNext()Z

    move-result v3

    if-eqz v3, :cond_b

    .line 149
    invoke-interface {v2}, Lfreemarker/template/TemplateModelIterator;->next()Lfreemarker/template/TemplateModel;

    move-result-object v3

    invoke-static {v3, p1, p2}, Lfreemarker/template/utility/DeepUnwrap;->unwrap(Lfreemarker/template/TemplateModel;Lfreemarker/template/TemplateModel;Z)Ljava/lang/Object;

    move-result-object v3

    check-cast v3, Ljava/lang/String;

    .line 150
    .local v3, "key":Ljava/lang/String;
    invoke-interface {v0, v3}, Lfreemarker/template/TemplateHashModelEx;->get(Ljava/lang/String;)Lfreemarker/template/TemplateModel;

    move-result-object v4

    invoke-static {v4, p1, p2}, Lfreemarker/template/utility/DeepUnwrap;->unwrap(Lfreemarker/template/TemplateModel;Lfreemarker/template/TemplateModel;Z)Ljava/lang/Object;

    move-result-object v4

    invoke-virtual {v1, v3, v4}, Ljava/util/HashMap;->put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;

    .line 151
    .end local v3    # "key":Ljava/lang/String;
    goto :goto_2

    .line 152
    :cond_b
    return-object v1

    .line 154
    .end local v0    # "hash":Lfreemarker/template/TemplateHashModelEx;
    .end local v1    # "map":Ljava/util/HashMap;
    .end local v2    # "keys":Lfreemarker/template/TemplateModelIterator;
    :cond_c
    if-eqz p2, :cond_d

    .line 155
    return-object p0

    .line 157
    :cond_d
    new-instance v0, Lfreemarker/template/TemplateModelException;

    new-instance v1, Ljava/lang/StringBuffer;

    invoke-direct {v1}, Ljava/lang/StringBuffer;-><init>()V

    const-string v2, "Cannot deep-unwrap model of type "

    invoke-virtual {v1, v2}, Ljava/lang/StringBuffer;->append(Ljava/lang/String;)Ljava/lang/StringBuffer;

    move-result-object v1

    invoke-virtual {p0}, Ljava/lang/Object;->getClass()Ljava/lang/Class;

    move-result-object v2

    invoke-virtual {v2}, Ljava/lang/Class;->getName()Ljava/lang/String;

    move-result-object v2

    invoke-virtual {v1, v2}, Ljava/lang/StringBuffer;->append(Ljava/lang/String;)Ljava/lang/StringBuffer;

    move-result-object v1

    invoke-virtual {v1}, Ljava/lang/StringBuffer;->toString()Ljava/lang/String;

    move-result-object v1

    invoke-direct {v0, v1}, Lfreemarker/template/TemplateModelException;-><init>(Ljava/lang/String;)V

    throw v0
.end method

.method private static unwrap(Lfreemarker/template/TemplateModel;Z)Ljava/lang/Object;
    .locals 4
    .param p0, "model"    # Lfreemarker/template/TemplateModel;
    .param p1, "permissive"    # Z
    .annotation system Ldalvik/annotation/Throws;
        value = {
            Lfreemarker/template/TemplateModelException;
        }
    .end annotation

    .line 94
    invoke-static {}, Lfreemarker/core/Environment;->getCurrentEnvironment()Lfreemarker/core/Environment;

    move-result-object v0

    .line 95
    .local v0, "env":Lfreemarker/core/Environment;
    const/4 v1, 0x0

    .line 96
    .local v1, "nullModel":Lfreemarker/template/TemplateModel;
    if-eqz v0, :cond_0

    .line 97
    invoke-virtual {v0}, Lfreemarker/core/Environment;->getObjectWrapper()Lfreemarker/template/ObjectWrapper;

    move-result-object v2

    .line 98
    .local v2, "wrapper":Lfreemarker/template/ObjectWrapper;
    if-eqz v2, :cond_0

    .line 99
    const/4 v3, 0x0

    invoke-interface {v2, v3}, Lfreemarker/template/ObjectWrapper;->wrap(Ljava/lang/Object;)Lfreemarker/template/TemplateModel;

    move-result-object v1

    .line 102
    .end local v2    # "wrapper":Lfreemarker/template/ObjectWrapper;
    :cond_0
    invoke-static {p0, v1, p1}, Lfreemarker/template/utility/DeepUnwrap;->unwrap(Lfreemarker/template/TemplateModel;Lfreemarker/template/TemplateModel;Z)Ljava/lang/Object;

    move-result-object v2

    return-object v2
.end method
