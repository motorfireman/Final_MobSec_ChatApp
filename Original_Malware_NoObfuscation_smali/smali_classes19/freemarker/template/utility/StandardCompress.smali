.class public Lfreemarker/template/utility/StandardCompress;
.super Ljava/lang/Object;
.source "StandardCompress.java"

# interfaces
.implements Lfreemarker/template/TemplateTransformModel;


# annotations
.annotation system Ldalvik/annotation/MemberClasses;
    value = {
        Lfreemarker/template/utility/StandardCompress$StandardCompressWriter;
    }
.end annotation


# static fields
.field private static final BUFFER_SIZE_KEY:Ljava/lang/String; = "buffer_size"

.field public static final INSTANCE:Lfreemarker/template/utility/StandardCompress;

.field private static final SINGLE_LINE_KEY:Ljava/lang/String; = "single_line"


# instance fields
.field private defaultBufferSize:I


# direct methods
.method static constructor <clinit>()V
    .locals 1

    .line 74
    new-instance v0, Lfreemarker/template/utility/StandardCompress;

    invoke-direct {v0}, Lfreemarker/template/utility/StandardCompress;-><init>()V

    sput-object v0, Lfreemarker/template/utility/StandardCompress;->INSTANCE:Lfreemarker/template/utility/StandardCompress;

    return-void
.end method

.method public constructor <init>()V
    .locals 1

    .line 78
    const/16 v0, 0x800

    invoke-direct {p0, v0}, Lfreemarker/template/utility/StandardCompress;-><init>(I)V

    .line 79
    return-void
.end method

.method public constructor <init>(I)V
    .locals 0
    .param p1, "defaultBufferSize"    # I

    .line 85
    invoke-direct {p0}, Ljava/lang/Object;-><init>()V

    .line 86
    iput p1, p0, Lfreemarker/template/utility/StandardCompress;->defaultBufferSize:I

    .line 87
    return-void
.end method


# virtual methods
.method public getWriter(Ljava/io/Writer;Ljava/util/Map;)Ljava/io/Writer;
    .locals 5
    .param p1, "out"    # Ljava/io/Writer;
    .param p2, "args"    # Ljava/util/Map;
    .annotation system Ldalvik/annotation/Throws;
        value = {
            Lfreemarker/template/TemplateModelException;
        }
    .end annotation

    .line 92
    iget v0, p0, Lfreemarker/template/utility/StandardCompress;->defaultBufferSize:I

    .line 93
    .local v0, "bufferSize":I
    const/4 v1, 0x0

    .line 94
    .local v1, "singleLine":Z
    if-eqz p2, :cond_2

    .line 96
    :try_start_0
    const-string v2, "buffer_size"

    invoke-interface {p2, v2}, Ljava/util/Map;->get(Ljava/lang/Object;)Ljava/lang/Object;

    move-result-object v2

    check-cast v2, Lfreemarker/template/TemplateNumberModel;

    .line 97
    .local v2, "num":Lfreemarker/template/TemplateNumberModel;
    if-eqz v2, :cond_0

    .line 98
    invoke-interface {v2}, Lfreemarker/template/TemplateNumberModel;->getAsNumber()Ljava/lang/Number;

    move-result-object v3

    invoke-virtual {v3}, Ljava/lang/Number;->intValue()I

    move-result v3
    :try_end_0
    .catch Ljava/lang/ClassCastException; {:try_start_0 .. :try_end_0} :catch_1

    move v0, v3

    .line 101
    .end local v2    # "num":Lfreemarker/template/TemplateNumberModel;
    :cond_0
    nop

    .line 103
    :try_start_1
    const-string v2, "single_line"

    invoke-interface {p2, v2}, Ljava/util/Map;->get(Ljava/lang/Object;)Ljava/lang/Object;

    move-result-object v2

    check-cast v2, Lfreemarker/template/TemplateBooleanModel;

    .line 104
    .local v2, "flag":Lfreemarker/template/TemplateBooleanModel;
    if-eqz v2, :cond_1

    .line 105
    invoke-interface {v2}, Lfreemarker/template/TemplateBooleanModel;->getAsBoolean()Z

    move-result v3
    :try_end_1
    .catch Ljava/lang/ClassCastException; {:try_start_1 .. :try_end_1} :catch_0

    move v1, v3

    .line 108
    .end local v2    # "flag":Lfreemarker/template/TemplateBooleanModel;
    :cond_1
    goto :goto_0

    .line 106
    :catch_0
    move-exception v2

    .line 107
    .local v2, "e":Ljava/lang/ClassCastException;
    new-instance v3, Lfreemarker/template/TemplateModelException;

    const-string v4, "Expecting boolean argument to single_line"

    invoke-direct {v3, v4}, Lfreemarker/template/TemplateModelException;-><init>(Ljava/lang/String;)V

    throw v3

    .line 99
    .end local v2    # "e":Ljava/lang/ClassCastException;
    :catch_1
    move-exception v2

    .line 100
    .restart local v2    # "e":Ljava/lang/ClassCastException;
    new-instance v3, Lfreemarker/template/TemplateModelException;

    const-string v4, "Expecting numerical argument to buffer_size"

    invoke-direct {v3, v4}, Lfreemarker/template/TemplateModelException;-><init>(Ljava/lang/String;)V

    throw v3

    .line 110
    .end local v2    # "e":Ljava/lang/ClassCastException;
    :cond_2
    :goto_0
    new-instance v2, Lfreemarker/template/utility/StandardCompress$StandardCompressWriter;

    invoke-direct {v2, p1, v0, v1}, Lfreemarker/template/utility/StandardCompress$StandardCompressWriter;-><init>(Ljava/io/Writer;IZ)V

    return-object v2
.end method
