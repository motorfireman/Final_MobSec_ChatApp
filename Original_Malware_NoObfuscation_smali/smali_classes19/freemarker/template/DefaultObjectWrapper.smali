.class public Lfreemarker/template/DefaultObjectWrapper;
.super Lfreemarker/ext/beans/BeansWrapper;
.source "DefaultObjectWrapper.java"


# static fields
.field private static final JYTHON_OBJ_CLASS:Ljava/lang/Class;

.field private static final JYTHON_WRAPPER:Lfreemarker/template/ObjectWrapper;

.field static final instance:Lfreemarker/template/DefaultObjectWrapper;


# instance fields
.field private forceLegacyNonListCollections:Z

.field private useAdaptersForContainers:Z


# direct methods
.method static constructor <clinit>()V
    .locals 5

    .line 56
    new-instance v0, Lfreemarker/template/DefaultObjectWrapper;

    invoke-direct {v0}, Lfreemarker/template/DefaultObjectWrapper;-><init>()V

    sput-object v0, Lfreemarker/template/DefaultObjectWrapper;->instance:Lfreemarker/template/DefaultObjectWrapper;

    .line 125
    const/4 v0, 0x0

    :try_start_0
    const-string v1, "org.python.core.PyObject"

    invoke-static {v1}, Ljava/lang/Class;->forName(Ljava/lang/String;)Ljava/lang/Class;

    move-result-object v1
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_1

    .line 126
    .local v1, "cl":Ljava/lang/Class;
    :try_start_1
    const-string v2, "freemarker.ext.jython.JythonWrapper"

    invoke-static {v2}, Ljava/lang/Class;->forName(Ljava/lang/String;)Ljava/lang/Class;

    move-result-object v2

    const-string v3, "INSTANCE"

    .line 128
    invoke-virtual {v2, v3}, Ljava/lang/Class;->getField(Ljava/lang/String;)Ljava/lang/reflect/Field;

    move-result-object v2

    invoke-virtual {v2, v0}, Ljava/lang/reflect/Field;->get(Ljava/lang/Object;)Ljava/lang/Object;

    move-result-object v2

    check-cast v2, Lfreemarker/template/ObjectWrapper;
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    move-object v0, v2

    .line 140
    .local v0, "ow":Lfreemarker/template/ObjectWrapper;
    goto :goto_1

    .line 129
    .end local v0    # "ow":Lfreemarker/template/ObjectWrapper;
    :catchall_0
    move-exception v2

    goto :goto_0

    .end local v1    # "cl":Ljava/lang/Class;
    :catchall_1
    move-exception v2

    move-object v1, v0

    .line 130
    .restart local v0    # "ow":Lfreemarker/template/ObjectWrapper;
    .restart local v1    # "cl":Ljava/lang/Class;
    .local v2, "e":Ljava/lang/Throwable;
    :goto_0
    const/4 v1, 0x0

    .line 131
    const/4 v0, 0x0

    .line 132
    instance-of v3, v2, Ljava/lang/ClassNotFoundException;

    if-nez v3, :cond_0

    .line 134
    :try_start_2
    const-string v3, "freemarker.template.DefaultObjectWrapper"

    invoke-static {v3}, Lfreemarker/log/Logger;->getLogger(Ljava/lang/String;)Lfreemarker/log/Logger;

    move-result-object v3

    const-string v4, "Failed to init Jython support, so it was disabled."

    .line 135
    invoke-virtual {v3, v4, v2}, Lfreemarker/log/Logger;->error(Ljava/lang/String;Ljava/lang/Throwable;)V
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_2

    .line 138
    goto :goto_1

    .line 136
    :catchall_2
    move-exception v3

    .line 141
    .end local v2    # "e":Ljava/lang/Throwable;
    :cond_0
    :goto_1
    sput-object v1, Lfreemarker/template/DefaultObjectWrapper;->JYTHON_OBJ_CLASS:Ljava/lang/Class;

    .line 142
    sput-object v0, Lfreemarker/template/DefaultObjectWrapper;->JYTHON_WRAPPER:Lfreemarker/template/ObjectWrapper;

    .line 143
    .end local v0    # "ow":Lfreemarker/template/ObjectWrapper;
    .end local v1    # "cl":Ljava/lang/Class;
    return-void
.end method

.method public constructor <init>()V
    .locals 1

    .line 73
    sget-object v0, Lfreemarker/template/Configuration;->DEFAULT_INCOMPATIBLE_IMPROVEMENTS:Lfreemarker/template/Version;

    invoke-direct {p0, v0}, Lfreemarker/template/DefaultObjectWrapper;-><init>(Lfreemarker/template/Version;)V

    .line 74
    return-void
.end method

.method protected constructor <init>(Lfreemarker/ext/beans/BeansWrapperConfiguration;Z)V
    .locals 2
    .param p1, "bwCfg"    # Lfreemarker/ext/beans/BeansWrapperConfiguration;
    .param p2, "writeProtected"    # Z

    .line 102
    const/4 v0, 0x0

    invoke-direct {p0, p1, p2, v0}, Lfreemarker/ext/beans/BeansWrapper;-><init>(Lfreemarker/ext/beans/BeansWrapperConfiguration;ZZ)V

    .line 103
    instance-of v0, p1, Lfreemarker/template/DefaultObjectWrapperConfiguration;

    if-eqz v0, :cond_0

    move-object v0, p1

    check-cast v0, Lfreemarker/template/DefaultObjectWrapperConfiguration;

    goto :goto_0

    :cond_0
    new-instance v0, Lfreemarker/template/DefaultObjectWrapper$2;

    .line 105
    invoke-virtual {p1}, Lfreemarker/ext/beans/BeansWrapperConfiguration;->getIncompatibleImprovements()Lfreemarker/template/Version;

    move-result-object v1

    invoke-direct {v0, p0, v1}, Lfreemarker/template/DefaultObjectWrapper$2;-><init>(Lfreemarker/template/DefaultObjectWrapper;Lfreemarker/template/Version;)V

    :goto_0
    nop

    .line 106
    .local v0, "dowDowCfg":Lfreemarker/template/DefaultObjectWrapperConfiguration;
    invoke-virtual {v0}, Lfreemarker/template/DefaultObjectWrapperConfiguration;->getUseAdaptersForContainers()Z

    move-result v1

    iput-boolean v1, p0, Lfreemarker/template/DefaultObjectWrapper;->useAdaptersForContainers:Z

    .line 107
    invoke-virtual {v0}, Lfreemarker/template/DefaultObjectWrapperConfiguration;->getForceLegacyNonListCollections()Z

    move-result v1

    iput-boolean v1, p0, Lfreemarker/template/DefaultObjectWrapper;->forceLegacyNonListCollections:Z

    .line 108
    invoke-virtual {p0, p2}, Lfreemarker/template/DefaultObjectWrapper;->finalizeConstruction(Z)V

    .line 109
    return-void
.end method

.method protected constructor <init>(Lfreemarker/template/DefaultObjectWrapperConfiguration;Z)V
    .locals 0
    .param p1, "dowCfg"    # Lfreemarker/template/DefaultObjectWrapperConfiguration;
    .param p2, "writeProtected"    # Z

    .line 118
    invoke-direct {p0, p1, p2}, Lfreemarker/template/DefaultObjectWrapper;-><init>(Lfreemarker/ext/beans/BeansWrapperConfiguration;Z)V

    .line 119
    return-void
.end method

.method public constructor <init>(Lfreemarker/template/Version;)V
    .locals 2
    .param p1, "incompatibleImprovements"    # Lfreemarker/template/Version;

    .line 92
    new-instance v0, Lfreemarker/template/DefaultObjectWrapper$1;

    invoke-direct {v0, p1}, Lfreemarker/template/DefaultObjectWrapper$1;-><init>(Lfreemarker/template/Version;)V

    const/4 v1, 0x0

    invoke-direct {p0, v0, v1}, Lfreemarker/template/DefaultObjectWrapper;-><init>(Lfreemarker/template/DefaultObjectWrapperConfiguration;Z)V

    .line 93
    return-void
.end method

.method protected static normalizeIncompatibleImprovementsVersion(Lfreemarker/template/Version;)Lfreemarker/template/Version;
    .locals 3
    .param p0, "incompatibleImprovements"    # Lfreemarker/template/Version;

    .line 328
    invoke-static {p0}, Lfreemarker/template/_TemplateAPI;->checkVersionNotNullAndSupported(Lfreemarker/template/Version;)V

    .line 329
    invoke-static {p0}, Lfreemarker/ext/beans/BeansWrapper;->normalizeIncompatibleImprovementsVersion(Lfreemarker/template/Version;)Lfreemarker/template/Version;

    move-result-object v0

    .line 330
    .local v0, "bwIcI":Lfreemarker/template/Version;
    invoke-virtual {p0}, Lfreemarker/template/Version;->intValue()I

    move-result v1

    sget v2, Lfreemarker/template/_TemplateAPI;->VERSION_INT_2_3_22:I

    if-lt v1, v2, :cond_1

    .line 331
    invoke-virtual {v0}, Lfreemarker/template/Version;->intValue()I

    move-result v1

    sget v2, Lfreemarker/template/_TemplateAPI;->VERSION_INT_2_3_22:I

    if-lt v1, v2, :cond_0

    goto :goto_0

    :cond_0
    sget-object v1, Lfreemarker/template/Configuration;->VERSION_2_3_22:Lfreemarker/template/Version;

    goto :goto_1

    :cond_1
    :goto_0
    move-object v1, v0

    :goto_1
    return-object v1
.end method


# virtual methods
.method protected convertArray(Ljava/lang/Object;)Ljava/lang/Object;
    .locals 4
    .param p1, "arr"    # Ljava/lang/Object;

    .line 246
    invoke-static {p1}, Ljava/lang/reflect/Array;->getLength(Ljava/lang/Object;)I

    move-result v0

    .line 247
    .local v0, "size":I
    new-instance v1, Ljava/util/ArrayList;

    invoke-direct {v1, v0}, Ljava/util/ArrayList;-><init>(I)V

    .line 248
    .local v1, "list":Ljava/util/ArrayList;
    const/4 v2, 0x0

    .local v2, "i":I
    :goto_0
    if-ge v2, v0, :cond_0

    .line 249
    invoke-static {p1, v2}, Ljava/lang/reflect/Array;->get(Ljava/lang/Object;I)Ljava/lang/Object;

    move-result-object v3

    invoke-virtual {v1, v3}, Ljava/util/ArrayList;->add(Ljava/lang/Object;)Z

    .line 248
    add-int/lit8 v2, v2, 0x1

    goto :goto_0

    .line 251
    .end local v2    # "i":I
    :cond_0
    return-object v1
.end method

.method public getForceLegacyNonListCollections()Z
    .locals 1

    .line 300
    iget-boolean v0, p0, Lfreemarker/template/DefaultObjectWrapper;->forceLegacyNonListCollections:Z

    return v0
.end method

.method public getUseAdaptersForContainers()Z
    .locals 1

    .line 260
    iget-boolean v0, p0, Lfreemarker/template/DefaultObjectWrapper;->useAdaptersForContainers:Z

    return v0
.end method

.method protected handleUnknownType(Ljava/lang/Object;)Lfreemarker/template/TemplateModel;
    .locals 2
    .param p1, "obj"    # Ljava/lang/Object;
    .annotation system Ldalvik/annotation/Throws;
        value = {
            Lfreemarker/template/TemplateModelException;
        }
    .end annotation

    .line 229
    instance-of v0, p1, Lorg/w3c/dom/Node;

    if-eqz v0, :cond_0

    .line 230
    invoke-virtual {p0, p1}, Lfreemarker/template/DefaultObjectWrapper;->wrapDomNode(Ljava/lang/Object;)Lfreemarker/template/TemplateModel;

    move-result-object v0

    return-object v0

    .line 232
    :cond_0
    sget-object v0, Lfreemarker/template/DefaultObjectWrapper;->JYTHON_WRAPPER:Lfreemarker/template/ObjectWrapper;

    if-eqz v0, :cond_1

    sget-object v1, Lfreemarker/template/DefaultObjectWrapper;->JYTHON_OBJ_CLASS:Ljava/lang/Class;

    invoke-virtual {v1, p1}, Ljava/lang/Class;->isInstance(Ljava/lang/Object;)Z

    move-result v1

    if-eqz v1, :cond_1

    .line 233
    invoke-interface {v0, p1}, Lfreemarker/template/ObjectWrapper;->wrap(Ljava/lang/Object;)Lfreemarker/template/TemplateModel;

    move-result-object v0

    return-object v0

    .line 235
    :cond_1
    invoke-super {p0, p1}, Lfreemarker/ext/beans/BeansWrapper;->wrap(Ljava/lang/Object;)Lfreemarker/template/TemplateModel;

    move-result-object v0

    return-object v0
.end method

.method public setForceLegacyNonListCollections(Z)V
    .locals 0
    .param p1, "forceLegacyNonListCollections"    # Z

    .line 318
    invoke-virtual {p0}, Lfreemarker/template/DefaultObjectWrapper;->checkModifiable()V

    .line 319
    iput-boolean p1, p0, Lfreemarker/template/DefaultObjectWrapper;->forceLegacyNonListCollections:Z

    .line 320
    return-void
.end method

.method public setUseAdaptersForContainers(Z)V
    .locals 0
    .param p1, "useAdaptersForContainers"    # Z

    .line 290
    invoke-virtual {p0}, Lfreemarker/template/DefaultObjectWrapper;->checkModifiable()V

    .line 291
    iput-boolean p1, p0, Lfreemarker/template/DefaultObjectWrapper;->useAdaptersForContainers:Z

    .line 292
    return-void
.end method

.method protected toPropertiesString()Ljava/lang/String;
    .locals 3

    .line 339
    invoke-super {p0}, Lfreemarker/ext/beans/BeansWrapper;->toPropertiesString()Ljava/lang/String;

    move-result-object v0

    .line 342
    .local v0, "bwProps":Ljava/lang/String;
    const-string v1, "simpleMapWrapper"

    invoke-virtual {v0, v1}, Ljava/lang/String;->startsWith(Ljava/lang/String;)Z

    move-result v1

    if-eqz v1, :cond_0

    .line 343
    const/16 v1, 0x2c

    invoke-virtual {v0, v1}, Ljava/lang/String;->indexOf(I)I

    move-result v1

    .line 344
    .local v1, "smwEnd":I
    const/4 v2, -0x1

    if-eq v1, v2, :cond_0

    .line 345
    add-int/lit8 v2, v1, 0x1

    invoke-virtual {v0, v2}, Ljava/lang/String;->substring(I)Ljava/lang/String;

    move-result-object v2

    invoke-virtual {v2}, Ljava/lang/String;->trim()Ljava/lang/String;

    move-result-object v0

    .line 349
    .end local v1    # "smwEnd":I
    :cond_0
    new-instance v1, Ljava/lang/StringBuffer;

    invoke-direct {v1}, Ljava/lang/StringBuffer;-><init>()V

    const-string/jumbo v2, "useAdaptersForContainers="

    invoke-virtual {v1, v2}, Ljava/lang/StringBuffer;->append(Ljava/lang/String;)Ljava/lang/StringBuffer;

    move-result-object v1

    iget-boolean v2, p0, Lfreemarker/template/DefaultObjectWrapper;->useAdaptersForContainers:Z

    invoke-virtual {v1, v2}, Ljava/lang/StringBuffer;->append(Z)Ljava/lang/StringBuffer;

    move-result-object v1

    const-string v2, ", forceLegacyNonListCollections="

    invoke-virtual {v1, v2}, Ljava/lang/StringBuffer;->append(Ljava/lang/String;)Ljava/lang/StringBuffer;

    move-result-object v1

    iget-boolean v2, p0, Lfreemarker/template/DefaultObjectWrapper;->forceLegacyNonListCollections:Z

    invoke-virtual {v1, v2}, Ljava/lang/StringBuffer;->append(Z)Ljava/lang/StringBuffer;

    move-result-object v1

    const-string v2, ", "

    invoke-virtual {v1, v2}, Ljava/lang/StringBuffer;->append(Ljava/lang/String;)Ljava/lang/StringBuffer;

    move-result-object v1

    invoke-virtual {v1, v0}, Ljava/lang/StringBuffer;->append(Ljava/lang/String;)Ljava/lang/StringBuffer;

    move-result-object v1

    invoke-virtual {v1}, Ljava/lang/StringBuffer;->toString()Ljava/lang/String;

    move-result-object v1

    return-object v1
.end method

.method public wrap(Ljava/lang/Object;)Lfreemarker/template/TemplateModel;
    .locals 3
    .param p1, "obj"    # Ljava/lang/Object;
    .annotation system Ldalvik/annotation/Throws;
        value = {
            Lfreemarker/template/TemplateModelException;
        }
    .end annotation

    .line 155
    if-nez p1, :cond_0

    .line 156
    const/4 v0, 0x0

    invoke-super {p0, v0}, Lfreemarker/ext/beans/BeansWrapper;->wrap(Ljava/lang/Object;)Lfreemarker/template/TemplateModel;

    move-result-object v0

    return-object v0

    .line 158
    :cond_0
    instance-of v0, p1, Lfreemarker/template/TemplateModel;

    if-eqz v0, :cond_1

    .line 159
    move-object v0, p1

    check-cast v0, Lfreemarker/template/TemplateModel;

    return-object v0

    .line 161
    :cond_1
    instance-of v0, p1, Ljava/lang/String;

    if-eqz v0, :cond_2

    .line 162
    new-instance v0, Lfreemarker/template/SimpleScalar;

    move-object v1, p1

    check-cast v1, Ljava/lang/String;

    invoke-direct {v0, v1}, Lfreemarker/template/SimpleScalar;-><init>(Ljava/lang/String;)V

    return-object v0

    .line 164
    :cond_2
    instance-of v0, p1, Ljava/lang/Number;

    if-eqz v0, :cond_3

    .line 165
    new-instance v0, Lfreemarker/template/SimpleNumber;

    move-object v1, p1

    check-cast v1, Ljava/lang/Number;

    invoke-direct {v0, v1}, Lfreemarker/template/SimpleNumber;-><init>(Ljava/lang/Number;)V

    return-object v0

    .line 167
    :cond_3
    instance-of v0, p1, Ljava/util/Date;

    if-eqz v0, :cond_7

    .line 168
    instance-of v0, p1, Ljava/sql/Date;

    if-eqz v0, :cond_4

    .line 169
    new-instance v0, Lfreemarker/template/SimpleDate;

    move-object v1, p1

    check-cast v1, Ljava/sql/Date;

    invoke-direct {v0, v1}, Lfreemarker/template/SimpleDate;-><init>(Ljava/sql/Date;)V

    return-object v0

    .line 171
    :cond_4
    instance-of v0, p1, Ljava/sql/Time;

    if-eqz v0, :cond_5

    .line 172
    new-instance v0, Lfreemarker/template/SimpleDate;

    move-object v1, p1

    check-cast v1, Ljava/sql/Time;

    invoke-direct {v0, v1}, Lfreemarker/template/SimpleDate;-><init>(Ljava/sql/Time;)V

    return-object v0

    .line 174
    :cond_5
    instance-of v0, p1, Ljava/sql/Timestamp;

    if-eqz v0, :cond_6

    .line 175
    new-instance v0, Lfreemarker/template/SimpleDate;

    move-object v1, p1

    check-cast v1, Ljava/sql/Timestamp;

    invoke-direct {v0, v1}, Lfreemarker/template/SimpleDate;-><init>(Ljava/sql/Timestamp;)V

    return-object v0

    .line 177
    :cond_6
    new-instance v0, Lfreemarker/template/SimpleDate;

    move-object v1, p1

    check-cast v1, Ljava/util/Date;

    invoke-virtual {p0}, Lfreemarker/template/DefaultObjectWrapper;->getDefaultDateType()I

    move-result v2

    invoke-direct {v0, v1, v2}, Lfreemarker/template/SimpleDate;-><init>(Ljava/util/Date;I)V

    return-object v0

    .line 179
    :cond_7
    invoke-virtual {p1}, Ljava/lang/Object;->getClass()Ljava/lang/Class;

    move-result-object v0

    .line 180
    .local v0, "objClass":Ljava/lang/Class;
    invoke-virtual {v0}, Ljava/lang/Class;->isArray()Z

    move-result v1

    if-eqz v1, :cond_9

    .line 181
    iget-boolean v1, p0, Lfreemarker/template/DefaultObjectWrapper;->useAdaptersForContainers:Z

    if-eqz v1, :cond_8

    .line 182
    invoke-static {p1, p0}, Lfreemarker/template/DefaultArrayAdapter;->adapt(Ljava/lang/Object;Lfreemarker/template/ObjectWrapperAndUnwrapper;)Lfreemarker/template/DefaultArrayAdapter;

    move-result-object v1

    return-object v1

    .line 184
    :cond_8
    invoke-virtual {p0, p1}, Lfreemarker/template/DefaultObjectWrapper;->convertArray(Ljava/lang/Object;)Ljava/lang/Object;

    move-result-object p1

    .line 188
    :cond_9
    instance-of v1, p1, Ljava/util/Collection;

    if-eqz v1, :cond_d

    .line 189
    iget-boolean v1, p0, Lfreemarker/template/DefaultObjectWrapper;->useAdaptersForContainers:Z

    if-eqz v1, :cond_c

    .line 190
    instance-of v1, p1, Ljava/util/List;

    if-eqz v1, :cond_a

    .line 191
    move-object v1, p1

    check-cast v1, Ljava/util/List;

    invoke-static {v1, p0}, Lfreemarker/template/DefaultListAdapter;->adapt(Ljava/util/List;Lfreemarker/template/utility/RichObjectWrapper;)Lfreemarker/template/DefaultListAdapter;

    move-result-object v1

    return-object v1

    .line 193
    :cond_a
    iget-boolean v1, p0, Lfreemarker/template/DefaultObjectWrapper;->forceLegacyNonListCollections:Z

    if-eqz v1, :cond_b

    new-instance v1, Lfreemarker/template/SimpleSequence;

    move-object v2, p1

    check-cast v2, Ljava/util/Collection;

    invoke-direct {v1, v2, p0}, Lfreemarker/template/SimpleSequence;-><init>(Ljava/util/Collection;Lfreemarker/template/ObjectWrapper;)V

    goto :goto_0

    :cond_b
    move-object v1, p1

    check-cast v1, Ljava/util/Collection;

    .line 195
    invoke-static {v1, p0}, Lfreemarker/template/DefaultNonListCollectionAdapter;->adapt(Ljava/util/Collection;Lfreemarker/template/utility/ObjectWrapperWithAPISupport;)Lfreemarker/template/DefaultNonListCollectionAdapter;

    move-result-object v1

    :goto_0
    return-object v1

    .line 198
    :cond_c
    new-instance v1, Lfreemarker/template/SimpleSequence;

    move-object v2, p1

    check-cast v2, Ljava/util/Collection;

    invoke-direct {v1, v2, p0}, Lfreemarker/template/SimpleSequence;-><init>(Ljava/util/Collection;Lfreemarker/template/ObjectWrapper;)V

    return-object v1

    .line 201
    :cond_d
    instance-of v1, p1, Ljava/util/Map;

    if-eqz v1, :cond_f

    .line 202
    iget-boolean v1, p0, Lfreemarker/template/DefaultObjectWrapper;->useAdaptersForContainers:Z

    if-eqz v1, :cond_e

    move-object v1, p1

    check-cast v1, Ljava/util/Map;

    .line 203
    invoke-static {v1, p0}, Lfreemarker/template/DefaultMapAdapter;->adapt(Ljava/util/Map;Lfreemarker/template/utility/ObjectWrapperWithAPISupport;)Lfreemarker/template/DefaultMapAdapter;

    move-result-object v1

    goto :goto_1

    :cond_e
    new-instance v1, Lfreemarker/template/SimpleHash;

    move-object v2, p1

    check-cast v2, Ljava/util/Map;

    invoke-direct {v1, v2, p0}, Lfreemarker/template/SimpleHash;-><init>(Ljava/util/Map;Lfreemarker/template/ObjectWrapper;)V

    :goto_1
    return-object v1

    .line 206
    :cond_f
    instance-of v1, p1, Ljava/lang/Boolean;

    if-eqz v1, :cond_11

    .line 207
    sget-object v1, Ljava/lang/Boolean;->TRUE:Ljava/lang/Boolean;

    invoke-virtual {p1, v1}, Ljava/lang/Object;->equals(Ljava/lang/Object;)Z

    move-result v1

    if-eqz v1, :cond_10

    sget-object v1, Lfreemarker/template/TemplateBooleanModel;->TRUE:Lfreemarker/template/TemplateBooleanModel;

    goto :goto_2

    :cond_10
    sget-object v1, Lfreemarker/template/TemplateBooleanModel;->FALSE:Lfreemarker/template/TemplateBooleanModel;

    :goto_2
    return-object v1

    .line 209
    :cond_11
    instance-of v1, p1, Ljava/util/Iterator;

    if-eqz v1, :cond_13

    .line 210
    iget-boolean v1, p0, Lfreemarker/template/DefaultObjectWrapper;->useAdaptersForContainers:Z

    if-eqz v1, :cond_12

    move-object v1, p1

    check-cast v1, Ljava/util/Iterator;

    .line 211
    invoke-static {v1, p0}, Lfreemarker/template/DefaultIteratorAdapter;->adapt(Ljava/util/Iterator;Lfreemarker/template/ObjectWrapper;)Lfreemarker/template/DefaultIteratorAdapter;

    move-result-object v1

    goto :goto_3

    :cond_12
    new-instance v1, Lfreemarker/template/SimpleCollection;

    move-object v2, p1

    check-cast v2, Ljava/util/Iterator;

    invoke-direct {v1, v2, p0}, Lfreemarker/template/SimpleCollection;-><init>(Ljava/util/Iterator;Lfreemarker/template/ObjectWrapper;)V

    :goto_3
    return-object v1

    .line 214
    :cond_13
    invoke-virtual {p0, p1}, Lfreemarker/template/DefaultObjectWrapper;->handleUnknownType(Ljava/lang/Object;)Lfreemarker/template/TemplateModel;

    move-result-object v1

    return-object v1
.end method

.method public wrapDomNode(Ljava/lang/Object;)Lfreemarker/template/TemplateModel;
    .locals 1
    .param p1, "obj"    # Ljava/lang/Object;

    .line 239
    move-object v0, p1

    check-cast v0, Lorg/w3c/dom/Node;

    invoke-static {v0}, Lfreemarker/ext/dom/NodeModel;->wrap(Lorg/w3c/dom/Node;)Lfreemarker/ext/dom/NodeModel;

    move-result-object v0

    return-object v0
.end method
