.class public Lfreemarker/template/_TemplateAPI;
.super Ljava/lang/Object;
.source "_TemplateAPI.java"


# static fields
.field public static final VERSION_INT_2_3_0:I

.field public static final VERSION_INT_2_3_19:I

.field public static final VERSION_INT_2_3_20:I

.field public static final VERSION_INT_2_3_21:I

.field public static final VERSION_INT_2_3_22:I

.field public static final VERSION_INT_2_3_23:I

.field public static final VERSION_INT_2_4_0:I


# direct methods
.method static constructor <clinit>()V
    .locals 3

    .line 35
    sget-object v0, Lfreemarker/template/Configuration;->VERSION_2_3_0:Lfreemarker/template/Version;

    invoke-virtual {v0}, Lfreemarker/template/Version;->intValue()I

    move-result v0

    sput v0, Lfreemarker/template/_TemplateAPI;->VERSION_INT_2_3_0:I

    .line 36
    sget-object v0, Lfreemarker/template/Configuration;->VERSION_2_3_19:Lfreemarker/template/Version;

    invoke-virtual {v0}, Lfreemarker/template/Version;->intValue()I

    move-result v0

    sput v0, Lfreemarker/template/_TemplateAPI;->VERSION_INT_2_3_19:I

    .line 37
    sget-object v0, Lfreemarker/template/Configuration;->VERSION_2_3_20:Lfreemarker/template/Version;

    invoke-virtual {v0}, Lfreemarker/template/Version;->intValue()I

    move-result v0

    sput v0, Lfreemarker/template/_TemplateAPI;->VERSION_INT_2_3_20:I

    .line 38
    sget-object v0, Lfreemarker/template/Configuration;->VERSION_2_3_21:Lfreemarker/template/Version;

    invoke-virtual {v0}, Lfreemarker/template/Version;->intValue()I

    move-result v0

    sput v0, Lfreemarker/template/_TemplateAPI;->VERSION_INT_2_3_21:I

    .line 39
    sget-object v0, Lfreemarker/template/Configuration;->VERSION_2_3_22:Lfreemarker/template/Version;

    invoke-virtual {v0}, Lfreemarker/template/Version;->intValue()I

    move-result v0

    sput v0, Lfreemarker/template/_TemplateAPI;->VERSION_INT_2_3_22:I

    .line 40
    sget-object v0, Lfreemarker/template/Configuration;->VERSION_2_3_23:Lfreemarker/template/Version;

    invoke-virtual {v0}, Lfreemarker/template/Version;->intValue()I

    move-result v0

    sput v0, Lfreemarker/template/_TemplateAPI;->VERSION_INT_2_3_23:I

    .line 41
    const/4 v0, 0x2

    const/4 v1, 0x4

    const/4 v2, 0x0

    invoke-static {v0, v1, v2}, Lfreemarker/template/Version;->intValueFor(III)I

    move-result v0

    sput v0, Lfreemarker/template/_TemplateAPI;->VERSION_INT_2_4_0:I

    return-void
.end method

.method public constructor <init>()V
    .locals 0

    .line 33
    invoke-direct {p0}, Ljava/lang/Object;-><init>()V

    return-void
.end method

.method public static DefaultObjectWrapperFactory_clearInstanceCache()V
    .locals 0

    .line 66
    invoke-static {}, Lfreemarker/template/DefaultObjectWrapperBuilder;->clearInstanceCache()V

    .line 67
    return-void
.end method

.method public static checkVersionNotNullAndSupported(Lfreemarker/template/Version;)V
    .locals 4
    .param p0, "incompatibleImprovements"    # Lfreemarker/template/Version;

    .line 44
    const-string v0, "incompatibleImprovements"

    invoke-static {v0, p0}, Lfreemarker/template/utility/NullArgumentException;->check(Ljava/lang/String;Ljava/lang/Object;)V

    .line 45
    invoke-virtual {p0}, Lfreemarker/template/Version;->intValue()I

    move-result v0

    .line 46
    .local v0, "iciV":I
    invoke-static {}, Lfreemarker/template/Configuration;->getVersion()Lfreemarker/template/Version;

    move-result-object v1

    invoke-virtual {v1}, Lfreemarker/template/Version;->intValue()I

    move-result v1

    if-gt v0, v1, :cond_1

    .line 51
    sget v1, Lfreemarker/template/_TemplateAPI;->VERSION_INT_2_3_0:I

    if-lt v0, v1, :cond_0

    .line 54
    return-void

    .line 52
    :cond_0
    new-instance v1, Ljava/lang/IllegalArgumentException;

    const-string v2, "\"incompatibleImprovements\" must be at least 2.3.0."

    invoke-direct {v1, v2}, Ljava/lang/IllegalArgumentException;-><init>(Ljava/lang/String;)V

    throw v1

    .line 47
    :cond_1
    new-instance v1, Ljava/lang/IllegalArgumentException;

    new-instance v2, Ljava/lang/StringBuffer;

    invoke-direct {v2}, Ljava/lang/StringBuffer;-><init>()V

    const-string v3, "The FreeMarker version requested by \"incompatibleImprovements\" was "

    invoke-virtual {v2, v3}, Ljava/lang/StringBuffer;->append(Ljava/lang/String;)Ljava/lang/StringBuffer;

    move-result-object v2

    invoke-virtual {v2, p0}, Ljava/lang/StringBuffer;->append(Ljava/lang/Object;)Ljava/lang/StringBuffer;

    move-result-object v2

    const-string v3, ", but the installed FreeMarker version is only "

    invoke-virtual {v2, v3}, Ljava/lang/StringBuffer;->append(Ljava/lang/String;)Ljava/lang/StringBuffer;

    move-result-object v2

    .line 49
    invoke-static {}, Lfreemarker/template/Configuration;->getVersion()Lfreemarker/template/Version;

    move-result-object v3

    invoke-virtual {v2, v3}, Ljava/lang/StringBuffer;->append(Ljava/lang/Object;)Ljava/lang/StringBuffer;

    move-result-object v2

    const-string v3, ". You may need to upgrade FreeMarker in your project."

    invoke-virtual {v2, v3}, Ljava/lang/StringBuffer;->append(Ljava/lang/String;)Ljava/lang/StringBuffer;

    move-result-object v2

    invoke-virtual {v2}, Ljava/lang/StringBuffer;->toString()Ljava/lang/String;

    move-result-object v2

    invoke-direct {v1, v2}, Ljava/lang/IllegalArgumentException;-><init>(Ljava/lang/String;)V

    throw v1
.end method

.method public static createDefaultCacheStorage(Lfreemarker/template/Version;)Lfreemarker/cache/CacheStorage;
    .locals 1
    .param p0, "incompatibleImprovements"    # Lfreemarker/template/Version;

    .line 83
    invoke-static {p0}, Lfreemarker/template/Configuration;->createDefaultCacheStorage(Lfreemarker/template/Version;)Lfreemarker/cache/CacheStorage;

    move-result-object v0

    return-object v0
.end method

.method public static createDefaultTemplateLoader(Lfreemarker/template/Version;)Lfreemarker/cache/TemplateLoader;
    .locals 1
    .param p0, "incompatibleImprovements"    # Lfreemarker/template/Version;

    .line 79
    invoke-static {p0}, Lfreemarker/template/Configuration;->createDefaultTemplateLoader(Lfreemarker/template/Version;)Lfreemarker/cache/TemplateLoader;

    move-result-object v0

    return-object v0
.end method

.method public static getConfigurationSettingNames(Lfreemarker/template/Configuration;Z)Ljava/util/Set;
    .locals 1
    .param p0, "cfg"    # Lfreemarker/template/Configuration;
    .param p1, "camelCase"    # Z

    .line 98
    invoke-virtual {p0, p1}, Lfreemarker/template/Configuration;->getSettingNames(Z)Ljava/util/Set;

    move-result-object v0

    return-object v0
.end method

.method public static getDefaultLogTemplateExceptions(Lfreemarker/template/Version;)Z
    .locals 1
    .param p0, "incompatibleImprovements"    # Lfreemarker/template/Version;

    .line 75
    invoke-static {p0}, Lfreemarker/template/Configuration;->getDefaultLogTemplateExceptions(Lfreemarker/template/Version;)Z

    move-result v0

    return v0
.end method

.method public static getDefaultTemplateExceptionHandler(Lfreemarker/template/Version;)Lfreemarker/template/TemplateExceptionHandler;
    .locals 1
    .param p0, "incompatibleImprovements"    # Lfreemarker/template/Version;

    .line 71
    invoke-static {p0}, Lfreemarker/template/Configuration;->getDefaultTemplateExceptionHandler(Lfreemarker/template/Version;)Lfreemarker/template/TemplateExceptionHandler;

    move-result-object v0

    return-object v0
.end method

.method public static getDefaultTemplateLookupStrategy(Lfreemarker/template/Version;)Lfreemarker/cache/TemplateLookupStrategy;
    .locals 1
    .param p0, "incompatibleImprovements"    # Lfreemarker/template/Version;

    .line 87
    invoke-static {p0}, Lfreemarker/template/Configuration;->getDefaultTemplateLookupStrategy(Lfreemarker/template/Version;)Lfreemarker/cache/TemplateLookupStrategy;

    move-result-object v0

    return-object v0
.end method

.method public static getDefaultTemplateNameFormat(Lfreemarker/template/Version;)Lfreemarker/cache/TemplateNameFormat;
    .locals 1
    .param p0, "incompatibleImprovements"    # Lfreemarker/template/Version;

    .line 91
    invoke-static {p0}, Lfreemarker/template/Configuration;->getDefaultTemplateNameFormat(Lfreemarker/template/Version;)Lfreemarker/cache/TemplateNameFormat;

    move-result-object v0

    return-object v0
.end method

.method public static getTemplateLanguageVersionAsInt(Lfreemarker/core/TemplateObject;)I
    .locals 1
    .param p0, "to"    # Lfreemarker/core/TemplateObject;

    .line 57
    invoke-virtual {p0}, Lfreemarker/core/TemplateObject;->getTemplate()Lfreemarker/template/Template;

    move-result-object v0

    invoke-static {v0}, Lfreemarker/template/_TemplateAPI;->getTemplateLanguageVersionAsInt(Lfreemarker/template/Template;)I

    move-result v0

    return v0
.end method

.method public static getTemplateLanguageVersionAsInt(Lfreemarker/template/Template;)I
    .locals 1
    .param p0, "t"    # Lfreemarker/template/Template;

    .line 61
    invoke-virtual {p0}, Lfreemarker/template/Template;->getTemplateLanguageVersion()Lfreemarker/template/Version;

    move-result-object v0

    invoke-virtual {v0}, Lfreemarker/template/Version;->intValue()I

    move-result v0

    return v0
.end method
