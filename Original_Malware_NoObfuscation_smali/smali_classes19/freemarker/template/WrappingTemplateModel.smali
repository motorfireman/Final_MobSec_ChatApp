.class public abstract Lfreemarker/template/WrappingTemplateModel;
.super Ljava/lang/Object;
.source "WrappingTemplateModel.java"


# static fields
.field private static defaultObjectWrapper:Lfreemarker/template/ObjectWrapper;


# instance fields
.field private objectWrapper:Lfreemarker/template/ObjectWrapper;


# direct methods
.method static constructor <clinit>()V
    .locals 1

    .line 26
    sget-object v0, Lfreemarker/template/DefaultObjectWrapper;->instance:Lfreemarker/template/DefaultObjectWrapper;

    sput-object v0, Lfreemarker/template/WrappingTemplateModel;->defaultObjectWrapper:Lfreemarker/template/ObjectWrapper;

    return-void
.end method

.method protected constructor <init>()V
    .locals 1

    .line 67
    sget-object v0, Lfreemarker/template/WrappingTemplateModel;->defaultObjectWrapper:Lfreemarker/template/ObjectWrapper;

    invoke-direct {p0, v0}, Lfreemarker/template/WrappingTemplateModel;-><init>(Lfreemarker/template/ObjectWrapper;)V

    .line 68
    return-void
.end method

.method protected constructor <init>(Lfreemarker/template/ObjectWrapper;)V
    .locals 1
    .param p1, "objectWrapper"    # Lfreemarker/template/ObjectWrapper;

    .line 77
    invoke-direct {p0}, Ljava/lang/Object;-><init>()V

    .line 78
    if-eqz p1, :cond_0

    move-object v0, p1

    goto :goto_0

    :cond_0
    sget-object v0, Lfreemarker/template/WrappingTemplateModel;->defaultObjectWrapper:Lfreemarker/template/ObjectWrapper;

    :goto_0
    iput-object v0, p0, Lfreemarker/template/WrappingTemplateModel;->objectWrapper:Lfreemarker/template/ObjectWrapper;

    .line 80
    if-nez v0, :cond_1

    .line 81
    new-instance v0, Lfreemarker/template/DefaultObjectWrapper;

    invoke-direct {v0}, Lfreemarker/template/DefaultObjectWrapper;-><init>()V

    sput-object v0, Lfreemarker/template/WrappingTemplateModel;->defaultObjectWrapper:Lfreemarker/template/ObjectWrapper;

    iput-object v0, p0, Lfreemarker/template/WrappingTemplateModel;->objectWrapper:Lfreemarker/template/ObjectWrapper;

    .line 83
    :cond_1
    return-void
.end method

.method public static getDefaultObjectWrapper()Lfreemarker/template/ObjectWrapper;
    .locals 1

    .line 57
    sget-object v0, Lfreemarker/template/WrappingTemplateModel;->defaultObjectWrapper:Lfreemarker/template/ObjectWrapper;

    return-object v0
.end method

.method public static setDefaultObjectWrapper(Lfreemarker/template/ObjectWrapper;)V
    .locals 0
    .param p0, "objectWrapper"    # Lfreemarker/template/ObjectWrapper;

    .line 43
    sput-object p0, Lfreemarker/template/WrappingTemplateModel;->defaultObjectWrapper:Lfreemarker/template/ObjectWrapper;

    .line 44
    return-void
.end method


# virtual methods
.method public getObjectWrapper()Lfreemarker/template/ObjectWrapper;
    .locals 1

    .line 89
    iget-object v0, p0, Lfreemarker/template/WrappingTemplateModel;->objectWrapper:Lfreemarker/template/ObjectWrapper;

    return-object v0
.end method

.method public setObjectWrapper(Lfreemarker/template/ObjectWrapper;)V
    .locals 0
    .param p1, "objectWrapper"    # Lfreemarker/template/ObjectWrapper;

    .line 93
    iput-object p1, p0, Lfreemarker/template/WrappingTemplateModel;->objectWrapper:Lfreemarker/template/ObjectWrapper;

    .line 94
    return-void
.end method

.method protected final wrap(Ljava/lang/Object;)Lfreemarker/template/TemplateModel;
    .locals 1
    .param p1, "obj"    # Ljava/lang/Object;
    .annotation system Ldalvik/annotation/Throws;
        value = {
            Lfreemarker/template/TemplateModelException;
        }
    .end annotation

    .line 105
    iget-object v0, p0, Lfreemarker/template/WrappingTemplateModel;->objectWrapper:Lfreemarker/template/ObjectWrapper;

    invoke-interface {v0, p1}, Lfreemarker/template/ObjectWrapper;->wrap(Ljava/lang/Object;)Lfreemarker/template/TemplateModel;

    move-result-object v0

    return-object v0
.end method
