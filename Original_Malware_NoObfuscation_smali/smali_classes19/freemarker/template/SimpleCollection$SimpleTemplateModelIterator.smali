.class Lfreemarker/template/SimpleCollection$SimpleTemplateModelIterator;
.super Ljava/lang/Object;
.source "SimpleCollection.java"

# interfaces
.implements Lfreemarker/template/TemplateModelIterator;


# annotations
.annotation system Ldalvik/annotation/EnclosingClass;
    value = Lfreemarker/template/SimpleCollection;
.end annotation

.annotation system Ldalvik/annotation/InnerClass;
    accessFlags = 0x2
    name = "SimpleTemplateModelIterator"
.end annotation


# instance fields
.field private final iterator:Ljava/util/Iterator;

.field private iteratorOwnedByMe:Z

.field private final synthetic this$0:Lfreemarker/template/SimpleCollection;


# direct methods
.method constructor <init>(Lfreemarker/template/SimpleCollection;Ljava/util/Iterator;Z)V
    .locals 0
    .param p2, "iterator"    # Ljava/util/Iterator;
    .param p3, "iteratorOwnedByMe"    # Z

    .line 103
    iput-object p1, p0, Lfreemarker/template/SimpleCollection$SimpleTemplateModelIterator;->this$0:Lfreemarker/template/SimpleCollection;

    invoke-direct {p0}, Ljava/lang/Object;-><init>()V

    .line 104
    iput-object p2, p0, Lfreemarker/template/SimpleCollection$SimpleTemplateModelIterator;->iterator:Ljava/util/Iterator;

    .line 105
    iput-boolean p3, p0, Lfreemarker/template/SimpleCollection$SimpleTemplateModelIterator;->iteratorOwnedByMe:Z

    .line 106
    return-void
.end method

.method private takeIteratorOwnership()V
    .locals 3
    .annotation system Ldalvik/annotation/Throws;
        value = {
            Lfreemarker/template/TemplateModelException;
        }
    .end annotation

    .line 131
    iget-object v0, p0, Lfreemarker/template/SimpleCollection$SimpleTemplateModelIterator;->this$0:Lfreemarker/template/SimpleCollection;

    monitor-enter v0

    .line 132
    :try_start_0
    iget-object v1, p0, Lfreemarker/template/SimpleCollection$SimpleTemplateModelIterator;->this$0:Lfreemarker/template/SimpleCollection;

    invoke-static {v1}, Lfreemarker/template/SimpleCollection;->access$000(Lfreemarker/template/SimpleCollection;)Z

    move-result v1

    if-nez v1, :cond_0

    .line 136
    iget-object v1, p0, Lfreemarker/template/SimpleCollection$SimpleTemplateModelIterator;->this$0:Lfreemarker/template/SimpleCollection;

    const/4 v2, 0x1

    invoke-static {v1, v2}, Lfreemarker/template/SimpleCollection;->access$002(Lfreemarker/template/SimpleCollection;Z)Z

    .line 137
    iput-boolean v2, p0, Lfreemarker/template/SimpleCollection$SimpleTemplateModelIterator;->iteratorOwnedByMe:Z

    .line 139
    monitor-exit v0

    .line 140
    return-void

    .line 133
    :cond_0
    new-instance v1, Lfreemarker/template/TemplateModelException;

    const-string v2, "This collection value wraps a java.util.Iterator, thus it can be listed only once."

    invoke-direct {v1, v2}, Lfreemarker/template/TemplateModelException;-><init>(Ljava/lang/String;)V

    throw v1

    .line 139
    :catchall_0
    move-exception v1

    monitor-exit v0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    throw v1
.end method


# virtual methods
.method public hasNext()Z
    .locals 1
    .annotation system Ldalvik/annotation/Throws;
        value = {
            Lfreemarker/template/TemplateModelException;
        }
    .end annotation

    .line 123
    iget-boolean v0, p0, Lfreemarker/template/SimpleCollection$SimpleTemplateModelIterator;->iteratorOwnedByMe:Z

    if-nez v0, :cond_0

    .line 124
    invoke-direct {p0}, Lfreemarker/template/SimpleCollection$SimpleTemplateModelIterator;->takeIteratorOwnership()V

    .line 127
    :cond_0
    iget-object v0, p0, Lfreemarker/template/SimpleCollection$SimpleTemplateModelIterator;->iterator:Ljava/util/Iterator;

    invoke-interface {v0}, Ljava/util/Iterator;->hasNext()Z

    move-result v0

    return v0
.end method

.method public next()Lfreemarker/template/TemplateModel;
    .locals 2
    .annotation system Ldalvik/annotation/Throws;
        value = {
            Lfreemarker/template/TemplateModelException;
        }
    .end annotation

    .line 109
    iget-boolean v0, p0, Lfreemarker/template/SimpleCollection$SimpleTemplateModelIterator;->iteratorOwnedByMe:Z

    if-nez v0, :cond_0

    .line 110
    invoke-direct {p0}, Lfreemarker/template/SimpleCollection$SimpleTemplateModelIterator;->takeIteratorOwnership()V

    .line 113
    :cond_0
    iget-object v0, p0, Lfreemarker/template/SimpleCollection$SimpleTemplateModelIterator;->iterator:Ljava/util/Iterator;

    invoke-interface {v0}, Ljava/util/Iterator;->hasNext()Z

    move-result v0

    if-eqz v0, :cond_2

    .line 117
    iget-object v0, p0, Lfreemarker/template/SimpleCollection$SimpleTemplateModelIterator;->iterator:Ljava/util/Iterator;

    invoke-interface {v0}, Ljava/util/Iterator;->next()Ljava/lang/Object;

    move-result-object v0

    .line 118
    .local v0, "value":Ljava/lang/Object;
    instance-of v1, v0, Lfreemarker/template/TemplateModel;

    if-eqz v1, :cond_1

    move-object v1, v0

    check-cast v1, Lfreemarker/template/TemplateModel;

    goto :goto_0

    :cond_1
    iget-object v1, p0, Lfreemarker/template/SimpleCollection$SimpleTemplateModelIterator;->this$0:Lfreemarker/template/SimpleCollection;

    invoke-virtual {v1, v0}, Lfreemarker/template/SimpleCollection;->wrap(Ljava/lang/Object;)Lfreemarker/template/TemplateModel;

    move-result-object v1

    :goto_0
    return-object v1

    .line 114
    .end local v0    # "value":Ljava/lang/Object;
    :cond_2
    new-instance v0, Lfreemarker/template/TemplateModelException;

    const-string v1, "The collection has no more items."

    invoke-direct {v0, v1}, Lfreemarker/template/TemplateModelException;-><init>(Ljava/lang/String;)V

    throw v0
.end method
