.class public Lcom/virgilsecurity/sdk/cards/model/RawSignedModel;
.super Ljava/lang/Object;
.source "RawSignedModel.java"


# static fields
.field private static final LOGGER:Ljava/util/logging/Logger;


# instance fields
.field private contentSnapshot:[B
    .annotation runtime Lcom/google/gson/annotations/SerializedName;
        value = "content_snapshot"
    .end annotation
.end field

.field private signatures:Ljava/util/List;
    .annotation runtime Lcom/google/gson/annotations/SerializedName;
        value = "signatures"
    .end annotation

    .annotation system Ldalvik/annotation/Signature;
        value = {
            "Ljava/util/List<",
            "Lcom/virgilsecurity/sdk/cards/model/RawSignature;",
            ">;"
        }
    .end annotation
.end field


# direct methods
.method static constructor <clinit>()V
    .locals 1

    .line 50
    const-class v0, Lcom/virgilsecurity/sdk/cards/model/RawSignedModel;

    invoke-virtual {v0}, Ljava/lang/Class;->getName()Ljava/lang/String;

    move-result-object v0

    invoke-static {v0}, Ljava/util/logging/Logger;->getLogger(Ljava/lang/String;)Ljava/util/logging/Logger;

    move-result-object v0

    sput-object v0, Lcom/virgilsecurity/sdk/cards/model/RawSignedModel;->LOGGER:Ljava/util/logging/Logger;

    return-void
.end method

.method public constructor <init>(Ljava/lang/String;)V
    .locals 2
    .param p1, "base64EncodedModel"    # Ljava/lang/String;
    .annotation runtime Ljava/lang/Deprecated;
    .end annotation

    .line 120
    invoke-direct {p0}, Ljava/lang/Object;-><init>()V

    .line 121
    invoke-static {p1}, Lcom/virgilsecurity/sdk/cards/model/RawSignedModel;->fromString(Ljava/lang/String;)Lcom/virgilsecurity/sdk/cards/model/RawSignedModel;

    move-result-object v0

    .line 123
    .local v0, "cardModel":Lcom/virgilsecurity/sdk/cards/model/RawSignedModel;
    invoke-virtual {v0}, Lcom/virgilsecurity/sdk/cards/model/RawSignedModel;->getContentSnapshot()[B

    move-result-object v1

    iput-object v1, p0, Lcom/virgilsecurity/sdk/cards/model/RawSignedModel;->contentSnapshot:[B

    .line 124
    invoke-virtual {v0}, Lcom/virgilsecurity/sdk/cards/model/RawSignedModel;->getSignatures()Ljava/util/List;

    move-result-object v1

    iput-object v1, p0, Lcom/virgilsecurity/sdk/cards/model/RawSignedModel;->signatures:Ljava/util/List;

    .line 125
    return-void
.end method

.method public constructor <init>([B)V
    .locals 1
    .param p1, "contentSnapshot"    # [B

    .line 83
    invoke-direct {p0}, Ljava/lang/Object;-><init>()V

    .line 84
    const-string v0, "RawSignedModel -> \'contentSnapshot\' should not be null or empty"

    invoke-static {p1, v0}, Lcom/virgilsecurity/common/util/Validator;->checkNullEmptyAgrument([BLjava/lang/String;)V

    .line 87
    iput-object p1, p0, Lcom/virgilsecurity/sdk/cards/model/RawSignedModel;->contentSnapshot:[B

    .line 89
    new-instance v0, Ljava/util/ArrayList;

    invoke-direct {v0}, Ljava/util/ArrayList;-><init>()V

    iput-object v0, p0, Lcom/virgilsecurity/sdk/cards/model/RawSignedModel;->signatures:Ljava/util/List;

    .line 90
    return-void
.end method

.method public constructor <init>([BLjava/util/List;)V
    .locals 2
    .param p1, "contentSnapshot"    # [B
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "([B",
            "Ljava/util/List<",
            "Lcom/virgilsecurity/sdk/cards/model/RawSignature;",
            ">;)V"
        }
    .end annotation

    .line 98
    .local p2, "signatures":Ljava/util/List;, "Ljava/util/List<Lcom/virgilsecurity/sdk/cards/model/RawSignature;>;"
    invoke-direct {p0}, Ljava/lang/Object;-><init>()V

    .line 99
    const-string v0, "RawSignedModel -> \'contentSnapshot\' should not be null or empty"

    invoke-static {p1, v0}, Lcom/virgilsecurity/common/util/Validator;->checkNullEmptyAgrument([BLjava/lang/String;)V

    .line 101
    const-string v0, "RawSignedModel -> \'signatures\' should not be null or empty"

    invoke-static {p2, v0}, Lcom/virgilsecurity/common/util/Validator;->checkNullEmptyAgrument(Ljava/util/List;Ljava/lang/String;)V

    .line 104
    invoke-direct {p0, p2}, Lcom/virgilsecurity/sdk/cards/model/RawSignedModel;->isAllSignaturesUnique(Ljava/util/List;)Z

    move-result v0

    if-eqz v0, :cond_0

    .line 109
    iput-object p1, p0, Lcom/virgilsecurity/sdk/cards/model/RawSignedModel;->contentSnapshot:[B

    .line 110
    iput-object p2, p0, Lcom/virgilsecurity/sdk/cards/model/RawSignedModel;->signatures:Ljava/util/List;

    .line 111
    return-void

    .line 105
    :cond_0
    new-instance v0, Lcom/virgilsecurity/sdk/client/exceptions/SignatureNotUniqueException;

    const-string v1, "RawSignedModel -> \'signatures\' should have unique signatures"

    invoke-direct {v0, v1}, Lcom/virgilsecurity/sdk/client/exceptions/SignatureNotUniqueException;-><init>(Ljava/lang/String;)V

    throw v0
.end method

.method public static fromJson(Ljava/lang/String;)Lcom/virgilsecurity/sdk/cards/model/RawSignedModel;
    .locals 1
    .param p0, "cardModel"    # Ljava/lang/String;

    .line 65
    const-class v0, Lcom/virgilsecurity/sdk/cards/model/RawSignedModel;

    invoke-static {p0, v0}, Lcom/virgilsecurity/sdk/utils/ConvertionUtils;->deserializeFromJson(Ljava/lang/String;Ljava/lang/Class;)Ljava/lang/Object;

    move-result-object v0

    check-cast v0, Lcom/virgilsecurity/sdk/cards/model/RawSignedModel;

    return-object v0
.end method

.method public static fromString(Ljava/lang/String;)Lcom/virgilsecurity/sdk/cards/model/RawSignedModel;
    .locals 1
    .param p0, "cardModel"    # Ljava/lang/String;

    .line 75
    invoke-static {p0}, Lcom/virgilsecurity/sdk/utils/ConvertionUtils;->base64ToString(Ljava/lang/String;)Ljava/lang/String;

    move-result-object v0

    invoke-static {v0}, Lcom/virgilsecurity/sdk/cards/model/RawSignedModel;->fromJson(Ljava/lang/String;)Lcom/virgilsecurity/sdk/cards/model/RawSignedModel;

    move-result-object v0

    return-object v0
.end method

.method private isAllSignaturesUnique(Ljava/util/List;)Z
    .locals 7
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "(",
            "Ljava/util/List<",
            "Lcom/virgilsecurity/sdk/cards/model/RawSignature;",
            ">;)Z"
        }
    .end annotation

    .line 215
    .local p1, "signatures":Ljava/util/List;, "Ljava/util/List<Lcom/virgilsecurity/sdk/cards/model/RawSignature;>;"
    invoke-interface {p1}, Ljava/util/List;->iterator()Ljava/util/Iterator;

    move-result-object v0

    :goto_0
    invoke-interface {v0}, Ljava/util/Iterator;->hasNext()Z

    move-result v1

    const/4 v2, 0x1

    if-eqz v1, :cond_2

    invoke-interface {v0}, Ljava/util/Iterator;->next()Ljava/lang/Object;

    move-result-object v1

    check-cast v1, Lcom/virgilsecurity/sdk/cards/model/RawSignature;

    .line 216
    .local v1, "rawSignatureOuter":Lcom/virgilsecurity/sdk/cards/model/RawSignature;
    invoke-interface {p1}, Ljava/util/List;->iterator()Ljava/util/Iterator;

    move-result-object v3

    :goto_1
    invoke-interface {v3}, Ljava/util/Iterator;->hasNext()Z

    move-result v4

    if-eqz v4, :cond_1

    invoke-interface {v3}, Ljava/util/Iterator;->next()Ljava/lang/Object;

    move-result-object v4

    check-cast v4, Lcom/virgilsecurity/sdk/cards/model/RawSignature;

    .line 217
    .local v4, "rawSignatureInner":Lcom/virgilsecurity/sdk/cards/model/RawSignature;
    invoke-virtual {v1}, Lcom/virgilsecurity/sdk/cards/model/RawSignature;->getSigner()Ljava/lang/String;

    move-result-object v5

    invoke-virtual {v4}, Lcom/virgilsecurity/sdk/cards/model/RawSignature;->getSigner()Ljava/lang/String;

    move-result-object v6

    invoke-virtual {v5, v6}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v5

    if-eqz v5, :cond_0

    .line 218
    sget-object v0, Lcom/virgilsecurity/sdk/cards/model/RawSignedModel;->LOGGER:Ljava/util/logging/Logger;

    new-array v2, v2, [Ljava/lang/Object;

    .line 219
    invoke-virtual {v1}, Lcom/virgilsecurity/sdk/cards/model/RawSignature;->getSigner()Ljava/lang/String;

    move-result-object v3

    const/4 v5, 0x0

    aput-object v3, v2, v5

    .line 218
    const-string v3, "RawSignedModel should have unique signatures only. The \'%s\' signature is already present"

    invoke-static {v3, v2}, Ljava/lang/String;->format(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;

    move-result-object v2

    invoke-virtual {v0, v2}, Ljava/util/logging/Logger;->warning(Ljava/lang/String;)V

    .line 220
    return v5

    .line 222
    .end local v4    # "rawSignatureInner":Lcom/virgilsecurity/sdk/cards/model/RawSignature;
    :cond_0
    goto :goto_1

    .line 223
    .end local v1    # "rawSignatureOuter":Lcom/virgilsecurity/sdk/cards/model/RawSignature;
    :cond_1
    goto :goto_0

    .line 225
    :cond_2
    return v2
.end method

.method private isSignaturesUnique(Lcom/virgilsecurity/sdk/cards/model/RawSignature;)Z
    .locals 5
    .param p1, "signature"    # Lcom/virgilsecurity/sdk/cards/model/RawSignature;

    .line 229
    iget-object v0, p0, Lcom/virgilsecurity/sdk/cards/model/RawSignedModel;->signatures:Ljava/util/List;

    invoke-interface {v0}, Ljava/util/List;->iterator()Ljava/util/Iterator;

    move-result-object v0

    :goto_0
    invoke-interface {v0}, Ljava/util/Iterator;->hasNext()Z

    move-result v1

    const/4 v2, 0x1

    if-eqz v1, :cond_1

    invoke-interface {v0}, Ljava/util/Iterator;->next()Ljava/lang/Object;

    move-result-object v1

    check-cast v1, Lcom/virgilsecurity/sdk/cards/model/RawSignature;

    .line 230
    .local v1, "rawSignatureOuter":Lcom/virgilsecurity/sdk/cards/model/RawSignature;
    invoke-virtual {v1}, Lcom/virgilsecurity/sdk/cards/model/RawSignature;->getSigner()Ljava/lang/String;

    move-result-object v3

    invoke-virtual {p1}, Lcom/virgilsecurity/sdk/cards/model/RawSignature;->getSigner()Ljava/lang/String;

    move-result-object v4

    invoke-virtual {v3, v4}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v3

    if-eqz v3, :cond_0

    .line 231
    sget-object v0, Lcom/virgilsecurity/sdk/cards/model/RawSignedModel;->LOGGER:Ljava/util/logging/Logger;

    new-array v2, v2, [Ljava/lang/Object;

    .line 232
    invoke-virtual {p1}, Lcom/virgilsecurity/sdk/cards/model/RawSignature;->getSigner()Ljava/lang/String;

    move-result-object v3

    const/4 v4, 0x0

    aput-object v3, v2, v4

    .line 231
    const-string v3, "RawSignedModel should have unique signatures only. The \'%s\' signature is already present"

    invoke-static {v3, v2}, Ljava/lang/String;->format(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;

    move-result-object v2

    invoke-virtual {v0, v2}, Ljava/util/logging/Logger;->warning(Ljava/lang/String;)V

    .line 233
    return v4

    .line 235
    .end local v1    # "rawSignatureOuter":Lcom/virgilsecurity/sdk/cards/model/RawSignature;
    :cond_0
    goto :goto_0

    .line 237
    :cond_1
    return v2
.end method


# virtual methods
.method public addSignature(Lcom/virgilsecurity/sdk/cards/model/RawSignature;)V
    .locals 2
    .param p1, "rawSignature"    # Lcom/virgilsecurity/sdk/cards/model/RawSignature;

    .line 134
    iget-object v0, p0, Lcom/virgilsecurity/sdk/cards/model/RawSignedModel;->signatures:Ljava/util/List;

    invoke-interface {v0}, Ljava/util/List;->size()I

    move-result v0

    const/4 v1, 0x7

    if-gt v0, v1, :cond_1

    .line 140
    invoke-direct {p0, p1}, Lcom/virgilsecurity/sdk/cards/model/RawSignedModel;->isSignaturesUnique(Lcom/virgilsecurity/sdk/cards/model/RawSignature;)Z

    move-result v0

    if-eqz v0, :cond_0

    .line 145
    iget-object v0, p0, Lcom/virgilsecurity/sdk/cards/model/RawSignedModel;->signatures:Ljava/util/List;

    invoke-interface {v0, p1}, Ljava/util/List;->add(Ljava/lang/Object;)Z

    .line 146
    return-void

    .line 141
    :cond_0
    new-instance v0, Lcom/virgilsecurity/sdk/client/exceptions/SignatureNotUniqueException;

    const-string v1, "RawSignedModel -> \'signatures\' should have unique signatures"

    invoke-direct {v0, v1}, Lcom/virgilsecurity/sdk/client/exceptions/SignatureNotUniqueException;-><init>(Ljava/lang/String;)V

    throw v0

    .line 135
    :cond_1
    sget-object v0, Lcom/virgilsecurity/sdk/cards/model/RawSignedModel;->LOGGER:Ljava/util/logging/Logger;

    const-string v1, "RawSignedModel can hold up to 8 signatures only and is full already"

    invoke-virtual {v0, v1}, Ljava/util/logging/Logger;->warning(Ljava/lang/String;)V

    .line 136
    new-instance v0, Ljava/lang/IllegalArgumentException;

    const-string v1, "RawSignedModel -> \'signatures\' can hold up to 8 signatures only"

    invoke-direct {v0, v1}, Ljava/lang/IllegalArgumentException;-><init>(Ljava/lang/String;)V

    throw v0
.end method

.method public equals(Ljava/lang/Object;)Z
    .locals 5
    .param p1, "obj"    # Ljava/lang/Object;

    .line 251
    const/4 v0, 0x1

    if-ne p0, p1, :cond_0

    .line 252
    return v0

    .line 254
    :cond_0
    const/4 v1, 0x0

    if-nez p1, :cond_1

    .line 255
    return v1

    .line 257
    :cond_1
    invoke-virtual {p0}, Ljava/lang/Object;->getClass()Ljava/lang/Class;

    move-result-object v2

    invoke-virtual {p1}, Ljava/lang/Object;->getClass()Ljava/lang/Class;

    move-result-object v3

    if-eq v2, v3, :cond_2

    .line 258
    return v1

    .line 260
    :cond_2
    move-object v2, p1

    check-cast v2, Lcom/virgilsecurity/sdk/cards/model/RawSignedModel;

    .line 261
    .local v2, "other":Lcom/virgilsecurity/sdk/cards/model/RawSignedModel;
    iget-object v3, p0, Lcom/virgilsecurity/sdk/cards/model/RawSignedModel;->contentSnapshot:[B

    iget-object v4, v2, Lcom/virgilsecurity/sdk/cards/model/RawSignedModel;->contentSnapshot:[B

    invoke-static {v3, v4}, Ljava/util/Arrays;->equals([B[B)Z

    move-result v3

    if-nez v3, :cond_3

    .line 262
    return v1

    .line 264
    :cond_3
    iget-object v3, p0, Lcom/virgilsecurity/sdk/cards/model/RawSignedModel;->signatures:Ljava/util/List;

    if-nez v3, :cond_4

    .line 265
    iget-object v3, v2, Lcom/virgilsecurity/sdk/cards/model/RawSignedModel;->signatures:Ljava/util/List;

    if-eqz v3, :cond_5

    .line 266
    return v1

    .line 268
    :cond_4
    iget-object v4, v2, Lcom/virgilsecurity/sdk/cards/model/RawSignedModel;->signatures:Ljava/util/List;

    invoke-virtual {v3, v4}, Ljava/lang/Object;->equals(Ljava/lang/Object;)Z

    move-result v3

    if-nez v3, :cond_5

    .line 269
    return v1

    .line 271
    :cond_5
    return v0
.end method

.method public exportAsBase64String()Ljava/lang/String;
    .locals 1

    .line 154
    invoke-virtual {p0}, Lcom/virgilsecurity/sdk/cards/model/RawSignedModel;->exportAsJson()Ljava/lang/String;

    move-result-object v0

    invoke-static {v0}, Lcom/virgilsecurity/sdk/utils/ConvertionUtils;->toBase64String(Ljava/lang/String;)Ljava/lang/String;

    move-result-object v0

    return-object v0
.end method

.method public exportAsJson()Ljava/lang/String;
    .locals 1

    .line 163
    invoke-static {p0}, Lcom/virgilsecurity/sdk/utils/ConvertionUtils;->serializeToJson(Ljava/lang/Object;)Ljava/lang/String;

    move-result-object v0

    return-object v0
.end method

.method public getContentSnapshot()[B
    .locals 1

    .line 172
    iget-object v0, p0, Lcom/virgilsecurity/sdk/cards/model/RawSignedModel;->contentSnapshot:[B

    return-object v0
.end method

.method public getSignatures()Ljava/util/List;
    .locals 1
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "()",
            "Ljava/util/List<",
            "Lcom/virgilsecurity/sdk/cards/model/RawSignature;",
            ">;"
        }
    .end annotation

    .line 181
    iget-object v0, p0, Lcom/virgilsecurity/sdk/cards/model/RawSignedModel;->signatures:Ljava/util/List;

    return-object v0
.end method

.method public hashCode()I
    .locals 4

    .line 242
    const/16 v0, 0x1f

    .line 243
    .local v0, "prime":I
    const/4 v1, 0x1

    .line 244
    .local v1, "result":I
    mul-int/lit8 v2, v1, 0x1f

    iget-object v3, p0, Lcom/virgilsecurity/sdk/cards/model/RawSignedModel;->contentSnapshot:[B

    invoke-static {v3}, Ljava/util/Arrays;->hashCode([B)I

    move-result v3

    add-int/2addr v2, v3

    .line 245
    .end local v1    # "result":I
    .local v2, "result":I
    mul-int/lit8 v1, v2, 0x1f

    iget-object v3, p0, Lcom/virgilsecurity/sdk/cards/model/RawSignedModel;->signatures:Ljava/util/List;

    if-nez v3, :cond_0

    const/4 v3, 0x0

    goto :goto_0

    :cond_0
    invoke-virtual {v3}, Ljava/lang/Object;->hashCode()I

    move-result v3

    :goto_0
    add-int/2addr v1, v3

    .line 246
    .end local v2    # "result":I
    .restart local v1    # "result":I
    return v1
.end method

.method public setContentSnapshot([B)V
    .locals 0
    .param p1, "contentSnapshot"    # [B

    .line 190
    iput-object p1, p0, Lcom/virgilsecurity/sdk/cards/model/RawSignedModel;->contentSnapshot:[B

    .line 191
    return-void
.end method

.method public setSignatures(Ljava/util/List;)V
    .locals 3
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "(",
            "Ljava/util/List<",
            "Lcom/virgilsecurity/sdk/cards/model/RawSignature;",
            ">;)V"
        }
    .end annotation

    .line 199
    .local p1, "signatures":Ljava/util/List;, "Ljava/util/List<Lcom/virgilsecurity/sdk/cards/model/RawSignature;>;"
    invoke-interface {p1}, Ljava/util/List;->size()I

    move-result v0

    const/16 v1, 0x8

    if-gt v0, v1, :cond_1

    .line 206
    invoke-direct {p0, p1}, Lcom/virgilsecurity/sdk/cards/model/RawSignedModel;->isAllSignaturesUnique(Ljava/util/List;)Z

    move-result v0

    if-eqz v0, :cond_0

    .line 211
    iput-object p1, p0, Lcom/virgilsecurity/sdk/cards/model/RawSignedModel;->signatures:Ljava/util/List;

    .line 212
    return-void

    .line 207
    :cond_0
    new-instance v0, Lcom/virgilsecurity/sdk/client/exceptions/SignatureNotUniqueException;

    const-string v1, "RawSignedModel -> \'signatures\' should have unique signatures"

    invoke-direct {v0, v1}, Lcom/virgilsecurity/sdk/client/exceptions/SignatureNotUniqueException;-><init>(Ljava/lang/String;)V

    throw v0

    .line 200
    :cond_1
    sget-object v0, Lcom/virgilsecurity/sdk/cards/model/RawSignedModel;->LOGGER:Ljava/util/logging/Logger;

    new-instance v1, Ljava/lang/StringBuilder;

    invoke-direct {v1}, Ljava/lang/StringBuilder;-><init>()V

    const-string v2, "RawSignedModel can hold up to 8 signatures only. While \'signatures\' size is "

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v1

    .line 201
    invoke-interface {p1}, Ljava/util/List;->size()I

    move-result v2

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v1

    invoke-virtual {v1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v1

    .line 200
    invoke-virtual {v0, v1}, Ljava/util/logging/Logger;->warning(Ljava/lang/String;)V

    .line 202
    new-instance v0, Ljava/lang/IllegalArgumentException;

    const-string v1, "RawSignedModel -> \'signatures\' can hold up to 8 signatures only"

    invoke-direct {v0, v1}, Ljava/lang/IllegalArgumentException;-><init>(Ljava/lang/String;)V

    throw v0
.end method
