.class public Lcom/virgilsecurity/sdk/crypto/VirgilCrypto;
.super Ljava/lang/Object;
.source "VirgilCrypto.java"


# annotations
.annotation system Ldalvik/annotation/MemberClasses;
    value = {
        Lcom/virgilsecurity/sdk/crypto/VirgilCrypto$VerifyingMode;,
        Lcom/virgilsecurity/sdk/crypto/VirgilCrypto$SigningMode;,
        Lcom/virgilsecurity/sdk/crypto/VirgilCrypto$VerifyingOptions;,
        Lcom/virgilsecurity/sdk/crypto/VirgilCrypto$SigningOptions;,
        Lcom/virgilsecurity/sdk/crypto/VirgilCrypto$IOStream;,
        Lcom/virgilsecurity/sdk/crypto/VirgilCrypto$IOData;,
        Lcom/virgilsecurity/sdk/crypto/VirgilCrypto$InputOutput;
    }
.end annotation


# static fields
.field private static final CHUNK_SIZE:I = 0x400

.field public static final CUSTOM_PARAM_SIGNATURE:[B

.field public static final CUSTOM_PARAM_SIGNER_ID:[B

.field private static final EOF:I = -0x1

.field private static final KEY_DOESNT_SUPPORT_SIGNING:Ljava/lang/String; = "This key doesn\'t support signing"

.field private static final KEY_DOESNT_SUPPORT_VERIFICATION:Ljava/lang/String; = "This key doesn\'t support verification"

.field public static final PADDING_LENGTH:I = 0xa0

.field private static final UTF8_CHARSET:Ljava/nio/charset/Charset;


# instance fields
.field private defaultKeyPairType:Lcom/virgilsecurity/sdk/crypto/KeyPairType;

.field private rng:Lcom/virgilsecurity/crypto/foundation/Random;

.field private useSHA256Fingerprints:Z


# direct methods
.method static constructor <clinit>()V
    .locals 2

    .line 88
    sget-object v0, Ljava/nio/charset/StandardCharsets;->UTF_8:Ljava/nio/charset/Charset;

    sput-object v0, Lcom/virgilsecurity/sdk/crypto/VirgilCrypto;->UTF8_CHARSET:Ljava/nio/charset/Charset;

    .line 94
    const-string v1, "VIRGIL-DATA-SIGNATURE"

    invoke-virtual {v1, v0}, Ljava/lang/String;->getBytes(Ljava/nio/charset/Charset;)[B

    move-result-object v1

    sput-object v1, Lcom/virgilsecurity/sdk/crypto/VirgilCrypto;->CUSTOM_PARAM_SIGNATURE:[B

    .line 95
    const-string v1, "VIRGIL-DATA-SIGNER-ID"

    invoke-virtual {v1, v0}, Ljava/lang/String;->getBytes(Ljava/nio/charset/Charset;)[B

    move-result-object v0

    sput-object v0, Lcom/virgilsecurity/sdk/crypto/VirgilCrypto;->CUSTOM_PARAM_SIGNER_ID:[B

    return-void
.end method

.method public constructor <init>()V
    .locals 1

    .line 200
    const/4 v0, 0x0

    invoke-direct {p0, v0}, Lcom/virgilsecurity/sdk/crypto/VirgilCrypto;-><init>(Z)V

    .line 201
    return-void
.end method

.method public constructor <init>(Lcom/virgilsecurity/crypto/foundation/Random;)V
    .locals 1
    .param p1, "rng"    # Lcom/virgilsecurity/crypto/foundation/Random;

    .line 237
    invoke-direct {p0}, Ljava/lang/Object;-><init>()V

    .line 238
    iput-object p1, p0, Lcom/virgilsecurity/sdk/crypto/VirgilCrypto;->rng:Lcom/virgilsecurity/crypto/foundation/Random;

    .line 239
    sget-object v0, Lcom/virgilsecurity/sdk/crypto/KeyPairType;->ED25519:Lcom/virgilsecurity/sdk/crypto/KeyPairType;

    iput-object v0, p0, Lcom/virgilsecurity/sdk/crypto/VirgilCrypto;->defaultKeyPairType:Lcom/virgilsecurity/sdk/crypto/KeyPairType;

    .line 240
    const/4 v0, 0x0

    iput-boolean v0, p0, Lcom/virgilsecurity/sdk/crypto/VirgilCrypto;->useSHA256Fingerprints:Z

    .line 241
    return-void
.end method

.method public constructor <init>(Lcom/virgilsecurity/crypto/foundation/Random;Lcom/virgilsecurity/sdk/crypto/KeyPairType;)V
    .locals 1
    .param p1, "rng"    # Lcom/virgilsecurity/crypto/foundation/Random;
    .param p2, "keysType"    # Lcom/virgilsecurity/sdk/crypto/KeyPairType;

    .line 263
    invoke-direct {p0}, Ljava/lang/Object;-><init>()V

    .line 264
    iput-object p1, p0, Lcom/virgilsecurity/sdk/crypto/VirgilCrypto;->rng:Lcom/virgilsecurity/crypto/foundation/Random;

    .line 265
    iput-object p2, p0, Lcom/virgilsecurity/sdk/crypto/VirgilCrypto;->defaultKeyPairType:Lcom/virgilsecurity/sdk/crypto/KeyPairType;

    .line 266
    const/4 v0, 0x0

    iput-boolean v0, p0, Lcom/virgilsecurity/sdk/crypto/VirgilCrypto;->useSHA256Fingerprints:Z

    .line 267
    return-void
.end method

.method public constructor <init>(Lcom/virgilsecurity/crypto/foundation/Random;Lcom/virgilsecurity/sdk/crypto/KeyPairType;Z)V
    .locals 0
    .param p1, "rng"    # Lcom/virgilsecurity/crypto/foundation/Random;
    .param p2, "keysType"    # Lcom/virgilsecurity/sdk/crypto/KeyPairType;
    .param p3, "useSHA256Fingerprints"    # Z

    .line 286
    invoke-direct {p0}, Ljava/lang/Object;-><init>()V

    .line 287
    iput-object p1, p0, Lcom/virgilsecurity/sdk/crypto/VirgilCrypto;->rng:Lcom/virgilsecurity/crypto/foundation/Random;

    .line 288
    iput-object p2, p0, Lcom/virgilsecurity/sdk/crypto/VirgilCrypto;->defaultKeyPairType:Lcom/virgilsecurity/sdk/crypto/KeyPairType;

    .line 289
    iput-boolean p3, p0, Lcom/virgilsecurity/sdk/crypto/VirgilCrypto;->useSHA256Fingerprints:Z

    .line 290
    return-void
.end method

.method public constructor <init>(Lcom/virgilsecurity/crypto/foundation/Random;Z)V
    .locals 1
    .param p1, "rng"    # Lcom/virgilsecurity/crypto/foundation/Random;
    .param p2, "useSHA256Fingerprints"    # Z

    .line 274
    invoke-direct {p0}, Ljava/lang/Object;-><init>()V

    .line 275
    iput-object p1, p0, Lcom/virgilsecurity/sdk/crypto/VirgilCrypto;->rng:Lcom/virgilsecurity/crypto/foundation/Random;

    .line 276
    sget-object v0, Lcom/virgilsecurity/sdk/crypto/KeyPairType;->ED25519:Lcom/virgilsecurity/sdk/crypto/KeyPairType;

    iput-object v0, p0, Lcom/virgilsecurity/sdk/crypto/VirgilCrypto;->defaultKeyPairType:Lcom/virgilsecurity/sdk/crypto/KeyPairType;

    .line 277
    iput-boolean p2, p0, Lcom/virgilsecurity/sdk/crypto/VirgilCrypto;->useSHA256Fingerprints:Z

    .line 278
    return-void
.end method

.method public constructor <init>(Lcom/virgilsecurity/sdk/crypto/KeyPairType;)V
    .locals 2
    .param p1, "keysType"    # Lcom/virgilsecurity/sdk/crypto/KeyPairType;

    .line 223
    invoke-direct {p0}, Ljava/lang/Object;-><init>()V

    .line 224
    new-instance v0, Lcom/virgilsecurity/crypto/foundation/CtrDrbg;

    invoke-direct {v0}, Lcom/virgilsecurity/crypto/foundation/CtrDrbg;-><init>()V

    .line 225
    .local v0, "rng":Lcom/virgilsecurity/crypto/foundation/CtrDrbg;
    invoke-virtual {v0}, Lcom/virgilsecurity/crypto/foundation/CtrDrbg;->setupDefaults()V

    .line 227
    iput-object v0, p0, Lcom/virgilsecurity/sdk/crypto/VirgilCrypto;->rng:Lcom/virgilsecurity/crypto/foundation/Random;

    .line 228
    iput-object p1, p0, Lcom/virgilsecurity/sdk/crypto/VirgilCrypto;->defaultKeyPairType:Lcom/virgilsecurity/sdk/crypto/KeyPairType;

    .line 229
    const/4 v1, 0x0

    iput-boolean v1, p0, Lcom/virgilsecurity/sdk/crypto/VirgilCrypto;->useSHA256Fingerprints:Z

    .line 230
    return-void
.end method

.method public constructor <init>(Lcom/virgilsecurity/sdk/crypto/KeyPairType;Z)V
    .locals 1
    .param p1, "keysType"    # Lcom/virgilsecurity/sdk/crypto/KeyPairType;
    .param p2, "useSHA256Fingerprints"    # Z

    .line 250
    invoke-direct {p0}, Ljava/lang/Object;-><init>()V

    .line 251
    new-instance v0, Lcom/virgilsecurity/crypto/foundation/CtrDrbg;

    invoke-direct {v0}, Lcom/virgilsecurity/crypto/foundation/CtrDrbg;-><init>()V

    .line 252
    .local v0, "rng":Lcom/virgilsecurity/crypto/foundation/CtrDrbg;
    invoke-virtual {v0}, Lcom/virgilsecurity/crypto/foundation/CtrDrbg;->setupDefaults()V

    .line 254
    iput-object v0, p0, Lcom/virgilsecurity/sdk/crypto/VirgilCrypto;->rng:Lcom/virgilsecurity/crypto/foundation/Random;

    .line 255
    iput-object p1, p0, Lcom/virgilsecurity/sdk/crypto/VirgilCrypto;->defaultKeyPairType:Lcom/virgilsecurity/sdk/crypto/KeyPairType;

    .line 256
    iput-boolean p2, p0, Lcom/virgilsecurity/sdk/crypto/VirgilCrypto;->useSHA256Fingerprints:Z

    .line 257
    return-void
.end method

.method public constructor <init>(Z)V
    .locals 2
    .param p1, "useSHA256Fingerprints"    # Z

    .line 209
    invoke-direct {p0}, Ljava/lang/Object;-><init>()V

    .line 210
    new-instance v0, Lcom/virgilsecurity/crypto/foundation/CtrDrbg;

    invoke-direct {v0}, Lcom/virgilsecurity/crypto/foundation/CtrDrbg;-><init>()V

    .line 211
    .local v0, "rng":Lcom/virgilsecurity/crypto/foundation/CtrDrbg;
    invoke-virtual {v0}, Lcom/virgilsecurity/crypto/foundation/CtrDrbg;->setupDefaults()V

    .line 213
    iput-object v0, p0, Lcom/virgilsecurity/sdk/crypto/VirgilCrypto;->rng:Lcom/virgilsecurity/crypto/foundation/Random;

    .line 214
    sget-object v1, Lcom/virgilsecurity/sdk/crypto/KeyPairType;->ED25519:Lcom/virgilsecurity/sdk/crypto/KeyPairType;

    iput-object v1, p0, Lcom/virgilsecurity/sdk/crypto/VirgilCrypto;->defaultKeyPairType:Lcom/virgilsecurity/sdk/crypto/KeyPairType;

    .line 215
    iput-boolean p1, p0, Lcom/virgilsecurity/sdk/crypto/VirgilCrypto;->useSHA256Fingerprints:Z

    .line 216
    return-void
.end method

.method private computePublicKeyIdentifier(Lcom/virgilsecurity/crypto/foundation/PublicKey;)[B
    .locals 7
    .param p1, "publicKey"    # Lcom/virgilsecurity/crypto/foundation/PublicKey;
    .annotation system Ldalvik/annotation/Throws;
        value = {
            Lcom/virgilsecurity/sdk/crypto/exceptions/CryptoException;
        }
    .end annotation

    .line 1912
    :try_start_0
    new-instance v0, Lcom/virgilsecurity/crypto/foundation/KeyAsn1Serializer;

    invoke-direct {v0}, Lcom/virgilsecurity/crypto/foundation/KeyAsn1Serializer;-><init>()V
    :try_end_0
    .catch Ljava/lang/Exception; {:try_start_0 .. :try_end_0} :catch_0

    .line 1913
    .local v0, "serializer":Lcom/virgilsecurity/crypto/foundation/KeyAsn1Serializer;
    :try_start_1
    invoke-virtual {v0}, Lcom/virgilsecurity/crypto/foundation/KeyAsn1Serializer;->setupDefaults()V

    .line 1915
    iget-object v1, p0, Lcom/virgilsecurity/sdk/crypto/VirgilCrypto;->rng:Lcom/virgilsecurity/crypto/foundation/Random;

    invoke-static {p1, v1}, Lcom/virgilsecurity/crypto/foundation/KeyAlgFactory;->createFromKey(Lcom/virgilsecurity/crypto/foundation/Key;Lcom/virgilsecurity/crypto/foundation/Random;)Lcom/virgilsecurity/crypto/foundation/KeyAlg;

    move-result-object v1
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_3

    .line 1916
    .local v1, "keyAlg":Lcom/virgilsecurity/crypto/foundation/KeyAlg;
    :try_start_2
    invoke-interface {v1, p1}, Lcom/virgilsecurity/crypto/foundation/KeyAlg;->exportPublicKey(Lcom/virgilsecurity/crypto/foundation/PublicKey;)Lcom/virgilsecurity/crypto/foundation/RawPublicKey;

    move-result-object v2
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_2

    .line 1917
    .local v2, "rawPublicKey":Lcom/virgilsecurity/crypto/foundation/RawPublicKey;
    :try_start_3
    invoke-virtual {v0, v2}, Lcom/virgilsecurity/crypto/foundation/KeyAsn1Serializer;->serializePublicKey(Lcom/virgilsecurity/crypto/foundation/RawPublicKey;)[B

    move-result-object v3

    .line 1919
    .local v3, "publicKeyDer":[B
    iget-boolean v4, p0, Lcom/virgilsecurity/sdk/crypto/VirgilCrypto;->useSHA256Fingerprints:Z

    if-eqz v4, :cond_0

    .line 1920
    sget-object v4, Lcom/virgilsecurity/sdk/crypto/HashAlgorithm;->SHA256:Lcom/virgilsecurity/sdk/crypto/HashAlgorithm;

    invoke-virtual {p0, v3, v4}, Lcom/virgilsecurity/sdk/crypto/VirgilCrypto;->computeHash([BLcom/virgilsecurity/sdk/crypto/HashAlgorithm;)[B

    move-result-object v4

    .local v4, "hash":[B
    goto :goto_0

    .line 1922
    .end local v4    # "hash":[B
    :cond_0
    sget-object v4, Lcom/virgilsecurity/sdk/crypto/HashAlgorithm;->SHA512:Lcom/virgilsecurity/sdk/crypto/HashAlgorithm;

    invoke-virtual {p0, v3, v4}, Lcom/virgilsecurity/sdk/crypto/VirgilCrypto;->computeHash([BLcom/virgilsecurity/sdk/crypto/HashAlgorithm;)[B

    move-result-object v4

    .line 1923
    .restart local v4    # "hash":[B
    const/4 v5, 0x0

    const/16 v6, 0x8

    invoke-static {v4, v5, v6}, Ljava/util/Arrays;->copyOfRange([BII)[B

    move-result-object v5
    :try_end_3
    .catchall {:try_start_3 .. :try_end_3} :catchall_0

    move-object v4, v5

    .line 1925
    :goto_0
    nop

    .line 1926
    if-eqz v2, :cond_1

    :try_start_4
    invoke-virtual {v2}, Lcom/virgilsecurity/crypto/foundation/RawPublicKey;->close()V
    :try_end_4
    .catchall {:try_start_4 .. :try_end_4} :catchall_2

    .line 1927
    :cond_1
    :try_start_5
    instance-of v5, v1, Ljava/lang/AutoCloseable;

    if-eqz v5, :cond_2

    .line 1928
    move-object v5, v1

    check-cast v5, Ljava/lang/AutoCloseable;

    invoke-interface {v5}, Ljava/lang/AutoCloseable;->close()V
    :try_end_5
    .catchall {:try_start_5 .. :try_end_5} :catchall_3

    .line 1931
    :cond_2
    :try_start_6
    invoke-virtual {v0}, Lcom/virgilsecurity/crypto/foundation/KeyAsn1Serializer;->close()V
    :try_end_6
    .catch Ljava/lang/Exception; {:try_start_6 .. :try_end_6} :catch_0

    .line 1925
    return-object v4

    .line 1916
    .end local v3    # "publicKeyDer":[B
    .end local v4    # "hash":[B
    :catchall_0
    move-exception v3

    if-eqz v2, :cond_3

    :try_start_7
    invoke-virtual {v2}, Lcom/virgilsecurity/crypto/foundation/RawPublicKey;->close()V
    :try_end_7
    .catchall {:try_start_7 .. :try_end_7} :catchall_1

    goto :goto_1

    :catchall_1
    move-exception v4

    :try_start_8
    invoke-virtual {v3, v4}, Ljava/lang/Throwable;->addSuppressed(Ljava/lang/Throwable;)V

    .end local v0    # "serializer":Lcom/virgilsecurity/crypto/foundation/KeyAsn1Serializer;
    .end local v1    # "keyAlg":Lcom/virgilsecurity/crypto/foundation/KeyAlg;
    .end local p1    # "publicKey":Lcom/virgilsecurity/crypto/foundation/PublicKey;
    :cond_3
    :goto_1
    throw v3
    :try_end_8
    .catchall {:try_start_8 .. :try_end_8} :catchall_2

    .line 1927
    .end local v2    # "rawPublicKey":Lcom/virgilsecurity/crypto/foundation/RawPublicKey;
    .restart local v0    # "serializer":Lcom/virgilsecurity/crypto/foundation/KeyAsn1Serializer;
    .restart local v1    # "keyAlg":Lcom/virgilsecurity/crypto/foundation/KeyAlg;
    .restart local p1    # "publicKey":Lcom/virgilsecurity/crypto/foundation/PublicKey;
    :catchall_2
    move-exception v2

    :try_start_9
    instance-of v3, v1, Ljava/lang/AutoCloseable;

    if-eqz v3, :cond_4

    .line 1928
    move-object v3, v1

    check-cast v3, Ljava/lang/AutoCloseable;

    invoke-interface {v3}, Ljava/lang/AutoCloseable;->close()V

    .line 1930
    :cond_4
    nop

    .end local v0    # "serializer":Lcom/virgilsecurity/crypto/foundation/KeyAsn1Serializer;
    .end local p1    # "publicKey":Lcom/virgilsecurity/crypto/foundation/PublicKey;
    throw v2
    :try_end_9
    .catchall {:try_start_9 .. :try_end_9} :catchall_3

    .line 1912
    .end local v1    # "keyAlg":Lcom/virgilsecurity/crypto/foundation/KeyAlg;
    .restart local v0    # "serializer":Lcom/virgilsecurity/crypto/foundation/KeyAsn1Serializer;
    .restart local p1    # "publicKey":Lcom/virgilsecurity/crypto/foundation/PublicKey;
    :catchall_3
    move-exception v1

    :try_start_a
    invoke-virtual {v0}, Lcom/virgilsecurity/crypto/foundation/KeyAsn1Serializer;->close()V
    :try_end_a
    .catchall {:try_start_a .. :try_end_a} :catchall_4

    goto :goto_2

    :catchall_4
    move-exception v2

    :try_start_b
    invoke-virtual {v1, v2}, Ljava/lang/Throwable;->addSuppressed(Ljava/lang/Throwable;)V

    .end local p1    # "publicKey":Lcom/virgilsecurity/crypto/foundation/PublicKey;
    :goto_2
    throw v1
    :try_end_b
    .catch Ljava/lang/Exception; {:try_start_b .. :try_end_b} :catch_0

    .line 1931
    .end local v0    # "serializer":Lcom/virgilsecurity/crypto/foundation/KeyAsn1Serializer;
    .restart local p1    # "publicKey":Lcom/virgilsecurity/crypto/foundation/PublicKey;
    :catch_0
    move-exception v0

    .line 1933
    .local v0, "e":Ljava/lang/Exception;
    new-instance v1, Lcom/virgilsecurity/sdk/crypto/exceptions/CryptoException;

    invoke-direct {v1, v0}, Lcom/virgilsecurity/sdk/crypto/exceptions/CryptoException;-><init>(Ljava/lang/Throwable;)V

    throw v1
.end method

.method private varargs concatenate([[B)[B
    .locals 8
    .param p1, "arrays"    # [[B

    .line 1955
    const/4 v0, 0x0

    .line 1956
    .local v0, "totalLength":I
    const/4 v1, 0x0

    .local v1, "i":I
    :goto_0
    array-length v2, p1

    if-ge v1, v2, :cond_0

    .line 1957
    aget-object v2, p1, v1

    array-length v2, v2

    add-int/2addr v0, v2

    .line 1956
    add-int/lit8 v1, v1, 0x1

    goto :goto_0

    .line 1960
    .end local v1    # "i":I
    :cond_0
    new-array v1, v0, [B

    .line 1962
    .local v1, "result":[B
    const/4 v2, 0x0

    .line 1963
    .local v2, "currentIndex":I
    array-length v3, p1

    const/4 v4, 0x0

    move v5, v4

    :goto_1
    if-ge v5, v3, :cond_1

    aget-object v6, p1, v5

    .line 1964
    .local v6, "array":[B
    array-length v7, v6

    invoke-static {v6, v4, v1, v2, v7}, Ljava/lang/System;->arraycopy(Ljava/lang/Object;ILjava/lang/Object;II)V

    .line 1965
    array-length v7, v6

    add-int/2addr v2, v7

    .line 1963
    .end local v6    # "array":[B
    add-int/lit8 v5, v5, 0x1

    goto :goto_1

    .line 1968
    :cond_1
    return-object v1
.end method

.method private encryptData([BLcom/virgilsecurity/crypto/foundation/RecipientCipher;)[B
    .locals 5
    .param p1, "data"    # [B
    .param p2, "cipher"    # Lcom/virgilsecurity/crypto/foundation/RecipientCipher;

    .line 1945
    invoke-virtual {p2}, Lcom/virgilsecurity/crypto/foundation/RecipientCipher;->startEncryption()V

    .line 1947
    invoke-virtual {p2}, Lcom/virgilsecurity/crypto/foundation/RecipientCipher;->packMessageInfo()[B

    move-result-object v0

    .line 1948
    .local v0, "messageInfo":[B
    invoke-virtual {p2, p1}, Lcom/virgilsecurity/crypto/foundation/RecipientCipher;->processEncryption([B)[B

    move-result-object v1

    .line 1949
    .local v1, "processEncryption":[B
    invoke-virtual {p2}, Lcom/virgilsecurity/crypto/foundation/RecipientCipher;->finishEncryption()[B

    move-result-object v2

    .line 1951
    .local v2, "finish":[B
    const/4 v3, 0x3

    new-array v3, v3, [[B

    const/4 v4, 0x0

    aput-object v0, v3, v4

    const/4 v4, 0x1

    aput-object v1, v3, v4

    const/4 v4, 0x2

    aput-object v2, v3, v4

    invoke-direct {p0, v3}, Lcom/virgilsecurity/sdk/crypto/VirgilCrypto;->concatenate([[B)[B

    move-result-object v3

    return-object v3
.end method

.method private finishDecryption(Lcom/virgilsecurity/crypto/foundation/RecipientCipher;Lcom/virgilsecurity/sdk/crypto/VirgilCrypto$InputOutput;)V
    .locals 1
    .param p1, "cipher"    # Lcom/virgilsecurity/crypto/foundation/RecipientCipher;
    .param p2, "inputOutput"    # Lcom/virgilsecurity/sdk/crypto/VirgilCrypto$InputOutput;
    .annotation system Ldalvik/annotation/Throws;
        value = {
            Lcom/virgilsecurity/sdk/crypto/exceptions/VerificationException;
        }
    .end annotation

    .line 1879
    const/4 v0, 0x0

    invoke-direct {p0, p1, p2, v0, v0}, Lcom/virgilsecurity/sdk/crypto/VirgilCrypto;->finishDecryption(Lcom/virgilsecurity/crypto/foundation/RecipientCipher;Lcom/virgilsecurity/sdk/crypto/VirgilCrypto$InputOutput;[BLcom/virgilsecurity/sdk/crypto/VirgilCrypto$VerifyingOptions;)V

    .line 1880
    return-void
.end method

.method private finishDecryption(Lcom/virgilsecurity/crypto/foundation/RecipientCipher;Lcom/virgilsecurity/sdk/crypto/VirgilCrypto$InputOutput;[B)V
    .locals 1
    .param p1, "cipher"    # Lcom/virgilsecurity/crypto/foundation/RecipientCipher;
    .param p2, "inputOutput"    # Lcom/virgilsecurity/sdk/crypto/VirgilCrypto$InputOutput;
    .param p3, "result"    # [B
    .annotation system Ldalvik/annotation/Throws;
        value = {
            Lcom/virgilsecurity/sdk/crypto/exceptions/VerificationException;
        }
    .end annotation

    .line 1885
    const/4 v0, 0x0

    invoke-direct {p0, p1, p2, p3, v0}, Lcom/virgilsecurity/sdk/crypto/VirgilCrypto;->finishDecryption(Lcom/virgilsecurity/crypto/foundation/RecipientCipher;Lcom/virgilsecurity/sdk/crypto/VirgilCrypto$InputOutput;[BLcom/virgilsecurity/sdk/crypto/VirgilCrypto$VerifyingOptions;)V

    .line 1886
    return-void
.end method

.method private finishDecryption(Lcom/virgilsecurity/crypto/foundation/RecipientCipher;Lcom/virgilsecurity/sdk/crypto/VirgilCrypto$InputOutput;[BLcom/virgilsecurity/sdk/crypto/VirgilCrypto$VerifyingOptions;)V
    .locals 3
    .param p1, "cipher"    # Lcom/virgilsecurity/crypto/foundation/RecipientCipher;
    .param p2, "inputOutput"    # Lcom/virgilsecurity/sdk/crypto/VirgilCrypto$InputOutput;
    .param p3, "result"    # [B
    .param p4, "verifyingOptions"    # Lcom/virgilsecurity/sdk/crypto/VirgilCrypto$VerifyingOptions;
    .annotation system Ldalvik/annotation/Throws;
        value = {
            Lcom/virgilsecurity/sdk/crypto/exceptions/VerificationException;
        }
    .end annotation

    .line 1890
    if-nez p4, :cond_0

    .line 1891
    return-void

    .line 1894
    :cond_0
    invoke-static {p4}, Lcom/virgilsecurity/sdk/crypto/VirgilCrypto$VerifyingOptions;->access$200(Lcom/virgilsecurity/sdk/crypto/VirgilCrypto$VerifyingOptions;)Lcom/virgilsecurity/sdk/crypto/VirgilCrypto$VerifyingMode;

    move-result-object v0

    .line 1896
    .local v0, "mode":Lcom/virgilsecurity/sdk/crypto/VirgilCrypto$VerifyingMode;
    sget-object v1, Lcom/virgilsecurity/sdk/crypto/VirgilCrypto$VerifyingMode;->ANY:Lcom/virgilsecurity/sdk/crypto/VirgilCrypto$VerifyingMode;

    if-ne v0, v1, :cond_2

    .line 1897
    invoke-virtual {p1}, Lcom/virgilsecurity/crypto/foundation/RecipientCipher;->isDataSigned()Z

    move-result v1

    if-eqz v1, :cond_1

    sget-object v1, Lcom/virgilsecurity/sdk/crypto/VirgilCrypto$VerifyingMode;->DECRYPT_THEN_VERIFY:Lcom/virgilsecurity/sdk/crypto/VirgilCrypto$VerifyingMode;

    goto :goto_0

    :cond_1
    sget-object v1, Lcom/virgilsecurity/sdk/crypto/VirgilCrypto$VerifyingMode;->DECRYPT_AND_VERIFY:Lcom/virgilsecurity/sdk/crypto/VirgilCrypto$VerifyingMode;

    :goto_0
    move-object v0, v1

    .line 1900
    :cond_2
    sget-object v1, Lcom/virgilsecurity/sdk/crypto/VirgilCrypto$1;->$SwitchMap$com$virgilsecurity$sdk$crypto$VirgilCrypto$VerifyingMode:[I

    invoke-virtual {v0}, Lcom/virgilsecurity/sdk/crypto/VirgilCrypto$VerifyingMode;->ordinal()I

    move-result v2

    aget v1, v1, v2

    packed-switch v1, :pswitch_data_0

    goto :goto_1

    .line 1906
    :pswitch_0
    invoke-static {p4}, Lcom/virgilsecurity/sdk/crypto/VirgilCrypto$VerifyingOptions;->access$300(Lcom/virgilsecurity/sdk/crypto/VirgilCrypto$VerifyingOptions;)Ljava/util/List;

    move-result-object v1

    invoke-direct {p0, p1, v1}, Lcom/virgilsecurity/sdk/crypto/VirgilCrypto;->verifyEncryptedSignature(Lcom/virgilsecurity/crypto/foundation/RecipientCipher;Ljava/util/List;)V

    goto :goto_1

    .line 1902
    :pswitch_1
    invoke-static {p4}, Lcom/virgilsecurity/sdk/crypto/VirgilCrypto$VerifyingOptions;->access$300(Lcom/virgilsecurity/sdk/crypto/VirgilCrypto$VerifyingOptions;)Ljava/util/List;

    move-result-object v1

    invoke-direct {p0, p1, p2, p3, v1}, Lcom/virgilsecurity/sdk/crypto/VirgilCrypto;->verifyPlainSignature(Lcom/virgilsecurity/crypto/foundation/RecipientCipher;Lcom/virgilsecurity/sdk/crypto/VirgilCrypto$InputOutput;[BLjava/util/List;)V

    .line 1903
    nop

    .line 1909
    :goto_1
    return-void

    :pswitch_data_0
    .packed-switch 0x1
        :pswitch_1
        :pswitch_0
    .end packed-switch
.end method

.method private generateKeyPair(Lcom/virgilsecurity/sdk/crypto/KeyPairType;Lcom/virgilsecurity/crypto/foundation/Random;)Lcom/virgilsecurity/sdk/crypto/VirgilKeyPair;
    .locals 7
    .param p1, "keyPairType"    # Lcom/virgilsecurity/sdk/crypto/KeyPairType;
    .param p2, "rng"    # Lcom/virgilsecurity/crypto/foundation/Random;
    .annotation system Ldalvik/annotation/Throws;
        value = {
            Lcom/virgilsecurity/sdk/crypto/exceptions/CryptoException;
        }
    .end annotation

    .line 350
    new-instance v0, Lcom/virgilsecurity/crypto/foundation/KeyProvider;

    invoke-direct {v0}, Lcom/virgilsecurity/crypto/foundation/KeyProvider;-><init>()V

    .line 352
    .local v0, "keyProvider":Lcom/virgilsecurity/crypto/foundation/KeyProvider;
    :try_start_0
    invoke-virtual {p1}, Lcom/virgilsecurity/sdk/crypto/KeyPairType;->getRsaBitLen()I

    move-result v1

    const/4 v2, -0x1

    if-eq v1, v2, :cond_0

    .line 353
    invoke-virtual {p1}, Lcom/virgilsecurity/sdk/crypto/KeyPairType;->getRsaBitLen()I

    move-result v1

    .line 354
    .local v1, "rsaLength":I
    invoke-virtual {v0, v1}, Lcom/virgilsecurity/crypto/foundation/KeyProvider;->setRsaParams(I)V

    .line 357
    .end local v1    # "rsaLength":I
    :cond_0
    invoke-virtual {v0, p2}, Lcom/virgilsecurity/crypto/foundation/KeyProvider;->setRandom(Lcom/virgilsecurity/crypto/foundation/Random;)V

    .line 358
    invoke-virtual {v0}, Lcom/virgilsecurity/crypto/foundation/KeyProvider;->setupDefaults()V

    .line 362
    invoke-virtual {p1}, Lcom/virgilsecurity/sdk/crypto/KeyPairType;->isCompound()Z

    move-result v1

    if-eqz v1, :cond_1

    .line 363
    invoke-virtual {p1}, Lcom/virgilsecurity/sdk/crypto/KeyPairType;->getCipherKeysAlgIds()Lcom/virgilsecurity/common/model/Pair;

    move-result-object v1

    .line 364
    .local v1, "cipherKeysAlgIds":Lcom/virgilsecurity/common/model/Pair;, "Lcom/virgilsecurity/common/model/Pair<Lcom/virgilsecurity/crypto/foundation/AlgId;Lcom/virgilsecurity/crypto/foundation/AlgId;>;"
    invoke-virtual {p1}, Lcom/virgilsecurity/sdk/crypto/KeyPairType;->getSignerKeysAlgIds()Lcom/virgilsecurity/common/model/Pair;

    move-result-object v2

    .line 365
    .local v2, "signerKeysAlgIds":Lcom/virgilsecurity/common/model/Pair;, "Lcom/virgilsecurity/common/model/Pair<Lcom/virgilsecurity/crypto/foundation/AlgId;Lcom/virgilsecurity/crypto/foundation/AlgId;>;"
    invoke-virtual {v1}, Lcom/virgilsecurity/common/model/Pair;->getFirst()Ljava/lang/Object;

    move-result-object v3

    check-cast v3, Lcom/virgilsecurity/crypto/foundation/AlgId;

    .line 366
    invoke-virtual {v1}, Lcom/virgilsecurity/common/model/Pair;->getSecond()Ljava/lang/Object;

    move-result-object v4

    check-cast v4, Lcom/virgilsecurity/crypto/foundation/AlgId;

    invoke-virtual {v2}, Lcom/virgilsecurity/common/model/Pair;->getFirst()Ljava/lang/Object;

    move-result-object v5

    check-cast v5, Lcom/virgilsecurity/crypto/foundation/AlgId;

    invoke-virtual {v2}, Lcom/virgilsecurity/common/model/Pair;->getSecond()Ljava/lang/Object;

    move-result-object v6

    check-cast v6, Lcom/virgilsecurity/crypto/foundation/AlgId;

    .line 365
    invoke-virtual {v0, v3, v4, v5, v6}, Lcom/virgilsecurity/crypto/foundation/KeyProvider;->generateCompoundHybridPrivateKey(Lcom/virgilsecurity/crypto/foundation/AlgId;Lcom/virgilsecurity/crypto/foundation/AlgId;Lcom/virgilsecurity/crypto/foundation/AlgId;Lcom/virgilsecurity/crypto/foundation/AlgId;)Lcom/virgilsecurity/crypto/foundation/PrivateKey;

    move-result-object v3

    move-object v1, v3

    .line 367
    .end local v2    # "signerKeysAlgIds":Lcom/virgilsecurity/common/model/Pair;, "Lcom/virgilsecurity/common/model/Pair<Lcom/virgilsecurity/crypto/foundation/AlgId;Lcom/virgilsecurity/crypto/foundation/AlgId;>;"
    .local v1, "privateKey":Lcom/virgilsecurity/crypto/foundation/PrivateKey;
    goto :goto_0

    .line 368
    .end local v1    # "privateKey":Lcom/virgilsecurity/crypto/foundation/PrivateKey;
    :cond_1
    invoke-virtual {p1}, Lcom/virgilsecurity/sdk/crypto/KeyPairType;->getAlgId()Lcom/virgilsecurity/crypto/foundation/AlgId;

    move-result-object v1

    invoke-virtual {v0, v1}, Lcom/virgilsecurity/crypto/foundation/KeyProvider;->generatePrivateKey(Lcom/virgilsecurity/crypto/foundation/AlgId;)Lcom/virgilsecurity/crypto/foundation/PrivateKey;

    move-result-object v1

    .line 371
    .restart local v1    # "privateKey":Lcom/virgilsecurity/crypto/foundation/PrivateKey;
    :goto_0
    invoke-interface {v1}, Lcom/virgilsecurity/crypto/foundation/PrivateKey;->extractPublicKey()Lcom/virgilsecurity/crypto/foundation/PublicKey;

    move-result-object v2

    .line 372
    .local v2, "publicKey":Lcom/virgilsecurity/crypto/foundation/PublicKey;
    invoke-direct {p0, v2}, Lcom/virgilsecurity/sdk/crypto/VirgilCrypto;->computePublicKeyIdentifier(Lcom/virgilsecurity/crypto/foundation/PublicKey;)[B

    move-result-object v3

    .line 374
    .local v3, "keyId":[B
    new-instance v4, Lcom/virgilsecurity/sdk/crypto/VirgilPublicKey;

    invoke-direct {v4, v3, v2, p1}, Lcom/virgilsecurity/sdk/crypto/VirgilPublicKey;-><init>([BLcom/virgilsecurity/crypto/foundation/PublicKey;Lcom/virgilsecurity/sdk/crypto/KeyPairType;)V

    .line 375
    .local v4, "virgilPublicKey":Lcom/virgilsecurity/sdk/crypto/VirgilPublicKey;
    new-instance v5, Lcom/virgilsecurity/sdk/crypto/VirgilPrivateKey;

    invoke-direct {v5, v3, v1, p1}, Lcom/virgilsecurity/sdk/crypto/VirgilPrivateKey;-><init>([BLcom/virgilsecurity/crypto/foundation/PrivateKey;Lcom/virgilsecurity/sdk/crypto/KeyPairType;)V

    .line 377
    .local v5, "virgilPrivateKey":Lcom/virgilsecurity/sdk/crypto/VirgilPrivateKey;
    new-instance v6, Lcom/virgilsecurity/sdk/crypto/VirgilKeyPair;

    invoke-direct {v6, v4, v5}, Lcom/virgilsecurity/sdk/crypto/VirgilKeyPair;-><init>(Lcom/virgilsecurity/sdk/crypto/VirgilPublicKey;Lcom/virgilsecurity/sdk/crypto/VirgilPrivateKey;)V
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    .line 378
    invoke-virtual {v0}, Lcom/virgilsecurity/crypto/foundation/KeyProvider;->close()V

    .line 377
    return-object v6

    .line 350
    .end local v1    # "privateKey":Lcom/virgilsecurity/crypto/foundation/PrivateKey;
    .end local v2    # "publicKey":Lcom/virgilsecurity/crypto/foundation/PublicKey;
    .end local v3    # "keyId":[B
    .end local v4    # "virgilPublicKey":Lcom/virgilsecurity/sdk/crypto/VirgilPublicKey;
    .end local v5    # "virgilPrivateKey":Lcom/virgilsecurity/sdk/crypto/VirgilPrivateKey;
    :catchall_0
    move-exception v1

    :try_start_1
    invoke-virtual {v0}, Lcom/virgilsecurity/crypto/foundation/KeyProvider;->close()V
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_1

    goto :goto_1

    :catchall_1
    move-exception v2

    invoke-virtual {v1, v2}, Ljava/lang/Throwable;->addSuppressed(Ljava/lang/Throwable;)V

    :goto_1
    throw v1
.end method

.method private processDecryption(Lcom/virgilsecurity/crypto/foundation/RecipientCipher;Lcom/virgilsecurity/sdk/crypto/VirgilCrypto$InputOutput;)[B
    .locals 7
    .param p1, "cipher"    # Lcom/virgilsecurity/crypto/foundation/RecipientCipher;
    .param p2, "inputOutput"    # Lcom/virgilsecurity/sdk/crypto/VirgilCrypto$InputOutput;
    .annotation system Ldalvik/annotation/Throws;
        value = {
            Ljava/io/IOException;
        }
    .end annotation

    .line 1763
    instance-of v0, p2, Lcom/virgilsecurity/sdk/crypto/VirgilCrypto$IOData;

    if-eqz v0, :cond_0

    .line 1764
    move-object v0, p2

    check-cast v0, Lcom/virgilsecurity/sdk/crypto/VirgilCrypto$IOData;

    invoke-virtual {v0}, Lcom/virgilsecurity/sdk/crypto/VirgilCrypto$IOData;->getInput()[B

    move-result-object v0

    invoke-virtual {p1, v0}, Lcom/virgilsecurity/crypto/foundation/RecipientCipher;->processDecryption([B)[B

    move-result-object v0

    .line 1765
    .local v0, "processDecryption":[B
    invoke-virtual {p1}, Lcom/virgilsecurity/crypto/foundation/RecipientCipher;->finishDecryption()[B

    move-result-object v1

    .line 1767
    .local v1, "finishDecryption":[B
    const/4 v2, 0x2

    new-array v2, v2, [[B

    const/4 v3, 0x0

    aput-object v0, v2, v3

    const/4 v3, 0x1

    aput-object v1, v2, v3

    invoke-direct {p0, v2}, Lcom/virgilsecurity/sdk/crypto/VirgilCrypto;->concatenate([[B)[B

    move-result-object v2

    return-object v2

    .line 1768
    .end local v0    # "processDecryption":[B
    .end local v1    # "finishDecryption":[B
    :cond_0
    instance-of v0, p2, Lcom/virgilsecurity/sdk/crypto/VirgilCrypto$IOStream;

    if-eqz v0, :cond_3

    .line 1769
    move-object v0, p2

    check-cast v0, Lcom/virgilsecurity/sdk/crypto/VirgilCrypto$IOStream;

    invoke-virtual {v0}, Lcom/virgilsecurity/sdk/crypto/VirgilCrypto$IOStream;->getInputStream()Ljava/io/InputStream;

    move-result-object v0

    .line 1770
    .local v0, "inputStream":Ljava/io/InputStream;
    move-object v1, p2

    check-cast v1, Lcom/virgilsecurity/sdk/crypto/VirgilCrypto$IOStream;

    invoke-virtual {v1}, Lcom/virgilsecurity/sdk/crypto/VirgilCrypto$IOStream;->getOutputStream()Ljava/io/OutputStream;

    move-result-object v1

    .line 1772
    .local v1, "outputStream":Ljava/io/OutputStream;
    const/16 v2, 0x400

    new-array v3, v2, [B

    .line 1774
    .local v3, "buffer":[B
    :goto_0
    const/4 v4, -0x1

    invoke-virtual {v0, v3}, Ljava/io/InputStream;->read([B)I

    move-result v5

    move v6, v5

    .local v6, "dataRead":I
    if-eq v4, v5, :cond_2

    .line 1777
    if-ne v6, v2, :cond_1

    .line 1778
    move-object v4, v3

    .local v4, "data":[B
    goto :goto_1

    .line 1780
    .end local v4    # "data":[B
    :cond_1
    invoke-static {v3, v6}, Ljava/util/Arrays;->copyOf([BI)[B

    move-result-object v4

    .line 1783
    .restart local v4    # "data":[B
    :goto_1
    invoke-virtual {p1, v4}, Lcom/virgilsecurity/crypto/foundation/RecipientCipher;->processDecryption([B)[B

    move-result-object v5

    .line 1784
    .local v5, "decryptedChunk":[B
    invoke-virtual {v1, v5}, Ljava/io/OutputStream;->write([B)V

    .line 1785
    .end local v4    # "data":[B
    .end local v5    # "decryptedChunk":[B
    goto :goto_0

    .line 1787
    :cond_2
    invoke-virtual {p1}, Lcom/virgilsecurity/crypto/foundation/RecipientCipher;->finishDecryption()[B

    move-result-object v2

    .line 1788
    .local v2, "finish":[B
    invoke-virtual {v1, v2}, Ljava/io/OutputStream;->write([B)V

    .line 1790
    const/4 v4, 0x0

    return-object v4

    .line 1792
    .end local v0    # "inputStream":Ljava/io/InputStream;
    .end local v1    # "outputStream":Ljava/io/OutputStream;
    .end local v2    # "finish":[B
    .end local v3    # "buffer":[B
    .end local v6    # "dataRead":I
    :cond_3
    new-instance v0, Ljava/lang/IllegalStateException;

    const-string v1, "Only IOData and IOStream are supported."

    invoke-direct {v0, v1}, Ljava/lang/IllegalStateException;-><init>(Ljava/lang/String;)V

    throw v0
.end method

.method private processEncryption(Lcom/virgilsecurity/crypto/foundation/RecipientCipher;Lcom/virgilsecurity/sdk/crypto/VirgilCrypto$InputOutput;)[B
    .locals 1
    .param p1, "cipher"    # Lcom/virgilsecurity/crypto/foundation/RecipientCipher;
    .param p2, "inputOutput"    # Lcom/virgilsecurity/sdk/crypto/VirgilCrypto$InputOutput;
    .annotation system Ldalvik/annotation/Throws;
        value = {
            Ljava/io/IOException;,
            Lcom/virgilsecurity/sdk/crypto/exceptions/EncryptionException;
        }
    .end annotation

    .line 1696
    const/4 v0, 0x0

    invoke-direct {p0, p1, p2, v0}, Lcom/virgilsecurity/sdk/crypto/VirgilCrypto;->processEncryption(Lcom/virgilsecurity/crypto/foundation/RecipientCipher;Lcom/virgilsecurity/sdk/crypto/VirgilCrypto$InputOutput;Lcom/virgilsecurity/sdk/crypto/VirgilCrypto$SigningOptions;)[B

    move-result-object v0

    return-object v0
.end method

.method private processEncryption(Lcom/virgilsecurity/crypto/foundation/RecipientCipher;Lcom/virgilsecurity/sdk/crypto/VirgilCrypto$InputOutput;Lcom/virgilsecurity/sdk/crypto/VirgilCrypto$SigningOptions;)[B
    .locals 10
    .param p1, "cipher"    # Lcom/virgilsecurity/crypto/foundation/RecipientCipher;
    .param p2, "inputOutput"    # Lcom/virgilsecurity/sdk/crypto/VirgilCrypto$InputOutput;
    .param p3, "signingOptions"    # Lcom/virgilsecurity/sdk/crypto/VirgilCrypto$SigningOptions;
    .annotation system Ldalvik/annotation/Throws;
        value = {
            Ljava/io/IOException;,
            Lcom/virgilsecurity/sdk/crypto/exceptions/EncryptionException;
        }
    .end annotation

    .line 1702
    instance-of v0, p2, Lcom/virgilsecurity/sdk/crypto/VirgilCrypto$IOData;

    const/4 v1, 0x0

    if-eqz v0, :cond_1

    .line 1703
    invoke-virtual {p1}, Lcom/virgilsecurity/crypto/foundation/RecipientCipher;->packMessageInfo()[B

    move-result-object v0

    .line 1704
    .local v0, "messageInfo":[B
    move-object v2, p2

    check-cast v2, Lcom/virgilsecurity/sdk/crypto/VirgilCrypto$IOData;

    invoke-virtual {v2}, Lcom/virgilsecurity/sdk/crypto/VirgilCrypto$IOData;->getInput()[B

    move-result-object v2

    invoke-virtual {p1, v2}, Lcom/virgilsecurity/crypto/foundation/RecipientCipher;->processEncryption([B)[B

    move-result-object v2

    .line 1705
    .local v2, "processEncryption":[B
    invoke-virtual {p1}, Lcom/virgilsecurity/crypto/foundation/RecipientCipher;->finishEncryption()[B

    move-result-object v3

    .line 1707
    .local v3, "finishEncryption":[B
    const/4 v4, 0x3

    new-array v4, v4, [[B

    aput-object v0, v4, v1

    const/4 v5, 0x1

    aput-object v2, v4, v5

    const/4 v6, 0x2

    aput-object v3, v4, v6

    invoke-direct {p0, v4}, Lcom/virgilsecurity/sdk/crypto/VirgilCrypto;->concatenate([[B)[B

    move-result-object v4

    .line 1709
    .local v4, "result":[B
    if-eqz p3, :cond_0

    invoke-static {p3}, Lcom/virgilsecurity/sdk/crypto/VirgilCrypto$SigningOptions;->access$000(Lcom/virgilsecurity/sdk/crypto/VirgilCrypto$SigningOptions;)Lcom/virgilsecurity/sdk/crypto/VirgilCrypto$SigningMode;

    move-result-object v7

    sget-object v8, Lcom/virgilsecurity/sdk/crypto/VirgilCrypto$SigningMode;->SIGN_THEN_ENCRYPT:Lcom/virgilsecurity/sdk/crypto/VirgilCrypto$SigningMode;

    if-ne v7, v8, :cond_0

    .line 1710
    invoke-virtual {p1}, Lcom/virgilsecurity/crypto/foundation/RecipientCipher;->packMessageInfoFooter()[B

    move-result-object v7

    .line 1711
    .local v7, "messageInfoFooter":[B
    new-array v6, v6, [[B

    aput-object v4, v6, v1

    aput-object v7, v6, v5

    invoke-direct {p0, v6}, Lcom/virgilsecurity/sdk/crypto/VirgilCrypto;->concatenate([[B)[B

    move-result-object v4

    .line 1714
    .end local v7    # "messageInfoFooter":[B
    :cond_0
    return-object v4

    .line 1715
    .end local v0    # "messageInfo":[B
    .end local v2    # "processEncryption":[B
    .end local v3    # "finishEncryption":[B
    .end local v4    # "result":[B
    :cond_1
    instance-of v0, p2, Lcom/virgilsecurity/sdk/crypto/VirgilCrypto$IOStream;

    if-eqz v0, :cond_8

    .line 1716
    move-object v0, p2

    check-cast v0, Lcom/virgilsecurity/sdk/crypto/VirgilCrypto$IOStream;

    invoke-virtual {v0}, Lcom/virgilsecurity/sdk/crypto/VirgilCrypto$IOStream;->getInputStream()Ljava/io/InputStream;

    move-result-object v0

    .line 1717
    .local v0, "inputStream":Ljava/io/InputStream;
    move-object v2, p2

    check-cast v2, Lcom/virgilsecurity/sdk/crypto/VirgilCrypto$IOStream;

    invoke-virtual {v2}, Lcom/virgilsecurity/sdk/crypto/VirgilCrypto$IOStream;->getStreamSize()I

    move-result v2

    const/4 v3, -0x1

    if-eq v2, v3, :cond_2

    .line 1718
    move-object v1, p2

    check-cast v1, Lcom/virgilsecurity/sdk/crypto/VirgilCrypto$IOStream;

    invoke-virtual {v1}, Lcom/virgilsecurity/sdk/crypto/VirgilCrypto$IOStream;->getStreamSize()I

    move-result v1

    goto :goto_0

    .line 1719
    :cond_2
    nop

    :goto_0
    nop

    .line 1720
    .local v1, "streamSize":I
    move-object v2, p2

    check-cast v2, Lcom/virgilsecurity/sdk/crypto/VirgilCrypto$IOStream;

    invoke-virtual {v2}, Lcom/virgilsecurity/sdk/crypto/VirgilCrypto$IOStream;->getOutputStream()Ljava/io/OutputStream;

    move-result-object v2

    .line 1722
    .local v2, "outputStream":Ljava/io/OutputStream;
    invoke-virtual {p1}, Lcom/virgilsecurity/crypto/foundation/RecipientCipher;->packMessageInfo()[B

    move-result-object v4

    .line 1723
    .local v4, "messageInfo":[B
    invoke-virtual {v2, v4}, Ljava/io/OutputStream;->write([B)V

    .line 1725
    const/16 v5, 0x400

    new-array v6, v5, [B

    .line 1727
    .local v6, "buffer":[B
    :goto_1
    invoke-virtual {v0, v6}, Ljava/io/InputStream;->read([B)I

    move-result v7

    move v8, v7

    .local v8, "dataRead":I
    if-eq v3, v7, :cond_5

    .line 1730
    if-ne v8, v5, :cond_3

    .line 1731
    move-object v7, v6

    .local v7, "data":[B
    goto :goto_2

    .line 1733
    .end local v7    # "data":[B
    :cond_3
    invoke-static {v6, v8}, Ljava/util/Arrays;->copyOf([BI)[B

    move-result-object v7

    .line 1736
    .restart local v7    # "data":[B
    :goto_2
    move-object v9, p2

    check-cast v9, Lcom/virgilsecurity/sdk/crypto/VirgilCrypto$IOStream;

    invoke-virtual {v9}, Lcom/virgilsecurity/sdk/crypto/VirgilCrypto$IOStream;->getStreamSize()I

    move-result v9

    if-eq v9, v3, :cond_4

    .line 1737
    sub-int/2addr v1, v8

    .line 1740
    :cond_4
    invoke-virtual {p1, v7}, Lcom/virgilsecurity/crypto/foundation/RecipientCipher;->processEncryption([B)[B

    move-result-object v9

    .line 1741
    .local v9, "encryptedData":[B
    invoke-virtual {v2, v9}, Ljava/io/OutputStream;->write([B)V

    .line 1742
    .end local v7    # "data":[B
    .end local v9    # "encryptedData":[B
    goto :goto_1

    .line 1744
    :cond_5
    if-nez v1, :cond_7

    .line 1748
    invoke-virtual {p1}, Lcom/virgilsecurity/crypto/foundation/RecipientCipher;->finishEncryption()[B

    move-result-object v3

    .line 1749
    .local v3, "finish":[B
    invoke-virtual {v2, v3}, Ljava/io/OutputStream;->write([B)V

    .line 1751
    if-eqz p3, :cond_6

    invoke-static {p3}, Lcom/virgilsecurity/sdk/crypto/VirgilCrypto$SigningOptions;->access$000(Lcom/virgilsecurity/sdk/crypto/VirgilCrypto$SigningOptions;)Lcom/virgilsecurity/sdk/crypto/VirgilCrypto$SigningMode;

    move-result-object v5

    sget-object v7, Lcom/virgilsecurity/sdk/crypto/VirgilCrypto$SigningMode;->SIGN_THEN_ENCRYPT:Lcom/virgilsecurity/sdk/crypto/VirgilCrypto$SigningMode;

    if-ne v5, v7, :cond_6

    .line 1752
    invoke-virtual {p1}, Lcom/virgilsecurity/crypto/foundation/RecipientCipher;->packMessageInfoFooter()[B

    move-result-object v5

    .line 1753
    .local v5, "messageInfoFooter":[B
    invoke-virtual {v2, v5}, Ljava/io/OutputStream;->write([B)V

    .line 1756
    .end local v5    # "messageInfoFooter":[B
    :cond_6
    const/4 v5, 0x0

    return-object v5

    .line 1745
    .end local v3    # "finish":[B
    :cond_7
    new-instance v3, Lcom/virgilsecurity/sdk/crypto/exceptions/EncryptionException;

    const-string v5, "Invalid stream size"

    invoke-direct {v3, v5}, Lcom/virgilsecurity/sdk/crypto/exceptions/EncryptionException;-><init>(Ljava/lang/String;)V

    throw v3

    .line 1758
    .end local v0    # "inputStream":Ljava/io/InputStream;
    .end local v1    # "streamSize":I
    .end local v2    # "outputStream":Ljava/io/OutputStream;
    .end local v4    # "messageInfo":[B
    .end local v6    # "buffer":[B
    .end local v8    # "dataRead":I
    :cond_8
    new-instance v0, Ljava/lang/IllegalStateException;

    const-string v1, "Only IOData and IOStream are supported."

    invoke-direct {v0, v1}, Ljava/lang/IllegalStateException;-><init>(Ljava/lang/String;)V

    throw v0
.end method

.method private startEncryption(Lcom/virgilsecurity/crypto/foundation/RecipientCipher;Lcom/virgilsecurity/sdk/crypto/VirgilCrypto$InputOutput;)V
    .locals 1
    .param p1, "cipher"    # Lcom/virgilsecurity/crypto/foundation/RecipientCipher;
    .param p2, "inputOutput"    # Lcom/virgilsecurity/sdk/crypto/VirgilCrypto$InputOutput;
    .annotation system Ldalvik/annotation/Throws;
        value = {
            Lcom/virgilsecurity/sdk/crypto/exceptions/SigningException;
        }
    .end annotation

    .line 1646
    const/4 v0, 0x0

    invoke-direct {p0, p1, p2, v0}, Lcom/virgilsecurity/sdk/crypto/VirgilCrypto;->startEncryption(Lcom/virgilsecurity/crypto/foundation/RecipientCipher;Lcom/virgilsecurity/sdk/crypto/VirgilCrypto$InputOutput;Lcom/virgilsecurity/sdk/crypto/VirgilCrypto$SigningOptions;)V

    .line 1647
    return-void
.end method

.method private startEncryption(Lcom/virgilsecurity/crypto/foundation/RecipientCipher;Lcom/virgilsecurity/sdk/crypto/VirgilCrypto$InputOutput;Lcom/virgilsecurity/sdk/crypto/VirgilCrypto$SigningOptions;)V
    .locals 4
    .param p1, "cipher"    # Lcom/virgilsecurity/crypto/foundation/RecipientCipher;
    .param p2, "inputOutput"    # Lcom/virgilsecurity/sdk/crypto/VirgilCrypto$InputOutput;
    .param p3, "signingOptions"    # Lcom/virgilsecurity/sdk/crypto/VirgilCrypto$SigningOptions;
    .annotation system Ldalvik/annotation/Throws;
        value = {
            Lcom/virgilsecurity/sdk/crypto/exceptions/SigningException;
        }
    .end annotation

    .line 1651
    if-eqz p3, :cond_5

    .line 1652
    sget-object v0, Lcom/virgilsecurity/sdk/crypto/VirgilCrypto$1;->$SwitchMap$com$virgilsecurity$sdk$crypto$VirgilCrypto$SigningMode:[I

    invoke-static {p3}, Lcom/virgilsecurity/sdk/crypto/VirgilCrypto$SigningOptions;->access$000(Lcom/virgilsecurity/sdk/crypto/VirgilCrypto$SigningOptions;)Lcom/virgilsecurity/sdk/crypto/VirgilCrypto$SigningMode;

    move-result-object v1

    invoke-virtual {v1}, Lcom/virgilsecurity/sdk/crypto/VirgilCrypto$SigningMode;->ordinal()I

    move-result v1

    aget v0, v0, v1

    const-string v1, "Only IOData and IOStream are supported."

    packed-switch v0, :pswitch_data_0

    goto/16 :goto_1

    .line 1667
    :pswitch_0
    new-instance v0, Lcom/virgilsecurity/crypto/foundation/Sha512;

    invoke-direct {v0}, Lcom/virgilsecurity/crypto/foundation/Sha512;-><init>()V

    invoke-virtual {p1, v0}, Lcom/virgilsecurity/crypto/foundation/RecipientCipher;->setSignerHash(Lcom/virgilsecurity/crypto/foundation/Hash;)V

    .line 1668
    invoke-virtual {p3}, Lcom/virgilsecurity/sdk/crypto/VirgilCrypto$SigningOptions;->getPrivateKey()Lcom/virgilsecurity/sdk/crypto/VirgilPrivateKey;

    move-result-object v0

    invoke-virtual {v0}, Lcom/virgilsecurity/sdk/crypto/VirgilPrivateKey;->getIdentifier()[B

    move-result-object v0

    .line 1669
    invoke-virtual {p3}, Lcom/virgilsecurity/sdk/crypto/VirgilCrypto$SigningOptions;->getPrivateKey()Lcom/virgilsecurity/sdk/crypto/VirgilPrivateKey;

    move-result-object v2

    invoke-virtual {v2}, Lcom/virgilsecurity/sdk/crypto/VirgilPrivateKey;->getPrivateKey()Lcom/virgilsecurity/crypto/foundation/PrivateKey;

    move-result-object v2

    .line 1668
    invoke-virtual {p1, v0, v2}, Lcom/virgilsecurity/crypto/foundation/RecipientCipher;->addSigner([BLcom/virgilsecurity/crypto/foundation/PrivateKey;)V

    .line 1673
    instance-of v0, p2, Lcom/virgilsecurity/sdk/crypto/VirgilCrypto$IOData;

    if-eqz v0, :cond_0

    .line 1674
    move-object v0, p2

    check-cast v0, Lcom/virgilsecurity/sdk/crypto/VirgilCrypto$IOData;

    invoke-virtual {v0}, Lcom/virgilsecurity/sdk/crypto/VirgilCrypto$IOData;->getInput()[B

    move-result-object v0

    array-length v0, v0

    .local v0, "size":I
    goto :goto_0

    .line 1675
    .end local v0    # "size":I
    :cond_0
    instance-of v0, p2, Lcom/virgilsecurity/sdk/crypto/VirgilCrypto$IOStream;

    if-eqz v0, :cond_2

    .line 1676
    move-object v0, p2

    check-cast v0, Lcom/virgilsecurity/sdk/crypto/VirgilCrypto$IOStream;

    invoke-virtual {v0}, Lcom/virgilsecurity/sdk/crypto/VirgilCrypto$IOStream;->getStreamSize()I

    move-result v0

    const/4 v1, -0x1

    if-eq v0, v1, :cond_1

    .line 1679
    move-object v0, p2

    check-cast v0, Lcom/virgilsecurity/sdk/crypto/VirgilCrypto$IOStream;

    invoke-virtual {v0}, Lcom/virgilsecurity/sdk/crypto/VirgilCrypto$IOStream;->getStreamSize()I

    move-result v0

    .line 1685
    .restart local v0    # "size":I
    :goto_0
    invoke-virtual {p1, v0}, Lcom/virgilsecurity/crypto/foundation/RecipientCipher;->startSignedEncryption(I)V

    goto :goto_1

    .line 1677
    .end local v0    # "size":I
    :cond_1
    new-instance v0, Ljava/lang/IllegalStateException;

    const-string v1, "signThenEncrypt for streams with unknown size is not supported."

    invoke-direct {v0, v1}, Ljava/lang/IllegalStateException;-><init>(Ljava/lang/String;)V

    throw v0

    .line 1682
    :cond_2
    new-instance v0, Ljava/lang/IllegalStateException;

    invoke-direct {v0, v1}, Ljava/lang/IllegalStateException;-><init>(Ljava/lang/String;)V

    throw v0

    .line 1654
    :pswitch_1
    instance-of v0, p2, Lcom/virgilsecurity/sdk/crypto/VirgilCrypto$IOData;

    if-eqz v0, :cond_3

    .line 1655
    move-object v0, p2

    check-cast v0, Lcom/virgilsecurity/sdk/crypto/VirgilCrypto$IOData;

    invoke-virtual {v0}, Lcom/virgilsecurity/sdk/crypto/VirgilCrypto$IOData;->getInput()[B

    move-result-object v0

    invoke-virtual {p3}, Lcom/virgilsecurity/sdk/crypto/VirgilCrypto$SigningOptions;->getPrivateKey()Lcom/virgilsecurity/sdk/crypto/VirgilPrivateKey;

    move-result-object v1

    invoke-virtual {p0, v0, v1}, Lcom/virgilsecurity/sdk/crypto/VirgilCrypto;->generateSignature([BLcom/virgilsecurity/sdk/crypto/VirgilPrivateKey;)[B

    move-result-object v0

    .line 1656
    .local v0, "signature":[B
    invoke-virtual {p1}, Lcom/virgilsecurity/crypto/foundation/RecipientCipher;->customParams()Lcom/virgilsecurity/crypto/foundation/MessageInfoCustomParams;

    move-result-object v1

    sget-object v2, Lcom/virgilsecurity/sdk/crypto/VirgilCrypto;->CUSTOM_PARAM_SIGNATURE:[B

    invoke-virtual {v1, v2, v0}, Lcom/virgilsecurity/crypto/foundation/MessageInfoCustomParams;->addData([B[B)V

    .line 1657
    invoke-virtual {p1}, Lcom/virgilsecurity/crypto/foundation/RecipientCipher;->customParams()Lcom/virgilsecurity/crypto/foundation/MessageInfoCustomParams;

    move-result-object v1

    sget-object v2, Lcom/virgilsecurity/sdk/crypto/VirgilCrypto;->CUSTOM_PARAM_SIGNER_ID:[B

    .line 1658
    invoke-static {p3}, Lcom/virgilsecurity/sdk/crypto/VirgilCrypto$SigningOptions;->access$100(Lcom/virgilsecurity/sdk/crypto/VirgilCrypto$SigningOptions;)Lcom/virgilsecurity/sdk/crypto/VirgilPrivateKey;

    move-result-object v3

    invoke-virtual {v3}, Lcom/virgilsecurity/sdk/crypto/VirgilPrivateKey;->getIdentifier()[B

    move-result-object v3

    .line 1657
    invoke-virtual {v1, v2, v3}, Lcom/virgilsecurity/crypto/foundation/MessageInfoCustomParams;->addData([B[B)V

    .line 1659
    .end local v0    # "signature":[B
    nop

    .line 1664
    invoke-virtual {p1}, Lcom/virgilsecurity/crypto/foundation/RecipientCipher;->startEncryption()V

    .line 1665
    goto :goto_1

    .line 1659
    :cond_3
    instance-of v0, p2, Lcom/virgilsecurity/sdk/crypto/VirgilCrypto$IOStream;

    if-eqz v0, :cond_4

    .line 1660
    new-instance v0, Ljava/lang/IllegalStateException;

    const-string v1, "signAndEncrypt is not supported for streams."

    invoke-direct {v0, v1}, Ljava/lang/IllegalStateException;-><init>(Ljava/lang/String;)V

    throw v0

    .line 1662
    :cond_4
    new-instance v0, Ljava/lang/IllegalStateException;

    invoke-direct {v0, v1}, Ljava/lang/IllegalStateException;-><init>(Ljava/lang/String;)V

    throw v0

    .line 1686
    :goto_1
    goto :goto_2

    .line 1689
    :cond_5
    invoke-virtual {p1}, Lcom/virgilsecurity/crypto/foundation/RecipientCipher;->startEncryption()V

    .line 1691
    :goto_2
    return-void

    nop

    :pswitch_data_0
    .packed-switch 0x1
        :pswitch_1
        :pswitch_0
    .end packed-switch
.end method

.method private verifyEncryptedSignature(Lcom/virgilsecurity/crypto/foundation/RecipientCipher;Ljava/util/List;)V
    .locals 7
    .param p1, "cipher"    # Lcom/virgilsecurity/crypto/foundation/RecipientCipher;
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "(",
            "Lcom/virgilsecurity/crypto/foundation/RecipientCipher;",
            "Ljava/util/List<",
            "Lcom/virgilsecurity/sdk/crypto/VirgilPublicKey;",
            ">;)V"
        }
    .end annotation

    .annotation system Ldalvik/annotation/Throws;
        value = {
            Lcom/virgilsecurity/sdk/crypto/exceptions/VerificationException;
        }
    .end annotation

    .line 1850
    .local p2, "publicKeys":Ljava/util/List;, "Ljava/util/List<Lcom/virgilsecurity/sdk/crypto/VirgilPublicKey;>;"
    invoke-virtual {p1}, Lcom/virgilsecurity/crypto/foundation/RecipientCipher;->isDataSigned()Z

    move-result v0

    const-string v1, "Data is not signed."

    if-eqz v0, :cond_6

    .line 1854
    invoke-virtual {p1}, Lcom/virgilsecurity/crypto/foundation/RecipientCipher;->signerInfos()Lcom/virgilsecurity/crypto/foundation/SignerInfoList;

    move-result-object v0

    .line 1856
    .local v0, "signerInfoList":Lcom/virgilsecurity/crypto/foundation/SignerInfoList;
    invoke-virtual {v0}, Lcom/virgilsecurity/crypto/foundation/SignerInfoList;->hasItem()Z

    move-result v2

    if-nez v2, :cond_1

    invoke-virtual {v0}, Lcom/virgilsecurity/crypto/foundation/SignerInfoList;->hasNext()Z

    move-result v2

    if-nez v2, :cond_0

    goto :goto_0

    .line 1857
    :cond_0
    new-instance v2, Lcom/virgilsecurity/sdk/crypto/exceptions/VerificationException;

    invoke-direct {v2, v1}, Lcom/virgilsecurity/sdk/crypto/exceptions/VerificationException;-><init>(Ljava/lang/String;)V

    throw v2

    .line 1860
    :cond_1
    :goto_0
    invoke-virtual {v0}, Lcom/virgilsecurity/crypto/foundation/SignerInfoList;->item()Lcom/virgilsecurity/crypto/foundation/SignerInfo;

    move-result-object v1

    .line 1862
    .local v1, "signerInfo":Lcom/virgilsecurity/crypto/foundation/SignerInfo;
    const/4 v2, 0x0

    .line 1863
    .local v2, "signerPublicKey":Lcom/virgilsecurity/sdk/crypto/VirgilPublicKey;
    invoke-interface {p2}, Ljava/util/List;->iterator()Ljava/util/Iterator;

    move-result-object v3

    :goto_1
    invoke-interface {v3}, Ljava/util/Iterator;->hasNext()Z

    move-result v4

    if-eqz v4, :cond_3

    invoke-interface {v3}, Ljava/util/Iterator;->next()Ljava/lang/Object;

    move-result-object v4

    check-cast v4, Lcom/virgilsecurity/sdk/crypto/VirgilPublicKey;

    .line 1864
    .local v4, "publicKeyIterator":Lcom/virgilsecurity/sdk/crypto/VirgilPublicKey;
    invoke-virtual {v4}, Lcom/virgilsecurity/sdk/crypto/VirgilPublicKey;->getIdentifier()[B

    move-result-object v5

    invoke-virtual {v1}, Lcom/virgilsecurity/crypto/foundation/SignerInfo;->signerId()[B

    move-result-object v6

    invoke-static {v5, v6}, Ljava/util/Arrays;->equals([B[B)Z

    move-result v5

    if-eqz v5, :cond_2

    .line 1865
    move-object v2, v4

    .line 1867
    .end local v4    # "publicKeyIterator":Lcom/virgilsecurity/sdk/crypto/VirgilPublicKey;
    :cond_2
    goto :goto_1

    .line 1869
    :cond_3
    if-eqz v2, :cond_5

    .line 1873
    invoke-virtual {v2}, Lcom/virgilsecurity/sdk/crypto/VirgilPublicKey;->getPublicKey()Lcom/virgilsecurity/crypto/foundation/PublicKey;

    move-result-object v3

    invoke-virtual {p1, v1, v3}, Lcom/virgilsecurity/crypto/foundation/RecipientCipher;->verifySignerInfo(Lcom/virgilsecurity/crypto/foundation/SignerInfo;Lcom/virgilsecurity/crypto/foundation/PublicKey;)Z

    move-result v3

    if-eqz v3, :cond_4

    .line 1876
    return-void

    .line 1874
    :cond_4
    new-instance v3, Lcom/virgilsecurity/sdk/crypto/exceptions/VerificationException;

    const-string v4, "Signature has not been verified."

    invoke-direct {v3, v4}, Lcom/virgilsecurity/sdk/crypto/exceptions/VerificationException;-><init>(Ljava/lang/String;)V

    throw v3

    .line 1870
    :cond_5
    new-instance v3, Lcom/virgilsecurity/sdk/crypto/exceptions/VerificationException;

    const-string v4, "Signer has not been found."

    invoke-direct {v3, v4}, Lcom/virgilsecurity/sdk/crypto/exceptions/VerificationException;-><init>(Ljava/lang/String;)V

    throw v3

    .line 1851
    .end local v0    # "signerInfoList":Lcom/virgilsecurity/crypto/foundation/SignerInfoList;
    .end local v1    # "signerInfo":Lcom/virgilsecurity/crypto/foundation/SignerInfo;
    .end local v2    # "signerPublicKey":Lcom/virgilsecurity/sdk/crypto/VirgilPublicKey;
    :cond_6
    new-instance v0, Lcom/virgilsecurity/sdk/crypto/exceptions/VerificationException;

    invoke-direct {v0, v1}, Lcom/virgilsecurity/sdk/crypto/exceptions/VerificationException;-><init>(Ljava/lang/String;)V

    throw v0
.end method

.method private verifyPlainSignature(Lcom/virgilsecurity/crypto/foundation/RecipientCipher;Lcom/virgilsecurity/sdk/crypto/VirgilCrypto$InputOutput;Ljava/util/List;)V
    .locals 1
    .param p1, "cipher"    # Lcom/virgilsecurity/crypto/foundation/RecipientCipher;
    .param p2, "inputOutput"    # Lcom/virgilsecurity/sdk/crypto/VirgilCrypto$InputOutput;
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "(",
            "Lcom/virgilsecurity/crypto/foundation/RecipientCipher;",
            "Lcom/virgilsecurity/sdk/crypto/VirgilCrypto$InputOutput;",
            "Ljava/util/List<",
            "Lcom/virgilsecurity/sdk/crypto/VirgilPublicKey;",
            ">;)V"
        }
    .end annotation

    .annotation system Ldalvik/annotation/Throws;
        value = {
            Lcom/virgilsecurity/sdk/crypto/exceptions/VerificationException;
        }
    .end annotation

    .line 1798
    .local p3, "publicKeys":Ljava/util/List;, "Ljava/util/List<Lcom/virgilsecurity/sdk/crypto/VirgilPublicKey;>;"
    const/4 v0, 0x0

    invoke-direct {p0, p1, p2, v0, p3}, Lcom/virgilsecurity/sdk/crypto/VirgilCrypto;->verifyPlainSignature(Lcom/virgilsecurity/crypto/foundation/RecipientCipher;Lcom/virgilsecurity/sdk/crypto/VirgilCrypto$InputOutput;[BLjava/util/List;)V

    .line 1799
    return-void
.end method

.method private verifyPlainSignature(Lcom/virgilsecurity/crypto/foundation/RecipientCipher;Lcom/virgilsecurity/sdk/crypto/VirgilCrypto$InputOutput;[BLjava/util/List;)V
    .locals 6
    .param p1, "cipher"    # Lcom/virgilsecurity/crypto/foundation/RecipientCipher;
    .param p2, "inputOutput"    # Lcom/virgilsecurity/sdk/crypto/VirgilCrypto$InputOutput;
    .param p3, "result"    # [B
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "(",
            "Lcom/virgilsecurity/crypto/foundation/RecipientCipher;",
            "Lcom/virgilsecurity/sdk/crypto/VirgilCrypto$InputOutput;",
            "[B",
            "Ljava/util/List<",
            "Lcom/virgilsecurity/sdk/crypto/VirgilPublicKey;",
            ">;)V"
        }
    .end annotation

    .annotation system Ldalvik/annotation/Throws;
        value = {
            Lcom/virgilsecurity/sdk/crypto/exceptions/VerificationException;
        }
    .end annotation

    .line 1803
    .local p4, "publicKeys":Ljava/util/List;, "Ljava/util/List<Lcom/virgilsecurity/sdk/crypto/VirgilPublicKey;>;"
    const-string v0, "Signer has not been found."

    instance-of v1, p2, Lcom/virgilsecurity/sdk/crypto/VirgilCrypto$IOStream;

    if-nez v1, :cond_5

    .line 1809
    invoke-interface {p4}, Ljava/util/List;->size()I

    move-result v1

    const/4 v2, 0x1

    if-ne v1, v2, :cond_0

    .line 1810
    const/4 v0, 0x0

    invoke-interface {p4, v0}, Ljava/util/List;->get(I)Ljava/lang/Object;

    move-result-object v0

    check-cast v0, Lcom/virgilsecurity/sdk/crypto/VirgilPublicKey;

    .local v0, "signerPublicKey":Lcom/virgilsecurity/sdk/crypto/VirgilPublicKey;
    goto :goto_2

    .line 1815
    .end local v0    # "signerPublicKey":Lcom/virgilsecurity/sdk/crypto/VirgilPublicKey;
    :cond_0
    :try_start_0
    invoke-virtual {p1}, Lcom/virgilsecurity/crypto/foundation/RecipientCipher;->customParams()Lcom/virgilsecurity/crypto/foundation/MessageInfoCustomParams;

    move-result-object v1

    sget-object v2, Lcom/virgilsecurity/sdk/crypto/VirgilCrypto;->CUSTOM_PARAM_SIGNER_ID:[B

    invoke-virtual {v1, v2}, Lcom/virgilsecurity/crypto/foundation/MessageInfoCustomParams;->findData([B)[B

    move-result-object v1
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_1

    .line 1818
    .local v1, "signerId":[B
    nop

    .line 1820
    const/4 v2, 0x0

    .line 1821
    .local v2, "publicKey":Lcom/virgilsecurity/sdk/crypto/VirgilPublicKey;
    invoke-interface {p4}, Ljava/util/List;->iterator()Ljava/util/Iterator;

    move-result-object v3

    :goto_0
    invoke-interface {v3}, Ljava/util/Iterator;->hasNext()Z

    move-result v4

    if-eqz v4, :cond_2

    invoke-interface {v3}, Ljava/util/Iterator;->next()Ljava/lang/Object;

    move-result-object v4

    check-cast v4, Lcom/virgilsecurity/sdk/crypto/VirgilPublicKey;

    .line 1822
    .local v4, "publicKeyIterator":Lcom/virgilsecurity/sdk/crypto/VirgilPublicKey;
    invoke-virtual {v4}, Lcom/virgilsecurity/sdk/crypto/VirgilPublicKey;->getIdentifier()[B

    move-result-object v5

    invoke-static {v5, v1}, Ljava/util/Arrays;->equals([B[B)Z

    move-result v5

    if-eqz v5, :cond_1

    .line 1823
    move-object v2, v4

    .line 1824
    goto :goto_1

    .line 1826
    .end local v4    # "publicKeyIterator":Lcom/virgilsecurity/sdk/crypto/VirgilPublicKey;
    :cond_1
    goto :goto_0

    .line 1828
    :cond_2
    :goto_1
    if-eqz v2, :cond_4

    .line 1832
    move-object v0, v2

    .line 1838
    .end local v1    # "signerId":[B
    .end local v2    # "publicKey":Lcom/virgilsecurity/sdk/crypto/VirgilPublicKey;
    .restart local v0    # "signerPublicKey":Lcom/virgilsecurity/sdk/crypto/VirgilPublicKey;
    :goto_2
    :try_start_1
    invoke-virtual {p1}, Lcom/virgilsecurity/crypto/foundation/RecipientCipher;->customParams()Lcom/virgilsecurity/crypto/foundation/MessageInfoCustomParams;

    move-result-object v1

    sget-object v2, Lcom/virgilsecurity/sdk/crypto/VirgilCrypto;->CUSTOM_PARAM_SIGNATURE:[B

    invoke-virtual {v1, v2}, Lcom/virgilsecurity/crypto/foundation/MessageInfoCustomParams;->findData([B)[B

    move-result-object v1
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    .line 1841
    .local v1, "signature":[B
    nop

    .line 1843
    invoke-virtual {p0, v1, p3, v0}, Lcom/virgilsecurity/sdk/crypto/VirgilCrypto;->verifySignature([B[BLcom/virgilsecurity/sdk/crypto/VirgilPublicKey;)Z

    move-result v2

    if-eqz v2, :cond_3

    .line 1846
    return-void

    .line 1844
    :cond_3
    new-instance v2, Lcom/virgilsecurity/sdk/crypto/exceptions/VerificationException;

    const-string v3, "Signature has not been verified."

    invoke-direct {v2, v3}, Lcom/virgilsecurity/sdk/crypto/exceptions/VerificationException;-><init>(Ljava/lang/String;)V

    throw v2

    .line 1839
    .end local v1    # "signature":[B
    :catchall_0
    move-exception v1

    .line 1840
    .local v1, "throwable":Ljava/lang/Throwable;
    new-instance v2, Lcom/virgilsecurity/sdk/crypto/exceptions/VerificationException;

    const-string v3, "Signature has not been found."

    invoke-direct {v2, v3}, Lcom/virgilsecurity/sdk/crypto/exceptions/VerificationException;-><init>(Ljava/lang/String;)V

    throw v2

    .line 1829
    .end local v0    # "signerPublicKey":Lcom/virgilsecurity/sdk/crypto/VirgilPublicKey;
    .local v1, "signerId":[B
    .restart local v2    # "publicKey":Lcom/virgilsecurity/sdk/crypto/VirgilPublicKey;
    :cond_4
    new-instance v3, Lcom/virgilsecurity/sdk/crypto/exceptions/VerificationException;

    invoke-direct {v3, v0}, Lcom/virgilsecurity/sdk/crypto/exceptions/VerificationException;-><init>(Ljava/lang/String;)V

    throw v3

    .line 1816
    .end local v1    # "signerId":[B
    .end local v2    # "publicKey":Lcom/virgilsecurity/sdk/crypto/VirgilPublicKey;
    :catchall_1
    move-exception v1

    .line 1817
    .local v1, "throwable":Ljava/lang/Throwable;
    new-instance v2, Lcom/virgilsecurity/sdk/crypto/exceptions/VerificationException;

    invoke-direct {v2, v0}, Lcom/virgilsecurity/sdk/crypto/exceptions/VerificationException;-><init>(Ljava/lang/String;)V

    throw v2

    .line 1804
    .end local v1    # "throwable":Ljava/lang/Throwable;
    :cond_5
    new-instance v0, Ljava/lang/IllegalStateException;

    const-string v1, "signAndEncrypt is not supported for streams."

    invoke-direct {v0, v1}, Ljava/lang/IllegalStateException;-><init>(Ljava/lang/String;)V

    throw v0
.end method


# virtual methods
.method public authDecrypt(Ljava/io/InputStream;Ljava/io/OutputStream;Lcom/virgilsecurity/sdk/crypto/VirgilPrivateKey;Lcom/virgilsecurity/sdk/crypto/VirgilPublicKey;)V
    .locals 1
    .param p1, "inputStream"    # Ljava/io/InputStream;
    .param p2, "outputStream"    # Ljava/io/OutputStream;
    .param p3, "privateKey"    # Lcom/virgilsecurity/sdk/crypto/VirgilPrivateKey;
    .param p4, "signersPublicKey"    # Lcom/virgilsecurity/sdk/crypto/VirgilPublicKey;
    .annotation system Ldalvik/annotation/Throws;
        value = {
            Lcom/virgilsecurity/sdk/crypto/exceptions/VerificationException;,
            Lcom/virgilsecurity/sdk/crypto/exceptions/DecryptionException;
        }
    .end annotation

    .line 1143
    invoke-static {p4}, Ljava/util/Collections;->singletonList(Ljava/lang/Object;)Ljava/util/List;

    move-result-object v0

    invoke-virtual {p0, p1, p2, p3, v0}, Lcom/virgilsecurity/sdk/crypto/VirgilCrypto;->authDecrypt(Ljava/io/InputStream;Ljava/io/OutputStream;Lcom/virgilsecurity/sdk/crypto/VirgilPrivateKey;Ljava/util/List;)V

    .line 1144
    return-void
.end method

.method public authDecrypt(Ljava/io/InputStream;Ljava/io/OutputStream;Lcom/virgilsecurity/sdk/crypto/VirgilPrivateKey;Ljava/util/List;)V
    .locals 3
    .param p1, "inputStream"    # Ljava/io/InputStream;
    .param p2, "outputStream"    # Ljava/io/OutputStream;
    .param p3, "privateKey"    # Lcom/virgilsecurity/sdk/crypto/VirgilPrivateKey;
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "(",
            "Ljava/io/InputStream;",
            "Ljava/io/OutputStream;",
            "Lcom/virgilsecurity/sdk/crypto/VirgilPrivateKey;",
            "Ljava/util/List<",
            "Lcom/virgilsecurity/sdk/crypto/VirgilPublicKey;",
            ">;)V"
        }
    .end annotation

    .annotation system Ldalvik/annotation/Throws;
        value = {
            Lcom/virgilsecurity/sdk/crypto/exceptions/VerificationException;,
            Lcom/virgilsecurity/sdk/crypto/exceptions/DecryptionException;
        }
    .end annotation

    .line 1172
    .local p4, "signersPublicKeys":Ljava/util/List;, "Ljava/util/List<Lcom/virgilsecurity/sdk/crypto/VirgilPublicKey;>;"
    new-instance v0, Lcom/virgilsecurity/sdk/crypto/VirgilCrypto$IOStream;

    invoke-direct {v0, p1, p2}, Lcom/virgilsecurity/sdk/crypto/VirgilCrypto$IOStream;-><init>(Ljava/io/InputStream;Ljava/io/OutputStream;)V

    new-instance v1, Lcom/virgilsecurity/sdk/crypto/VirgilCrypto$VerifyingOptions;

    sget-object v2, Lcom/virgilsecurity/sdk/crypto/VirgilCrypto$VerifyingMode;->DECRYPT_THEN_VERIFY:Lcom/virgilsecurity/sdk/crypto/VirgilCrypto$VerifyingMode;

    invoke-direct {v1, p4, v2}, Lcom/virgilsecurity/sdk/crypto/VirgilCrypto$VerifyingOptions;-><init>(Ljava/util/List;Lcom/virgilsecurity/sdk/crypto/VirgilCrypto$VerifyingMode;)V

    invoke-virtual {p0, v0, v1, p3}, Lcom/virgilsecurity/sdk/crypto/VirgilCrypto;->decrypt(Lcom/virgilsecurity/sdk/crypto/VirgilCrypto$InputOutput;Lcom/virgilsecurity/sdk/crypto/VirgilCrypto$VerifyingOptions;Lcom/virgilsecurity/sdk/crypto/VirgilPrivateKey;)[B

    .line 1174
    return-void
.end method

.method public authDecrypt([BLcom/virgilsecurity/sdk/crypto/VirgilPrivateKey;Lcom/virgilsecurity/sdk/crypto/VirgilPublicKey;)[B
    .locals 1
    .param p1, "data"    # [B
    .param p2, "privateKey"    # Lcom/virgilsecurity/sdk/crypto/VirgilPrivateKey;
    .param p3, "signersPublicKey"    # Lcom/virgilsecurity/sdk/crypto/VirgilPublicKey;
    .annotation system Ldalvik/annotation/Throws;
        value = {
            Lcom/virgilsecurity/sdk/crypto/exceptions/VerificationException;,
            Lcom/virgilsecurity/sdk/crypto/exceptions/DecryptionException;
        }
    .end annotation

    .line 905
    invoke-static {p3}, Ljava/util/Collections;->singletonList(Ljava/lang/Object;)Ljava/util/List;

    move-result-object v0

    invoke-virtual {p0, p1, p2, v0}, Lcom/virgilsecurity/sdk/crypto/VirgilCrypto;->authDecrypt([BLcom/virgilsecurity/sdk/crypto/VirgilPrivateKey;Ljava/util/List;)[B

    move-result-object v0

    return-object v0
.end method

.method public authDecrypt([BLcom/virgilsecurity/sdk/crypto/VirgilPrivateKey;Lcom/virgilsecurity/sdk/crypto/VirgilPublicKey;Z)[B
    .locals 1
    .param p1, "data"    # [B
    .param p2, "privateKey"    # Lcom/virgilsecurity/sdk/crypto/VirgilPrivateKey;
    .param p3, "signersPublicKey"    # Lcom/virgilsecurity/sdk/crypto/VirgilPublicKey;
    .param p4, "allowNotEncryptedSignature"    # Z
    .annotation system Ldalvik/annotation/Throws;
        value = {
            Lcom/virgilsecurity/sdk/crypto/exceptions/VerificationException;,
            Lcom/virgilsecurity/sdk/crypto/exceptions/DecryptionException;
        }
    .end annotation

    .line 959
    invoke-static {p3}, Ljava/util/Collections;->singletonList(Ljava/lang/Object;)Ljava/util/List;

    move-result-object v0

    invoke-virtual {p0, p1, p2, v0, p4}, Lcom/virgilsecurity/sdk/crypto/VirgilCrypto;->authDecrypt([BLcom/virgilsecurity/sdk/crypto/VirgilPrivateKey;Ljava/util/List;Z)[B

    move-result-object v0

    return-object v0
.end method

.method public authDecrypt([BLcom/virgilsecurity/sdk/crypto/VirgilPrivateKey;Ljava/util/List;)[B
    .locals 1
    .param p1, "data"    # [B
    .param p2, "privateKey"    # Lcom/virgilsecurity/sdk/crypto/VirgilPrivateKey;
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "([B",
            "Lcom/virgilsecurity/sdk/crypto/VirgilPrivateKey;",
            "Ljava/util/List<",
            "Lcom/virgilsecurity/sdk/crypto/VirgilPublicKey;",
            ">;)[B"
        }
    .end annotation

    .annotation system Ldalvik/annotation/Throws;
        value = {
            Lcom/virgilsecurity/sdk/crypto/exceptions/VerificationException;,
            Lcom/virgilsecurity/sdk/crypto/exceptions/DecryptionException;
        }
    .end annotation

    .line 931
    .local p3, "signersPublicKeys":Ljava/util/List;, "Ljava/util/List<Lcom/virgilsecurity/sdk/crypto/VirgilPublicKey;>;"
    const/4 v0, 0x0

    invoke-virtual {p0, p1, p2, p3, v0}, Lcom/virgilsecurity/sdk/crypto/VirgilCrypto;->authDecrypt([BLcom/virgilsecurity/sdk/crypto/VirgilPrivateKey;Ljava/util/List;Z)[B

    move-result-object v0

    return-object v0
.end method

.method public authDecrypt([BLcom/virgilsecurity/sdk/crypto/VirgilPrivateKey;Ljava/util/List;Z)[B
    .locals 3
    .param p1, "data"    # [B
    .param p2, "privateKey"    # Lcom/virgilsecurity/sdk/crypto/VirgilPrivateKey;
    .param p4, "allowNotEncryptedSignature"    # Z
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "([B",
            "Lcom/virgilsecurity/sdk/crypto/VirgilPrivateKey;",
            "Ljava/util/List<",
            "Lcom/virgilsecurity/sdk/crypto/VirgilPublicKey;",
            ">;Z)[B"
        }
    .end annotation

    .annotation system Ldalvik/annotation/Throws;
        value = {
            Lcom/virgilsecurity/sdk/crypto/exceptions/VerificationException;,
            Lcom/virgilsecurity/sdk/crypto/exceptions/DecryptionException;
        }
    .end annotation

    .line 987
    .local p3, "signersPublicKeys":Ljava/util/List;, "Ljava/util/List<Lcom/virgilsecurity/sdk/crypto/VirgilPublicKey;>;"
    if-eqz p4, :cond_0

    sget-object v0, Lcom/virgilsecurity/sdk/crypto/VirgilCrypto$VerifyingMode;->ANY:Lcom/virgilsecurity/sdk/crypto/VirgilCrypto$VerifyingMode;

    goto :goto_0

    :cond_0
    sget-object v0, Lcom/virgilsecurity/sdk/crypto/VirgilCrypto$VerifyingMode;->DECRYPT_THEN_VERIFY:Lcom/virgilsecurity/sdk/crypto/VirgilCrypto$VerifyingMode;

    .line 988
    .local v0, "verifyingMode":Lcom/virgilsecurity/sdk/crypto/VirgilCrypto$VerifyingMode;
    :goto_0
    new-instance v1, Lcom/virgilsecurity/sdk/crypto/VirgilCrypto$IOData;

    invoke-direct {v1, p1}, Lcom/virgilsecurity/sdk/crypto/VirgilCrypto$IOData;-><init>([B)V

    new-instance v2, Lcom/virgilsecurity/sdk/crypto/VirgilCrypto$VerifyingOptions;

    invoke-direct {v2, p3, v0}, Lcom/virgilsecurity/sdk/crypto/VirgilCrypto$VerifyingOptions;-><init>(Ljava/util/List;Lcom/virgilsecurity/sdk/crypto/VirgilCrypto$VerifyingMode;)V

    invoke-virtual {p0, v1, v2, p2}, Lcom/virgilsecurity/sdk/crypto/VirgilCrypto;->decrypt(Lcom/virgilsecurity/sdk/crypto/VirgilCrypto$InputOutput;Lcom/virgilsecurity/sdk/crypto/VirgilCrypto$VerifyingOptions;Lcom/virgilsecurity/sdk/crypto/VirgilPrivateKey;)[B

    move-result-object v1

    return-object v1
.end method

.method public authEncrypt(Ljava/io/InputStream;ILjava/io/OutputStream;Lcom/virgilsecurity/sdk/crypto/VirgilPrivateKey;Lcom/virgilsecurity/sdk/crypto/VirgilPublicKey;)V
    .locals 7
    .param p1, "inputStream"    # Ljava/io/InputStream;
    .param p2, "streamSize"    # I
    .param p3, "outputStream"    # Ljava/io/OutputStream;
    .param p4, "privateKey"    # Lcom/virgilsecurity/sdk/crypto/VirgilPrivateKey;
    .param p5, "recipient"    # Lcom/virgilsecurity/sdk/crypto/VirgilPublicKey;
    .annotation system Ldalvik/annotation/Throws;
        value = {
            Lcom/virgilsecurity/sdk/crypto/exceptions/SigningException;,
            Lcom/virgilsecurity/sdk/crypto/exceptions/EncryptionException;
        }
    .end annotation

    .line 1018
    invoke-static {p5}, Ljava/util/Collections;->singletonList(Ljava/lang/Object;)Ljava/util/List;

    move-result-object v5

    const/4 v6, 0x0

    move-object v0, p0

    move-object v1, p1

    move v2, p2

    move-object v3, p3

    move-object v4, p4

    invoke-virtual/range {v0 .. v6}, Lcom/virgilsecurity/sdk/crypto/VirgilCrypto;->authEncrypt(Ljava/io/InputStream;ILjava/io/OutputStream;Lcom/virgilsecurity/sdk/crypto/VirgilPrivateKey;Ljava/util/List;Z)V

    .line 1019
    return-void
.end method

.method public authEncrypt(Ljava/io/InputStream;ILjava/io/OutputStream;Lcom/virgilsecurity/sdk/crypto/VirgilPrivateKey;Lcom/virgilsecurity/sdk/crypto/VirgilPublicKey;Z)V
    .locals 7
    .param p1, "inputStream"    # Ljava/io/InputStream;
    .param p2, "streamSize"    # I
    .param p3, "outputStream"    # Ljava/io/OutputStream;
    .param p4, "privateKey"    # Lcom/virgilsecurity/sdk/crypto/VirgilPrivateKey;
    .param p5, "recipient"    # Lcom/virgilsecurity/sdk/crypto/VirgilPublicKey;
    .param p6, "enablePadding"    # Z
    .annotation system Ldalvik/annotation/Throws;
        value = {
            Lcom/virgilsecurity/sdk/crypto/exceptions/SigningException;,
            Lcom/virgilsecurity/sdk/crypto/exceptions/EncryptionException;
        }
    .end annotation

    .line 1050
    invoke-static {p5}, Ljava/util/Collections;->singletonList(Ljava/lang/Object;)Ljava/util/List;

    move-result-object v5

    move-object v0, p0

    move-object v1, p1

    move v2, p2

    move-object v3, p3

    move-object v4, p4

    move v6, p6

    invoke-virtual/range {v0 .. v6}, Lcom/virgilsecurity/sdk/crypto/VirgilCrypto;->authEncrypt(Ljava/io/InputStream;ILjava/io/OutputStream;Lcom/virgilsecurity/sdk/crypto/VirgilPrivateKey;Ljava/util/List;Z)V

    .line 1051
    return-void
.end method

.method public authEncrypt(Ljava/io/InputStream;ILjava/io/OutputStream;Lcom/virgilsecurity/sdk/crypto/VirgilPrivateKey;Ljava/util/List;)V
    .locals 3
    .param p1, "inputStream"    # Ljava/io/InputStream;
    .param p2, "streamSize"    # I
    .param p3, "outputStream"    # Ljava/io/OutputStream;
    .param p4, "privateKey"    # Lcom/virgilsecurity/sdk/crypto/VirgilPrivateKey;
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "(",
            "Ljava/io/InputStream;",
            "I",
            "Ljava/io/OutputStream;",
            "Lcom/virgilsecurity/sdk/crypto/VirgilPrivateKey;",
            "Ljava/util/List<",
            "Lcom/virgilsecurity/sdk/crypto/VirgilPublicKey;",
            ">;)V"
        }
    .end annotation

    .annotation system Ldalvik/annotation/Throws;
        value = {
            Lcom/virgilsecurity/sdk/crypto/exceptions/EncryptionException;,
            Lcom/virgilsecurity/sdk/crypto/exceptions/SigningException;
        }
    .end annotation

    .line 1080
    .local p5, "recipients":Ljava/util/List;, "Ljava/util/List<Lcom/virgilsecurity/sdk/crypto/VirgilPublicKey;>;"
    new-instance v0, Lcom/virgilsecurity/sdk/crypto/VirgilCrypto$IOStream;

    invoke-direct {v0, p1, p2, p3}, Lcom/virgilsecurity/sdk/crypto/VirgilCrypto$IOStream;-><init>(Ljava/io/InputStream;ILjava/io/OutputStream;)V

    new-instance v1, Lcom/virgilsecurity/sdk/crypto/VirgilCrypto$SigningOptions;

    sget-object v2, Lcom/virgilsecurity/sdk/crypto/VirgilCrypto$SigningMode;->SIGN_THEN_ENCRYPT:Lcom/virgilsecurity/sdk/crypto/VirgilCrypto$SigningMode;

    invoke-direct {v1, p4, v2}, Lcom/virgilsecurity/sdk/crypto/VirgilCrypto$SigningOptions;-><init>(Lcom/virgilsecurity/sdk/crypto/VirgilPrivateKey;Lcom/virgilsecurity/sdk/crypto/VirgilCrypto$SigningMode;)V

    const/4 v2, 0x0

    invoke-virtual {p0, v0, v1, p5, v2}, Lcom/virgilsecurity/sdk/crypto/VirgilCrypto;->encrypt(Lcom/virgilsecurity/sdk/crypto/VirgilCrypto$InputOutput;Lcom/virgilsecurity/sdk/crypto/VirgilCrypto$SigningOptions;Ljava/util/List;Z)[B

    .line 1082
    return-void
.end method

.method public authEncrypt(Ljava/io/InputStream;ILjava/io/OutputStream;Lcom/virgilsecurity/sdk/crypto/VirgilPrivateKey;Ljava/util/List;Z)V
    .locals 3
    .param p1, "inputStream"    # Ljava/io/InputStream;
    .param p2, "streamSize"    # I
    .param p3, "outputStream"    # Ljava/io/OutputStream;
    .param p4, "privateKey"    # Lcom/virgilsecurity/sdk/crypto/VirgilPrivateKey;
    .param p6, "enablePadding"    # Z
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "(",
            "Ljava/io/InputStream;",
            "I",
            "Ljava/io/OutputStream;",
            "Lcom/virgilsecurity/sdk/crypto/VirgilPrivateKey;",
            "Ljava/util/List<",
            "Lcom/virgilsecurity/sdk/crypto/VirgilPublicKey;",
            ">;Z)V"
        }
    .end annotation

    .annotation system Ldalvik/annotation/Throws;
        value = {
            Lcom/virgilsecurity/sdk/crypto/exceptions/EncryptionException;,
            Lcom/virgilsecurity/sdk/crypto/exceptions/SigningException;
        }
    .end annotation

    .line 1113
    .local p5, "recipients":Ljava/util/List;, "Ljava/util/List<Lcom/virgilsecurity/sdk/crypto/VirgilPublicKey;>;"
    new-instance v0, Lcom/virgilsecurity/sdk/crypto/VirgilCrypto$IOStream;

    invoke-direct {v0, p1, p2, p3}, Lcom/virgilsecurity/sdk/crypto/VirgilCrypto$IOStream;-><init>(Ljava/io/InputStream;ILjava/io/OutputStream;)V

    new-instance v1, Lcom/virgilsecurity/sdk/crypto/VirgilCrypto$SigningOptions;

    sget-object v2, Lcom/virgilsecurity/sdk/crypto/VirgilCrypto$SigningMode;->SIGN_THEN_ENCRYPT:Lcom/virgilsecurity/sdk/crypto/VirgilCrypto$SigningMode;

    invoke-direct {v1, p4, v2}, Lcom/virgilsecurity/sdk/crypto/VirgilCrypto$SigningOptions;-><init>(Lcom/virgilsecurity/sdk/crypto/VirgilPrivateKey;Lcom/virgilsecurity/sdk/crypto/VirgilCrypto$SigningMode;)V

    invoke-virtual {p0, v0, v1, p5, p6}, Lcom/virgilsecurity/sdk/crypto/VirgilCrypto;->encrypt(Lcom/virgilsecurity/sdk/crypto/VirgilCrypto$InputOutput;Lcom/virgilsecurity/sdk/crypto/VirgilCrypto$SigningOptions;Ljava/util/List;Z)[B

    .line 1115
    return-void
.end method

.method public authEncrypt([BLcom/virgilsecurity/sdk/crypto/VirgilPrivateKey;Lcom/virgilsecurity/sdk/crypto/VirgilPublicKey;)[B
    .locals 2
    .param p1, "data"    # [B
    .param p2, "privateKey"    # Lcom/virgilsecurity/sdk/crypto/VirgilPrivateKey;
    .param p3, "recipient"    # Lcom/virgilsecurity/sdk/crypto/VirgilPublicKey;
    .annotation system Ldalvik/annotation/Throws;
        value = {
            Lcom/virgilsecurity/sdk/crypto/exceptions/SigningException;,
            Lcom/virgilsecurity/sdk/crypto/exceptions/EncryptionException;
        }
    .end annotation

    .line 787
    invoke-static {p3}, Ljava/util/Collections;->singletonList(Ljava/lang/Object;)Ljava/util/List;

    move-result-object v0

    const/4 v1, 0x1

    invoke-virtual {p0, p1, p2, v0, v1}, Lcom/virgilsecurity/sdk/crypto/VirgilCrypto;->authEncrypt([BLcom/virgilsecurity/sdk/crypto/VirgilPrivateKey;Ljava/util/List;Z)[B

    move-result-object v0

    return-object v0
.end method

.method public authEncrypt([BLcom/virgilsecurity/sdk/crypto/VirgilPrivateKey;Lcom/virgilsecurity/sdk/crypto/VirgilPublicKey;Z)[B
    .locals 1
    .param p1, "data"    # [B
    .param p2, "privateKey"    # Lcom/virgilsecurity/sdk/crypto/VirgilPrivateKey;
    .param p3, "recipient"    # Lcom/virgilsecurity/sdk/crypto/VirgilPublicKey;
    .param p4, "enablePadding"    # Z
    .annotation system Ldalvik/annotation/Throws;
        value = {
            Lcom/virgilsecurity/sdk/crypto/exceptions/SigningException;,
            Lcom/virgilsecurity/sdk/crypto/exceptions/EncryptionException;
        }
    .end annotation

    .line 818
    invoke-static {p3}, Ljava/util/Collections;->singletonList(Ljava/lang/Object;)Ljava/util/List;

    move-result-object v0

    invoke-virtual {p0, p1, p2, v0, p4}, Lcom/virgilsecurity/sdk/crypto/VirgilCrypto;->authEncrypt([BLcom/virgilsecurity/sdk/crypto/VirgilPrivateKey;Ljava/util/List;Z)[B

    move-result-object v0

    return-object v0
.end method

.method public authEncrypt([BLcom/virgilsecurity/sdk/crypto/VirgilPrivateKey;Ljava/util/List;)[B
    .locals 3
    .param p1, "data"    # [B
    .param p2, "privateKey"    # Lcom/virgilsecurity/sdk/crypto/VirgilPrivateKey;
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "([B",
            "Lcom/virgilsecurity/sdk/crypto/VirgilPrivateKey;",
            "Ljava/util/List<",
            "Lcom/virgilsecurity/sdk/crypto/VirgilPublicKey;",
            ">;)[B"
        }
    .end annotation

    .annotation system Ldalvik/annotation/Throws;
        value = {
            Lcom/virgilsecurity/sdk/crypto/exceptions/EncryptionException;,
            Lcom/virgilsecurity/sdk/crypto/exceptions/SigningException;
        }
    .end annotation

    .line 847
    .local p3, "recipients":Ljava/util/List;, "Ljava/util/List<Lcom/virgilsecurity/sdk/crypto/VirgilPublicKey;>;"
    new-instance v0, Lcom/virgilsecurity/sdk/crypto/VirgilCrypto$IOData;

    invoke-direct {v0, p1}, Lcom/virgilsecurity/sdk/crypto/VirgilCrypto$IOData;-><init>([B)V

    new-instance v1, Lcom/virgilsecurity/sdk/crypto/VirgilCrypto$SigningOptions;

    sget-object v2, Lcom/virgilsecurity/sdk/crypto/VirgilCrypto$SigningMode;->SIGN_THEN_ENCRYPT:Lcom/virgilsecurity/sdk/crypto/VirgilCrypto$SigningMode;

    invoke-direct {v1, p2, v2}, Lcom/virgilsecurity/sdk/crypto/VirgilCrypto$SigningOptions;-><init>(Lcom/virgilsecurity/sdk/crypto/VirgilPrivateKey;Lcom/virgilsecurity/sdk/crypto/VirgilCrypto$SigningMode;)V

    const/4 v2, 0x1

    invoke-virtual {p0, v0, v1, p3, v2}, Lcom/virgilsecurity/sdk/crypto/VirgilCrypto;->encrypt(Lcom/virgilsecurity/sdk/crypto/VirgilCrypto$InputOutput;Lcom/virgilsecurity/sdk/crypto/VirgilCrypto$SigningOptions;Ljava/util/List;Z)[B

    move-result-object v0

    return-object v0
.end method

.method public authEncrypt([BLcom/virgilsecurity/sdk/crypto/VirgilPrivateKey;Ljava/util/List;Z)[B
    .locals 3
    .param p1, "data"    # [B
    .param p2, "privateKey"    # Lcom/virgilsecurity/sdk/crypto/VirgilPrivateKey;
    .param p4, "enablePadding"    # Z
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "([B",
            "Lcom/virgilsecurity/sdk/crypto/VirgilPrivateKey;",
            "Ljava/util/List<",
            "Lcom/virgilsecurity/sdk/crypto/VirgilPublicKey;",
            ">;Z)[B"
        }
    .end annotation

    .annotation system Ldalvik/annotation/Throws;
        value = {
            Lcom/virgilsecurity/sdk/crypto/exceptions/EncryptionException;,
            Lcom/virgilsecurity/sdk/crypto/exceptions/SigningException;
        }
    .end annotation

    .line 878
    .local p3, "recipients":Ljava/util/List;, "Ljava/util/List<Lcom/virgilsecurity/sdk/crypto/VirgilPublicKey;>;"
    new-instance v0, Lcom/virgilsecurity/sdk/crypto/VirgilCrypto$IOData;

    invoke-direct {v0, p1}, Lcom/virgilsecurity/sdk/crypto/VirgilCrypto$IOData;-><init>([B)V

    new-instance v1, Lcom/virgilsecurity/sdk/crypto/VirgilCrypto$SigningOptions;

    sget-object v2, Lcom/virgilsecurity/sdk/crypto/VirgilCrypto$SigningMode;->SIGN_THEN_ENCRYPT:Lcom/virgilsecurity/sdk/crypto/VirgilCrypto$SigningMode;

    invoke-direct {v1, p2, v2}, Lcom/virgilsecurity/sdk/crypto/VirgilCrypto$SigningOptions;-><init>(Lcom/virgilsecurity/sdk/crypto/VirgilPrivateKey;Lcom/virgilsecurity/sdk/crypto/VirgilCrypto$SigningMode;)V

    invoke-virtual {p0, v0, v1, p3, p4}, Lcom/virgilsecurity/sdk/crypto/VirgilCrypto;->encrypt(Lcom/virgilsecurity/sdk/crypto/VirgilCrypto$InputOutput;Lcom/virgilsecurity/sdk/crypto/VirgilCrypto$SigningOptions;Ljava/util/List;Z)[B

    move-result-object v0

    return-object v0
.end method

.method public computeHash([B)[B
    .locals 1
    .param p1, "data"    # [B

    .line 1560
    sget-object v0, Lcom/virgilsecurity/sdk/crypto/HashAlgorithm;->SHA512:Lcom/virgilsecurity/sdk/crypto/HashAlgorithm;

    invoke-virtual {p0, p1, v0}, Lcom/virgilsecurity/sdk/crypto/VirgilCrypto;->computeHash([BLcom/virgilsecurity/sdk/crypto/HashAlgorithm;)[B

    move-result-object v0

    return-object v0
.end method

.method public computeHash([BLcom/virgilsecurity/sdk/crypto/HashAlgorithm;)[B
    .locals 3
    .param p1, "data"    # [B
    .param p2, "algorithm"    # Lcom/virgilsecurity/sdk/crypto/HashAlgorithm;

    .line 1581
    if-eqz p1, :cond_0

    .line 1586
    sget-object v0, Lcom/virgilsecurity/sdk/crypto/VirgilCrypto$1;->$SwitchMap$com$virgilsecurity$sdk$crypto$HashAlgorithm:[I

    invoke-virtual {p2}, Lcom/virgilsecurity/sdk/crypto/HashAlgorithm;->ordinal()I

    move-result v1

    aget v0, v0, v1

    packed-switch v0, :pswitch_data_0

    .line 1608
    new-instance v0, Ljava/lang/IllegalArgumentException;

    const-string v1, "Please, choose one of: SHA224, SHA256, SHA384, SHA512"

    invoke-direct {v0, v1}, Ljava/lang/IllegalArgumentException;-><init>(Ljava/lang/String;)V

    throw v0

    .line 1603
    :pswitch_0
    new-instance v0, Lcom/virgilsecurity/crypto/foundation/Sha512;

    invoke-direct {v0}, Lcom/virgilsecurity/crypto/foundation/Sha512;-><init>()V

    .line 1604
    .local v0, "hash":Lcom/virgilsecurity/crypto/foundation/Sha512;
    :try_start_0
    invoke-virtual {v0, p1}, Lcom/virgilsecurity/crypto/foundation/Sha512;->hash([B)[B

    move-result-object v1
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    .line 1605
    .local v1, "hashData":[B
    invoke-virtual {v0}, Lcom/virgilsecurity/crypto/foundation/Sha512;->close()V

    .line 1606
    .end local v0    # "hash":Lcom/virgilsecurity/crypto/foundation/Sha512;
    goto :goto_3

    .line 1603
    .end local v1    # "hashData":[B
    .restart local v0    # "hash":Lcom/virgilsecurity/crypto/foundation/Sha512;
    :catchall_0
    move-exception v1

    :try_start_1
    invoke-virtual {v0}, Lcom/virgilsecurity/crypto/foundation/Sha512;->close()V
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_1

    goto :goto_0

    :catchall_1
    move-exception v2

    invoke-virtual {v1, v2}, Ljava/lang/Throwable;->addSuppressed(Ljava/lang/Throwable;)V

    :goto_0
    throw v1

    .line 1598
    .end local v0    # "hash":Lcom/virgilsecurity/crypto/foundation/Sha512;
    :pswitch_1
    new-instance v0, Lcom/virgilsecurity/crypto/foundation/Sha384;

    invoke-direct {v0}, Lcom/virgilsecurity/crypto/foundation/Sha384;-><init>()V

    .line 1599
    .local v0, "hash":Lcom/virgilsecurity/crypto/foundation/Sha384;
    :try_start_2
    invoke-virtual {v0, p1}, Lcom/virgilsecurity/crypto/foundation/Sha384;->hash([B)[B

    move-result-object v1
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_2

    .line 1600
    .restart local v1    # "hashData":[B
    invoke-virtual {v0}, Lcom/virgilsecurity/crypto/foundation/Sha384;->close()V

    .line 1601
    .end local v0    # "hash":Lcom/virgilsecurity/crypto/foundation/Sha384;
    goto :goto_3

    .line 1598
    .end local v1    # "hashData":[B
    .restart local v0    # "hash":Lcom/virgilsecurity/crypto/foundation/Sha384;
    :catchall_2
    move-exception v1

    :try_start_3
    invoke-virtual {v0}, Lcom/virgilsecurity/crypto/foundation/Sha384;->close()V
    :try_end_3
    .catchall {:try_start_3 .. :try_end_3} :catchall_3

    goto :goto_1

    :catchall_3
    move-exception v2

    invoke-virtual {v1, v2}, Ljava/lang/Throwable;->addSuppressed(Ljava/lang/Throwable;)V

    :goto_1
    throw v1

    .line 1593
    .end local v0    # "hash":Lcom/virgilsecurity/crypto/foundation/Sha384;
    :pswitch_2
    new-instance v0, Lcom/virgilsecurity/crypto/foundation/Sha256;

    invoke-direct {v0}, Lcom/virgilsecurity/crypto/foundation/Sha256;-><init>()V

    .line 1594
    .local v0, "hash":Lcom/virgilsecurity/crypto/foundation/Sha256;
    :try_start_4
    invoke-virtual {v0, p1}, Lcom/virgilsecurity/crypto/foundation/Sha256;->hash([B)[B

    move-result-object v1
    :try_end_4
    .catchall {:try_start_4 .. :try_end_4} :catchall_4

    .line 1595
    .restart local v1    # "hashData":[B
    invoke-virtual {v0}, Lcom/virgilsecurity/crypto/foundation/Sha256;->close()V

    .line 1596
    .end local v0    # "hash":Lcom/virgilsecurity/crypto/foundation/Sha256;
    goto :goto_3

    .line 1593
    .end local v1    # "hashData":[B
    .restart local v0    # "hash":Lcom/virgilsecurity/crypto/foundation/Sha256;
    :catchall_4
    move-exception v1

    :try_start_5
    invoke-virtual {v0}, Lcom/virgilsecurity/crypto/foundation/Sha256;->close()V
    :try_end_5
    .catchall {:try_start_5 .. :try_end_5} :catchall_5

    goto :goto_2

    :catchall_5
    move-exception v2

    invoke-virtual {v1, v2}, Ljava/lang/Throwable;->addSuppressed(Ljava/lang/Throwable;)V

    :goto_2
    throw v1

    .line 1588
    .end local v0    # "hash":Lcom/virgilsecurity/crypto/foundation/Sha256;
    :pswitch_3
    new-instance v0, Lcom/virgilsecurity/crypto/foundation/Sha224;

    invoke-direct {v0}, Lcom/virgilsecurity/crypto/foundation/Sha224;-><init>()V

    .line 1589
    .local v0, "hash":Lcom/virgilsecurity/crypto/foundation/Sha224;
    :try_start_6
    invoke-virtual {v0, p1}, Lcom/virgilsecurity/crypto/foundation/Sha224;->hash([B)[B

    move-result-object v1
    :try_end_6
    .catchall {:try_start_6 .. :try_end_6} :catchall_6

    .line 1590
    .restart local v1    # "hashData":[B
    invoke-virtual {v0}, Lcom/virgilsecurity/crypto/foundation/Sha224;->close()V

    .line 1591
    .end local v0    # "hash":Lcom/virgilsecurity/crypto/foundation/Sha224;
    nop

    .line 1610
    :goto_3
    return-object v1

    .line 1588
    .end local v1    # "hashData":[B
    .restart local v0    # "hash":Lcom/virgilsecurity/crypto/foundation/Sha224;
    :catchall_6
    move-exception v1

    :try_start_7
    invoke-virtual {v0}, Lcom/virgilsecurity/crypto/foundation/Sha224;->close()V
    :try_end_7
    .catchall {:try_start_7 .. :try_end_7} :catchall_7

    goto :goto_4

    :catchall_7
    move-exception v2

    invoke-virtual {v1, v2}, Ljava/lang/Throwable;->addSuppressed(Ljava/lang/Throwable;)V

    :goto_4
    throw v1

    .line 1582
    .end local v0    # "hash":Lcom/virgilsecurity/crypto/foundation/Sha224;
    :cond_0
    new-instance v0, Lcom/virgilsecurity/common/exception/NullArgumentException;

    const-string v1, "data"

    invoke-direct {v0, v1}, Lcom/virgilsecurity/common/exception/NullArgumentException;-><init>(Ljava/lang/String;)V

    throw v0

    :pswitch_data_0
    .packed-switch 0x1
        :pswitch_3
        :pswitch_2
        :pswitch_1
        :pswitch_0
    .end packed-switch
.end method

.method public decrypt(Ljava/io/InputStream;Ljava/io/OutputStream;Lcom/virgilsecurity/sdk/crypto/VirgilPrivateKey;)V
    .locals 2
    .param p1, "inputStream"    # Ljava/io/InputStream;
    .param p2, "outputStream"    # Ljava/io/OutputStream;
    .param p3, "privateKey"    # Lcom/virgilsecurity/sdk/crypto/VirgilPrivateKey;
    .annotation system Ldalvik/annotation/Throws;
        value = {
            Lcom/virgilsecurity/sdk/crypto/exceptions/DecryptionException;
        }
    .end annotation

    .line 712
    :try_start_0
    new-instance v0, Lcom/virgilsecurity/sdk/crypto/VirgilCrypto$IOStream;

    invoke-direct {v0, p1, p2}, Lcom/virgilsecurity/sdk/crypto/VirgilCrypto$IOStream;-><init>(Ljava/io/InputStream;Ljava/io/OutputStream;)V

    const/4 v1, 0x0

    invoke-virtual {p0, v0, v1, p3}, Lcom/virgilsecurity/sdk/crypto/VirgilCrypto;->decrypt(Lcom/virgilsecurity/sdk/crypto/VirgilCrypto$InputOutput;Lcom/virgilsecurity/sdk/crypto/VirgilCrypto$VerifyingOptions;Lcom/virgilsecurity/sdk/crypto/VirgilPrivateKey;)[B
    :try_end_0
    .catch Ljava/lang/Exception; {:try_start_0 .. :try_end_0} :catch_0

    .line 715
    nop

    .line 716
    return-void

    .line 713
    :catch_0
    move-exception v0

    .line 714
    .local v0, "exception":Ljava/lang/Exception;
    new-instance v1, Lcom/virgilsecurity/sdk/crypto/exceptions/DecryptionException;

    invoke-direct {v1, v0}, Lcom/virgilsecurity/sdk/crypto/exceptions/DecryptionException;-><init>(Ljava/lang/Throwable;)V

    throw v1
.end method

.method decrypt(Lcom/virgilsecurity/sdk/crypto/VirgilCrypto$InputOutput;Lcom/virgilsecurity/sdk/crypto/VirgilCrypto$VerifyingOptions;Lcom/virgilsecurity/sdk/crypto/VirgilPrivateKey;)[B
    .locals 5
    .param p1, "inputOutput"    # Lcom/virgilsecurity/sdk/crypto/VirgilCrypto$InputOutput;
    .param p2, "verifyingOptions"    # Lcom/virgilsecurity/sdk/crypto/VirgilCrypto$VerifyingOptions;
    .param p3, "privateKey"    # Lcom/virgilsecurity/sdk/crypto/VirgilPrivateKey;
    .annotation system Ldalvik/annotation/Throws;
        value = {
            Lcom/virgilsecurity/sdk/crypto/exceptions/VerificationException;,
            Lcom/virgilsecurity/sdk/crypto/exceptions/DecryptionException;
        }
    .end annotation

    .line 1206
    :try_start_0
    new-instance v0, Lcom/virgilsecurity/crypto/foundation/RecipientCipher;

    invoke-direct {v0}, Lcom/virgilsecurity/crypto/foundation/RecipientCipher;-><init>()V
    :try_end_0
    .catch Ljava/io/IOException; {:try_start_0 .. :try_end_0} :catch_1
    .catch Lcom/virgilsecurity/crypto/foundation/FoundationException; {:try_start_0 .. :try_end_0} :catch_0

    .line 1207
    .local v0, "cipher":Lcom/virgilsecurity/crypto/foundation/RecipientCipher;
    :try_start_1
    iget-object v1, p0, Lcom/virgilsecurity/sdk/crypto/VirgilCrypto;->rng:Lcom/virgilsecurity/crypto/foundation/Random;

    invoke-virtual {v0, v1}, Lcom/virgilsecurity/crypto/foundation/RecipientCipher;->setRandom(Lcom/virgilsecurity/crypto/foundation/Random;)V

    .line 1209
    new-instance v1, Lcom/virgilsecurity/crypto/foundation/PaddingParams;

    const/16 v2, 0xa0

    invoke-direct {v1, v2, v2}, Lcom/virgilsecurity/crypto/foundation/PaddingParams;-><init>(II)V

    .line 1210
    .local v1, "paddingParams":Lcom/virgilsecurity/crypto/foundation/PaddingParams;
    invoke-virtual {v0, v1}, Lcom/virgilsecurity/crypto/foundation/RecipientCipher;->setPaddingParams(Lcom/virgilsecurity/crypto/foundation/PaddingParams;)V

    .line 1212
    invoke-virtual {p3}, Lcom/virgilsecurity/sdk/crypto/VirgilPrivateKey;->getIdentifier()[B

    move-result-object v2

    invoke-virtual {p3}, Lcom/virgilsecurity/sdk/crypto/VirgilPrivateKey;->getPrivateKey()Lcom/virgilsecurity/crypto/foundation/PrivateKey;

    move-result-object v3

    const/4 v4, 0x0

    new-array v4, v4, [B

    invoke-virtual {v0, v2, v3, v4}, Lcom/virgilsecurity/crypto/foundation/RecipientCipher;->startDecryptionWithKey([BLcom/virgilsecurity/crypto/foundation/PrivateKey;[B)V

    .line 1214
    invoke-direct {p0, v0, p1}, Lcom/virgilsecurity/sdk/crypto/VirgilCrypto;->processDecryption(Lcom/virgilsecurity/crypto/foundation/RecipientCipher;Lcom/virgilsecurity/sdk/crypto/VirgilCrypto$InputOutput;)[B

    move-result-object v2

    .line 1216
    .local v2, "result":[B
    invoke-direct {p0, v0, p1, v2, p2}, Lcom/virgilsecurity/sdk/crypto/VirgilCrypto;->finishDecryption(Lcom/virgilsecurity/crypto/foundation/RecipientCipher;Lcom/virgilsecurity/sdk/crypto/VirgilCrypto$InputOutput;[BLcom/virgilsecurity/sdk/crypto/VirgilCrypto$VerifyingOptions;)V
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    .line 1218
    nop

    .line 1219
    :try_start_2
    invoke-virtual {v0}, Lcom/virgilsecurity/crypto/foundation/RecipientCipher;->close()V
    :try_end_2
    .catch Ljava/io/IOException; {:try_start_2 .. :try_end_2} :catch_1
    .catch Lcom/virgilsecurity/crypto/foundation/FoundationException; {:try_start_2 .. :try_end_2} :catch_0

    .line 1218
    return-object v2

    .line 1206
    .end local v1    # "paddingParams":Lcom/virgilsecurity/crypto/foundation/PaddingParams;
    .end local v2    # "result":[B
    :catchall_0
    move-exception v1

    :try_start_3
    invoke-virtual {v0}, Lcom/virgilsecurity/crypto/foundation/RecipientCipher;->close()V
    :try_end_3
    .catchall {:try_start_3 .. :try_end_3} :catchall_1

    goto :goto_0

    :catchall_1
    move-exception v2

    :try_start_4
    invoke-virtual {v1, v2}, Ljava/lang/Throwable;->addSuppressed(Ljava/lang/Throwable;)V

    .end local p1    # "inputOutput":Lcom/virgilsecurity/sdk/crypto/VirgilCrypto$InputOutput;
    .end local p2    # "verifyingOptions":Lcom/virgilsecurity/sdk/crypto/VirgilCrypto$VerifyingOptions;
    .end local p3    # "privateKey":Lcom/virgilsecurity/sdk/crypto/VirgilPrivateKey;
    :goto_0
    throw v1
    :try_end_4
    .catch Ljava/io/IOException; {:try_start_4 .. :try_end_4} :catch_1
    .catch Lcom/virgilsecurity/crypto/foundation/FoundationException; {:try_start_4 .. :try_end_4} :catch_0

    .line 1219
    .end local v0    # "cipher":Lcom/virgilsecurity/crypto/foundation/RecipientCipher;
    .restart local p1    # "inputOutput":Lcom/virgilsecurity/sdk/crypto/VirgilCrypto$InputOutput;
    .restart local p2    # "verifyingOptions":Lcom/virgilsecurity/sdk/crypto/VirgilCrypto$VerifyingOptions;
    .restart local p3    # "privateKey":Lcom/virgilsecurity/sdk/crypto/VirgilPrivateKey;
    :catch_0
    move-exception v0

    goto :goto_1

    :catch_1
    move-exception v0

    .line 1220
    .local v0, "exception":Ljava/lang/Exception;
    :goto_1
    new-instance v1, Lcom/virgilsecurity/sdk/crypto/exceptions/DecryptionException;

    invoke-direct {v1, v0}, Lcom/virgilsecurity/sdk/crypto/exceptions/DecryptionException;-><init>(Ljava/lang/Throwable;)V

    throw v1
.end method

.method public decrypt([BLcom/virgilsecurity/sdk/crypto/VirgilPrivateKey;)[B
    .locals 2
    .param p1, "data"    # [B
    .param p2, "privateKey"    # Lcom/virgilsecurity/sdk/crypto/VirgilPrivateKey;
    .annotation system Ldalvik/annotation/Throws;
        value = {
            Lcom/virgilsecurity/sdk/crypto/exceptions/DecryptionException;
        }
    .end annotation

    .line 694
    :try_start_0
    new-instance v0, Lcom/virgilsecurity/sdk/crypto/VirgilCrypto$IOData;

    invoke-direct {v0, p1}, Lcom/virgilsecurity/sdk/crypto/VirgilCrypto$IOData;-><init>([B)V

    const/4 v1, 0x0

    invoke-virtual {p0, v0, v1, p2}, Lcom/virgilsecurity/sdk/crypto/VirgilCrypto;->decrypt(Lcom/virgilsecurity/sdk/crypto/VirgilCrypto$InputOutput;Lcom/virgilsecurity/sdk/crypto/VirgilCrypto$VerifyingOptions;Lcom/virgilsecurity/sdk/crypto/VirgilPrivateKey;)[B

    move-result-object v0
    :try_end_0
    .catch Ljava/lang/Exception; {:try_start_0 .. :try_end_0} :catch_0

    return-object v0

    .line 695
    :catch_0
    move-exception v0

    .line 696
    .local v0, "exception":Ljava/lang/Exception;
    new-instance v1, Lcom/virgilsecurity/sdk/crypto/exceptions/DecryptionException;

    invoke-direct {v1, v0}, Lcom/virgilsecurity/sdk/crypto/exceptions/DecryptionException;-><init>(Ljava/lang/Throwable;)V

    throw v1
.end method

.method public decryptThenVerify([BLcom/virgilsecurity/sdk/crypto/VirgilPrivateKey;Lcom/virgilsecurity/sdk/crypto/VirgilPublicKey;)[B
    .locals 1
    .param p1, "data"    # [B
    .param p2, "privateKey"    # Lcom/virgilsecurity/sdk/crypto/VirgilPrivateKey;
    .param p3, "signersPublicKey"    # Lcom/virgilsecurity/sdk/crypto/VirgilPublicKey;
    .annotation system Ldalvik/annotation/Throws;
        value = {
            Lcom/virgilsecurity/sdk/crypto/exceptions/CryptoException;
        }
    .end annotation

    .annotation runtime Ljava/lang/Deprecated;
    .end annotation

    .line 734
    invoke-static {p3}, Ljava/util/Collections;->singletonList(Ljava/lang/Object;)Ljava/util/List;

    move-result-object v0

    invoke-virtual {p0, p1, p2, v0}, Lcom/virgilsecurity/sdk/crypto/VirgilCrypto;->decryptThenVerify([BLcom/virgilsecurity/sdk/crypto/VirgilPrivateKey;Ljava/util/List;)[B

    move-result-object v0

    return-object v0
.end method

.method public decryptThenVerify([BLcom/virgilsecurity/sdk/crypto/VirgilPrivateKey;Ljava/util/List;)[B
    .locals 3
    .param p1, "data"    # [B
    .param p2, "privateKey"    # Lcom/virgilsecurity/sdk/crypto/VirgilPrivateKey;
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "([B",
            "Lcom/virgilsecurity/sdk/crypto/VirgilPrivateKey;",
            "Ljava/util/List<",
            "Lcom/virgilsecurity/sdk/crypto/VirgilPublicKey;",
            ">;)[B"
        }
    .end annotation

    .annotation system Ldalvik/annotation/Throws;
        value = {
            Lcom/virgilsecurity/sdk/crypto/exceptions/CryptoException;
        }
    .end annotation

    .annotation runtime Ljava/lang/Deprecated;
    .end annotation

    .line 754
    .local p3, "signersPublicKeys":Ljava/util/List;, "Ljava/util/List<Lcom/virgilsecurity/sdk/crypto/VirgilPublicKey;>;"
    :try_start_0
    new-instance v0, Lcom/virgilsecurity/sdk/crypto/VirgilCrypto$IOData;

    invoke-direct {v0, p1}, Lcom/virgilsecurity/sdk/crypto/VirgilCrypto$IOData;-><init>([B)V

    new-instance v1, Lcom/virgilsecurity/sdk/crypto/VirgilCrypto$VerifyingOptions;

    sget-object v2, Lcom/virgilsecurity/sdk/crypto/VirgilCrypto$VerifyingMode;->DECRYPT_AND_VERIFY:Lcom/virgilsecurity/sdk/crypto/VirgilCrypto$VerifyingMode;

    invoke-direct {v1, p3, v2}, Lcom/virgilsecurity/sdk/crypto/VirgilCrypto$VerifyingOptions;-><init>(Ljava/util/List;Lcom/virgilsecurity/sdk/crypto/VirgilCrypto$VerifyingMode;)V

    invoke-virtual {p0, v0, v1, p2}, Lcom/virgilsecurity/sdk/crypto/VirgilCrypto;->decrypt(Lcom/virgilsecurity/sdk/crypto/VirgilCrypto$InputOutput;Lcom/virgilsecurity/sdk/crypto/VirgilCrypto$VerifyingOptions;Lcom/virgilsecurity/sdk/crypto/VirgilPrivateKey;)[B

    move-result-object v0
    :try_end_0
    .catch Ljava/lang/Exception; {:try_start_0 .. :try_end_0} :catch_0

    return-object v0

    .line 756
    :catch_0
    move-exception v0

    .line 757
    .local v0, "exception":Ljava/lang/Exception;
    new-instance v1, Lcom/virgilsecurity/sdk/crypto/exceptions/DecryptionException;

    invoke-direct {v1, v0}, Lcom/virgilsecurity/sdk/crypto/exceptions/DecryptionException;-><init>(Ljava/lang/Throwable;)V

    throw v1
.end method

.method public encrypt(Ljava/io/InputStream;Ljava/io/OutputStream;Lcom/virgilsecurity/sdk/crypto/VirgilPublicKey;)V
    .locals 2
    .param p1, "inputStream"    # Ljava/io/InputStream;
    .param p2, "outputStream"    # Ljava/io/OutputStream;
    .param p3, "publicKey"    # Lcom/virgilsecurity/sdk/crypto/VirgilPublicKey;
    .annotation system Ldalvik/annotation/Throws;
        value = {
            Lcom/virgilsecurity/sdk/crypto/exceptions/EncryptionException;
        }
    .end annotation

    .line 506
    invoke-static {p3}, Ljava/util/Collections;->singletonList(Ljava/lang/Object;)Ljava/util/List;

    move-result-object v0

    const/4 v1, 0x0

    invoke-virtual {p0, p1, p2, v0, v1}, Lcom/virgilsecurity/sdk/crypto/VirgilCrypto;->encrypt(Ljava/io/InputStream;Ljava/io/OutputStream;Ljava/util/List;Z)V

    .line 507
    return-void
.end method

.method public encrypt(Ljava/io/InputStream;Ljava/io/OutputStream;Lcom/virgilsecurity/sdk/crypto/VirgilPublicKey;Z)V
    .locals 1
    .param p1, "inputStream"    # Ljava/io/InputStream;
    .param p2, "outputStream"    # Ljava/io/OutputStream;
    .param p3, "publicKey"    # Lcom/virgilsecurity/sdk/crypto/VirgilPublicKey;
    .param p4, "enablePadding"    # Z
    .annotation system Ldalvik/annotation/Throws;
        value = {
            Lcom/virgilsecurity/sdk/crypto/exceptions/EncryptionException;
        }
    .end annotation

    .line 531
    invoke-static {p3}, Ljava/util/Collections;->singletonList(Ljava/lang/Object;)Ljava/util/List;

    move-result-object v0

    invoke-virtual {p0, p1, p2, v0, p4}, Lcom/virgilsecurity/sdk/crypto/VirgilCrypto;->encrypt(Ljava/io/InputStream;Ljava/io/OutputStream;Ljava/util/List;Z)V

    .line 532
    return-void
.end method

.method public encrypt(Ljava/io/InputStream;Ljava/io/OutputStream;Ljava/util/List;)V
    .locals 3
    .param p1, "inputStream"    # Ljava/io/InputStream;
    .param p2, "outputStream"    # Ljava/io/OutputStream;
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "(",
            "Ljava/io/InputStream;",
            "Ljava/io/OutputStream;",
            "Ljava/util/List<",
            "Lcom/virgilsecurity/sdk/crypto/VirgilPublicKey;",
            ">;)V"
        }
    .end annotation

    .annotation system Ldalvik/annotation/Throws;
        value = {
            Lcom/virgilsecurity/sdk/crypto/exceptions/EncryptionException;
        }
    .end annotation

    .line 555
    .local p3, "publicKeys":Ljava/util/List;, "Ljava/util/List<Lcom/virgilsecurity/sdk/crypto/VirgilPublicKey;>;"
    :try_start_0
    new-instance v0, Lcom/virgilsecurity/sdk/crypto/VirgilCrypto$IOStream;

    invoke-direct {v0, p1, p2}, Lcom/virgilsecurity/sdk/crypto/VirgilCrypto$IOStream;-><init>(Ljava/io/InputStream;Ljava/io/OutputStream;)V

    const/4 v1, 0x0

    const/4 v2, 0x0

    invoke-virtual {p0, v0, v1, p3, v2}, Lcom/virgilsecurity/sdk/crypto/VirgilCrypto;->encrypt(Lcom/virgilsecurity/sdk/crypto/VirgilCrypto$InputOutput;Lcom/virgilsecurity/sdk/crypto/VirgilCrypto$SigningOptions;Ljava/util/List;Z)[B
    :try_end_0
    .catch Ljava/lang/Exception; {:try_start_0 .. :try_end_0} :catch_0

    .line 558
    nop

    .line 559
    return-void

    .line 556
    :catch_0
    move-exception v0

    .line 557
    .local v0, "exception":Ljava/lang/Exception;
    new-instance v1, Lcom/virgilsecurity/sdk/crypto/exceptions/EncryptionException;

    invoke-direct {v1, v0}, Lcom/virgilsecurity/sdk/crypto/exceptions/EncryptionException;-><init>(Ljava/lang/Throwable;)V

    throw v1
.end method

.method public encrypt(Ljava/io/InputStream;Ljava/io/OutputStream;Ljava/util/List;Z)V
    .locals 2
    .param p1, "inputStream"    # Ljava/io/InputStream;
    .param p2, "outputStream"    # Ljava/io/OutputStream;
    .param p4, "enablePadding"    # Z
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "(",
            "Ljava/io/InputStream;",
            "Ljava/io/OutputStream;",
            "Ljava/util/List<",
            "Lcom/virgilsecurity/sdk/crypto/VirgilPublicKey;",
            ">;Z)V"
        }
    .end annotation

    .annotation system Ldalvik/annotation/Throws;
        value = {
            Lcom/virgilsecurity/sdk/crypto/exceptions/EncryptionException;
        }
    .end annotation

    .line 584
    .local p3, "publicKeys":Ljava/util/List;, "Ljava/util/List<Lcom/virgilsecurity/sdk/crypto/VirgilPublicKey;>;"
    :try_start_0
    new-instance v0, Lcom/virgilsecurity/sdk/crypto/VirgilCrypto$IOStream;

    invoke-direct {v0, p1, p2}, Lcom/virgilsecurity/sdk/crypto/VirgilCrypto$IOStream;-><init>(Ljava/io/InputStream;Ljava/io/OutputStream;)V

    const/4 v1, 0x0

    invoke-virtual {p0, v0, v1, p3, p4}, Lcom/virgilsecurity/sdk/crypto/VirgilCrypto;->encrypt(Lcom/virgilsecurity/sdk/crypto/VirgilCrypto$InputOutput;Lcom/virgilsecurity/sdk/crypto/VirgilCrypto$SigningOptions;Ljava/util/List;Z)[B
    :try_end_0
    .catch Ljava/lang/Exception; {:try_start_0 .. :try_end_0} :catch_0

    .line 587
    nop

    .line 588
    return-void

    .line 585
    :catch_0
    move-exception v0

    .line 586
    .local v0, "exception":Ljava/lang/Exception;
    new-instance v1, Lcom/virgilsecurity/sdk/crypto/exceptions/EncryptionException;

    invoke-direct {v1, v0}, Lcom/virgilsecurity/sdk/crypto/exceptions/EncryptionException;-><init>(Ljava/lang/Throwable;)V

    throw v1
.end method

.method encrypt(Lcom/virgilsecurity/sdk/crypto/VirgilCrypto$InputOutput;Lcom/virgilsecurity/sdk/crypto/VirgilCrypto$SigningOptions;Ljava/util/List;Z)[B
    .locals 6
    .param p1, "inputOutput"    # Lcom/virgilsecurity/sdk/crypto/VirgilCrypto$InputOutput;
    .param p2, "signingOptions"    # Lcom/virgilsecurity/sdk/crypto/VirgilCrypto$SigningOptions;
    .param p4, "enablePadding"    # Z
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "(",
            "Lcom/virgilsecurity/sdk/crypto/VirgilCrypto$InputOutput;",
            "Lcom/virgilsecurity/sdk/crypto/VirgilCrypto$SigningOptions;",
            "Ljava/util/List<",
            "Lcom/virgilsecurity/sdk/crypto/VirgilPublicKey;",
            ">;Z)[B"
        }
    .end annotation

    .annotation system Ldalvik/annotation/Throws;
        value = {
            Lcom/virgilsecurity/sdk/crypto/exceptions/SigningException;,
            Lcom/virgilsecurity/sdk/crypto/exceptions/EncryptionException;
        }
    .end annotation

    .line 1179
    .local p3, "recipients":Ljava/util/List;, "Ljava/util/List<Lcom/virgilsecurity/sdk/crypto/VirgilPublicKey;>;"
    :try_start_0
    new-instance v0, Lcom/virgilsecurity/crypto/foundation/Aes256Gcm;

    invoke-direct {v0}, Lcom/virgilsecurity/crypto/foundation/Aes256Gcm;-><init>()V
    :try_end_0
    .catch Ljava/io/IOException; {:try_start_0 .. :try_end_0} :catch_0

    .local v0, "aesGcm":Lcom/virgilsecurity/crypto/foundation/Aes256Gcm;
    :try_start_1
    new-instance v1, Lcom/virgilsecurity/crypto/foundation/RecipientCipher;

    invoke-direct {v1}, Lcom/virgilsecurity/crypto/foundation/RecipientCipher;-><init>()V
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_2

    .line 1180
    .local v1, "cipher":Lcom/virgilsecurity/crypto/foundation/RecipientCipher;
    :try_start_2
    invoke-virtual {v1, v0}, Lcom/virgilsecurity/crypto/foundation/RecipientCipher;->setEncryptionCipher(Lcom/virgilsecurity/crypto/foundation/Cipher;)V

    .line 1181
    iget-object v2, p0, Lcom/virgilsecurity/sdk/crypto/VirgilCrypto;->rng:Lcom/virgilsecurity/crypto/foundation/Random;

    invoke-virtual {v1, v2}, Lcom/virgilsecurity/crypto/foundation/RecipientCipher;->setRandom(Lcom/virgilsecurity/crypto/foundation/Random;)V

    .line 1183
    if-eqz p4, :cond_0

    .line 1184
    new-instance v2, Lcom/virgilsecurity/crypto/foundation/RandomPadding;

    invoke-direct {v2}, Lcom/virgilsecurity/crypto/foundation/RandomPadding;-><init>()V

    .line 1185
    .local v2, "padding":Lcom/virgilsecurity/crypto/foundation/RandomPadding;
    iget-object v3, p0, Lcom/virgilsecurity/sdk/crypto/VirgilCrypto;->rng:Lcom/virgilsecurity/crypto/foundation/Random;

    invoke-virtual {v2, v3}, Lcom/virgilsecurity/crypto/foundation/RandomPadding;->setRandom(Lcom/virgilsecurity/crypto/foundation/Random;)V

    .line 1186
    invoke-virtual {v1, v2}, Lcom/virgilsecurity/crypto/foundation/RecipientCipher;->setEncryptionPadding(Lcom/virgilsecurity/crypto/foundation/Padding;)V

    .line 1187
    new-instance v3, Lcom/virgilsecurity/crypto/foundation/PaddingParams;

    const/16 v4, 0xa0

    invoke-direct {v3, v4, v4}, Lcom/virgilsecurity/crypto/foundation/PaddingParams;-><init>(II)V

    .line 1188
    .local v3, "paddingParams":Lcom/virgilsecurity/crypto/foundation/PaddingParams;
    invoke-virtual {v1, v3}, Lcom/virgilsecurity/crypto/foundation/RecipientCipher;->setPaddingParams(Lcom/virgilsecurity/crypto/foundation/PaddingParams;)V

    .line 1191
    .end local v2    # "padding":Lcom/virgilsecurity/crypto/foundation/RandomPadding;
    .end local v3    # "paddingParams":Lcom/virgilsecurity/crypto/foundation/PaddingParams;
    :cond_0
    invoke-interface {p3}, Ljava/util/List;->iterator()Ljava/util/Iterator;

    move-result-object v2

    :goto_0
    invoke-interface {v2}, Ljava/util/Iterator;->hasNext()Z

    move-result v3

    if-eqz v3, :cond_1

    invoke-interface {v2}, Ljava/util/Iterator;->next()Ljava/lang/Object;

    move-result-object v3

    check-cast v3, Lcom/virgilsecurity/sdk/crypto/VirgilPublicKey;

    .line 1192
    .local v3, "recipient":Lcom/virgilsecurity/sdk/crypto/VirgilPublicKey;
    invoke-virtual {v3}, Lcom/virgilsecurity/sdk/crypto/VirgilPublicKey;->getIdentifier()[B

    move-result-object v4

    invoke-virtual {v3}, Lcom/virgilsecurity/sdk/crypto/VirgilPublicKey;->getPublicKey()Lcom/virgilsecurity/crypto/foundation/PublicKey;

    move-result-object v5

    invoke-virtual {v1, v4, v5}, Lcom/virgilsecurity/crypto/foundation/RecipientCipher;->addKeyRecipient([BLcom/virgilsecurity/crypto/foundation/PublicKey;)V

    .line 1193
    .end local v3    # "recipient":Lcom/virgilsecurity/sdk/crypto/VirgilPublicKey;
    goto :goto_0

    .line 1195
    :cond_1
    invoke-direct {p0, v1, p1, p2}, Lcom/virgilsecurity/sdk/crypto/VirgilCrypto;->startEncryption(Lcom/virgilsecurity/crypto/foundation/RecipientCipher;Lcom/virgilsecurity/sdk/crypto/VirgilCrypto$InputOutput;Lcom/virgilsecurity/sdk/crypto/VirgilCrypto$SigningOptions;)V

    .line 1197
    invoke-direct {p0, v1, p1, p2}, Lcom/virgilsecurity/sdk/crypto/VirgilCrypto;->processEncryption(Lcom/virgilsecurity/crypto/foundation/RecipientCipher;Lcom/virgilsecurity/sdk/crypto/VirgilCrypto$InputOutput;Lcom/virgilsecurity/sdk/crypto/VirgilCrypto$SigningOptions;)[B

    move-result-object v2
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_0

    .line 1198
    :try_start_3
    invoke-virtual {v1}, Lcom/virgilsecurity/crypto/foundation/RecipientCipher;->close()V
    :try_end_3
    .catchall {:try_start_3 .. :try_end_3} :catchall_2

    :try_start_4
    invoke-virtual {v0}, Lcom/virgilsecurity/crypto/foundation/Aes256Gcm;->close()V
    :try_end_4
    .catch Ljava/io/IOException; {:try_start_4 .. :try_end_4} :catch_0

    .line 1197
    return-object v2

    .line 1179
    :catchall_0
    move-exception v2

    :try_start_5
    invoke-virtual {v1}, Lcom/virgilsecurity/crypto/foundation/RecipientCipher;->close()V
    :try_end_5
    .catchall {:try_start_5 .. :try_end_5} :catchall_1

    goto :goto_1

    :catchall_1
    move-exception v3

    :try_start_6
    invoke-virtual {v2, v3}, Ljava/lang/Throwable;->addSuppressed(Ljava/lang/Throwable;)V

    .end local v0    # "aesGcm":Lcom/virgilsecurity/crypto/foundation/Aes256Gcm;
    .end local p1    # "inputOutput":Lcom/virgilsecurity/sdk/crypto/VirgilCrypto$InputOutput;
    .end local p2    # "signingOptions":Lcom/virgilsecurity/sdk/crypto/VirgilCrypto$SigningOptions;
    .end local p3    # "recipients":Ljava/util/List;, "Ljava/util/List<Lcom/virgilsecurity/sdk/crypto/VirgilPublicKey;>;"
    .end local p4    # "enablePadding":Z
    :goto_1
    throw v2
    :try_end_6
    .catchall {:try_start_6 .. :try_end_6} :catchall_2

    .end local v1    # "cipher":Lcom/virgilsecurity/crypto/foundation/RecipientCipher;
    .restart local v0    # "aesGcm":Lcom/virgilsecurity/crypto/foundation/Aes256Gcm;
    .restart local p1    # "inputOutput":Lcom/virgilsecurity/sdk/crypto/VirgilCrypto$InputOutput;
    .restart local p2    # "signingOptions":Lcom/virgilsecurity/sdk/crypto/VirgilCrypto$SigningOptions;
    .restart local p3    # "recipients":Ljava/util/List;, "Ljava/util/List<Lcom/virgilsecurity/sdk/crypto/VirgilPublicKey;>;"
    .restart local p4    # "enablePadding":Z
    :catchall_2
    move-exception v1

    :try_start_7
    invoke-virtual {v0}, Lcom/virgilsecurity/crypto/foundation/Aes256Gcm;->close()V
    :try_end_7
    .catchall {:try_start_7 .. :try_end_7} :catchall_3

    goto :goto_2

    :catchall_3
    move-exception v2

    :try_start_8
    invoke-virtual {v1, v2}, Ljava/lang/Throwable;->addSuppressed(Ljava/lang/Throwable;)V

    .end local p1    # "inputOutput":Lcom/virgilsecurity/sdk/crypto/VirgilCrypto$InputOutput;
    .end local p2    # "signingOptions":Lcom/virgilsecurity/sdk/crypto/VirgilCrypto$SigningOptions;
    .end local p3    # "recipients":Ljava/util/List;, "Ljava/util/List<Lcom/virgilsecurity/sdk/crypto/VirgilPublicKey;>;"
    .end local p4    # "enablePadding":Z
    :goto_2
    throw v1
    :try_end_8
    .catch Ljava/io/IOException; {:try_start_8 .. :try_end_8} :catch_0

    .line 1198
    .end local v0    # "aesGcm":Lcom/virgilsecurity/crypto/foundation/Aes256Gcm;
    .restart local p1    # "inputOutput":Lcom/virgilsecurity/sdk/crypto/VirgilCrypto$InputOutput;
    .restart local p2    # "signingOptions":Lcom/virgilsecurity/sdk/crypto/VirgilCrypto$SigningOptions;
    .restart local p3    # "recipients":Ljava/util/List;, "Ljava/util/List<Lcom/virgilsecurity/sdk/crypto/VirgilPublicKey;>;"
    .restart local p4    # "enablePadding":Z
    :catch_0
    move-exception v0

    .line 1199
    .local v0, "exception":Ljava/io/IOException;
    new-instance v1, Lcom/virgilsecurity/sdk/crypto/exceptions/EncryptionException;

    invoke-direct {v1, v0}, Lcom/virgilsecurity/sdk/crypto/exceptions/EncryptionException;-><init>(Ljava/lang/Throwable;)V

    throw v1
.end method

.method public encrypt([BLcom/virgilsecurity/sdk/crypto/VirgilPublicKey;)[B
    .locals 2
    .param p1, "data"    # [B
    .param p2, "publicKey"    # Lcom/virgilsecurity/sdk/crypto/VirgilPublicKey;
    .annotation system Ldalvik/annotation/Throws;
        value = {
            Lcom/virgilsecurity/sdk/crypto/exceptions/EncryptionException;
        }
    .end annotation

    .line 401
    invoke-static {p2}, Ljava/util/Collections;->singletonList(Ljava/lang/Object;)Ljava/util/List;

    move-result-object v0

    const/4 v1, 0x0

    invoke-virtual {p0, p1, v0, v1}, Lcom/virgilsecurity/sdk/crypto/VirgilCrypto;->encrypt([BLjava/util/List;Z)[B

    move-result-object v0

    return-object v0
.end method

.method public encrypt([BLcom/virgilsecurity/sdk/crypto/VirgilPublicKey;Z)[B
    .locals 1
    .param p1, "data"    # [B
    .param p2, "publicKey"    # Lcom/virgilsecurity/sdk/crypto/VirgilPublicKey;
    .param p3, "enablePadding"    # Z
    .annotation system Ldalvik/annotation/Throws;
        value = {
            Lcom/virgilsecurity/sdk/crypto/exceptions/EncryptionException;
        }
    .end annotation

    .line 426
    invoke-static {p2}, Ljava/util/Collections;->singletonList(Ljava/lang/Object;)Ljava/util/List;

    move-result-object v0

    invoke-virtual {p0, p1, v0, p3}, Lcom/virgilsecurity/sdk/crypto/VirgilCrypto;->encrypt([BLjava/util/List;Z)[B

    move-result-object v0

    return-object v0
.end method

.method public encrypt([BLjava/util/List;)[B
    .locals 3
    .param p1, "data"    # [B
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "([B",
            "Ljava/util/List<",
            "Lcom/virgilsecurity/sdk/crypto/VirgilPublicKey;",
            ">;)[B"
        }
    .end annotation

    .annotation system Ldalvik/annotation/Throws;
        value = {
            Lcom/virgilsecurity/sdk/crypto/exceptions/EncryptionException;
        }
    .end annotation

    .line 450
    .local p2, "publicKeys":Ljava/util/List;, "Ljava/util/List<Lcom/virgilsecurity/sdk/crypto/VirgilPublicKey;>;"
    :try_start_0
    new-instance v0, Lcom/virgilsecurity/sdk/crypto/VirgilCrypto$IOData;

    invoke-direct {v0, p1}, Lcom/virgilsecurity/sdk/crypto/VirgilCrypto$IOData;-><init>([B)V

    const/4 v1, 0x0

    const/4 v2, 0x0

    invoke-virtual {p0, v0, v1, p2, v2}, Lcom/virgilsecurity/sdk/crypto/VirgilCrypto;->encrypt(Lcom/virgilsecurity/sdk/crypto/VirgilCrypto$InputOutput;Lcom/virgilsecurity/sdk/crypto/VirgilCrypto$SigningOptions;Ljava/util/List;Z)[B

    move-result-object v0
    :try_end_0
    .catch Ljava/lang/Exception; {:try_start_0 .. :try_end_0} :catch_0

    return-object v0

    .line 451
    :catch_0
    move-exception v0

    .line 452
    .local v0, "exception":Ljava/lang/Exception;
    new-instance v1, Lcom/virgilsecurity/sdk/crypto/exceptions/EncryptionException;

    invoke-direct {v1, v0}, Lcom/virgilsecurity/sdk/crypto/exceptions/EncryptionException;-><init>(Ljava/lang/Throwable;)V

    throw v1
.end method

.method public encrypt([BLjava/util/List;Z)[B
    .locals 2
    .param p1, "data"    # [B
    .param p3, "enablePadding"    # Z
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "([B",
            "Ljava/util/List<",
            "Lcom/virgilsecurity/sdk/crypto/VirgilPublicKey;",
            ">;Z)[B"
        }
    .end annotation

    .annotation system Ldalvik/annotation/Throws;
        value = {
            Lcom/virgilsecurity/sdk/crypto/exceptions/EncryptionException;
        }
    .end annotation

    .line 480
    .local p2, "publicKeys":Ljava/util/List;, "Ljava/util/List<Lcom/virgilsecurity/sdk/crypto/VirgilPublicKey;>;"
    :try_start_0
    new-instance v0, Lcom/virgilsecurity/sdk/crypto/VirgilCrypto$IOData;

    invoke-direct {v0, p1}, Lcom/virgilsecurity/sdk/crypto/VirgilCrypto$IOData;-><init>([B)V

    const/4 v1, 0x0

    invoke-virtual {p0, v0, v1, p2, p3}, Lcom/virgilsecurity/sdk/crypto/VirgilCrypto;->encrypt(Lcom/virgilsecurity/sdk/crypto/VirgilCrypto$InputOutput;Lcom/virgilsecurity/sdk/crypto/VirgilCrypto$SigningOptions;Ljava/util/List;Z)[B

    move-result-object v0
    :try_end_0
    .catch Ljava/lang/Exception; {:try_start_0 .. :try_end_0} :catch_0

    return-object v0

    .line 481
    :catch_0
    move-exception v0

    .line 482
    .local v0, "exception":Ljava/lang/Exception;
    new-instance v1, Lcom/virgilsecurity/sdk/crypto/exceptions/EncryptionException;

    invoke-direct {v1, v0}, Lcom/virgilsecurity/sdk/crypto/exceptions/EncryptionException;-><init>(Ljava/lang/Throwable;)V

    throw v1
.end method

.method public exportPrivateKey(Lcom/virgilsecurity/sdk/crypto/VirgilPrivateKey;)[B
    .locals 5
    .param p1, "privateKey"    # Lcom/virgilsecurity/sdk/crypto/VirgilPrivateKey;
    .annotation system Ldalvik/annotation/Throws;
        value = {
            Lcom/virgilsecurity/sdk/crypto/exceptions/CryptoException;
        }
    .end annotation

    .line 1430
    if-eqz p1, :cond_4

    .line 1434
    :try_start_0
    new-instance v0, Lcom/virgilsecurity/crypto/foundation/KeyAsn1Serializer;

    invoke-direct {v0}, Lcom/virgilsecurity/crypto/foundation/KeyAsn1Serializer;-><init>()V
    :try_end_0
    .catch Ljava/lang/Exception; {:try_start_0 .. :try_end_0} :catch_0

    .line 1435
    .local v0, "serializer":Lcom/virgilsecurity/crypto/foundation/KeyAsn1Serializer;
    :try_start_1
    invoke-virtual {v0}, Lcom/virgilsecurity/crypto/foundation/KeyAsn1Serializer;->setupDefaults()V

    .line 1437
    invoke-virtual {p1}, Lcom/virgilsecurity/sdk/crypto/VirgilPrivateKey;->getPrivateKey()Lcom/virgilsecurity/crypto/foundation/PrivateKey;

    move-result-object v1

    iget-object v2, p0, Lcom/virgilsecurity/sdk/crypto/VirgilCrypto;->rng:Lcom/virgilsecurity/crypto/foundation/Random;

    invoke-static {v1, v2}, Lcom/virgilsecurity/crypto/foundation/KeyAlgFactory;->createFromKey(Lcom/virgilsecurity/crypto/foundation/Key;Lcom/virgilsecurity/crypto/foundation/Random;)Lcom/virgilsecurity/crypto/foundation/KeyAlg;

    move-result-object v1
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_3

    .line 1438
    .local v1, "keyAlg":Lcom/virgilsecurity/crypto/foundation/KeyAlg;
    :try_start_2
    invoke-virtual {p1}, Lcom/virgilsecurity/sdk/crypto/VirgilPrivateKey;->getPrivateKey()Lcom/virgilsecurity/crypto/foundation/PrivateKey;

    move-result-object v2

    invoke-interface {v1, v2}, Lcom/virgilsecurity/crypto/foundation/KeyAlg;->exportPrivateKey(Lcom/virgilsecurity/crypto/foundation/PrivateKey;)Lcom/virgilsecurity/crypto/foundation/RawPrivateKey;

    move-result-object v2
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_2

    .line 1439
    .local v2, "rawPrivateKey":Lcom/virgilsecurity/crypto/foundation/RawPrivateKey;
    :try_start_3
    invoke-virtual {v0, v2}, Lcom/virgilsecurity/crypto/foundation/KeyAsn1Serializer;->serializePrivateKey(Lcom/virgilsecurity/crypto/foundation/RawPrivateKey;)[B

    move-result-object v3
    :try_end_3
    .catchall {:try_start_3 .. :try_end_3} :catchall_0

    .line 1440
    if-eqz v2, :cond_0

    :try_start_4
    invoke-virtual {v2}, Lcom/virgilsecurity/crypto/foundation/RawPrivateKey;->close()V
    :try_end_4
    .catchall {:try_start_4 .. :try_end_4} :catchall_2

    .line 1442
    :cond_0
    :try_start_5
    instance-of v4, v1, Ljava/lang/AutoCloseable;

    if-eqz v4, :cond_1

    .line 1443
    move-object v4, v1

    check-cast v4, Ljava/lang/AutoCloseable;

    invoke-interface {v4}, Ljava/lang/AutoCloseable;->close()V
    :try_end_5
    .catchall {:try_start_5 .. :try_end_5} :catchall_3

    .line 1446
    :cond_1
    :try_start_6
    invoke-virtual {v0}, Lcom/virgilsecurity/crypto/foundation/KeyAsn1Serializer;->close()V
    :try_end_6
    .catch Ljava/lang/Exception; {:try_start_6 .. :try_end_6} :catch_0

    .line 1439
    return-object v3

    .line 1438
    :catchall_0
    move-exception v3

    if-eqz v2, :cond_2

    :try_start_7
    invoke-virtual {v2}, Lcom/virgilsecurity/crypto/foundation/RawPrivateKey;->close()V
    :try_end_7
    .catchall {:try_start_7 .. :try_end_7} :catchall_1

    goto :goto_0

    :catchall_1
    move-exception v4

    :try_start_8
    invoke-virtual {v3, v4}, Ljava/lang/Throwable;->addSuppressed(Ljava/lang/Throwable;)V

    .end local v0    # "serializer":Lcom/virgilsecurity/crypto/foundation/KeyAsn1Serializer;
    .end local v1    # "keyAlg":Lcom/virgilsecurity/crypto/foundation/KeyAlg;
    .end local p1    # "privateKey":Lcom/virgilsecurity/sdk/crypto/VirgilPrivateKey;
    :cond_2
    :goto_0
    throw v3
    :try_end_8
    .catchall {:try_start_8 .. :try_end_8} :catchall_2

    .line 1442
    .end local v2    # "rawPrivateKey":Lcom/virgilsecurity/crypto/foundation/RawPrivateKey;
    .restart local v0    # "serializer":Lcom/virgilsecurity/crypto/foundation/KeyAsn1Serializer;
    .restart local v1    # "keyAlg":Lcom/virgilsecurity/crypto/foundation/KeyAlg;
    .restart local p1    # "privateKey":Lcom/virgilsecurity/sdk/crypto/VirgilPrivateKey;
    :catchall_2
    move-exception v2

    :try_start_9
    instance-of v3, v1, Ljava/lang/AutoCloseable;

    if-eqz v3, :cond_3

    .line 1443
    move-object v3, v1

    check-cast v3, Ljava/lang/AutoCloseable;

    invoke-interface {v3}, Ljava/lang/AutoCloseable;->close()V

    .line 1445
    :cond_3
    nop

    .end local v0    # "serializer":Lcom/virgilsecurity/crypto/foundation/KeyAsn1Serializer;
    .end local p1    # "privateKey":Lcom/virgilsecurity/sdk/crypto/VirgilPrivateKey;
    throw v2
    :try_end_9
    .catchall {:try_start_9 .. :try_end_9} :catchall_3

    .line 1434
    .end local v1    # "keyAlg":Lcom/virgilsecurity/crypto/foundation/KeyAlg;
    .restart local v0    # "serializer":Lcom/virgilsecurity/crypto/foundation/KeyAsn1Serializer;
    .restart local p1    # "privateKey":Lcom/virgilsecurity/sdk/crypto/VirgilPrivateKey;
    :catchall_3
    move-exception v1

    :try_start_a
    invoke-virtual {v0}, Lcom/virgilsecurity/crypto/foundation/KeyAsn1Serializer;->close()V
    :try_end_a
    .catchall {:try_start_a .. :try_end_a} :catchall_4

    goto :goto_1

    :catchall_4
    move-exception v2

    :try_start_b
    invoke-virtual {v1, v2}, Ljava/lang/Throwable;->addSuppressed(Ljava/lang/Throwable;)V

    .end local p1    # "privateKey":Lcom/virgilsecurity/sdk/crypto/VirgilPrivateKey;
    :goto_1
    throw v1
    :try_end_b
    .catch Ljava/lang/Exception; {:try_start_b .. :try_end_b} :catch_0

    .line 1446
    .end local v0    # "serializer":Lcom/virgilsecurity/crypto/foundation/KeyAsn1Serializer;
    .restart local p1    # "privateKey":Lcom/virgilsecurity/sdk/crypto/VirgilPrivateKey;
    :catch_0
    move-exception v0

    .line 1447
    .local v0, "e":Ljava/lang/Exception;
    new-instance v1, Lcom/virgilsecurity/sdk/crypto/exceptions/CryptoException;

    invoke-direct {v1, v0}, Lcom/virgilsecurity/sdk/crypto/exceptions/CryptoException;-><init>(Ljava/lang/Throwable;)V

    throw v1

    .line 1431
    .end local v0    # "e":Ljava/lang/Exception;
    :cond_4
    new-instance v0, Lcom/virgilsecurity/common/exception/NullArgumentException;

    const-string v1, "privateKey"

    invoke-direct {v0, v1}, Lcom/virgilsecurity/common/exception/NullArgumentException;-><init>(Ljava/lang/String;)V

    throw v0
.end method

.method public exportPublicKey(Lcom/virgilsecurity/sdk/crypto/VirgilPublicKey;)[B
    .locals 4
    .param p1, "publicKey"    # Lcom/virgilsecurity/sdk/crypto/VirgilPublicKey;
    .annotation system Ldalvik/annotation/Throws;
        value = {
            Lcom/virgilsecurity/sdk/crypto/exceptions/CryptoException;
        }
    .end annotation

    .line 1491
    :try_start_0
    new-instance v0, Lcom/virgilsecurity/crypto/foundation/KeyAsn1Serializer;

    invoke-direct {v0}, Lcom/virgilsecurity/crypto/foundation/KeyAsn1Serializer;-><init>()V
    :try_end_0
    .catch Ljava/lang/Exception; {:try_start_0 .. :try_end_0} :catch_0

    .line 1492
    .local v0, "serializer":Lcom/virgilsecurity/crypto/foundation/KeyAsn1Serializer;
    :try_start_1
    invoke-virtual {v0}, Lcom/virgilsecurity/crypto/foundation/KeyAsn1Serializer;->setupDefaults()V

    .line 1494
    invoke-virtual {p1}, Lcom/virgilsecurity/sdk/crypto/VirgilPublicKey;->getPublicKey()Lcom/virgilsecurity/crypto/foundation/PublicKey;

    move-result-object v1

    iget-object v2, p0, Lcom/virgilsecurity/sdk/crypto/VirgilCrypto;->rng:Lcom/virgilsecurity/crypto/foundation/Random;

    invoke-static {v1, v2}, Lcom/virgilsecurity/crypto/foundation/KeyAlgFactory;->createFromKey(Lcom/virgilsecurity/crypto/foundation/Key;Lcom/virgilsecurity/crypto/foundation/Random;)Lcom/virgilsecurity/crypto/foundation/KeyAlg;

    move-result-object v1

    .line 1495
    .local v1, "keyAlg":Lcom/virgilsecurity/crypto/foundation/KeyAlg;
    invoke-virtual {p1}, Lcom/virgilsecurity/sdk/crypto/VirgilPublicKey;->getPublicKey()Lcom/virgilsecurity/crypto/foundation/PublicKey;

    move-result-object v2

    invoke-interface {v1, v2}, Lcom/virgilsecurity/crypto/foundation/KeyAlg;->exportPublicKey(Lcom/virgilsecurity/crypto/foundation/PublicKey;)Lcom/virgilsecurity/crypto/foundation/RawPublicKey;

    move-result-object v2

    .line 1497
    .local v2, "rawPublicKey":Lcom/virgilsecurity/crypto/foundation/RawPublicKey;
    invoke-virtual {v0, v2}, Lcom/virgilsecurity/crypto/foundation/KeyAsn1Serializer;->serializePublicKey(Lcom/virgilsecurity/crypto/foundation/RawPublicKey;)[B

    move-result-object v3
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    .line 1498
    :try_start_2
    invoke-virtual {v0}, Lcom/virgilsecurity/crypto/foundation/KeyAsn1Serializer;->close()V
    :try_end_2
    .catch Ljava/lang/Exception; {:try_start_2 .. :try_end_2} :catch_0

    .line 1497
    return-object v3

    .line 1491
    .end local v1    # "keyAlg":Lcom/virgilsecurity/crypto/foundation/KeyAlg;
    .end local v2    # "rawPublicKey":Lcom/virgilsecurity/crypto/foundation/RawPublicKey;
    :catchall_0
    move-exception v1

    :try_start_3
    invoke-virtual {v0}, Lcom/virgilsecurity/crypto/foundation/KeyAsn1Serializer;->close()V
    :try_end_3
    .catchall {:try_start_3 .. :try_end_3} :catchall_1

    goto :goto_0

    :catchall_1
    move-exception v2

    :try_start_4
    invoke-virtual {v1, v2}, Ljava/lang/Throwable;->addSuppressed(Ljava/lang/Throwable;)V

    .end local p1    # "publicKey":Lcom/virgilsecurity/sdk/crypto/VirgilPublicKey;
    :goto_0
    throw v1
    :try_end_4
    .catch Ljava/lang/Exception; {:try_start_4 .. :try_end_4} :catch_0

    .line 1498
    .end local v0    # "serializer":Lcom/virgilsecurity/crypto/foundation/KeyAsn1Serializer;
    .restart local p1    # "publicKey":Lcom/virgilsecurity/sdk/crypto/VirgilPublicKey;
    :catch_0
    move-exception v0

    .line 1499
    .local v0, "e":Ljava/lang/Exception;
    new-instance v1, Lcom/virgilsecurity/sdk/crypto/exceptions/CryptoException;

    invoke-direct {v1, v0}, Lcom/virgilsecurity/sdk/crypto/exceptions/CryptoException;-><init>(Ljava/lang/Throwable;)V

    throw v1
.end method

.method public extractPublicKey(Lcom/virgilsecurity/sdk/crypto/VirgilPrivateKey;)Lcom/virgilsecurity/sdk/crypto/VirgilPublicKey;
    .locals 4
    .param p1, "privateKey"    # Lcom/virgilsecurity/sdk/crypto/VirgilPrivateKey;

    .line 1545
    if-eqz p1, :cond_0

    .line 1549
    new-instance v0, Lcom/virgilsecurity/sdk/crypto/VirgilPublicKey;

    invoke-virtual {p1}, Lcom/virgilsecurity/sdk/crypto/VirgilPrivateKey;->getIdentifier()[B

    move-result-object v1

    .line 1550
    invoke-virtual {p1}, Lcom/virgilsecurity/sdk/crypto/VirgilPrivateKey;->getPrivateKey()Lcom/virgilsecurity/crypto/foundation/PrivateKey;

    move-result-object v2

    invoke-interface {v2}, Lcom/virgilsecurity/crypto/foundation/PrivateKey;->extractPublicKey()Lcom/virgilsecurity/crypto/foundation/PublicKey;

    move-result-object v2

    invoke-virtual {p1}, Lcom/virgilsecurity/sdk/crypto/VirgilPrivateKey;->getKeyPairType()Lcom/virgilsecurity/sdk/crypto/KeyPairType;

    move-result-object v3

    invoke-direct {v0, v1, v2, v3}, Lcom/virgilsecurity/sdk/crypto/VirgilPublicKey;-><init>([BLcom/virgilsecurity/crypto/foundation/PublicKey;Lcom/virgilsecurity/sdk/crypto/KeyPairType;)V

    .line 1549
    return-object v0

    .line 1546
    :cond_0
    new-instance v0, Lcom/virgilsecurity/common/exception/NullArgumentException;

    const-string v1, "privateKey"

    invoke-direct {v0, v1}, Lcom/virgilsecurity/common/exception/NullArgumentException;-><init>(Ljava/lang/String;)V

    throw v0
.end method

.method public generateKeyPair()Lcom/virgilsecurity/sdk/crypto/VirgilKeyPair;
    .locals 1
    .annotation system Ldalvik/annotation/Throws;
        value = {
            Lcom/virgilsecurity/sdk/crypto/exceptions/CryptoException;
        }
    .end annotation

    .line 346
    iget-object v0, p0, Lcom/virgilsecurity/sdk/crypto/VirgilCrypto;->defaultKeyPairType:Lcom/virgilsecurity/sdk/crypto/KeyPairType;

    invoke-virtual {p0, v0}, Lcom/virgilsecurity/sdk/crypto/VirgilCrypto;->generateKeyPair(Lcom/virgilsecurity/sdk/crypto/KeyPairType;)Lcom/virgilsecurity/sdk/crypto/VirgilKeyPair;

    move-result-object v0

    return-object v0
.end method

.method public generateKeyPair(Lcom/virgilsecurity/sdk/crypto/KeyPairType;)Lcom/virgilsecurity/sdk/crypto/VirgilKeyPair;
    .locals 1
    .param p1, "keyPairType"    # Lcom/virgilsecurity/sdk/crypto/KeyPairType;
    .annotation system Ldalvik/annotation/Throws;
        value = {
            Lcom/virgilsecurity/sdk/crypto/exceptions/CryptoException;
        }
    .end annotation

    .line 336
    iget-object v0, p0, Lcom/virgilsecurity/sdk/crypto/VirgilCrypto;->rng:Lcom/virgilsecurity/crypto/foundation/Random;

    invoke-direct {p0, p1, v0}, Lcom/virgilsecurity/sdk/crypto/VirgilCrypto;->generateKeyPair(Lcom/virgilsecurity/sdk/crypto/KeyPairType;Lcom/virgilsecurity/crypto/foundation/Random;)Lcom/virgilsecurity/sdk/crypto/VirgilKeyPair;

    move-result-object v0

    return-object v0
.end method

.method public generateKeyPair(Lcom/virgilsecurity/sdk/crypto/KeyPairType;[B)Lcom/virgilsecurity/sdk/crypto/VirgilKeyPair;
    .locals 3
    .param p1, "keyPairType"    # Lcom/virgilsecurity/sdk/crypto/KeyPairType;
    .param p2, "seed"    # [B
    .annotation system Ldalvik/annotation/Throws;
        value = {
            Lcom/virgilsecurity/sdk/crypto/exceptions/CryptoException;
        }
    .end annotation

    .line 302
    new-instance v0, Lcom/virgilsecurity/crypto/foundation/KeyMaterialRng;

    invoke-direct {v0}, Lcom/virgilsecurity/crypto/foundation/KeyMaterialRng;-><init>()V

    .line 304
    .local v0, "keyMaterialRng":Lcom/virgilsecurity/crypto/foundation/KeyMaterialRng;
    :try_start_0
    array-length v1, p2

    invoke-virtual {v0}, Lcom/virgilsecurity/crypto/foundation/KeyMaterialRng;->getKeyMaterialLenMin()I

    move-result v2

    if-lt v1, v2, :cond_0

    array-length v1, p2

    .line 305
    invoke-virtual {v0}, Lcom/virgilsecurity/crypto/foundation/KeyMaterialRng;->getKeyMaterialLenMax()I

    move-result v2

    if-gt v1, v2, :cond_0

    .line 309
    invoke-virtual {v0, p2}, Lcom/virgilsecurity/crypto/foundation/KeyMaterialRng;->resetKeyMaterial([B)V

    .line 311
    invoke-direct {p0, p1, v0}, Lcom/virgilsecurity/sdk/crypto/VirgilCrypto;->generateKeyPair(Lcom/virgilsecurity/sdk/crypto/KeyPairType;Lcom/virgilsecurity/crypto/foundation/Random;)Lcom/virgilsecurity/sdk/crypto/VirgilKeyPair;

    move-result-object v1
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    .line 312
    invoke-virtual {v0}, Lcom/virgilsecurity/crypto/foundation/KeyMaterialRng;->close()V

    .line 311
    return-object v1

    .line 306
    :cond_0
    :try_start_1
    new-instance v1, Lcom/virgilsecurity/sdk/crypto/exceptions/CryptoException;

    const-string v2, "Invalid seed size"

    invoke-direct {v1, v2}, Lcom/virgilsecurity/sdk/crypto/exceptions/CryptoException;-><init>(Ljava/lang/String;)V

    .end local v0    # "keyMaterialRng":Lcom/virgilsecurity/crypto/foundation/KeyMaterialRng;
    .end local p1    # "keyPairType":Lcom/virgilsecurity/sdk/crypto/KeyPairType;
    .end local p2    # "seed":[B
    throw v1
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    .line 302
    .restart local v0    # "keyMaterialRng":Lcom/virgilsecurity/crypto/foundation/KeyMaterialRng;
    .restart local p1    # "keyPairType":Lcom/virgilsecurity/sdk/crypto/KeyPairType;
    .restart local p2    # "seed":[B
    :catchall_0
    move-exception v1

    :try_start_2
    invoke-virtual {v0}, Lcom/virgilsecurity/crypto/foundation/KeyMaterialRng;->close()V
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_1

    goto :goto_0

    :catchall_1
    move-exception v2

    invoke-virtual {v1, v2}, Ljava/lang/Throwable;->addSuppressed(Ljava/lang/Throwable;)V

    :goto_0
    throw v1
.end method

.method public generateKeyPair([B)Lcom/virgilsecurity/sdk/crypto/VirgilKeyPair;
    .locals 1
    .param p1, "seed"    # [B
    .annotation system Ldalvik/annotation/Throws;
        value = {
            Lcom/virgilsecurity/sdk/crypto/exceptions/CryptoException;
        }
    .end annotation

    .line 324
    iget-object v0, p0, Lcom/virgilsecurity/sdk/crypto/VirgilCrypto;->defaultKeyPairType:Lcom/virgilsecurity/sdk/crypto/KeyPairType;

    invoke-virtual {p0, v0, p1}, Lcom/virgilsecurity/sdk/crypto/VirgilCrypto;->generateKeyPair(Lcom/virgilsecurity/sdk/crypto/KeyPairType;[B)Lcom/virgilsecurity/sdk/crypto/VirgilKeyPair;

    move-result-object v0

    return-object v0
.end method

.method public generateRandomData(I)[B
    .locals 1
    .param p1, "size"    # I

    .line 1570
    iget-object v0, p0, Lcom/virgilsecurity/sdk/crypto/VirgilCrypto;->rng:Lcom/virgilsecurity/crypto/foundation/Random;

    invoke-interface {v0, p1}, Lcom/virgilsecurity/crypto/foundation/Random;->random(I)[B

    move-result-object v0

    return-object v0
.end method

.method public generateSignature(Ljava/io/InputStream;Lcom/virgilsecurity/sdk/crypto/VirgilPrivateKey;)[B
    .locals 8
    .param p1, "stream"    # Ljava/io/InputStream;
    .param p2, "privateKey"    # Lcom/virgilsecurity/sdk/crypto/VirgilPrivateKey;
    .annotation system Ldalvik/annotation/Throws;
        value = {
            Lcom/virgilsecurity/sdk/crypto/exceptions/SigningException;
        }
    .end annotation

    .line 1290
    if-eqz p1, :cond_5

    .line 1293
    if-eqz p2, :cond_4

    .line 1297
    invoke-virtual {p2}, Lcom/virgilsecurity/sdk/crypto/VirgilPrivateKey;->getPrivateKey()Lcom/virgilsecurity/crypto/foundation/PrivateKey;

    move-result-object v0

    .line 1298
    .local v0, "key":Lcom/virgilsecurity/crypto/foundation/PrivateKey;
    iget-object v1, p0, Lcom/virgilsecurity/sdk/crypto/VirgilCrypto;->rng:Lcom/virgilsecurity/crypto/foundation/Random;

    invoke-static {v0, v1}, Lcom/virgilsecurity/crypto/foundation/KeyAlgFactory;->createFromKey(Lcom/virgilsecurity/crypto/foundation/Key;Lcom/virgilsecurity/crypto/foundation/Random;)Lcom/virgilsecurity/crypto/foundation/KeyAlg;

    move-result-object v1

    .line 1299
    .local v1, "keyAlg":Lcom/virgilsecurity/crypto/foundation/KeyAlg;
    instance-of v2, v1, Lcom/virgilsecurity/crypto/foundation/KeySigner;

    if-eqz v2, :cond_1

    move-object v2, v1

    check-cast v2, Lcom/virgilsecurity/crypto/foundation/KeySigner;

    invoke-interface {v2, v0}, Lcom/virgilsecurity/crypto/foundation/KeySigner;->canSign(Lcom/virgilsecurity/crypto/foundation/PrivateKey;)Z

    move-result v2

    if-eqz v2, :cond_0

    goto :goto_0

    .line 1300
    :cond_0
    new-instance v2, Lcom/virgilsecurity/sdk/crypto/exceptions/SigningException;

    const-string v3, "This key doesn\'t support signing"

    invoke-direct {v2, v3}, Lcom/virgilsecurity/sdk/crypto/exceptions/SigningException;-><init>(Ljava/lang/String;)V

    throw v2

    .line 1303
    :cond_1
    :goto_0
    :try_start_0
    new-instance v2, Lcom/virgilsecurity/crypto/foundation/Signer;

    invoke-direct {v2}, Lcom/virgilsecurity/crypto/foundation/Signer;-><init>()V
    :try_end_0
    .catch Ljava/io/IOException; {:try_start_0 .. :try_end_0} :catch_0

    .line 1304
    .local v2, "signer":Lcom/virgilsecurity/crypto/foundation/Signer;
    :try_start_1
    iget-object v3, p0, Lcom/virgilsecurity/sdk/crypto/VirgilCrypto;->rng:Lcom/virgilsecurity/crypto/foundation/Random;

    invoke-virtual {v2, v3}, Lcom/virgilsecurity/crypto/foundation/Signer;->setRandom(Lcom/virgilsecurity/crypto/foundation/Random;)V

    .line 1305
    new-instance v3, Lcom/virgilsecurity/crypto/foundation/Sha512;

    invoke-direct {v3}, Lcom/virgilsecurity/crypto/foundation/Sha512;-><init>()V

    invoke-virtual {v2, v3}, Lcom/virgilsecurity/crypto/foundation/Signer;->setHash(Lcom/virgilsecurity/crypto/foundation/Hash;)V

    .line 1307
    invoke-virtual {v2}, Lcom/virgilsecurity/crypto/foundation/Signer;->reset()V

    .line 1309
    const/16 v3, 0x400

    new-array v4, v3, [B

    .line 1311
    .local v4, "buffer":[B
    :goto_1
    const/4 v5, -0x1

    invoke-virtual {p1, v4}, Ljava/io/InputStream;->read([B)I

    move-result v6

    move v7, v6

    .local v7, "dataRead":I
    if-eq v5, v6, :cond_3

    .line 1314
    if-ne v7, v3, :cond_2

    .line 1315
    move-object v5, v4

    .local v5, "data":[B
    goto :goto_2

    .line 1317
    .end local v5    # "data":[B
    :cond_2
    invoke-static {v4, v7}, Ljava/util/Arrays;->copyOf([BI)[B

    move-result-object v5

    .line 1320
    .restart local v5    # "data":[B
    :goto_2
    invoke-virtual {v2, v5}, Lcom/virgilsecurity/crypto/foundation/Signer;->appendData([B)V

    .line 1321
    .end local v5    # "data":[B
    goto :goto_1

    .line 1323
    :cond_3
    invoke-virtual {v2, v0}, Lcom/virgilsecurity/crypto/foundation/Signer;->sign(Lcom/virgilsecurity/crypto/foundation/PrivateKey;)[B

    move-result-object v3
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    .line 1324
    :try_start_2
    invoke-virtual {v2}, Lcom/virgilsecurity/crypto/foundation/Signer;->close()V
    :try_end_2
    .catch Ljava/io/IOException; {:try_start_2 .. :try_end_2} :catch_0

    .line 1323
    return-object v3

    .line 1303
    .end local v4    # "buffer":[B
    .end local v7    # "dataRead":I
    :catchall_0
    move-exception v3

    :try_start_3
    invoke-virtual {v2}, Lcom/virgilsecurity/crypto/foundation/Signer;->close()V
    :try_end_3
    .catchall {:try_start_3 .. :try_end_3} :catchall_1

    goto :goto_3

    :catchall_1
    move-exception v4

    :try_start_4
    invoke-virtual {v3, v4}, Ljava/lang/Throwable;->addSuppressed(Ljava/lang/Throwable;)V

    .end local v0    # "key":Lcom/virgilsecurity/crypto/foundation/PrivateKey;
    .end local v1    # "keyAlg":Lcom/virgilsecurity/crypto/foundation/KeyAlg;
    .end local p1    # "stream":Ljava/io/InputStream;
    .end local p2    # "privateKey":Lcom/virgilsecurity/sdk/crypto/VirgilPrivateKey;
    :goto_3
    throw v3
    :try_end_4
    .catch Ljava/io/IOException; {:try_start_4 .. :try_end_4} :catch_0

    .line 1324
    .end local v2    # "signer":Lcom/virgilsecurity/crypto/foundation/Signer;
    .restart local v0    # "key":Lcom/virgilsecurity/crypto/foundation/PrivateKey;
    .restart local v1    # "keyAlg":Lcom/virgilsecurity/crypto/foundation/KeyAlg;
    .restart local p1    # "stream":Ljava/io/InputStream;
    .restart local p2    # "privateKey":Lcom/virgilsecurity/sdk/crypto/VirgilPrivateKey;
    :catch_0
    move-exception v2

    .line 1325
    .local v2, "e":Ljava/io/IOException;
    new-instance v3, Lcom/virgilsecurity/sdk/crypto/exceptions/SigningException;

    invoke-direct {v3, v2}, Lcom/virgilsecurity/sdk/crypto/exceptions/SigningException;-><init>(Ljava/lang/Throwable;)V

    throw v3

    .line 1294
    .end local v0    # "key":Lcom/virgilsecurity/crypto/foundation/PrivateKey;
    .end local v1    # "keyAlg":Lcom/virgilsecurity/crypto/foundation/KeyAlg;
    .end local v2    # "e":Ljava/io/IOException;
    :cond_4
    new-instance v0, Lcom/virgilsecurity/common/exception/NullArgumentException;

    const-string v1, "privateKey"

    invoke-direct {v0, v1}, Lcom/virgilsecurity/common/exception/NullArgumentException;-><init>(Ljava/lang/String;)V

    throw v0

    .line 1291
    :cond_5
    new-instance v0, Lcom/virgilsecurity/common/exception/NullArgumentException;

    const-string/jumbo v1, "stream"

    invoke-direct {v0, v1}, Lcom/virgilsecurity/common/exception/NullArgumentException;-><init>(Ljava/lang/String;)V

    throw v0
.end method

.method public generateSignature([BLcom/virgilsecurity/sdk/crypto/VirgilPrivateKey;)[B
    .locals 5
    .param p1, "data"    # [B
    .param p2, "privateKey"    # Lcom/virgilsecurity/sdk/crypto/VirgilPrivateKey;
    .annotation system Ldalvik/annotation/Throws;
        value = {
            Lcom/virgilsecurity/sdk/crypto/exceptions/SigningException;
        }
    .end annotation

    .line 1246
    if-eqz p1, :cond_3

    .line 1249
    if-eqz p2, :cond_2

    .line 1253
    invoke-virtual {p2}, Lcom/virgilsecurity/sdk/crypto/VirgilPrivateKey;->getPrivateKey()Lcom/virgilsecurity/crypto/foundation/PrivateKey;

    move-result-object v0

    .line 1254
    .local v0, "key":Lcom/virgilsecurity/crypto/foundation/PrivateKey;
    iget-object v1, p0, Lcom/virgilsecurity/sdk/crypto/VirgilCrypto;->rng:Lcom/virgilsecurity/crypto/foundation/Random;

    invoke-static {v0, v1}, Lcom/virgilsecurity/crypto/foundation/KeyAlgFactory;->createFromKey(Lcom/virgilsecurity/crypto/foundation/Key;Lcom/virgilsecurity/crypto/foundation/Random;)Lcom/virgilsecurity/crypto/foundation/KeyAlg;

    move-result-object v1

    .line 1255
    .local v1, "keyAlg":Lcom/virgilsecurity/crypto/foundation/KeyAlg;
    instance-of v2, v1, Lcom/virgilsecurity/crypto/foundation/KeySigner;

    if-eqz v2, :cond_1

    move-object v2, v1

    check-cast v2, Lcom/virgilsecurity/crypto/foundation/KeySigner;

    invoke-interface {v2, v0}, Lcom/virgilsecurity/crypto/foundation/KeySigner;->canSign(Lcom/virgilsecurity/crypto/foundation/PrivateKey;)Z

    move-result v2

    if-eqz v2, :cond_0

    goto :goto_0

    .line 1256
    :cond_0
    new-instance v2, Lcom/virgilsecurity/sdk/crypto/exceptions/SigningException;

    const-string v3, "This key doesn\'t support signing"

    invoke-direct {v2, v3}, Lcom/virgilsecurity/sdk/crypto/exceptions/SigningException;-><init>(Ljava/lang/String;)V

    throw v2

    .line 1259
    :cond_1
    :goto_0
    :try_start_0
    new-instance v2, Lcom/virgilsecurity/crypto/foundation/Signer;

    invoke-direct {v2}, Lcom/virgilsecurity/crypto/foundation/Signer;-><init>()V
    :try_end_0
    .catch Ljava/lang/Exception; {:try_start_0 .. :try_end_0} :catch_0

    .line 1260
    .local v2, "signer":Lcom/virgilsecurity/crypto/foundation/Signer;
    :try_start_1
    iget-object v3, p0, Lcom/virgilsecurity/sdk/crypto/VirgilCrypto;->rng:Lcom/virgilsecurity/crypto/foundation/Random;

    invoke-virtual {v2, v3}, Lcom/virgilsecurity/crypto/foundation/Signer;->setRandom(Lcom/virgilsecurity/crypto/foundation/Random;)V

    .line 1261
    new-instance v3, Lcom/virgilsecurity/crypto/foundation/Sha512;

    invoke-direct {v3}, Lcom/virgilsecurity/crypto/foundation/Sha512;-><init>()V

    invoke-virtual {v2, v3}, Lcom/virgilsecurity/crypto/foundation/Signer;->setHash(Lcom/virgilsecurity/crypto/foundation/Hash;)V

    .line 1263
    invoke-virtual {v2}, Lcom/virgilsecurity/crypto/foundation/Signer;->reset()V

    .line 1264
    invoke-virtual {v2, p1}, Lcom/virgilsecurity/crypto/foundation/Signer;->appendData([B)V

    .line 1266
    invoke-virtual {v2, v0}, Lcom/virgilsecurity/crypto/foundation/Signer;->sign(Lcom/virgilsecurity/crypto/foundation/PrivateKey;)[B

    move-result-object v3
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    .line 1267
    :try_start_2
    invoke-virtual {v2}, Lcom/virgilsecurity/crypto/foundation/Signer;->close()V
    :try_end_2
    .catch Ljava/lang/Exception; {:try_start_2 .. :try_end_2} :catch_0

    .line 1266
    return-object v3

    .line 1259
    :catchall_0
    move-exception v3

    :try_start_3
    invoke-virtual {v2}, Lcom/virgilsecurity/crypto/foundation/Signer;->close()V
    :try_end_3
    .catchall {:try_start_3 .. :try_end_3} :catchall_1

    goto :goto_1

    :catchall_1
    move-exception v4

    :try_start_4
    invoke-virtual {v3, v4}, Ljava/lang/Throwable;->addSuppressed(Ljava/lang/Throwable;)V

    .end local v0    # "key":Lcom/virgilsecurity/crypto/foundation/PrivateKey;
    .end local v1    # "keyAlg":Lcom/virgilsecurity/crypto/foundation/KeyAlg;
    .end local p1    # "data":[B
    .end local p2    # "privateKey":Lcom/virgilsecurity/sdk/crypto/VirgilPrivateKey;
    :goto_1
    throw v3
    :try_end_4
    .catch Ljava/lang/Exception; {:try_start_4 .. :try_end_4} :catch_0

    .line 1267
    .end local v2    # "signer":Lcom/virgilsecurity/crypto/foundation/Signer;
    .restart local v0    # "key":Lcom/virgilsecurity/crypto/foundation/PrivateKey;
    .restart local v1    # "keyAlg":Lcom/virgilsecurity/crypto/foundation/KeyAlg;
    .restart local p1    # "data":[B
    .restart local p2    # "privateKey":Lcom/virgilsecurity/sdk/crypto/VirgilPrivateKey;
    :catch_0
    move-exception v2

    .line 1268
    .local v2, "e":Ljava/lang/Exception;
    new-instance v3, Lcom/virgilsecurity/sdk/crypto/exceptions/SigningException;

    invoke-virtual {v2}, Ljava/lang/Exception;->getMessage()Ljava/lang/String;

    move-result-object v4

    invoke-direct {v3, v4}, Lcom/virgilsecurity/sdk/crypto/exceptions/SigningException;-><init>(Ljava/lang/String;)V

    throw v3

    .line 1250
    .end local v0    # "key":Lcom/virgilsecurity/crypto/foundation/PrivateKey;
    .end local v1    # "keyAlg":Lcom/virgilsecurity/crypto/foundation/KeyAlg;
    .end local v2    # "e":Ljava/lang/Exception;
    :cond_2
    new-instance v0, Lcom/virgilsecurity/common/exception/NullArgumentException;

    const-string v1, "privateKey"

    invoke-direct {v0, v1}, Lcom/virgilsecurity/common/exception/NullArgumentException;-><init>(Ljava/lang/String;)V

    throw v0

    .line 1247
    :cond_3
    new-instance v0, Lcom/virgilsecurity/common/exception/NullArgumentException;

    const-string v1, "data"

    invoke-direct {v0, v1}, Lcom/virgilsecurity/common/exception/NullArgumentException;-><init>(Ljava/lang/String;)V

    throw v0
.end method

.method public getDefaultKeyPairType()Lcom/virgilsecurity/sdk/crypto/KeyPairType;
    .locals 1

    .line 1642
    iget-object v0, p0, Lcom/virgilsecurity/sdk/crypto/VirgilCrypto;->defaultKeyPairType:Lcom/virgilsecurity/sdk/crypto/KeyPairType;

    return-object v0
.end method

.method public getRng()Lcom/virgilsecurity/crypto/foundation/Random;
    .locals 1

    .line 1633
    iget-object v0, p0, Lcom/virgilsecurity/sdk/crypto/VirgilCrypto;->rng:Lcom/virgilsecurity/crypto/foundation/Random;

    return-object v0
.end method

.method public importPrivateKey([B)Lcom/virgilsecurity/sdk/crypto/VirgilKeyPair;
    .locals 8
    .param p1, "data"    # [B
    .annotation system Ldalvik/annotation/Throws;
        value = {
            Lcom/virgilsecurity/sdk/crypto/exceptions/CryptoException;
        }
    .end annotation

    .line 1459
    if-eqz p1, :cond_0

    .line 1463
    :try_start_0
    new-instance v0, Lcom/virgilsecurity/crypto/foundation/KeyProvider;

    invoke-direct {v0}, Lcom/virgilsecurity/crypto/foundation/KeyProvider;-><init>()V
    :try_end_0
    .catch Ljava/lang/Exception; {:try_start_0 .. :try_end_0} :catch_0

    .line 1464
    .local v0, "keyProvider":Lcom/virgilsecurity/crypto/foundation/KeyProvider;
    :try_start_1
    iget-object v1, p0, Lcom/virgilsecurity/sdk/crypto/VirgilCrypto;->rng:Lcom/virgilsecurity/crypto/foundation/Random;

    invoke-virtual {v0, v1}, Lcom/virgilsecurity/crypto/foundation/KeyProvider;->setRandom(Lcom/virgilsecurity/crypto/foundation/Random;)V

    .line 1465
    invoke-virtual {v0}, Lcom/virgilsecurity/crypto/foundation/KeyProvider;->setupDefaults()V

    .line 1467
    invoke-virtual {v0, p1}, Lcom/virgilsecurity/crypto/foundation/KeyProvider;->importPrivateKey([B)Lcom/virgilsecurity/crypto/foundation/PrivateKey;

    move-result-object v1

    .line 1468
    .local v1, "privateKey":Lcom/virgilsecurity/crypto/foundation/PrivateKey;
    invoke-static {v1}, Lcom/virgilsecurity/sdk/crypto/KeyPairType;->fromKey(Lcom/virgilsecurity/crypto/foundation/Key;)Lcom/virgilsecurity/sdk/crypto/KeyPairType;

    move-result-object v2

    .line 1470
    .local v2, "keyPairType":Lcom/virgilsecurity/sdk/crypto/KeyPairType;
    invoke-interface {v1}, Lcom/virgilsecurity/crypto/foundation/PrivateKey;->extractPublicKey()Lcom/virgilsecurity/crypto/foundation/PublicKey;

    move-result-object v3

    .line 1472
    .local v3, "publicKey":Lcom/virgilsecurity/crypto/foundation/PublicKey;
    invoke-direct {p0, v3}, Lcom/virgilsecurity/sdk/crypto/VirgilCrypto;->computePublicKeyIdentifier(Lcom/virgilsecurity/crypto/foundation/PublicKey;)[B

    move-result-object v4

    .line 1474
    .local v4, "keyId":[B
    new-instance v5, Lcom/virgilsecurity/sdk/crypto/VirgilPublicKey;

    invoke-direct {v5, v4, v3, v2}, Lcom/virgilsecurity/sdk/crypto/VirgilPublicKey;-><init>([BLcom/virgilsecurity/crypto/foundation/PublicKey;Lcom/virgilsecurity/sdk/crypto/KeyPairType;)V

    .line 1475
    .local v5, "virgilPublicKey":Lcom/virgilsecurity/sdk/crypto/VirgilPublicKey;
    new-instance v6, Lcom/virgilsecurity/sdk/crypto/VirgilPrivateKey;

    invoke-direct {v6, v4, v1, v2}, Lcom/virgilsecurity/sdk/crypto/VirgilPrivateKey;-><init>([BLcom/virgilsecurity/crypto/foundation/PrivateKey;Lcom/virgilsecurity/sdk/crypto/KeyPairType;)V

    .line 1477
    .local v6, "virgilPrivateKey":Lcom/virgilsecurity/sdk/crypto/VirgilPrivateKey;
    new-instance v7, Lcom/virgilsecurity/sdk/crypto/VirgilKeyPair;

    invoke-direct {v7, v5, v6}, Lcom/virgilsecurity/sdk/crypto/VirgilKeyPair;-><init>(Lcom/virgilsecurity/sdk/crypto/VirgilPublicKey;Lcom/virgilsecurity/sdk/crypto/VirgilPrivateKey;)V
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    .line 1478
    :try_start_2
    invoke-virtual {v0}, Lcom/virgilsecurity/crypto/foundation/KeyProvider;->close()V
    :try_end_2
    .catch Ljava/lang/Exception; {:try_start_2 .. :try_end_2} :catch_0

    .line 1477
    return-object v7

    .line 1463
    .end local v1    # "privateKey":Lcom/virgilsecurity/crypto/foundation/PrivateKey;
    .end local v2    # "keyPairType":Lcom/virgilsecurity/sdk/crypto/KeyPairType;
    .end local v3    # "publicKey":Lcom/virgilsecurity/crypto/foundation/PublicKey;
    .end local v4    # "keyId":[B
    .end local v5    # "virgilPublicKey":Lcom/virgilsecurity/sdk/crypto/VirgilPublicKey;
    .end local v6    # "virgilPrivateKey":Lcom/virgilsecurity/sdk/crypto/VirgilPrivateKey;
    :catchall_0
    move-exception v1

    :try_start_3
    invoke-virtual {v0}, Lcom/virgilsecurity/crypto/foundation/KeyProvider;->close()V
    :try_end_3
    .catchall {:try_start_3 .. :try_end_3} :catchall_1

    goto :goto_0

    :catchall_1
    move-exception v2

    :try_start_4
    invoke-virtual {v1, v2}, Ljava/lang/Throwable;->addSuppressed(Ljava/lang/Throwable;)V

    .end local p1    # "data":[B
    :goto_0
    throw v1
    :try_end_4
    .catch Ljava/lang/Exception; {:try_start_4 .. :try_end_4} :catch_0

    .line 1478
    .end local v0    # "keyProvider":Lcom/virgilsecurity/crypto/foundation/KeyProvider;
    .restart local p1    # "data":[B
    :catch_0
    move-exception v0

    .line 1479
    .local v0, "e":Ljava/lang/Exception;
    new-instance v1, Lcom/virgilsecurity/sdk/crypto/exceptions/CryptoException;

    invoke-direct {v1, v0}, Lcom/virgilsecurity/sdk/crypto/exceptions/CryptoException;-><init>(Ljava/lang/Throwable;)V

    throw v1

    .line 1460
    .end local v0    # "e":Ljava/lang/Exception;
    :cond_0
    new-instance v0, Lcom/virgilsecurity/common/exception/NullArgumentException;

    const-string v1, "data"

    invoke-direct {v0, v1}, Lcom/virgilsecurity/common/exception/NullArgumentException;-><init>(Ljava/lang/String;)V

    throw v0
.end method

.method public importPublicKey([B)Lcom/virgilsecurity/sdk/crypto/VirgilPublicKey;
    .locals 7
    .param p1, "data"    # [B
    .annotation system Ldalvik/annotation/Throws;
        value = {
            Lcom/virgilsecurity/sdk/crypto/exceptions/CryptoException;
        }
    .end annotation

    .line 1511
    if-eqz p1, :cond_1

    .line 1515
    :try_start_0
    new-instance v0, Lcom/virgilsecurity/crypto/foundation/KeyProvider;

    invoke-direct {v0}, Lcom/virgilsecurity/crypto/foundation/KeyProvider;-><init>()V
    :try_end_0
    .catch Ljava/lang/Exception; {:try_start_0 .. :try_end_0} :catch_0

    .line 1516
    .local v0, "keyProvider":Lcom/virgilsecurity/crypto/foundation/KeyProvider;
    :try_start_1
    new-instance v1, Lcom/virgilsecurity/crypto/foundation/KeyAsn1Deserializer;

    invoke-direct {v1}, Lcom/virgilsecurity/crypto/foundation/KeyAsn1Deserializer;-><init>()V
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_2

    .line 1518
    .local v1, "deserializer":Lcom/virgilsecurity/crypto/foundation/KeyAsn1Deserializer;
    :try_start_2
    invoke-virtual {v1}, Lcom/virgilsecurity/crypto/foundation/KeyAsn1Deserializer;->setupDefaults()V

    .line 1519
    invoke-virtual {v1, p1}, Lcom/virgilsecurity/crypto/foundation/KeyAsn1Deserializer;->deserializePublicKey([B)Lcom/virgilsecurity/crypto/foundation/RawPublicKey;

    move-result-object v2

    .line 1520
    .local v2, "rawKey":Lcom/virgilsecurity/crypto/foundation/RawPublicKey;
    iget-wide v3, v2, Lcom/virgilsecurity/crypto/foundation/RawPublicKey;->cCtx:J

    const-wide/16 v5, 0x0

    cmp-long v3, v3, v5

    if-eqz v3, :cond_0

    invoke-virtual {v2}, Lcom/virgilsecurity/crypto/foundation/RawPublicKey;->algId()Lcom/virgilsecurity/crypto/foundation/AlgId;

    move-result-object v3

    sget-object v4, Lcom/virgilsecurity/crypto/foundation/AlgId;->NONE:Lcom/virgilsecurity/crypto/foundation/AlgId;

    if-eq v3, v4, :cond_0

    .line 1524
    iget-object v3, p0, Lcom/virgilsecurity/sdk/crypto/VirgilCrypto;->rng:Lcom/virgilsecurity/crypto/foundation/Random;

    invoke-virtual {v0, v3}, Lcom/virgilsecurity/crypto/foundation/KeyProvider;->setRandom(Lcom/virgilsecurity/crypto/foundation/Random;)V

    .line 1525
    invoke-virtual {v0}, Lcom/virgilsecurity/crypto/foundation/KeyProvider;->setupDefaults()V

    .line 1527
    invoke-virtual {v0, p1}, Lcom/virgilsecurity/crypto/foundation/KeyProvider;->importPublicKey([B)Lcom/virgilsecurity/crypto/foundation/PublicKey;

    move-result-object v3

    .line 1528
    .local v3, "publicKey":Lcom/virgilsecurity/crypto/foundation/PublicKey;
    invoke-static {v3}, Lcom/virgilsecurity/sdk/crypto/KeyPairType;->fromKey(Lcom/virgilsecurity/crypto/foundation/Key;)Lcom/virgilsecurity/sdk/crypto/KeyPairType;

    move-result-object v4

    .line 1530
    .local v4, "keyPairType":Lcom/virgilsecurity/sdk/crypto/KeyPairType;
    invoke-direct {p0, v3}, Lcom/virgilsecurity/sdk/crypto/VirgilCrypto;->computePublicKeyIdentifier(Lcom/virgilsecurity/crypto/foundation/PublicKey;)[B

    move-result-object v5

    .line 1532
    .local v5, "keyId":[B
    new-instance v6, Lcom/virgilsecurity/sdk/crypto/VirgilPublicKey;

    invoke-direct {v6, v5, v3, v4}, Lcom/virgilsecurity/sdk/crypto/VirgilPublicKey;-><init>([BLcom/virgilsecurity/crypto/foundation/PublicKey;Lcom/virgilsecurity/sdk/crypto/KeyPairType;)V
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_0

    .line 1533
    :try_start_3
    invoke-virtual {v1}, Lcom/virgilsecurity/crypto/foundation/KeyAsn1Deserializer;->close()V
    :try_end_3
    .catchall {:try_start_3 .. :try_end_3} :catchall_2

    :try_start_4
    invoke-virtual {v0}, Lcom/virgilsecurity/crypto/foundation/KeyProvider;->close()V
    :try_end_4
    .catch Ljava/lang/Exception; {:try_start_4 .. :try_end_4} :catch_0

    .line 1532
    return-object v6

    .line 1521
    .end local v3    # "publicKey":Lcom/virgilsecurity/crypto/foundation/PublicKey;
    .end local v4    # "keyPairType":Lcom/virgilsecurity/sdk/crypto/KeyPairType;
    .end local v5    # "keyId":[B
    :cond_0
    :try_start_5
    new-instance v3, Lcom/virgilsecurity/sdk/crypto/exceptions/CryptoException;

    const-string v4, "Wrong public key format"

    invoke-direct {v3, v4}, Lcom/virgilsecurity/sdk/crypto/exceptions/CryptoException;-><init>(Ljava/lang/String;)V

    .end local v0    # "keyProvider":Lcom/virgilsecurity/crypto/foundation/KeyProvider;
    .end local v1    # "deserializer":Lcom/virgilsecurity/crypto/foundation/KeyAsn1Deserializer;
    .end local p1    # "data":[B
    throw v3
    :try_end_5
    .catchall {:try_start_5 .. :try_end_5} :catchall_0

    .line 1515
    .end local v2    # "rawKey":Lcom/virgilsecurity/crypto/foundation/RawPublicKey;
    .restart local v0    # "keyProvider":Lcom/virgilsecurity/crypto/foundation/KeyProvider;
    .restart local v1    # "deserializer":Lcom/virgilsecurity/crypto/foundation/KeyAsn1Deserializer;
    .restart local p1    # "data":[B
    :catchall_0
    move-exception v2

    :try_start_6
    invoke-virtual {v1}, Lcom/virgilsecurity/crypto/foundation/KeyAsn1Deserializer;->close()V
    :try_end_6
    .catchall {:try_start_6 .. :try_end_6} :catchall_1

    goto :goto_0

    :catchall_1
    move-exception v3

    :try_start_7
    invoke-virtual {v2, v3}, Ljava/lang/Throwable;->addSuppressed(Ljava/lang/Throwable;)V

    .end local v0    # "keyProvider":Lcom/virgilsecurity/crypto/foundation/KeyProvider;
    .end local p1    # "data":[B
    :goto_0
    throw v2
    :try_end_7
    .catchall {:try_start_7 .. :try_end_7} :catchall_2

    .end local v1    # "deserializer":Lcom/virgilsecurity/crypto/foundation/KeyAsn1Deserializer;
    .restart local v0    # "keyProvider":Lcom/virgilsecurity/crypto/foundation/KeyProvider;
    .restart local p1    # "data":[B
    :catchall_2
    move-exception v1

    :try_start_8
    invoke-virtual {v0}, Lcom/virgilsecurity/crypto/foundation/KeyProvider;->close()V
    :try_end_8
    .catchall {:try_start_8 .. :try_end_8} :catchall_3

    goto :goto_1

    :catchall_3
    move-exception v2

    :try_start_9
    invoke-virtual {v1, v2}, Ljava/lang/Throwable;->addSuppressed(Ljava/lang/Throwable;)V

    .end local p1    # "data":[B
    :goto_1
    throw v1
    :try_end_9
    .catch Ljava/lang/Exception; {:try_start_9 .. :try_end_9} :catch_0

    .line 1533
    .end local v0    # "keyProvider":Lcom/virgilsecurity/crypto/foundation/KeyProvider;
    .restart local p1    # "data":[B
    :catch_0
    move-exception v0

    .line 1534
    .local v0, "e":Ljava/lang/Exception;
    new-instance v1, Lcom/virgilsecurity/sdk/crypto/exceptions/CryptoException;

    invoke-direct {v1, v0}, Lcom/virgilsecurity/sdk/crypto/exceptions/CryptoException;-><init>(Ljava/lang/Throwable;)V

    throw v1

    .line 1512
    .end local v0    # "e":Ljava/lang/Exception;
    :cond_1
    new-instance v0, Lcom/virgilsecurity/common/exception/NullArgumentException;

    const-string v1, "data"

    invoke-direct {v0, v1}, Lcom/virgilsecurity/common/exception/NullArgumentException;-><init>(Ljava/lang/String;)V

    throw v0
.end method

.method public isUseSHA256Fingerprints()Z
    .locals 1

    .line 1617
    iget-boolean v0, p0, Lcom/virgilsecurity/sdk/crypto/VirgilCrypto;->useSHA256Fingerprints:Z

    return v0
.end method

.method public setUseSHA256Fingerprints(Z)V
    .locals 0
    .param p1, "useSHA256Fingerprints"    # Z

    .line 1624
    iput-boolean p1, p0, Lcom/virgilsecurity/sdk/crypto/VirgilCrypto;->useSHA256Fingerprints:Z

    .line 1625
    return-void
.end method

.method public signThenEncrypt([BLcom/virgilsecurity/sdk/crypto/VirgilPrivateKey;Lcom/virgilsecurity/sdk/crypto/VirgilPublicKey;)[B
    .locals 2
    .param p1, "data"    # [B
    .param p2, "privateKey"    # Lcom/virgilsecurity/sdk/crypto/VirgilPrivateKey;
    .param p3, "publicKey"    # Lcom/virgilsecurity/sdk/crypto/VirgilPublicKey;
    .annotation system Ldalvik/annotation/Throws;
        value = {
            Lcom/virgilsecurity/sdk/crypto/exceptions/CryptoException;
        }
    .end annotation

    .annotation runtime Ljava/lang/Deprecated;
    .end annotation

    .line 607
    invoke-static {p3}, Ljava/util/Collections;->singletonList(Ljava/lang/Object;)Ljava/util/List;

    move-result-object v0

    const/4 v1, 0x0

    invoke-virtual {p0, p1, p2, v0, v1}, Lcom/virgilsecurity/sdk/crypto/VirgilCrypto;->signThenEncrypt([BLcom/virgilsecurity/sdk/crypto/VirgilPrivateKey;Ljava/util/List;Z)[B

    move-result-object v0

    return-object v0
.end method

.method public signThenEncrypt([BLcom/virgilsecurity/sdk/crypto/VirgilPrivateKey;Ljava/util/List;)[B
    .locals 3
    .param p1, "data"    # [B
    .param p2, "privateKey"    # Lcom/virgilsecurity/sdk/crypto/VirgilPrivateKey;
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "([B",
            "Lcom/virgilsecurity/sdk/crypto/VirgilPrivateKey;",
            "Ljava/util/List<",
            "Lcom/virgilsecurity/sdk/crypto/VirgilPublicKey;",
            ">;)[B"
        }
    .end annotation

    .annotation system Ldalvik/annotation/Throws;
        value = {
            Lcom/virgilsecurity/sdk/crypto/exceptions/CryptoException;
        }
    .end annotation

    .annotation runtime Ljava/lang/Deprecated;
    .end annotation

    .line 638
    .local p3, "publicKeys":Ljava/util/List;, "Ljava/util/List<Lcom/virgilsecurity/sdk/crypto/VirgilPublicKey;>;"
    new-instance v0, Lcom/virgilsecurity/sdk/crypto/VirgilCrypto$IOData;

    invoke-direct {v0, p1}, Lcom/virgilsecurity/sdk/crypto/VirgilCrypto$IOData;-><init>([B)V

    new-instance v1, Lcom/virgilsecurity/sdk/crypto/VirgilCrypto$SigningOptions;

    sget-object v2, Lcom/virgilsecurity/sdk/crypto/VirgilCrypto$SigningMode;->SIGN_AND_ENCRYPT:Lcom/virgilsecurity/sdk/crypto/VirgilCrypto$SigningMode;

    invoke-direct {v1, p2, v2}, Lcom/virgilsecurity/sdk/crypto/VirgilCrypto$SigningOptions;-><init>(Lcom/virgilsecurity/sdk/crypto/VirgilPrivateKey;Lcom/virgilsecurity/sdk/crypto/VirgilCrypto$SigningMode;)V

    const/4 v2, 0x0

    invoke-virtual {p0, v0, v1, p3, v2}, Lcom/virgilsecurity/sdk/crypto/VirgilCrypto;->encrypt(Lcom/virgilsecurity/sdk/crypto/VirgilCrypto$InputOutput;Lcom/virgilsecurity/sdk/crypto/VirgilCrypto$SigningOptions;Ljava/util/List;Z)[B

    move-result-object v0

    return-object v0
.end method

.method public signThenEncrypt([BLcom/virgilsecurity/sdk/crypto/VirgilPrivateKey;Ljava/util/List;Z)[B
    .locals 3
    .param p1, "data"    # [B
    .param p2, "privateKey"    # Lcom/virgilsecurity/sdk/crypto/VirgilPrivateKey;
    .param p4, "enablePadding"    # Z
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "([B",
            "Lcom/virgilsecurity/sdk/crypto/VirgilPrivateKey;",
            "Ljava/util/List<",
            "Lcom/virgilsecurity/sdk/crypto/VirgilPublicKey;",
            ">;Z)[B"
        }
    .end annotation

    .annotation system Ldalvik/annotation/Throws;
        value = {
            Lcom/virgilsecurity/sdk/crypto/exceptions/CryptoException;
        }
    .end annotation

    .annotation runtime Ljava/lang/Deprecated;
    .end annotation

    .line 671
    .local p3, "publicKeys":Ljava/util/List;, "Ljava/util/List<Lcom/virgilsecurity/sdk/crypto/VirgilPublicKey;>;"
    new-instance v0, Lcom/virgilsecurity/sdk/crypto/VirgilCrypto$IOData;

    invoke-direct {v0, p1}, Lcom/virgilsecurity/sdk/crypto/VirgilCrypto$IOData;-><init>([B)V

    new-instance v1, Lcom/virgilsecurity/sdk/crypto/VirgilCrypto$SigningOptions;

    sget-object v2, Lcom/virgilsecurity/sdk/crypto/VirgilCrypto$SigningMode;->SIGN_AND_ENCRYPT:Lcom/virgilsecurity/sdk/crypto/VirgilCrypto$SigningMode;

    invoke-direct {v1, p2, v2}, Lcom/virgilsecurity/sdk/crypto/VirgilCrypto$SigningOptions;-><init>(Lcom/virgilsecurity/sdk/crypto/VirgilPrivateKey;Lcom/virgilsecurity/sdk/crypto/VirgilCrypto$SigningMode;)V

    invoke-virtual {p0, v0, v1, p3, p4}, Lcom/virgilsecurity/sdk/crypto/VirgilCrypto;->encrypt(Lcom/virgilsecurity/sdk/crypto/VirgilCrypto$InputOutput;Lcom/virgilsecurity/sdk/crypto/VirgilCrypto$SigningOptions;Ljava/util/List;Z)[B

    move-result-object v0

    return-object v0
.end method

.method public verifySignature([BLjava/io/InputStream;Lcom/virgilsecurity/sdk/crypto/VirgilPublicKey;)Z
    .locals 8
    .param p1, "signature"    # [B
    .param p2, "stream"    # Ljava/io/InputStream;
    .param p3, "publicKey"    # Lcom/virgilsecurity/sdk/crypto/VirgilPublicKey;
    .annotation system Ldalvik/annotation/Throws;
        value = {
            Lcom/virgilsecurity/sdk/crypto/exceptions/VerificationException;
        }
    .end annotation

    .line 1383
    if-eqz p2, :cond_6

    .line 1386
    if-eqz p1, :cond_5

    .line 1389
    if-eqz p3, :cond_4

    .line 1393
    invoke-virtual {p3}, Lcom/virgilsecurity/sdk/crypto/VirgilPublicKey;->getPublicKey()Lcom/virgilsecurity/crypto/foundation/PublicKey;

    move-result-object v0

    .line 1394
    .local v0, "key":Lcom/virgilsecurity/crypto/foundation/PublicKey;
    iget-object v1, p0, Lcom/virgilsecurity/sdk/crypto/VirgilCrypto;->rng:Lcom/virgilsecurity/crypto/foundation/Random;

    invoke-static {v0, v1}, Lcom/virgilsecurity/crypto/foundation/KeyAlgFactory;->createFromKey(Lcom/virgilsecurity/crypto/foundation/Key;Lcom/virgilsecurity/crypto/foundation/Random;)Lcom/virgilsecurity/crypto/foundation/KeyAlg;

    move-result-object v1

    .line 1395
    .local v1, "keyAlg":Lcom/virgilsecurity/crypto/foundation/KeyAlg;
    instance-of v2, v1, Lcom/virgilsecurity/crypto/foundation/KeySigner;

    if-eqz v2, :cond_1

    move-object v2, v1

    check-cast v2, Lcom/virgilsecurity/crypto/foundation/KeySigner;

    invoke-interface {v2, v0}, Lcom/virgilsecurity/crypto/foundation/KeySigner;->canVerify(Lcom/virgilsecurity/crypto/foundation/PublicKey;)Z

    move-result v2

    if-eqz v2, :cond_0

    goto :goto_0

    .line 1396
    :cond_0
    new-instance v2, Lcom/virgilsecurity/sdk/crypto/exceptions/VerificationException;

    const-string v3, "This key doesn\'t support verification"

    invoke-direct {v2, v3}, Lcom/virgilsecurity/sdk/crypto/exceptions/VerificationException;-><init>(Ljava/lang/String;)V

    throw v2

    .line 1399
    :cond_1
    :goto_0
    :try_start_0
    new-instance v2, Lcom/virgilsecurity/crypto/foundation/Verifier;

    invoke-direct {v2}, Lcom/virgilsecurity/crypto/foundation/Verifier;-><init>()V
    :try_end_0
    .catch Ljava/lang/Exception; {:try_start_0 .. :try_end_0} :catch_0

    .line 1400
    .local v2, "verifier":Lcom/virgilsecurity/crypto/foundation/Verifier;
    :try_start_1
    invoke-virtual {v2, p1}, Lcom/virgilsecurity/crypto/foundation/Verifier;->reset([B)V

    .line 1402
    const/16 v3, 0x400

    new-array v4, v3, [B

    .line 1404
    .local v4, "buffer":[B
    :goto_1
    const/4 v5, -0x1

    invoke-virtual {p2, v4}, Ljava/io/InputStream;->read([B)I

    move-result v6

    move v7, v6

    .local v7, "dataRead":I
    if-eq v5, v6, :cond_3

    .line 1407
    if-ne v7, v3, :cond_2

    .line 1408
    move-object v5, v4

    .local v5, "data":[B
    goto :goto_2

    .line 1410
    .end local v5    # "data":[B
    :cond_2
    invoke-static {v4, v7}, Ljava/util/Arrays;->copyOf([BI)[B

    move-result-object v5

    .line 1413
    .restart local v5    # "data":[B
    :goto_2
    invoke-virtual {v2, v5}, Lcom/virgilsecurity/crypto/foundation/Verifier;->appendData([B)V

    .line 1414
    .end local v5    # "data":[B
    goto :goto_1

    .line 1416
    :cond_3
    invoke-virtual {v2, v0}, Lcom/virgilsecurity/crypto/foundation/Verifier;->verify(Lcom/virgilsecurity/crypto/foundation/PublicKey;)Z

    move-result v3
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    .line 1417
    :try_start_2
    invoke-virtual {v2}, Lcom/virgilsecurity/crypto/foundation/Verifier;->close()V
    :try_end_2
    .catch Ljava/lang/Exception; {:try_start_2 .. :try_end_2} :catch_0

    .line 1416
    return v3

    .line 1399
    .end local v4    # "buffer":[B
    .end local v7    # "dataRead":I
    :catchall_0
    move-exception v3

    :try_start_3
    invoke-virtual {v2}, Lcom/virgilsecurity/crypto/foundation/Verifier;->close()V
    :try_end_3
    .catchall {:try_start_3 .. :try_end_3} :catchall_1

    goto :goto_3

    :catchall_1
    move-exception v4

    :try_start_4
    invoke-virtual {v3, v4}, Ljava/lang/Throwable;->addSuppressed(Ljava/lang/Throwable;)V

    .end local v0    # "key":Lcom/virgilsecurity/crypto/foundation/PublicKey;
    .end local v1    # "keyAlg":Lcom/virgilsecurity/crypto/foundation/KeyAlg;
    .end local p1    # "signature":[B
    .end local p2    # "stream":Ljava/io/InputStream;
    .end local p3    # "publicKey":Lcom/virgilsecurity/sdk/crypto/VirgilPublicKey;
    :goto_3
    throw v3
    :try_end_4
    .catch Ljava/lang/Exception; {:try_start_4 .. :try_end_4} :catch_0

    .line 1417
    .end local v2    # "verifier":Lcom/virgilsecurity/crypto/foundation/Verifier;
    .restart local v0    # "key":Lcom/virgilsecurity/crypto/foundation/PublicKey;
    .restart local v1    # "keyAlg":Lcom/virgilsecurity/crypto/foundation/KeyAlg;
    .restart local p1    # "signature":[B
    .restart local p2    # "stream":Ljava/io/InputStream;
    .restart local p3    # "publicKey":Lcom/virgilsecurity/sdk/crypto/VirgilPublicKey;
    :catch_0
    move-exception v2

    .line 1418
    .local v2, "e":Ljava/lang/Exception;
    new-instance v3, Lcom/virgilsecurity/sdk/crypto/exceptions/VerificationException;

    invoke-direct {v3, v2}, Lcom/virgilsecurity/sdk/crypto/exceptions/VerificationException;-><init>(Ljava/lang/Throwable;)V

    throw v3

    .line 1390
    .end local v0    # "key":Lcom/virgilsecurity/crypto/foundation/PublicKey;
    .end local v1    # "keyAlg":Lcom/virgilsecurity/crypto/foundation/KeyAlg;
    .end local v2    # "e":Ljava/lang/Exception;
    :cond_4
    new-instance v0, Lcom/virgilsecurity/common/exception/NullArgumentException;

    const-string v1, "publicKey"

    invoke-direct {v0, v1}, Lcom/virgilsecurity/common/exception/NullArgumentException;-><init>(Ljava/lang/String;)V

    throw v0

    .line 1387
    :cond_5
    new-instance v0, Lcom/virgilsecurity/common/exception/NullArgumentException;

    const-string v1, "signature"

    invoke-direct {v0, v1}, Lcom/virgilsecurity/common/exception/NullArgumentException;-><init>(Ljava/lang/String;)V

    throw v0

    .line 1384
    :cond_6
    new-instance v0, Lcom/virgilsecurity/common/exception/NullArgumentException;

    const-string/jumbo v1, "stream"

    invoke-direct {v0, v1}, Lcom/virgilsecurity/common/exception/NullArgumentException;-><init>(Ljava/lang/String;)V

    throw v0
.end method

.method public verifySignature([B[BLcom/virgilsecurity/sdk/crypto/VirgilPublicKey;)Z
    .locals 5
    .param p1, "signature"    # [B
    .param p2, "data"    # [B
    .param p3, "publicKey"    # Lcom/virgilsecurity/sdk/crypto/VirgilPublicKey;
    .annotation system Ldalvik/annotation/Throws;
        value = {
            Lcom/virgilsecurity/sdk/crypto/exceptions/VerificationException;
        }
    .end annotation

    .line 1343
    if-eqz p2, :cond_4

    .line 1346
    if-eqz p1, :cond_3

    .line 1349
    if-eqz p3, :cond_2

    .line 1353
    invoke-virtual {p3}, Lcom/virgilsecurity/sdk/crypto/VirgilPublicKey;->getPublicKey()Lcom/virgilsecurity/crypto/foundation/PublicKey;

    move-result-object v0

    .line 1354
    .local v0, "key":Lcom/virgilsecurity/crypto/foundation/PublicKey;
    iget-object v1, p0, Lcom/virgilsecurity/sdk/crypto/VirgilCrypto;->rng:Lcom/virgilsecurity/crypto/foundation/Random;

    invoke-static {v0, v1}, Lcom/virgilsecurity/crypto/foundation/KeyAlgFactory;->createFromKey(Lcom/virgilsecurity/crypto/foundation/Key;Lcom/virgilsecurity/crypto/foundation/Random;)Lcom/virgilsecurity/crypto/foundation/KeyAlg;

    move-result-object v1

    .line 1355
    .local v1, "keyAlg":Lcom/virgilsecurity/crypto/foundation/KeyAlg;
    instance-of v2, v1, Lcom/virgilsecurity/crypto/foundation/KeySigner;

    if-eqz v2, :cond_1

    move-object v2, v1

    check-cast v2, Lcom/virgilsecurity/crypto/foundation/KeySigner;

    invoke-interface {v2, v0}, Lcom/virgilsecurity/crypto/foundation/KeySigner;->canVerify(Lcom/virgilsecurity/crypto/foundation/PublicKey;)Z

    move-result v2

    if-eqz v2, :cond_0

    goto :goto_0

    .line 1356
    :cond_0
    new-instance v2, Lcom/virgilsecurity/sdk/crypto/exceptions/VerificationException;

    const-string v3, "This key doesn\'t support verification"

    invoke-direct {v2, v3}, Lcom/virgilsecurity/sdk/crypto/exceptions/VerificationException;-><init>(Ljava/lang/String;)V

    throw v2

    .line 1359
    :cond_1
    :goto_0
    :try_start_0
    new-instance v2, Lcom/virgilsecurity/crypto/foundation/Verifier;

    invoke-direct {v2}, Lcom/virgilsecurity/crypto/foundation/Verifier;-><init>()V
    :try_end_0
    .catch Ljava/lang/Exception; {:try_start_0 .. :try_end_0} :catch_0

    .line 1360
    .local v2, "verifier":Lcom/virgilsecurity/crypto/foundation/Verifier;
    :try_start_1
    invoke-virtual {v2, p1}, Lcom/virgilsecurity/crypto/foundation/Verifier;->reset([B)V

    .line 1361
    invoke-virtual {v2, p2}, Lcom/virgilsecurity/crypto/foundation/Verifier;->appendData([B)V

    .line 1363
    invoke-virtual {v2, v0}, Lcom/virgilsecurity/crypto/foundation/Verifier;->verify(Lcom/virgilsecurity/crypto/foundation/PublicKey;)Z

    move-result v3
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    .line 1364
    :try_start_2
    invoke-virtual {v2}, Lcom/virgilsecurity/crypto/foundation/Verifier;->close()V
    :try_end_2
    .catch Ljava/lang/Exception; {:try_start_2 .. :try_end_2} :catch_0

    .line 1363
    return v3

    .line 1359
    :catchall_0
    move-exception v3

    :try_start_3
    invoke-virtual {v2}, Lcom/virgilsecurity/crypto/foundation/Verifier;->close()V
    :try_end_3
    .catchall {:try_start_3 .. :try_end_3} :catchall_1

    goto :goto_1

    :catchall_1
    move-exception v4

    :try_start_4
    invoke-virtual {v3, v4}, Ljava/lang/Throwable;->addSuppressed(Ljava/lang/Throwable;)V

    .end local v0    # "key":Lcom/virgilsecurity/crypto/foundation/PublicKey;
    .end local v1    # "keyAlg":Lcom/virgilsecurity/crypto/foundation/KeyAlg;
    .end local p1    # "signature":[B
    .end local p2    # "data":[B
    .end local p3    # "publicKey":Lcom/virgilsecurity/sdk/crypto/VirgilPublicKey;
    :goto_1
    throw v3
    :try_end_4
    .catch Ljava/lang/Exception; {:try_start_4 .. :try_end_4} :catch_0

    .line 1364
    .end local v2    # "verifier":Lcom/virgilsecurity/crypto/foundation/Verifier;
    .restart local v0    # "key":Lcom/virgilsecurity/crypto/foundation/PublicKey;
    .restart local v1    # "keyAlg":Lcom/virgilsecurity/crypto/foundation/KeyAlg;
    .restart local p1    # "signature":[B
    .restart local p2    # "data":[B
    .restart local p3    # "publicKey":Lcom/virgilsecurity/sdk/crypto/VirgilPublicKey;
    :catch_0
    move-exception v2

    .line 1365
    .local v2, "e":Ljava/lang/Exception;
    new-instance v3, Lcom/virgilsecurity/sdk/crypto/exceptions/VerificationException;

    invoke-direct {v3, v2}, Lcom/virgilsecurity/sdk/crypto/exceptions/VerificationException;-><init>(Ljava/lang/Throwable;)V

    throw v3

    .line 1350
    .end local v0    # "key":Lcom/virgilsecurity/crypto/foundation/PublicKey;
    .end local v1    # "keyAlg":Lcom/virgilsecurity/crypto/foundation/KeyAlg;
    .end local v2    # "e":Ljava/lang/Exception;
    :cond_2
    new-instance v0, Lcom/virgilsecurity/common/exception/NullArgumentException;

    const-string v1, "publicKey"

    invoke-direct {v0, v1}, Lcom/virgilsecurity/common/exception/NullArgumentException;-><init>(Ljava/lang/String;)V

    throw v0

    .line 1347
    :cond_3
    new-instance v0, Lcom/virgilsecurity/common/exception/NullArgumentException;

    const-string v1, "signature"

    invoke-direct {v0, v1}, Lcom/virgilsecurity/common/exception/NullArgumentException;-><init>(Ljava/lang/String;)V

    throw v0

    .line 1344
    :cond_4
    new-instance v0, Lcom/virgilsecurity/common/exception/NullArgumentException;

    const-string v1, "data"

    invoke-direct {v0, v1}, Lcom/virgilsecurity/common/exception/NullArgumentException;-><init>(Ljava/lang/String;)V

    throw v0
.end method
