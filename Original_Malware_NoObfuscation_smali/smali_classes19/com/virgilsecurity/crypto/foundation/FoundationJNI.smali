.class public Lcom/virgilsecurity/crypto/foundation/FoundationJNI;
.super Ljava/lang/Object;
.source "FoundationJNI.java"


# static fields
.field public static final INSTANCE:Lcom/virgilsecurity/crypto/foundation/FoundationJNI;


# direct methods
.method static constructor <clinit>()V
    .locals 1

    .line 46
    const-string/jumbo v0, "vscf_foundation"

    invoke-static {v0}, Lcom/virgilsecurity/crypto/common/utils/NativeUtils;->load(Ljava/lang/String;)V

    .line 47
    new-instance v0, Lcom/virgilsecurity/crypto/foundation/FoundationJNI;

    invoke-direct {v0}, Lcom/virgilsecurity/crypto/foundation/FoundationJNI;-><init>()V

    sput-object v0, Lcom/virgilsecurity/crypto/foundation/FoundationJNI;->INSTANCE:Lcom/virgilsecurity/crypto/foundation/FoundationJNI;

    .line 48
    return-void
.end method

.method private constructor <init>()V
    .locals 0

    .line 50
    invoke-direct {p0}, Ljava/lang/Object;-><init>()V

    .line 51
    return-void
.end method


# virtual methods
.method public native aes256Cbc_algId(J)Lcom/virgilsecurity/crypto/foundation/AlgId;
.end method

.method public native aes256Cbc_close(J)V
.end method

.method public native aes256Cbc_decrypt(J[B)[B
    .annotation system Ldalvik/annotation/Throws;
        value = {
            Lcom/virgilsecurity/crypto/foundation/FoundationException;
        }
    .end annotation
.end method

.method public native aes256Cbc_decryptedLen(JI)I
.end method

.method public native aes256Cbc_decryptedOutLen(JI)I
.end method

.method public native aes256Cbc_encrypt(J[B)[B
    .annotation system Ldalvik/annotation/Throws;
        value = {
            Lcom/virgilsecurity/crypto/foundation/FoundationException;
        }
    .end annotation
.end method

.method public native aes256Cbc_encryptedLen(JI)I
.end method

.method public native aes256Cbc_encryptedOutLen(JI)I
.end method

.method public native aes256Cbc_finish(J)[B
    .annotation system Ldalvik/annotation/Throws;
        value = {
            Lcom/virgilsecurity/crypto/foundation/FoundationException;
        }
    .end annotation
.end method

.method public native aes256Cbc_new()J
.end method

.method public native aes256Cbc_outLen(JI)I
.end method

.method public native aes256Cbc_preciseEncryptedLen(JI)I
.end method

.method public native aes256Cbc_produceAlgInfo(J)Lcom/virgilsecurity/crypto/foundation/AlgInfo;
.end method

.method public native aes256Cbc_restoreAlgInfo(JLcom/virgilsecurity/crypto/foundation/AlgInfo;)V
    .annotation system Ldalvik/annotation/Throws;
        value = {
            Lcom/virgilsecurity/crypto/foundation/FoundationException;
        }
    .end annotation
.end method

.method public native aes256Cbc_setKey(J[B)V
.end method

.method public native aes256Cbc_setNonce(J[B)V
.end method

.method public native aes256Cbc_startDecryption(J)V
.end method

.method public native aes256Cbc_startEncryption(J)V
.end method

.method public native aes256Cbc_update(J[B)[B
.end method

.method public native aes256Gcm_algId(J)Lcom/virgilsecurity/crypto/foundation/AlgId;
.end method

.method public native aes256Gcm_authDecrypt(J[B[B[B)[B
    .annotation system Ldalvik/annotation/Throws;
        value = {
            Lcom/virgilsecurity/crypto/foundation/FoundationException;
        }
    .end annotation
.end method

.method public native aes256Gcm_authDecryptedLen(JI)I
.end method

.method public native aes256Gcm_authEncrypt(J[B[B)Lcom/virgilsecurity/crypto/foundation/AuthEncryptAuthEncryptResult;
    .annotation system Ldalvik/annotation/Throws;
        value = {
            Lcom/virgilsecurity/crypto/foundation/FoundationException;
        }
    .end annotation
.end method

.method public native aes256Gcm_authEncryptedLen(JI)I
.end method

.method public native aes256Gcm_close(J)V
.end method

.method public native aes256Gcm_decrypt(J[B)[B
    .annotation system Ldalvik/annotation/Throws;
        value = {
            Lcom/virgilsecurity/crypto/foundation/FoundationException;
        }
    .end annotation
.end method

.method public native aes256Gcm_decryptedLen(JI)I
.end method

.method public native aes256Gcm_decryptedOutLen(JI)I
.end method

.method public native aes256Gcm_encrypt(J[B)[B
    .annotation system Ldalvik/annotation/Throws;
        value = {
            Lcom/virgilsecurity/crypto/foundation/FoundationException;
        }
    .end annotation
.end method

.method public native aes256Gcm_encryptedLen(JI)I
.end method

.method public native aes256Gcm_encryptedOutLen(JI)I
.end method

.method public native aes256Gcm_finish(J)[B
    .annotation system Ldalvik/annotation/Throws;
        value = {
            Lcom/virgilsecurity/crypto/foundation/FoundationException;
        }
    .end annotation
.end method

.method public native aes256Gcm_finishAuthDecryption(J[B)[B
    .annotation system Ldalvik/annotation/Throws;
        value = {
            Lcom/virgilsecurity/crypto/foundation/FoundationException;
        }
    .end annotation
.end method

.method public native aes256Gcm_finishAuthEncryption(J)Lcom/virgilsecurity/crypto/foundation/CipherAuthFinishAuthEncryptionResult;
    .annotation system Ldalvik/annotation/Throws;
        value = {
            Lcom/virgilsecurity/crypto/foundation/FoundationException;
        }
    .end annotation
.end method

.method public native aes256Gcm_new()J
.end method

.method public native aes256Gcm_outLen(JI)I
.end method

.method public native aes256Gcm_preciseEncryptedLen(JI)I
.end method

.method public native aes256Gcm_produceAlgInfo(J)Lcom/virgilsecurity/crypto/foundation/AlgInfo;
.end method

.method public native aes256Gcm_restoreAlgInfo(JLcom/virgilsecurity/crypto/foundation/AlgInfo;)V
    .annotation system Ldalvik/annotation/Throws;
        value = {
            Lcom/virgilsecurity/crypto/foundation/FoundationException;
        }
    .end annotation
.end method

.method public native aes256Gcm_setAuthData(J[B)V
.end method

.method public native aes256Gcm_setKey(J[B)V
.end method

.method public native aes256Gcm_setNonce(J[B)V
.end method

.method public native aes256Gcm_startDecryption(J)V
.end method

.method public native aes256Gcm_startEncryption(J)V
.end method

.method public native aes256Gcm_update(J[B)[B
.end method

.method public native algFactory_createCipherFromInfo(Lcom/virgilsecurity/crypto/foundation/AlgInfo;)Lcom/virgilsecurity/crypto/foundation/Cipher;
.end method

.method public native algFactory_createHashFromInfo(Lcom/virgilsecurity/crypto/foundation/AlgInfo;)Lcom/virgilsecurity/crypto/foundation/Hash;
.end method

.method public native algFactory_createKdfFromInfo(Lcom/virgilsecurity/crypto/foundation/AlgInfo;)Lcom/virgilsecurity/crypto/foundation/Kdf;
.end method

.method public native algFactory_createMacFromInfo(Lcom/virgilsecurity/crypto/foundation/AlgInfo;)Lcom/virgilsecurity/crypto/foundation/Mac;
.end method

.method public native algFactory_createPaddingFromInfo(Lcom/virgilsecurity/crypto/foundation/AlgInfo;Lcom/virgilsecurity/crypto/foundation/Random;)Lcom/virgilsecurity/crypto/foundation/Padding;
.end method

.method public native algFactory_createSaltedKdfFromInfo(Lcom/virgilsecurity/crypto/foundation/AlgInfo;)Lcom/virgilsecurity/crypto/foundation/SaltedKdf;
.end method

.method public native algInfoDerDeserializer_close(J)V
.end method

.method public native algInfoDerDeserializer_deserialize(J[B)Lcom/virgilsecurity/crypto/foundation/AlgInfo;
    .annotation system Ldalvik/annotation/Throws;
        value = {
            Lcom/virgilsecurity/crypto/foundation/FoundationException;
        }
    .end annotation
.end method

.method public native algInfoDerDeserializer_deserializeInplace(J)Lcom/virgilsecurity/crypto/foundation/AlgInfo;
    .annotation system Ldalvik/annotation/Throws;
        value = {
            Lcom/virgilsecurity/crypto/foundation/FoundationException;
        }
    .end annotation
.end method

.method public native algInfoDerDeserializer_new()J
.end method

.method public native algInfoDerDeserializer_setAsn1Reader(JLcom/virgilsecurity/crypto/foundation/Asn1Reader;)V
.end method

.method public native algInfoDerDeserializer_setupDefaults(J)V
.end method

.method public native algInfoDerSerializer_close(J)V
.end method

.method public native algInfoDerSerializer_new()J
.end method

.method public native algInfoDerSerializer_serialize(JLcom/virgilsecurity/crypto/foundation/AlgInfo;)[B
.end method

.method public native algInfoDerSerializer_serializeInplace(JLcom/virgilsecurity/crypto/foundation/AlgInfo;)I
.end method

.method public native algInfoDerSerializer_serializedLen(JLcom/virgilsecurity/crypto/foundation/AlgInfo;)I
.end method

.method public native algInfoDerSerializer_setAsn1Writer(JLcom/virgilsecurity/crypto/foundation/Asn1Writer;)V
.end method

.method public native algInfoDerSerializer_setupDefaults(J)V
.end method

.method public native asn1rd_close(J)V
.end method

.method public native asn1rd_getDataLen(J)I
.end method

.method public native asn1rd_getLen(J)I
.end method

.method public native asn1rd_getTag(J)I
.end method

.method public native asn1rd_hasError(J)Z
.end method

.method public native asn1rd_leftLen(J)I
.end method

.method public native asn1rd_new()J
.end method

.method public native asn1rd_readBitstringAsOctetStr(J)[B
.end method

.method public native asn1rd_readBool(J)Z
.end method

.method public native asn1rd_readContextTag(JI)I
.end method

.method public native asn1rd_readData(JI)[B
.end method

.method public native asn1rd_readInt(J)I
.end method

.method public native asn1rd_readInt16(J)S
.end method

.method public native asn1rd_readInt32(J)I
.end method

.method public native asn1rd_readInt64(J)J
.end method

.method public native asn1rd_readInt8(J)B
.end method

.method public native asn1rd_readNull(J)V
.end method

.method public native asn1rd_readNullOptional(J)V
.end method

.method public native asn1rd_readOctetStr(J)[B
.end method

.method public native asn1rd_readOid(J)[B
.end method

.method public native asn1rd_readSequence(J)I
.end method

.method public native asn1rd_readSet(J)I
.end method

.method public native asn1rd_readTag(JI)I
.end method

.method public native asn1rd_readUint(J)J
.end method

.method public native asn1rd_readUint16(J)I
.end method

.method public native asn1rd_readUint32(J)J
.end method

.method public native asn1rd_readUint64(J)J
.end method

.method public native asn1rd_readUint8(J)S
.end method

.method public native asn1rd_readUtf8Str(J)[B
.end method

.method public native asn1rd_reset(J[B)V
.end method

.method public native asn1rd_status(J)V
    .annotation system Ldalvik/annotation/Throws;
        value = {
            Lcom/virgilsecurity/crypto/foundation/FoundationException;
        }
    .end annotation
.end method

.method public native asn1wr_bytes(J)B
.end method

.method public native asn1wr_close(J)V
.end method

.method public native asn1wr_finish(JZ)I
.end method

.method public native asn1wr_hasError(J)Z
.end method

.method public native asn1wr_len(J)I
.end method

.method public native asn1wr_new()J
.end method

.method public native asn1wr_reserve(JI)B
.end method

.method public native asn1wr_reset(J[BI)V
.end method

.method public native asn1wr_status(J)V
    .annotation system Ldalvik/annotation/Throws;
        value = {
            Lcom/virgilsecurity/crypto/foundation/FoundationException;
        }
    .end annotation
.end method

.method public native asn1wr_unwrittenLen(J)I
.end method

.method public native asn1wr_writeBool(JZ)I
.end method

.method public native asn1wr_writeContextTag(JII)I
.end method

.method public native asn1wr_writeData(J[B)I
.end method

.method public native asn1wr_writeInt(JI)I
.end method

.method public native asn1wr_writeInt16(JS)I
.end method

.method public native asn1wr_writeInt32(JI)I
.end method

.method public native asn1wr_writeInt64(JJ)I
.end method

.method public native asn1wr_writeInt8(JB)I
.end method

.method public native asn1wr_writeLen(JI)I
.end method

.method public native asn1wr_writeNull(J)I
.end method

.method public native asn1wr_writeOctetStr(J[B)I
.end method

.method public native asn1wr_writeOctetStrAsBitstring(J[B)I
.end method

.method public native asn1wr_writeOid(J[B)I
.end method

.method public native asn1wr_writeSequence(JI)I
.end method

.method public native asn1wr_writeSet(JI)I
.end method

.method public native asn1wr_writeTag(JI)I
.end method

.method public native asn1wr_writeUint(JJ)I
.end method

.method public native asn1wr_writeUint16(JI)I
.end method

.method public native asn1wr_writeUint32(JJ)I
.end method

.method public native asn1wr_writeUint64(JJ)I
.end method

.method public native asn1wr_writeUint8(JS)I
.end method

.method public native asn1wr_writeUtf8Str(J[B)I
.end method

.method public native asn1wr_writtenLen(J)I
.end method

.method public native base64_decode([B)[B
    .annotation system Ldalvik/annotation/Throws;
        value = {
            Lcom/virgilsecurity/crypto/foundation/FoundationException;
        }
    .end annotation
.end method

.method public native base64_decodedLen(I)I
.end method

.method public native base64_encode([B)[B
.end method

.method public native base64_encodedLen(I)I
.end method

.method public native brainkeyClient_blind(J[B)Lcom/virgilsecurity/crypto/foundation/BrainkeyClientBlindResult;
    .annotation system Ldalvik/annotation/Throws;
        value = {
            Lcom/virgilsecurity/crypto/foundation/FoundationException;
        }
    .end annotation
.end method

.method public native brainkeyClient_close(J)V
.end method

.method public native brainkeyClient_deblind(J[B[B[B[B)[B
    .annotation system Ldalvik/annotation/Throws;
        value = {
            Lcom/virgilsecurity/crypto/foundation/FoundationException;
        }
    .end annotation
.end method

.method public native brainkeyClient_new()J
.end method

.method public native brainkeyClient_setOperationRandom(JLcom/virgilsecurity/crypto/foundation/Random;)V
.end method

.method public native brainkeyClient_setRandom(JLcom/virgilsecurity/crypto/foundation/Random;)V
.end method

.method public native brainkeyClient_setupDefaults(J)V
    .annotation system Ldalvik/annotation/Throws;
        value = {
            Lcom/virgilsecurity/crypto/foundation/FoundationException;
        }
    .end annotation
.end method

.method public native brainkeyServer_close(J)V
.end method

.method public native brainkeyServer_generateIdentitySecret(J)[B
    .annotation system Ldalvik/annotation/Throws;
        value = {
            Lcom/virgilsecurity/crypto/foundation/FoundationException;
        }
    .end annotation
.end method

.method public native brainkeyServer_harden(J[B[B)[B
    .annotation system Ldalvik/annotation/Throws;
        value = {
            Lcom/virgilsecurity/crypto/foundation/FoundationException;
        }
    .end annotation
.end method

.method public native brainkeyServer_new()J
.end method

.method public native brainkeyServer_setOperationRandom(JLcom/virgilsecurity/crypto/foundation/Random;)V
.end method

.method public native brainkeyServer_setRandom(JLcom/virgilsecurity/crypto/foundation/Random;)V
.end method

.method public native brainkeyServer_setupDefaults(J)V
    .annotation system Ldalvik/annotation/Throws;
        value = {
            Lcom/virgilsecurity/crypto/foundation/FoundationException;
        }
    .end annotation
.end method

.method public native cipherAlgInfo_algId(J)Lcom/virgilsecurity/crypto/foundation/AlgId;
.end method

.method public native cipherAlgInfo_close(J)V
.end method

.method public native cipherAlgInfo_new()J
.end method

.method public native cipherAlgInfo_new(Lcom/virgilsecurity/crypto/foundation/AlgId;[B)J
.end method

.method public native cipherAlgInfo_nonce(J)[B
.end method

.method public native compoundKeyAlgInfo_algId(J)Lcom/virgilsecurity/crypto/foundation/AlgId;
.end method

.method public native compoundKeyAlgInfo_cipherAlgInfo(J)Lcom/virgilsecurity/crypto/foundation/AlgInfo;
.end method

.method public native compoundKeyAlgInfo_close(J)V
.end method

.method public native compoundKeyAlgInfo_new()J
.end method

.method public native compoundKeyAlgInfo_signerAlgInfo(J)Lcom/virgilsecurity/crypto/foundation/AlgInfo;
.end method

.method public native compoundKeyAlg_algId(J)Lcom/virgilsecurity/crypto/foundation/AlgId;
.end method

.method public native compoundKeyAlg_canDecrypt(JLcom/virgilsecurity/crypto/foundation/PrivateKey;I)Z
.end method

.method public native compoundKeyAlg_canEncrypt(JLcom/virgilsecurity/crypto/foundation/PublicKey;I)Z
.end method

.method public native compoundKeyAlg_canSign(JLcom/virgilsecurity/crypto/foundation/PrivateKey;)Z
.end method

.method public native compoundKeyAlg_canVerify(JLcom/virgilsecurity/crypto/foundation/PublicKey;)Z
.end method

.method public native compoundKeyAlg_close(J)V
.end method

.method public native compoundKeyAlg_decrypt(JLcom/virgilsecurity/crypto/foundation/PrivateKey;[B)[B
    .annotation system Ldalvik/annotation/Throws;
        value = {
            Lcom/virgilsecurity/crypto/foundation/FoundationException;
        }
    .end annotation
.end method

.method public native compoundKeyAlg_decryptedLen(JLcom/virgilsecurity/crypto/foundation/PrivateKey;I)I
.end method

.method public native compoundKeyAlg_encrypt(JLcom/virgilsecurity/crypto/foundation/PublicKey;[B)[B
    .annotation system Ldalvik/annotation/Throws;
        value = {
            Lcom/virgilsecurity/crypto/foundation/FoundationException;
        }
    .end annotation
.end method

.method public native compoundKeyAlg_encryptedLen(JLcom/virgilsecurity/crypto/foundation/PublicKey;I)I
.end method

.method public native compoundKeyAlg_exportPrivateKey(JLcom/virgilsecurity/crypto/foundation/PrivateKey;)Lcom/virgilsecurity/crypto/foundation/RawPrivateKey;
    .annotation system Ldalvik/annotation/Throws;
        value = {
            Lcom/virgilsecurity/crypto/foundation/FoundationException;
        }
    .end annotation
.end method

.method public native compoundKeyAlg_exportPublicKey(JLcom/virgilsecurity/crypto/foundation/PublicKey;)Lcom/virgilsecurity/crypto/foundation/RawPublicKey;
    .annotation system Ldalvik/annotation/Throws;
        value = {
            Lcom/virgilsecurity/crypto/foundation/FoundationException;
        }
    .end annotation
.end method

.method public native compoundKeyAlg_generateEphemeralKey(JLcom/virgilsecurity/crypto/foundation/Key;)Lcom/virgilsecurity/crypto/foundation/PrivateKey;
    .annotation system Ldalvik/annotation/Throws;
        value = {
            Lcom/virgilsecurity/crypto/foundation/FoundationException;
        }
    .end annotation
.end method

.method public native compoundKeyAlg_importPrivateKey(JLcom/virgilsecurity/crypto/foundation/RawPrivateKey;)Lcom/virgilsecurity/crypto/foundation/PrivateKey;
    .annotation system Ldalvik/annotation/Throws;
        value = {
            Lcom/virgilsecurity/crypto/foundation/FoundationException;
        }
    .end annotation
.end method

.method public native compoundKeyAlg_importPublicKey(JLcom/virgilsecurity/crypto/foundation/RawPublicKey;)Lcom/virgilsecurity/crypto/foundation/PublicKey;
    .annotation system Ldalvik/annotation/Throws;
        value = {
            Lcom/virgilsecurity/crypto/foundation/FoundationException;
        }
    .end annotation
.end method

.method public native compoundKeyAlg_makeKey(JLcom/virgilsecurity/crypto/foundation/PrivateKey;Lcom/virgilsecurity/crypto/foundation/PrivateKey;)Lcom/virgilsecurity/crypto/foundation/PrivateKey;
    .annotation system Ldalvik/annotation/Throws;
        value = {
            Lcom/virgilsecurity/crypto/foundation/FoundationException;
        }
    .end annotation
.end method

.method public native compoundKeyAlg_new()J
.end method

.method public native compoundKeyAlg_produceAlgInfo(J)Lcom/virgilsecurity/crypto/foundation/AlgInfo;
.end method

.method public native compoundKeyAlg_restoreAlgInfo(JLcom/virgilsecurity/crypto/foundation/AlgInfo;)V
    .annotation system Ldalvik/annotation/Throws;
        value = {
            Lcom/virgilsecurity/crypto/foundation/FoundationException;
        }
    .end annotation
.end method

.method public native compoundKeyAlg_setRandom(JLcom/virgilsecurity/crypto/foundation/Random;)V
.end method

.method public native compoundKeyAlg_setupDefaults(J)V
    .annotation system Ldalvik/annotation/Throws;
        value = {
            Lcom/virgilsecurity/crypto/foundation/FoundationException;
        }
    .end annotation
.end method

.method public native compoundKeyAlg_signHash(JLcom/virgilsecurity/crypto/foundation/PrivateKey;Lcom/virgilsecurity/crypto/foundation/AlgId;[B)[B
    .annotation system Ldalvik/annotation/Throws;
        value = {
            Lcom/virgilsecurity/crypto/foundation/FoundationException;
        }
    .end annotation
.end method

.method public native compoundKeyAlg_signatureLen(JLcom/virgilsecurity/crypto/foundation/PrivateKey;)I
.end method

.method public native compoundKeyAlg_verifyHash(JLcom/virgilsecurity/crypto/foundation/PublicKey;Lcom/virgilsecurity/crypto/foundation/AlgId;[B[B)Z
.end method

.method public native compoundPrivateKey_algId(J)Lcom/virgilsecurity/crypto/foundation/AlgId;
.end method

.method public native compoundPrivateKey_algInfo(J)Lcom/virgilsecurity/crypto/foundation/AlgInfo;
.end method

.method public native compoundPrivateKey_bitlen(J)I
.end method

.method public native compoundPrivateKey_cipherKey(J)Lcom/virgilsecurity/crypto/foundation/PrivateKey;
.end method

.method public native compoundPrivateKey_close(J)V
.end method

.method public native compoundPrivateKey_extractPublicKey(J)Lcom/virgilsecurity/crypto/foundation/PublicKey;
.end method

.method public native compoundPrivateKey_isValid(J)Z
.end method

.method public native compoundPrivateKey_len(J)I
.end method

.method public native compoundPrivateKey_new()J
.end method

.method public native compoundPrivateKey_signerKey(J)Lcom/virgilsecurity/crypto/foundation/PrivateKey;
.end method

.method public native compoundPublicKey_algId(J)Lcom/virgilsecurity/crypto/foundation/AlgId;
.end method

.method public native compoundPublicKey_algInfo(J)Lcom/virgilsecurity/crypto/foundation/AlgInfo;
.end method

.method public native compoundPublicKey_bitlen(J)I
.end method

.method public native compoundPublicKey_cipherKey(J)Lcom/virgilsecurity/crypto/foundation/PublicKey;
.end method

.method public native compoundPublicKey_close(J)V
.end method

.method public native compoundPublicKey_isValid(J)Z
.end method

.method public native compoundPublicKey_len(J)I
.end method

.method public native compoundPublicKey_new()J
.end method

.method public native compoundPublicKey_signerKey(J)Lcom/virgilsecurity/crypto/foundation/PublicKey;
.end method

.method public native ctrDrbg_close(J)V
.end method

.method public native ctrDrbg_enablePredictionResistance(J)V
.end method

.method public native ctrDrbg_new()J
.end method

.method public native ctrDrbg_random(JI)[B
    .annotation system Ldalvik/annotation/Throws;
        value = {
            Lcom/virgilsecurity/crypto/foundation/FoundationException;
        }
    .end annotation
.end method

.method public native ctrDrbg_reseed(J)V
    .annotation system Ldalvik/annotation/Throws;
        value = {
            Lcom/virgilsecurity/crypto/foundation/FoundationException;
        }
    .end annotation
.end method

.method public native ctrDrbg_setEntropyLen(JI)V
.end method

.method public native ctrDrbg_setEntropySource(JLcom/virgilsecurity/crypto/foundation/EntropySource;)V
    .annotation system Ldalvik/annotation/Throws;
        value = {
            Lcom/virgilsecurity/crypto/foundation/FoundationException;
        }
    .end annotation
.end method

.method public native ctrDrbg_setReseedInterval(JI)V
.end method

.method public native ctrDrbg_setupDefaults(J)V
    .annotation system Ldalvik/annotation/Throws;
        value = {
            Lcom/virgilsecurity/crypto/foundation/FoundationException;
        }
    .end annotation
.end method

.method public native curve25519_canDecrypt(JLcom/virgilsecurity/crypto/foundation/PrivateKey;I)Z
.end method

.method public native curve25519_canEncrypt(JLcom/virgilsecurity/crypto/foundation/PublicKey;I)Z
.end method

.method public native curve25519_close(J)V
.end method

.method public native curve25519_computeSharedKey(JLcom/virgilsecurity/crypto/foundation/PublicKey;Lcom/virgilsecurity/crypto/foundation/PrivateKey;)[B
    .annotation system Ldalvik/annotation/Throws;
        value = {
            Lcom/virgilsecurity/crypto/foundation/FoundationException;
        }
    .end annotation
.end method

.method public native curve25519_decrypt(JLcom/virgilsecurity/crypto/foundation/PrivateKey;[B)[B
    .annotation system Ldalvik/annotation/Throws;
        value = {
            Lcom/virgilsecurity/crypto/foundation/FoundationException;
        }
    .end annotation
.end method

.method public native curve25519_decryptedLen(JLcom/virgilsecurity/crypto/foundation/PrivateKey;I)I
.end method

.method public native curve25519_encrypt(JLcom/virgilsecurity/crypto/foundation/PublicKey;[B)[B
    .annotation system Ldalvik/annotation/Throws;
        value = {
            Lcom/virgilsecurity/crypto/foundation/FoundationException;
        }
    .end annotation
.end method

.method public native curve25519_encryptedLen(JLcom/virgilsecurity/crypto/foundation/PublicKey;I)I
.end method

.method public native curve25519_exportPrivateKey(JLcom/virgilsecurity/crypto/foundation/PrivateKey;)Lcom/virgilsecurity/crypto/foundation/RawPrivateKey;
    .annotation system Ldalvik/annotation/Throws;
        value = {
            Lcom/virgilsecurity/crypto/foundation/FoundationException;
        }
    .end annotation
.end method

.method public native curve25519_exportPublicKey(JLcom/virgilsecurity/crypto/foundation/PublicKey;)Lcom/virgilsecurity/crypto/foundation/RawPublicKey;
    .annotation system Ldalvik/annotation/Throws;
        value = {
            Lcom/virgilsecurity/crypto/foundation/FoundationException;
        }
    .end annotation
.end method

.method public native curve25519_generateEphemeralKey(JLcom/virgilsecurity/crypto/foundation/Key;)Lcom/virgilsecurity/crypto/foundation/PrivateKey;
    .annotation system Ldalvik/annotation/Throws;
        value = {
            Lcom/virgilsecurity/crypto/foundation/FoundationException;
        }
    .end annotation
.end method

.method public native curve25519_generateKey(J)Lcom/virgilsecurity/crypto/foundation/PrivateKey;
    .annotation system Ldalvik/annotation/Throws;
        value = {
            Lcom/virgilsecurity/crypto/foundation/FoundationException;
        }
    .end annotation
.end method

.method public native curve25519_importPrivateKey(JLcom/virgilsecurity/crypto/foundation/RawPrivateKey;)Lcom/virgilsecurity/crypto/foundation/PrivateKey;
    .annotation system Ldalvik/annotation/Throws;
        value = {
            Lcom/virgilsecurity/crypto/foundation/FoundationException;
        }
    .end annotation
.end method

.method public native curve25519_importPublicKey(JLcom/virgilsecurity/crypto/foundation/RawPublicKey;)Lcom/virgilsecurity/crypto/foundation/PublicKey;
    .annotation system Ldalvik/annotation/Throws;
        value = {
            Lcom/virgilsecurity/crypto/foundation/FoundationException;
        }
    .end annotation
.end method

.method public native curve25519_kemDecapsulate(J[BLcom/virgilsecurity/crypto/foundation/PrivateKey;)[B
    .annotation system Ldalvik/annotation/Throws;
        value = {
            Lcom/virgilsecurity/crypto/foundation/FoundationException;
        }
    .end annotation
.end method

.method public native curve25519_kemEncapsulate(JLcom/virgilsecurity/crypto/foundation/PublicKey;)Lcom/virgilsecurity/crypto/foundation/KemKemEncapsulateResult;
    .annotation system Ldalvik/annotation/Throws;
        value = {
            Lcom/virgilsecurity/crypto/foundation/FoundationException;
        }
    .end annotation
.end method

.method public native curve25519_kemEncapsulatedKeyLen(JLcom/virgilsecurity/crypto/foundation/PublicKey;)I
.end method

.method public native curve25519_kemSharedKeyLen(JLcom/virgilsecurity/crypto/foundation/Key;)I
.end method

.method public native curve25519_new()J
.end method

.method public native curve25519_setEcies(JLcom/virgilsecurity/crypto/foundation/Ecies;)V
    .annotation system Ldalvik/annotation/Throws;
        value = {
            Lcom/virgilsecurity/crypto/foundation/FoundationException;
        }
    .end annotation
.end method

.method public native curve25519_setRandom(JLcom/virgilsecurity/crypto/foundation/Random;)V
.end method

.method public native curve25519_setupDefaults(J)V
    .annotation system Ldalvik/annotation/Throws;
        value = {
            Lcom/virgilsecurity/crypto/foundation/FoundationException;
        }
    .end annotation
.end method

.method public native curve25519_sharedKeyLen(JLcom/virgilsecurity/crypto/foundation/Key;)I
.end method

.method public native eccAlgInfo_algId(J)Lcom/virgilsecurity/crypto/foundation/AlgId;
.end method

.method public native eccAlgInfo_close(J)V
.end method

.method public native eccAlgInfo_domainId(J)Lcom/virgilsecurity/crypto/foundation/OidId;
.end method

.method public native eccAlgInfo_keyId(J)Lcom/virgilsecurity/crypto/foundation/OidId;
.end method

.method public native eccAlgInfo_new()J
.end method

.method public native eccAlgInfo_new(Lcom/virgilsecurity/crypto/foundation/AlgId;Lcom/virgilsecurity/crypto/foundation/OidId;Lcom/virgilsecurity/crypto/foundation/OidId;)J
.end method

.method public native eccPrivateKey_algId(J)Lcom/virgilsecurity/crypto/foundation/AlgId;
.end method

.method public native eccPrivateKey_algInfo(J)Lcom/virgilsecurity/crypto/foundation/AlgInfo;
.end method

.method public native eccPrivateKey_bitlen(J)I
.end method

.method public native eccPrivateKey_close(J)V
.end method

.method public native eccPrivateKey_extractPublicKey(J)Lcom/virgilsecurity/crypto/foundation/PublicKey;
.end method

.method public native eccPrivateKey_isValid(J)Z
.end method

.method public native eccPrivateKey_len(J)I
.end method

.method public native eccPrivateKey_new()J
.end method

.method public native eccPublicKey_algId(J)Lcom/virgilsecurity/crypto/foundation/AlgId;
.end method

.method public native eccPublicKey_algInfo(J)Lcom/virgilsecurity/crypto/foundation/AlgInfo;
.end method

.method public native eccPublicKey_bitlen(J)I
.end method

.method public native eccPublicKey_close(J)V
.end method

.method public native eccPublicKey_isValid(J)Z
.end method

.method public native eccPublicKey_len(J)I
.end method

.method public native eccPublicKey_new()J
.end method

.method public native ecc_canDecrypt(JLcom/virgilsecurity/crypto/foundation/PrivateKey;I)Z
.end method

.method public native ecc_canEncrypt(JLcom/virgilsecurity/crypto/foundation/PublicKey;I)Z
.end method

.method public native ecc_canSign(JLcom/virgilsecurity/crypto/foundation/PrivateKey;)Z
.end method

.method public native ecc_canVerify(JLcom/virgilsecurity/crypto/foundation/PublicKey;)Z
.end method

.method public native ecc_close(J)V
.end method

.method public native ecc_computeSharedKey(JLcom/virgilsecurity/crypto/foundation/PublicKey;Lcom/virgilsecurity/crypto/foundation/PrivateKey;)[B
    .annotation system Ldalvik/annotation/Throws;
        value = {
            Lcom/virgilsecurity/crypto/foundation/FoundationException;
        }
    .end annotation
.end method

.method public native ecc_decrypt(JLcom/virgilsecurity/crypto/foundation/PrivateKey;[B)[B
    .annotation system Ldalvik/annotation/Throws;
        value = {
            Lcom/virgilsecurity/crypto/foundation/FoundationException;
        }
    .end annotation
.end method

.method public native ecc_decryptedLen(JLcom/virgilsecurity/crypto/foundation/PrivateKey;I)I
.end method

.method public native ecc_encrypt(JLcom/virgilsecurity/crypto/foundation/PublicKey;[B)[B
    .annotation system Ldalvik/annotation/Throws;
        value = {
            Lcom/virgilsecurity/crypto/foundation/FoundationException;
        }
    .end annotation
.end method

.method public native ecc_encryptedLen(JLcom/virgilsecurity/crypto/foundation/PublicKey;I)I
.end method

.method public native ecc_exportPrivateKey(JLcom/virgilsecurity/crypto/foundation/PrivateKey;)Lcom/virgilsecurity/crypto/foundation/RawPrivateKey;
    .annotation system Ldalvik/annotation/Throws;
        value = {
            Lcom/virgilsecurity/crypto/foundation/FoundationException;
        }
    .end annotation
.end method

.method public native ecc_exportPublicKey(JLcom/virgilsecurity/crypto/foundation/PublicKey;)Lcom/virgilsecurity/crypto/foundation/RawPublicKey;
    .annotation system Ldalvik/annotation/Throws;
        value = {
            Lcom/virgilsecurity/crypto/foundation/FoundationException;
        }
    .end annotation
.end method

.method public native ecc_generateEphemeralKey(JLcom/virgilsecurity/crypto/foundation/Key;)Lcom/virgilsecurity/crypto/foundation/PrivateKey;
    .annotation system Ldalvik/annotation/Throws;
        value = {
            Lcom/virgilsecurity/crypto/foundation/FoundationException;
        }
    .end annotation
.end method

.method public native ecc_generateKey(JLcom/virgilsecurity/crypto/foundation/AlgId;)Lcom/virgilsecurity/crypto/foundation/PrivateKey;
    .annotation system Ldalvik/annotation/Throws;
        value = {
            Lcom/virgilsecurity/crypto/foundation/FoundationException;
        }
    .end annotation
.end method

.method public native ecc_importPrivateKey(JLcom/virgilsecurity/crypto/foundation/RawPrivateKey;)Lcom/virgilsecurity/crypto/foundation/PrivateKey;
    .annotation system Ldalvik/annotation/Throws;
        value = {
            Lcom/virgilsecurity/crypto/foundation/FoundationException;
        }
    .end annotation
.end method

.method public native ecc_importPublicKey(JLcom/virgilsecurity/crypto/foundation/RawPublicKey;)Lcom/virgilsecurity/crypto/foundation/PublicKey;
    .annotation system Ldalvik/annotation/Throws;
        value = {
            Lcom/virgilsecurity/crypto/foundation/FoundationException;
        }
    .end annotation
.end method

.method public native ecc_kemDecapsulate(J[BLcom/virgilsecurity/crypto/foundation/PrivateKey;)[B
    .annotation system Ldalvik/annotation/Throws;
        value = {
            Lcom/virgilsecurity/crypto/foundation/FoundationException;
        }
    .end annotation
.end method

.method public native ecc_kemEncapsulate(JLcom/virgilsecurity/crypto/foundation/PublicKey;)Lcom/virgilsecurity/crypto/foundation/KemKemEncapsulateResult;
    .annotation system Ldalvik/annotation/Throws;
        value = {
            Lcom/virgilsecurity/crypto/foundation/FoundationException;
        }
    .end annotation
.end method

.method public native ecc_kemEncapsulatedKeyLen(JLcom/virgilsecurity/crypto/foundation/PublicKey;)I
.end method

.method public native ecc_kemSharedKeyLen(JLcom/virgilsecurity/crypto/foundation/Key;)I
.end method

.method public native ecc_new()J
.end method

.method public native ecc_setEcies(JLcom/virgilsecurity/crypto/foundation/Ecies;)V
    .annotation system Ldalvik/annotation/Throws;
        value = {
            Lcom/virgilsecurity/crypto/foundation/FoundationException;
        }
    .end annotation
.end method

.method public native ecc_setRandom(JLcom/virgilsecurity/crypto/foundation/Random;)V
.end method

.method public native ecc_setupDefaults(J)V
    .annotation system Ldalvik/annotation/Throws;
        value = {
            Lcom/virgilsecurity/crypto/foundation/FoundationException;
        }
    .end annotation
.end method

.method public native ecc_sharedKeyLen(JLcom/virgilsecurity/crypto/foundation/Key;)I
.end method

.method public native ecc_signHash(JLcom/virgilsecurity/crypto/foundation/PrivateKey;Lcom/virgilsecurity/crypto/foundation/AlgId;[B)[B
    .annotation system Ldalvik/annotation/Throws;
        value = {
            Lcom/virgilsecurity/crypto/foundation/FoundationException;
        }
    .end annotation
.end method

.method public native ecc_signatureLen(JLcom/virgilsecurity/crypto/foundation/PrivateKey;)I
.end method

.method public native ecc_verifyHash(JLcom/virgilsecurity/crypto/foundation/PublicKey;Lcom/virgilsecurity/crypto/foundation/AlgId;[B[B)Z
.end method

.method public native ecies_close(J)V
.end method

.method public native ecies_decrypt(JLcom/virgilsecurity/crypto/foundation/PrivateKey;[B)[B
    .annotation system Ldalvik/annotation/Throws;
        value = {
            Lcom/virgilsecurity/crypto/foundation/FoundationException;
        }
    .end annotation
.end method

.method public native ecies_decryptedLen(JLcom/virgilsecurity/crypto/foundation/PrivateKey;I)I
.end method

.method public native ecies_encrypt(JLcom/virgilsecurity/crypto/foundation/PublicKey;[B)[B
    .annotation system Ldalvik/annotation/Throws;
        value = {
            Lcom/virgilsecurity/crypto/foundation/FoundationException;
        }
    .end annotation
.end method

.method public native ecies_encryptedLen(JLcom/virgilsecurity/crypto/foundation/PublicKey;I)I
.end method

.method public native ecies_new()J
.end method

.method public native ecies_releaseKeyAlg(J)V
.end method

.method public native ecies_setCipher(JLcom/virgilsecurity/crypto/foundation/Cipher;)V
.end method

.method public native ecies_setEphemeralKey(JLcom/virgilsecurity/crypto/foundation/PrivateKey;)V
.end method

.method public native ecies_setKdf(JLcom/virgilsecurity/crypto/foundation/Kdf;)V
.end method

.method public native ecies_setKeyAlg(JLcom/virgilsecurity/crypto/foundation/KeyAlg;)V
.end method

.method public native ecies_setMac(JLcom/virgilsecurity/crypto/foundation/Mac;)V
.end method

.method public native ecies_setRandom(JLcom/virgilsecurity/crypto/foundation/Random;)V
.end method

.method public native ecies_setupDefaults(J)V
    .annotation system Ldalvik/annotation/Throws;
        value = {
            Lcom/virgilsecurity/crypto/foundation/FoundationException;
        }
    .end annotation
.end method

.method public native ecies_setupDefaultsNoRandom(J)V
.end method

.method public native ed25519_canDecrypt(JLcom/virgilsecurity/crypto/foundation/PrivateKey;I)Z
.end method

.method public native ed25519_canEncrypt(JLcom/virgilsecurity/crypto/foundation/PublicKey;I)Z
.end method

.method public native ed25519_canSign(JLcom/virgilsecurity/crypto/foundation/PrivateKey;)Z
.end method

.method public native ed25519_canVerify(JLcom/virgilsecurity/crypto/foundation/PublicKey;)Z
.end method

.method public native ed25519_close(J)V
.end method

.method public native ed25519_computeSharedKey(JLcom/virgilsecurity/crypto/foundation/PublicKey;Lcom/virgilsecurity/crypto/foundation/PrivateKey;)[B
    .annotation system Ldalvik/annotation/Throws;
        value = {
            Lcom/virgilsecurity/crypto/foundation/FoundationException;
        }
    .end annotation
.end method

.method public native ed25519_decrypt(JLcom/virgilsecurity/crypto/foundation/PrivateKey;[B)[B
    .annotation system Ldalvik/annotation/Throws;
        value = {
            Lcom/virgilsecurity/crypto/foundation/FoundationException;
        }
    .end annotation
.end method

.method public native ed25519_decryptedLen(JLcom/virgilsecurity/crypto/foundation/PrivateKey;I)I
.end method

.method public native ed25519_encrypt(JLcom/virgilsecurity/crypto/foundation/PublicKey;[B)[B
    .annotation system Ldalvik/annotation/Throws;
        value = {
            Lcom/virgilsecurity/crypto/foundation/FoundationException;
        }
    .end annotation
.end method

.method public native ed25519_encryptedLen(JLcom/virgilsecurity/crypto/foundation/PublicKey;I)I
.end method

.method public native ed25519_exportPrivateKey(JLcom/virgilsecurity/crypto/foundation/PrivateKey;)Lcom/virgilsecurity/crypto/foundation/RawPrivateKey;
    .annotation system Ldalvik/annotation/Throws;
        value = {
            Lcom/virgilsecurity/crypto/foundation/FoundationException;
        }
    .end annotation
.end method

.method public native ed25519_exportPublicKey(JLcom/virgilsecurity/crypto/foundation/PublicKey;)Lcom/virgilsecurity/crypto/foundation/RawPublicKey;
    .annotation system Ldalvik/annotation/Throws;
        value = {
            Lcom/virgilsecurity/crypto/foundation/FoundationException;
        }
    .end annotation
.end method

.method public native ed25519_generateEphemeralKey(JLcom/virgilsecurity/crypto/foundation/Key;)Lcom/virgilsecurity/crypto/foundation/PrivateKey;
    .annotation system Ldalvik/annotation/Throws;
        value = {
            Lcom/virgilsecurity/crypto/foundation/FoundationException;
        }
    .end annotation
.end method

.method public native ed25519_generateKey(J)Lcom/virgilsecurity/crypto/foundation/PrivateKey;
    .annotation system Ldalvik/annotation/Throws;
        value = {
            Lcom/virgilsecurity/crypto/foundation/FoundationException;
        }
    .end annotation
.end method

.method public native ed25519_importPrivateKey(JLcom/virgilsecurity/crypto/foundation/RawPrivateKey;)Lcom/virgilsecurity/crypto/foundation/PrivateKey;
    .annotation system Ldalvik/annotation/Throws;
        value = {
            Lcom/virgilsecurity/crypto/foundation/FoundationException;
        }
    .end annotation
.end method

.method public native ed25519_importPublicKey(JLcom/virgilsecurity/crypto/foundation/RawPublicKey;)Lcom/virgilsecurity/crypto/foundation/PublicKey;
    .annotation system Ldalvik/annotation/Throws;
        value = {
            Lcom/virgilsecurity/crypto/foundation/FoundationException;
        }
    .end annotation
.end method

.method public native ed25519_kemDecapsulate(J[BLcom/virgilsecurity/crypto/foundation/PrivateKey;)[B
    .annotation system Ldalvik/annotation/Throws;
        value = {
            Lcom/virgilsecurity/crypto/foundation/FoundationException;
        }
    .end annotation
.end method

.method public native ed25519_kemEncapsulate(JLcom/virgilsecurity/crypto/foundation/PublicKey;)Lcom/virgilsecurity/crypto/foundation/KemKemEncapsulateResult;
    .annotation system Ldalvik/annotation/Throws;
        value = {
            Lcom/virgilsecurity/crypto/foundation/FoundationException;
        }
    .end annotation
.end method

.method public native ed25519_kemEncapsulatedKeyLen(JLcom/virgilsecurity/crypto/foundation/PublicKey;)I
.end method

.method public native ed25519_kemSharedKeyLen(JLcom/virgilsecurity/crypto/foundation/Key;)I
.end method

.method public native ed25519_new()J
.end method

.method public native ed25519_setEcies(JLcom/virgilsecurity/crypto/foundation/Ecies;)V
    .annotation system Ldalvik/annotation/Throws;
        value = {
            Lcom/virgilsecurity/crypto/foundation/FoundationException;
        }
    .end annotation
.end method

.method public native ed25519_setRandom(JLcom/virgilsecurity/crypto/foundation/Random;)V
.end method

.method public native ed25519_setupDefaults(J)V
    .annotation system Ldalvik/annotation/Throws;
        value = {
            Lcom/virgilsecurity/crypto/foundation/FoundationException;
        }
    .end annotation
.end method

.method public native ed25519_sharedKeyLen(JLcom/virgilsecurity/crypto/foundation/Key;)I
.end method

.method public native ed25519_signHash(JLcom/virgilsecurity/crypto/foundation/PrivateKey;Lcom/virgilsecurity/crypto/foundation/AlgId;[B)[B
    .annotation system Ldalvik/annotation/Throws;
        value = {
            Lcom/virgilsecurity/crypto/foundation/FoundationException;
        }
    .end annotation
.end method

.method public native ed25519_signatureLen(JLcom/virgilsecurity/crypto/foundation/PrivateKey;)I
.end method

.method public native ed25519_verifyHash(JLcom/virgilsecurity/crypto/foundation/PublicKey;Lcom/virgilsecurity/crypto/foundation/AlgId;[B[B)Z
.end method

.method public native entropyAccumulator_addSource(JLcom/virgilsecurity/crypto/foundation/EntropySource;I)V
.end method

.method public native entropyAccumulator_close(J)V
.end method

.method public native entropyAccumulator_gather(JI)[B
    .annotation system Ldalvik/annotation/Throws;
        value = {
            Lcom/virgilsecurity/crypto/foundation/FoundationException;
        }
    .end annotation
.end method

.method public native entropyAccumulator_isStrong(J)Z
.end method

.method public native entropyAccumulator_new()J
.end method

.method public native entropyAccumulator_setupDefaults(J)V
.end method

.method public native fakeRandom_close(J)V
.end method

.method public native fakeRandom_gather(JI)[B
    .annotation system Ldalvik/annotation/Throws;
        value = {
            Lcom/virgilsecurity/crypto/foundation/FoundationException;
        }
    .end annotation
.end method

.method public native fakeRandom_isStrong(J)Z
.end method

.method public native fakeRandom_new()J
.end method

.method public native fakeRandom_random(JI)[B
    .annotation system Ldalvik/annotation/Throws;
        value = {
            Lcom/virgilsecurity/crypto/foundation/FoundationException;
        }
    .end annotation
.end method

.method public native fakeRandom_reseed(J)V
    .annotation system Ldalvik/annotation/Throws;
        value = {
            Lcom/virgilsecurity/crypto/foundation/FoundationException;
        }
    .end annotation
.end method

.method public native fakeRandom_setupSourceByte(JB)V
.end method

.method public native fakeRandom_setupSourceData(J[B)V
.end method

.method public native falcon_algId(J)Lcom/virgilsecurity/crypto/foundation/AlgId;
.end method

.method public native falcon_canSign(JLcom/virgilsecurity/crypto/foundation/PrivateKey;)Z
.end method

.method public native falcon_canVerify(JLcom/virgilsecurity/crypto/foundation/PublicKey;)Z
.end method

.method public native falcon_close(J)V
.end method

.method public native falcon_exportPrivateKey(JLcom/virgilsecurity/crypto/foundation/PrivateKey;)Lcom/virgilsecurity/crypto/foundation/RawPrivateKey;
    .annotation system Ldalvik/annotation/Throws;
        value = {
            Lcom/virgilsecurity/crypto/foundation/FoundationException;
        }
    .end annotation
.end method

.method public native falcon_exportPublicKey(JLcom/virgilsecurity/crypto/foundation/PublicKey;)Lcom/virgilsecurity/crypto/foundation/RawPublicKey;
    .annotation system Ldalvik/annotation/Throws;
        value = {
            Lcom/virgilsecurity/crypto/foundation/FoundationException;
        }
    .end annotation
.end method

.method public native falcon_generateEphemeralKey(JLcom/virgilsecurity/crypto/foundation/Key;)Lcom/virgilsecurity/crypto/foundation/PrivateKey;
    .annotation system Ldalvik/annotation/Throws;
        value = {
            Lcom/virgilsecurity/crypto/foundation/FoundationException;
        }
    .end annotation
.end method

.method public native falcon_generateKey(J)Lcom/virgilsecurity/crypto/foundation/PrivateKey;
    .annotation system Ldalvik/annotation/Throws;
        value = {
            Lcom/virgilsecurity/crypto/foundation/FoundationException;
        }
    .end annotation
.end method

.method public native falcon_importPrivateKey(JLcom/virgilsecurity/crypto/foundation/RawPrivateKey;)Lcom/virgilsecurity/crypto/foundation/PrivateKey;
    .annotation system Ldalvik/annotation/Throws;
        value = {
            Lcom/virgilsecurity/crypto/foundation/FoundationException;
        }
    .end annotation
.end method

.method public native falcon_importPublicKey(JLcom/virgilsecurity/crypto/foundation/RawPublicKey;)Lcom/virgilsecurity/crypto/foundation/PublicKey;
    .annotation system Ldalvik/annotation/Throws;
        value = {
            Lcom/virgilsecurity/crypto/foundation/FoundationException;
        }
    .end annotation
.end method

.method public native falcon_new()J
.end method

.method public native falcon_produceAlgInfo(J)Lcom/virgilsecurity/crypto/foundation/AlgInfo;
.end method

.method public native falcon_restoreAlgInfo(JLcom/virgilsecurity/crypto/foundation/AlgInfo;)V
    .annotation system Ldalvik/annotation/Throws;
        value = {
            Lcom/virgilsecurity/crypto/foundation/FoundationException;
        }
    .end annotation
.end method

.method public native falcon_setRandom(JLcom/virgilsecurity/crypto/foundation/Random;)V
.end method

.method public native falcon_setupDefaults(J)V
    .annotation system Ldalvik/annotation/Throws;
        value = {
            Lcom/virgilsecurity/crypto/foundation/FoundationException;
        }
    .end annotation
.end method

.method public native falcon_signHash(JLcom/virgilsecurity/crypto/foundation/PrivateKey;Lcom/virgilsecurity/crypto/foundation/AlgId;[B)[B
    .annotation system Ldalvik/annotation/Throws;
        value = {
            Lcom/virgilsecurity/crypto/foundation/FoundationException;
        }
    .end annotation
.end method

.method public native falcon_signatureLen(JLcom/virgilsecurity/crypto/foundation/PrivateKey;)I
.end method

.method public native falcon_verifyHash(JLcom/virgilsecurity/crypto/foundation/PublicKey;Lcom/virgilsecurity/crypto/foundation/AlgId;[B[B)Z
.end method

.method public native footerInfo_close(J)V
.end method

.method public native footerInfo_dataSize(J)I
.end method

.method public native footerInfo_hasSignedDataInfo(J)Z
.end method

.method public native footerInfo_new()J
.end method

.method public native footerInfo_setDataSize(JI)V
.end method

.method public native footerInfo_signedDataInfo(J)Lcom/virgilsecurity/crypto/foundation/SignedDataInfo;
.end method

.method public native groupSessionMessage_close(J)V
.end method

.method public native groupSessionMessage_deserialize([B)Lcom/virgilsecurity/crypto/foundation/GroupSessionMessage;
    .annotation system Ldalvik/annotation/Throws;
        value = {
            Lcom/virgilsecurity/crypto/foundation/FoundationException;
        }
    .end annotation
.end method

.method public native groupSessionMessage_getEpoch(J)J
.end method

.method public native groupSessionMessage_getSessionId(J)[B
.end method

.method public native groupSessionMessage_getType(J)Lcom/virgilsecurity/crypto/foundation/GroupMsgType;
.end method

.method public native groupSessionMessage_new()J
.end method

.method public native groupSessionMessage_serialize(J)[B
.end method

.method public native groupSessionMessage_serializeLen(J)I
.end method

.method public native groupSessionTicket_close(J)V
.end method

.method public native groupSessionTicket_getTicketMessage(J)Lcom/virgilsecurity/crypto/foundation/GroupSessionMessage;
.end method

.method public native groupSessionTicket_new()J
.end method

.method public native groupSessionTicket_setRng(JLcom/virgilsecurity/crypto/foundation/Random;)V
.end method

.method public native groupSessionTicket_setupDefaults(J)V
    .annotation system Ldalvik/annotation/Throws;
        value = {
            Lcom/virgilsecurity/crypto/foundation/FoundationException;
        }
    .end annotation
.end method

.method public native groupSessionTicket_setupTicketAsNew(J[B)V
    .annotation system Ldalvik/annotation/Throws;
        value = {
            Lcom/virgilsecurity/crypto/foundation/FoundationException;
        }
    .end annotation
.end method

.method public native groupSession_addEpoch(JLcom/virgilsecurity/crypto/foundation/GroupSessionMessage;)V
    .annotation system Ldalvik/annotation/Throws;
        value = {
            Lcom/virgilsecurity/crypto/foundation/FoundationException;
        }
    .end annotation
.end method

.method public native groupSession_close(J)V
.end method

.method public native groupSession_createGroupTicket(J)Lcom/virgilsecurity/crypto/foundation/GroupSessionTicket;
    .annotation system Ldalvik/annotation/Throws;
        value = {
            Lcom/virgilsecurity/crypto/foundation/FoundationException;
        }
    .end annotation
.end method

.method public native groupSession_decrypt(JLcom/virgilsecurity/crypto/foundation/GroupSessionMessage;Lcom/virgilsecurity/crypto/foundation/PublicKey;)[B
    .annotation system Ldalvik/annotation/Throws;
        value = {
            Lcom/virgilsecurity/crypto/foundation/FoundationException;
        }
    .end annotation
.end method

.method public native groupSession_decryptLen(JLcom/virgilsecurity/crypto/foundation/GroupSessionMessage;)I
.end method

.method public native groupSession_encrypt(J[BLcom/virgilsecurity/crypto/foundation/PrivateKey;)Lcom/virgilsecurity/crypto/foundation/GroupSessionMessage;
    .annotation system Ldalvik/annotation/Throws;
        value = {
            Lcom/virgilsecurity/crypto/foundation/FoundationException;
        }
    .end annotation
.end method

.method public native groupSession_getCurrentEpoch(J)J
.end method

.method public native groupSession_getSessionId(J)[B
.end method

.method public native groupSession_new()J
.end method

.method public native groupSession_setRng(JLcom/virgilsecurity/crypto/foundation/Random;)V
    .annotation system Ldalvik/annotation/Throws;
        value = {
            Lcom/virgilsecurity/crypto/foundation/FoundationException;
        }
    .end annotation
.end method

.method public native groupSession_setupDefaults(J)V
    .annotation system Ldalvik/annotation/Throws;
        value = {
            Lcom/virgilsecurity/crypto/foundation/FoundationException;
        }
    .end annotation
.end method

.method public native hashBasedAlgInfo_algId(J)Lcom/virgilsecurity/crypto/foundation/AlgId;
.end method

.method public native hashBasedAlgInfo_close(J)V
.end method

.method public native hashBasedAlgInfo_hashAlgInfo(J)Lcom/virgilsecurity/crypto/foundation/AlgInfo;
.end method

.method public native hashBasedAlgInfo_new()J
.end method

.method public native hkdf_algId(J)Lcom/virgilsecurity/crypto/foundation/AlgId;
.end method

.method public native hkdf_close(J)V
.end method

.method public native hkdf_derive(J[BI)[B
.end method

.method public native hkdf_new()J
.end method

.method public native hkdf_produceAlgInfo(J)Lcom/virgilsecurity/crypto/foundation/AlgInfo;
.end method

.method public native hkdf_reset(J[BI)V
.end method

.method public native hkdf_restoreAlgInfo(JLcom/virgilsecurity/crypto/foundation/AlgInfo;)V
    .annotation system Ldalvik/annotation/Throws;
        value = {
            Lcom/virgilsecurity/crypto/foundation/FoundationException;
        }
    .end annotation
.end method

.method public native hkdf_setHash(JLcom/virgilsecurity/crypto/foundation/Hash;)V
    .annotation system Ldalvik/annotation/Throws;
        value = {
            Lcom/virgilsecurity/crypto/foundation/FoundationException;
        }
    .end annotation
.end method

.method public native hkdf_setInfo(J[B)V
.end method

.method public native hmac_algId(J)Lcom/virgilsecurity/crypto/foundation/AlgId;
.end method

.method public native hmac_close(J)V
.end method

.method public native hmac_digestLen(J)I
.end method

.method public native hmac_finish(J)[B
.end method

.method public native hmac_mac(J[B[B)[B
.end method

.method public native hmac_new()J
.end method

.method public native hmac_produceAlgInfo(J)Lcom/virgilsecurity/crypto/foundation/AlgInfo;
.end method

.method public native hmac_reset(J)V
.end method

.method public native hmac_restoreAlgInfo(JLcom/virgilsecurity/crypto/foundation/AlgInfo;)V
    .annotation system Ldalvik/annotation/Throws;
        value = {
            Lcom/virgilsecurity/crypto/foundation/FoundationException;
        }
    .end annotation
.end method

.method public native hmac_setHash(JLcom/virgilsecurity/crypto/foundation/Hash;)V
.end method

.method public native hmac_start(J[B)V
.end method

.method public native hmac_update(J[B)V
.end method

.method public native hybridKeyAlgInfo_algId(J)Lcom/virgilsecurity/crypto/foundation/AlgId;
.end method

.method public native hybridKeyAlgInfo_close(J)V
.end method

.method public native hybridKeyAlgInfo_firstKeyAlgInfo(J)Lcom/virgilsecurity/crypto/foundation/AlgInfo;
.end method

.method public native hybridKeyAlgInfo_new()J
.end method

.method public native hybridKeyAlgInfo_secondKeyAlgInfo(J)Lcom/virgilsecurity/crypto/foundation/AlgInfo;
.end method

.method public native hybridKeyAlg_canDecrypt(JLcom/virgilsecurity/crypto/foundation/PrivateKey;I)Z
.end method

.method public native hybridKeyAlg_canEncrypt(JLcom/virgilsecurity/crypto/foundation/PublicKey;I)Z
.end method

.method public native hybridKeyAlg_canSign(JLcom/virgilsecurity/crypto/foundation/PrivateKey;)Z
.end method

.method public native hybridKeyAlg_canVerify(JLcom/virgilsecurity/crypto/foundation/PublicKey;)Z
.end method

.method public native hybridKeyAlg_close(J)V
.end method

.method public native hybridKeyAlg_decrypt(JLcom/virgilsecurity/crypto/foundation/PrivateKey;[B)[B
    .annotation system Ldalvik/annotation/Throws;
        value = {
            Lcom/virgilsecurity/crypto/foundation/FoundationException;
        }
    .end annotation
.end method

.method public native hybridKeyAlg_decryptedLen(JLcom/virgilsecurity/crypto/foundation/PrivateKey;I)I
.end method

.method public native hybridKeyAlg_encrypt(JLcom/virgilsecurity/crypto/foundation/PublicKey;[B)[B
    .annotation system Ldalvik/annotation/Throws;
        value = {
            Lcom/virgilsecurity/crypto/foundation/FoundationException;
        }
    .end annotation
.end method

.method public native hybridKeyAlg_encryptedLen(JLcom/virgilsecurity/crypto/foundation/PublicKey;I)I
.end method

.method public native hybridKeyAlg_exportPrivateKey(JLcom/virgilsecurity/crypto/foundation/PrivateKey;)Lcom/virgilsecurity/crypto/foundation/RawPrivateKey;
    .annotation system Ldalvik/annotation/Throws;
        value = {
            Lcom/virgilsecurity/crypto/foundation/FoundationException;
        }
    .end annotation
.end method

.method public native hybridKeyAlg_exportPublicKey(JLcom/virgilsecurity/crypto/foundation/PublicKey;)Lcom/virgilsecurity/crypto/foundation/RawPublicKey;
    .annotation system Ldalvik/annotation/Throws;
        value = {
            Lcom/virgilsecurity/crypto/foundation/FoundationException;
        }
    .end annotation
.end method

.method public native hybridKeyAlg_generateEphemeralKey(JLcom/virgilsecurity/crypto/foundation/Key;)Lcom/virgilsecurity/crypto/foundation/PrivateKey;
    .annotation system Ldalvik/annotation/Throws;
        value = {
            Lcom/virgilsecurity/crypto/foundation/FoundationException;
        }
    .end annotation
.end method

.method public native hybridKeyAlg_importPrivateKey(JLcom/virgilsecurity/crypto/foundation/RawPrivateKey;)Lcom/virgilsecurity/crypto/foundation/PrivateKey;
    .annotation system Ldalvik/annotation/Throws;
        value = {
            Lcom/virgilsecurity/crypto/foundation/FoundationException;
        }
    .end annotation
.end method

.method public native hybridKeyAlg_importPublicKey(JLcom/virgilsecurity/crypto/foundation/RawPublicKey;)Lcom/virgilsecurity/crypto/foundation/PublicKey;
    .annotation system Ldalvik/annotation/Throws;
        value = {
            Lcom/virgilsecurity/crypto/foundation/FoundationException;
        }
    .end annotation
.end method

.method public native hybridKeyAlg_makeKey(JLcom/virgilsecurity/crypto/foundation/PrivateKey;Lcom/virgilsecurity/crypto/foundation/PrivateKey;)Lcom/virgilsecurity/crypto/foundation/PrivateKey;
    .annotation system Ldalvik/annotation/Throws;
        value = {
            Lcom/virgilsecurity/crypto/foundation/FoundationException;
        }
    .end annotation
.end method

.method public native hybridKeyAlg_new()J
.end method

.method public native hybridKeyAlg_setCipher(JLcom/virgilsecurity/crypto/foundation/CipherAuth;)V
.end method

.method public native hybridKeyAlg_setHash(JLcom/virgilsecurity/crypto/foundation/Hash;)V
.end method

.method public native hybridKeyAlg_setRandom(JLcom/virgilsecurity/crypto/foundation/Random;)V
.end method

.method public native hybridKeyAlg_setupDefaults(J)V
    .annotation system Ldalvik/annotation/Throws;
        value = {
            Lcom/virgilsecurity/crypto/foundation/FoundationException;
        }
    .end annotation
.end method

.method public native hybridKeyAlg_signHash(JLcom/virgilsecurity/crypto/foundation/PrivateKey;Lcom/virgilsecurity/crypto/foundation/AlgId;[B)[B
    .annotation system Ldalvik/annotation/Throws;
        value = {
            Lcom/virgilsecurity/crypto/foundation/FoundationException;
        }
    .end annotation
.end method

.method public native hybridKeyAlg_signatureLen(JLcom/virgilsecurity/crypto/foundation/PrivateKey;)I
.end method

.method public native hybridKeyAlg_verifyHash(JLcom/virgilsecurity/crypto/foundation/PublicKey;Lcom/virgilsecurity/crypto/foundation/AlgId;[B[B)Z
.end method

.method public native hybridPrivateKey_algId(J)Lcom/virgilsecurity/crypto/foundation/AlgId;
.end method

.method public native hybridPrivateKey_algInfo(J)Lcom/virgilsecurity/crypto/foundation/AlgInfo;
.end method

.method public native hybridPrivateKey_bitlen(J)I
.end method

.method public native hybridPrivateKey_close(J)V
.end method

.method public native hybridPrivateKey_extractPublicKey(J)Lcom/virgilsecurity/crypto/foundation/PublicKey;
.end method

.method public native hybridPrivateKey_firstKey(J)Lcom/virgilsecurity/crypto/foundation/PrivateKey;
.end method

.method public native hybridPrivateKey_isValid(J)Z
.end method

.method public native hybridPrivateKey_len(J)I
.end method

.method public native hybridPrivateKey_new()J
.end method

.method public native hybridPrivateKey_secondKey(J)Lcom/virgilsecurity/crypto/foundation/PrivateKey;
.end method

.method public native hybridPublicKey_algId(J)Lcom/virgilsecurity/crypto/foundation/AlgId;
.end method

.method public native hybridPublicKey_algInfo(J)Lcom/virgilsecurity/crypto/foundation/AlgInfo;
.end method

.method public native hybridPublicKey_bitlen(J)I
.end method

.method public native hybridPublicKey_close(J)V
.end method

.method public native hybridPublicKey_firstKey(J)Lcom/virgilsecurity/crypto/foundation/PublicKey;
.end method

.method public native hybridPublicKey_isValid(J)Z
.end method

.method public native hybridPublicKey_len(J)I
.end method

.method public native hybridPublicKey_new()J
.end method

.method public native hybridPublicKey_secondKey(J)Lcom/virgilsecurity/crypto/foundation/PublicKey;
.end method

.method public native kdf1_algId(J)Lcom/virgilsecurity/crypto/foundation/AlgId;
.end method

.method public native kdf1_close(J)V
.end method

.method public native kdf1_derive(J[BI)[B
.end method

.method public native kdf1_new()J
.end method

.method public native kdf1_produceAlgInfo(J)Lcom/virgilsecurity/crypto/foundation/AlgInfo;
.end method

.method public native kdf1_restoreAlgInfo(JLcom/virgilsecurity/crypto/foundation/AlgInfo;)V
    .annotation system Ldalvik/annotation/Throws;
        value = {
            Lcom/virgilsecurity/crypto/foundation/FoundationException;
        }
    .end annotation
.end method

.method public native kdf1_setHash(JLcom/virgilsecurity/crypto/foundation/Hash;)V
.end method

.method public native kdf2_algId(J)Lcom/virgilsecurity/crypto/foundation/AlgId;
.end method

.method public native kdf2_close(J)V
.end method

.method public native kdf2_derive(J[BI)[B
.end method

.method public native kdf2_new()J
.end method

.method public native kdf2_produceAlgInfo(J)Lcom/virgilsecurity/crypto/foundation/AlgInfo;
.end method

.method public native kdf2_restoreAlgInfo(JLcom/virgilsecurity/crypto/foundation/AlgInfo;)V
    .annotation system Ldalvik/annotation/Throws;
        value = {
            Lcom/virgilsecurity/crypto/foundation/FoundationException;
        }
    .end annotation
.end method

.method public native kdf2_setHash(JLcom/virgilsecurity/crypto/foundation/Hash;)V
.end method

.method public native keyAlgFactory_createFromAlgId(Lcom/virgilsecurity/crypto/foundation/AlgId;Lcom/virgilsecurity/crypto/foundation/Random;)Lcom/virgilsecurity/crypto/foundation/KeyAlg;
    .annotation system Ldalvik/annotation/Throws;
        value = {
            Lcom/virgilsecurity/crypto/foundation/FoundationException;
        }
    .end annotation
.end method

.method public native keyAlgFactory_createFromKey(Lcom/virgilsecurity/crypto/foundation/Key;Lcom/virgilsecurity/crypto/foundation/Random;)Lcom/virgilsecurity/crypto/foundation/KeyAlg;
    .annotation system Ldalvik/annotation/Throws;
        value = {
            Lcom/virgilsecurity/crypto/foundation/FoundationException;
        }
    .end annotation
.end method

.method public native keyAlgFactory_createFromRawPrivateKey(Lcom/virgilsecurity/crypto/foundation/RawPrivateKey;Lcom/virgilsecurity/crypto/foundation/Random;)Lcom/virgilsecurity/crypto/foundation/KeyAlg;
    .annotation system Ldalvik/annotation/Throws;
        value = {
            Lcom/virgilsecurity/crypto/foundation/FoundationException;
        }
    .end annotation
.end method

.method public native keyAlgFactory_createFromRawPublicKey(Lcom/virgilsecurity/crypto/foundation/RawPublicKey;Lcom/virgilsecurity/crypto/foundation/Random;)Lcom/virgilsecurity/crypto/foundation/KeyAlg;
    .annotation system Ldalvik/annotation/Throws;
        value = {
            Lcom/virgilsecurity/crypto/foundation/FoundationException;
        }
    .end annotation
.end method

.method public native keyAsn1Deserializer_close(J)V
.end method

.method public native keyAsn1Deserializer_deserializePrivateKey(J[B)Lcom/virgilsecurity/crypto/foundation/RawPrivateKey;
    .annotation system Ldalvik/annotation/Throws;
        value = {
            Lcom/virgilsecurity/crypto/foundation/FoundationException;
        }
    .end annotation
.end method

.method public native keyAsn1Deserializer_deserializePrivateKeyInplace(J)Lcom/virgilsecurity/crypto/foundation/RawPrivateKey;
    .annotation system Ldalvik/annotation/Throws;
        value = {
            Lcom/virgilsecurity/crypto/foundation/FoundationException;
        }
    .end annotation
.end method

.method public native keyAsn1Deserializer_deserializePublicKey(J[B)Lcom/virgilsecurity/crypto/foundation/RawPublicKey;
    .annotation system Ldalvik/annotation/Throws;
        value = {
            Lcom/virgilsecurity/crypto/foundation/FoundationException;
        }
    .end annotation
.end method

.method public native keyAsn1Deserializer_deserializePublicKeyInplace(J)Lcom/virgilsecurity/crypto/foundation/RawPublicKey;
    .annotation system Ldalvik/annotation/Throws;
        value = {
            Lcom/virgilsecurity/crypto/foundation/FoundationException;
        }
    .end annotation
.end method

.method public native keyAsn1Deserializer_new()J
.end method

.method public native keyAsn1Deserializer_setAsn1Reader(JLcom/virgilsecurity/crypto/foundation/Asn1Reader;)V
    .annotation system Ldalvik/annotation/Throws;
        value = {
            Lcom/virgilsecurity/crypto/foundation/FoundationException;
        }
    .end annotation
.end method

.method public native keyAsn1Deserializer_setupDefaults(J)V
.end method

.method public native keyAsn1Serializer_close(J)V
.end method

.method public native keyAsn1Serializer_new()J
.end method

.method public native keyAsn1Serializer_serializePrivateKey(JLcom/virgilsecurity/crypto/foundation/RawPrivateKey;)[B
    .annotation system Ldalvik/annotation/Throws;
        value = {
            Lcom/virgilsecurity/crypto/foundation/FoundationException;
        }
    .end annotation
.end method

.method public native keyAsn1Serializer_serializePrivateKeyInplace(JLcom/virgilsecurity/crypto/foundation/RawPrivateKey;)I
    .annotation system Ldalvik/annotation/Throws;
        value = {
            Lcom/virgilsecurity/crypto/foundation/FoundationException;
        }
    .end annotation
.end method

.method public native keyAsn1Serializer_serializePublicKey(JLcom/virgilsecurity/crypto/foundation/RawPublicKey;)[B
    .annotation system Ldalvik/annotation/Throws;
        value = {
            Lcom/virgilsecurity/crypto/foundation/FoundationException;
        }
    .end annotation
.end method

.method public native keyAsn1Serializer_serializePublicKeyInplace(JLcom/virgilsecurity/crypto/foundation/RawPublicKey;)I
    .annotation system Ldalvik/annotation/Throws;
        value = {
            Lcom/virgilsecurity/crypto/foundation/FoundationException;
        }
    .end annotation
.end method

.method public native keyAsn1Serializer_serializedPrivateKeyLen(JLcom/virgilsecurity/crypto/foundation/RawPrivateKey;)I
.end method

.method public native keyAsn1Serializer_serializedPublicKeyLen(JLcom/virgilsecurity/crypto/foundation/RawPublicKey;)I
.end method

.method public native keyAsn1Serializer_setAsn1Writer(JLcom/virgilsecurity/crypto/foundation/Asn1Writer;)V
    .annotation system Ldalvik/annotation/Throws;
        value = {
            Lcom/virgilsecurity/crypto/foundation/FoundationException;
        }
    .end annotation
.end method

.method public native keyAsn1Serializer_setupDefaults(J)V
.end method

.method public native keyInfo_algId(J)Lcom/virgilsecurity/crypto/foundation/AlgId;
.end method

.method public native keyInfo_close(J)V
.end method

.method public native keyInfo_compoundCipherAlgId(J)Lcom/virgilsecurity/crypto/foundation/AlgId;
.end method

.method public native keyInfo_compoundHybridCipherFirstKeyAlgId(J)Lcom/virgilsecurity/crypto/foundation/AlgId;
.end method

.method public native keyInfo_compoundHybridCipherSecondKeyAlgId(J)Lcom/virgilsecurity/crypto/foundation/AlgId;
.end method

.method public native keyInfo_compoundHybridSignerFirstKeyAlgId(J)Lcom/virgilsecurity/crypto/foundation/AlgId;
.end method

.method public native keyInfo_compoundHybridSignerSecondKeyAlgId(J)Lcom/virgilsecurity/crypto/foundation/AlgId;
.end method

.method public native keyInfo_compoundSignerAlgId(J)Lcom/virgilsecurity/crypto/foundation/AlgId;
.end method

.method public native keyInfo_hybridFirstKeyAlgId(J)Lcom/virgilsecurity/crypto/foundation/AlgId;
.end method

.method public native keyInfo_hybridSecondKeyAlgId(J)Lcom/virgilsecurity/crypto/foundation/AlgId;
.end method

.method public native keyInfo_isCompound(J)Z
.end method

.method public native keyInfo_isCompoundHybrid(J)Z
.end method

.method public native keyInfo_isCompoundHybridCipher(J)Z
.end method

.method public native keyInfo_isCompoundHybridSigner(J)Z
.end method

.method public native keyInfo_isHybrid(J)Z
.end method

.method public native keyInfo_isHybridPostQuantum(J)Z
.end method

.method public native keyInfo_isHybridPostQuantumCipher(J)Z
.end method

.method public native keyInfo_isHybridPostQuantumSigner(J)Z
.end method

.method public native keyInfo_new()J
.end method

.method public native keyInfo_new(Lcom/virgilsecurity/crypto/foundation/AlgInfo;)J
.end method

.method public native keyMaterialRng_close(J)V
.end method

.method public native keyMaterialRng_new()J
.end method

.method public native keyMaterialRng_random(JI)[B
    .annotation system Ldalvik/annotation/Throws;
        value = {
            Lcom/virgilsecurity/crypto/foundation/FoundationException;
        }
    .end annotation
.end method

.method public native keyMaterialRng_reseed(J)V
    .annotation system Ldalvik/annotation/Throws;
        value = {
            Lcom/virgilsecurity/crypto/foundation/FoundationException;
        }
    .end annotation
.end method

.method public native keyMaterialRng_resetKeyMaterial(J[B)V
.end method

.method public native keyProvider_close(J)V
.end method

.method public native keyProvider_exportPrivateKey(JLcom/virgilsecurity/crypto/foundation/PrivateKey;)[B
    .annotation system Ldalvik/annotation/Throws;
        value = {
            Lcom/virgilsecurity/crypto/foundation/FoundationException;
        }
    .end annotation
.end method

.method public native keyProvider_exportPublicKey(JLcom/virgilsecurity/crypto/foundation/PublicKey;)[B
    .annotation system Ldalvik/annotation/Throws;
        value = {
            Lcom/virgilsecurity/crypto/foundation/FoundationException;
        }
    .end annotation
.end method

.method public native keyProvider_exportedPrivateKeyLen(JLcom/virgilsecurity/crypto/foundation/PrivateKey;)I
.end method

.method public native keyProvider_exportedPublicKeyLen(JLcom/virgilsecurity/crypto/foundation/PublicKey;)I
.end method

.method public native keyProvider_generateCompoundHybridPrivateKey(JLcom/virgilsecurity/crypto/foundation/AlgId;Lcom/virgilsecurity/crypto/foundation/AlgId;Lcom/virgilsecurity/crypto/foundation/AlgId;Lcom/virgilsecurity/crypto/foundation/AlgId;)Lcom/virgilsecurity/crypto/foundation/PrivateKey;
    .annotation system Ldalvik/annotation/Throws;
        value = {
            Lcom/virgilsecurity/crypto/foundation/FoundationException;
        }
    .end annotation
.end method

.method public native keyProvider_generateCompoundPrivateKey(JLcom/virgilsecurity/crypto/foundation/AlgId;Lcom/virgilsecurity/crypto/foundation/AlgId;)Lcom/virgilsecurity/crypto/foundation/PrivateKey;
    .annotation system Ldalvik/annotation/Throws;
        value = {
            Lcom/virgilsecurity/crypto/foundation/FoundationException;
        }
    .end annotation
.end method

.method public native keyProvider_generateHybridPrivateKey(JLcom/virgilsecurity/crypto/foundation/AlgId;Lcom/virgilsecurity/crypto/foundation/AlgId;)Lcom/virgilsecurity/crypto/foundation/PrivateKey;
    .annotation system Ldalvik/annotation/Throws;
        value = {
            Lcom/virgilsecurity/crypto/foundation/FoundationException;
        }
    .end annotation
.end method

.method public native keyProvider_generatePostQuantumPrivateKey(J)Lcom/virgilsecurity/crypto/foundation/PrivateKey;
    .annotation system Ldalvik/annotation/Throws;
        value = {
            Lcom/virgilsecurity/crypto/foundation/FoundationException;
        }
    .end annotation
.end method

.method public native keyProvider_generatePrivateKey(JLcom/virgilsecurity/crypto/foundation/AlgId;)Lcom/virgilsecurity/crypto/foundation/PrivateKey;
    .annotation system Ldalvik/annotation/Throws;
        value = {
            Lcom/virgilsecurity/crypto/foundation/FoundationException;
        }
    .end annotation
.end method

.method public native keyProvider_importPrivateKey(J[B)Lcom/virgilsecurity/crypto/foundation/PrivateKey;
    .annotation system Ldalvik/annotation/Throws;
        value = {
            Lcom/virgilsecurity/crypto/foundation/FoundationException;
        }
    .end annotation
.end method

.method public native keyProvider_importPublicKey(J[B)Lcom/virgilsecurity/crypto/foundation/PublicKey;
    .annotation system Ldalvik/annotation/Throws;
        value = {
            Lcom/virgilsecurity/crypto/foundation/FoundationException;
        }
    .end annotation
.end method

.method public native keyProvider_new()J
.end method

.method public native keyProvider_setRandom(JLcom/virgilsecurity/crypto/foundation/Random;)V
.end method

.method public native keyProvider_setRsaParams(JI)V
.end method

.method public native keyProvider_setupDefaults(J)V
    .annotation system Ldalvik/annotation/Throws;
        value = {
            Lcom/virgilsecurity/crypto/foundation/FoundationException;
        }
    .end annotation
.end method

.method public native keyRecipientInfoList_clear(J)V
.end method

.method public native keyRecipientInfoList_close(J)V
.end method

.method public native keyRecipientInfoList_hasItem(J)Z
.end method

.method public native keyRecipientInfoList_hasNext(J)Z
.end method

.method public native keyRecipientInfoList_hasPrev(J)Z
.end method

.method public native keyRecipientInfoList_item(J)Lcom/virgilsecurity/crypto/foundation/KeyRecipientInfo;
.end method

.method public native keyRecipientInfoList_new()J
.end method

.method public native keyRecipientInfoList_next(J)Lcom/virgilsecurity/crypto/foundation/KeyRecipientInfoList;
.end method

.method public native keyRecipientInfoList_prev(J)Lcom/virgilsecurity/crypto/foundation/KeyRecipientInfoList;
.end method

.method public native keyRecipientInfo_close(J)V
.end method

.method public native keyRecipientInfo_encryptedKey(J)[B
.end method

.method public native keyRecipientInfo_keyEncryptionAlgorithm(J)Lcom/virgilsecurity/crypto/foundation/AlgInfo;
.end method

.method public native keyRecipientInfo_new()J
.end method

.method public native keyRecipientInfo_new([BLcom/virgilsecurity/crypto/foundation/AlgInfo;[B)J
.end method

.method public native keyRecipientInfo_recipientId(J)[B
.end method

.method public native messageInfoCustomParams_addData(J[B[B)V
.end method

.method public native messageInfoCustomParams_addInt(J[BI)V
.end method

.method public native messageInfoCustomParams_addString(J[B[B)V
.end method

.method public native messageInfoCustomParams_clear(J)V
.end method

.method public native messageInfoCustomParams_close(J)V
.end method

.method public native messageInfoCustomParams_findData(J[B)[B
    .annotation system Ldalvik/annotation/Throws;
        value = {
            Lcom/virgilsecurity/crypto/foundation/FoundationException;
        }
    .end annotation
.end method

.method public native messageInfoCustomParams_findInt(J[B)I
    .annotation system Ldalvik/annotation/Throws;
        value = {
            Lcom/virgilsecurity/crypto/foundation/FoundationException;
        }
    .end annotation
.end method

.method public native messageInfoCustomParams_findString(J[B)[B
    .annotation system Ldalvik/annotation/Throws;
        value = {
            Lcom/virgilsecurity/crypto/foundation/FoundationException;
        }
    .end annotation
.end method

.method public native messageInfoCustomParams_hasParams(J)Z
.end method

.method public native messageInfoCustomParams_new()J
.end method

.method public native messageInfoDerSerializer_close(J)V
.end method

.method public native messageInfoDerSerializer_deserialize(J[B)Lcom/virgilsecurity/crypto/foundation/MessageInfo;
    .annotation system Ldalvik/annotation/Throws;
        value = {
            Lcom/virgilsecurity/crypto/foundation/FoundationException;
        }
    .end annotation
.end method

.method public native messageInfoDerSerializer_deserializeFooter(J[B)Lcom/virgilsecurity/crypto/foundation/MessageInfoFooter;
    .annotation system Ldalvik/annotation/Throws;
        value = {
            Lcom/virgilsecurity/crypto/foundation/FoundationException;
        }
    .end annotation
.end method

.method public native messageInfoDerSerializer_new()J
.end method

.method public native messageInfoDerSerializer_readPrefix(J[B)I
.end method

.method public native messageInfoDerSerializer_serialize(JLcom/virgilsecurity/crypto/foundation/MessageInfo;)[B
.end method

.method public native messageInfoDerSerializer_serializeFooter(JLcom/virgilsecurity/crypto/foundation/MessageInfoFooter;)[B
.end method

.method public native messageInfoDerSerializer_serializedFooterLen(JLcom/virgilsecurity/crypto/foundation/MessageInfoFooter;)I
.end method

.method public native messageInfoDerSerializer_serializedLen(JLcom/virgilsecurity/crypto/foundation/MessageInfo;)I
.end method

.method public native messageInfoDerSerializer_setAsn1Reader(JLcom/virgilsecurity/crypto/foundation/Asn1Reader;)V
    .annotation system Ldalvik/annotation/Throws;
        value = {
            Lcom/virgilsecurity/crypto/foundation/FoundationException;
        }
    .end annotation
.end method

.method public native messageInfoDerSerializer_setAsn1Writer(JLcom/virgilsecurity/crypto/foundation/Asn1Writer;)V
    .annotation system Ldalvik/annotation/Throws;
        value = {
            Lcom/virgilsecurity/crypto/foundation/FoundationException;
        }
    .end annotation
.end method

.method public native messageInfoDerSerializer_setupDefaults(J)V
.end method

.method public native messageInfoEditor_addKeyRecipient(J[BLcom/virgilsecurity/crypto/foundation/PublicKey;)V
    .annotation system Ldalvik/annotation/Throws;
        value = {
            Lcom/virgilsecurity/crypto/foundation/FoundationException;
        }
    .end annotation
.end method

.method public native messageInfoEditor_close(J)V
.end method

.method public native messageInfoEditor_new()J
.end method

.method public native messageInfoEditor_pack(J)[B
.end method

.method public native messageInfoEditor_packedLen(J)I
.end method

.method public native messageInfoEditor_removeAll(J)V
.end method

.method public native messageInfoEditor_removeKeyRecipient(J[B)Z
.end method

.method public native messageInfoEditor_setRandom(JLcom/virgilsecurity/crypto/foundation/Random;)V
.end method

.method public native messageInfoEditor_setupDefaults(J)V
    .annotation system Ldalvik/annotation/Throws;
        value = {
            Lcom/virgilsecurity/crypto/foundation/FoundationException;
        }
    .end annotation
.end method

.method public native messageInfoEditor_unlock(J[BLcom/virgilsecurity/crypto/foundation/PrivateKey;)V
    .annotation system Ldalvik/annotation/Throws;
        value = {
            Lcom/virgilsecurity/crypto/foundation/FoundationException;
        }
    .end annotation
.end method

.method public native messageInfoEditor_unpack(J[B)V
    .annotation system Ldalvik/annotation/Throws;
        value = {
            Lcom/virgilsecurity/crypto/foundation/FoundationException;
        }
    .end annotation
.end method

.method public native messageInfoFooter_close(J)V
.end method

.method public native messageInfoFooter_hasSignerInfos(J)Z
.end method

.method public native messageInfoFooter_new()J
.end method

.method public native messageInfoFooter_signerDigest(J)[B
.end method

.method public native messageInfoFooter_signerHashAlgInfo(J)Lcom/virgilsecurity/crypto/foundation/AlgInfo;
.end method

.method public native messageInfoFooter_signerInfos(J)Lcom/virgilsecurity/crypto/foundation/SignerInfoList;
.end method

.method public native messageInfo_cipherKdfAlgInfo(J)Lcom/virgilsecurity/crypto/foundation/AlgInfo;
.end method

.method public native messageInfo_cipherPaddingAlgInfo(J)Lcom/virgilsecurity/crypto/foundation/AlgInfo;
.end method

.method public native messageInfo_clear(J)V
.end method

.method public native messageInfo_close(J)V
.end method

.method public native messageInfo_customParams(J)Lcom/virgilsecurity/crypto/foundation/MessageInfoCustomParams;
.end method

.method public native messageInfo_dataEncryptionAlgInfo(J)Lcom/virgilsecurity/crypto/foundation/AlgInfo;
.end method

.method public native messageInfo_footerInfo(J)Lcom/virgilsecurity/crypto/foundation/FooterInfo;
.end method

.method public native messageInfo_hasCipherKdfAlgInfo(J)Z
.end method

.method public native messageInfo_hasCipherPaddingAlgInfo(J)Z
.end method

.method public native messageInfo_hasCustomParams(J)Z
.end method

.method public native messageInfo_hasFooterInfo(J)Z
.end method

.method public native messageInfo_keyRecipientInfoList(J)Lcom/virgilsecurity/crypto/foundation/KeyRecipientInfoList;
.end method

.method public native messageInfo_new()J
.end method

.method public native messageInfo_passwordRecipientInfoList(J)Lcom/virgilsecurity/crypto/foundation/PasswordRecipientInfoList;
.end method

.method public native oid_equal([B[B)Z
.end method

.method public native oid_fromAlgId(Lcom/virgilsecurity/crypto/foundation/AlgId;)[B
.end method

.method public native oid_fromId(Lcom/virgilsecurity/crypto/foundation/OidId;)[B
.end method

.method public native oid_idToAlgId(Lcom/virgilsecurity/crypto/foundation/OidId;)Lcom/virgilsecurity/crypto/foundation/AlgId;
.end method

.method public native oid_toAlgId([B)Lcom/virgilsecurity/crypto/foundation/AlgId;
.end method

.method public native oid_toId([B)Lcom/virgilsecurity/crypto/foundation/OidId;
.end method

.method public native paddingParams_close(J)V
.end method

.method public native paddingParams_frame(J)I
.end method

.method public native paddingParams_frameMax(J)I
.end method

.method public native paddingParams_new()J
.end method

.method public native paddingParams_new(II)J
.end method

.method public native passwordRecipientInfoList_clear(J)V
.end method

.method public native passwordRecipientInfoList_close(J)V
.end method

.method public native passwordRecipientInfoList_hasItem(J)Z
.end method

.method public native passwordRecipientInfoList_hasNext(J)Z
.end method

.method public native passwordRecipientInfoList_hasPrev(J)Z
.end method

.method public native passwordRecipientInfoList_item(J)Lcom/virgilsecurity/crypto/foundation/PasswordRecipientInfo;
.end method

.method public native passwordRecipientInfoList_new()J
.end method

.method public native passwordRecipientInfoList_next(J)Lcom/virgilsecurity/crypto/foundation/PasswordRecipientInfoList;
.end method

.method public native passwordRecipientInfoList_prev(J)Lcom/virgilsecurity/crypto/foundation/PasswordRecipientInfoList;
.end method

.method public native passwordRecipientInfo_close(J)V
.end method

.method public native passwordRecipientInfo_encryptedKey(J)[B
.end method

.method public native passwordRecipientInfo_keyEncryptionAlgorithm(J)Lcom/virgilsecurity/crypto/foundation/AlgInfo;
.end method

.method public native passwordRecipientInfo_new()J
.end method

.method public native passwordRecipientInfo_new(Lcom/virgilsecurity/crypto/foundation/AlgInfo;[B)J
.end method

.method public native pbeAlgInfo_algId(J)Lcom/virgilsecurity/crypto/foundation/AlgId;
.end method

.method public native pbeAlgInfo_cipherAlgInfo(J)Lcom/virgilsecurity/crypto/foundation/AlgInfo;
.end method

.method public native pbeAlgInfo_close(J)V
.end method

.method public native pbeAlgInfo_kdfAlgInfo(J)Lcom/virgilsecurity/crypto/foundation/AlgInfo;
.end method

.method public native pbeAlgInfo_new()J
.end method

.method public native pem_title([B)[B
.end method

.method public native pem_unwrap([B)[B
    .annotation system Ldalvik/annotation/Throws;
        value = {
            Lcom/virgilsecurity/crypto/foundation/FoundationException;
        }
    .end annotation
.end method

.method public native pem_unwrappedLen(I)I
.end method

.method public native pem_wrap(Ljava/lang/String;[B)[B
.end method

.method public native pem_wrappedLen(Ljava/lang/String;I)I
.end method

.method public native pkcs5Pbes2_algId(J)Lcom/virgilsecurity/crypto/foundation/AlgId;
.end method

.method public native pkcs5Pbes2_close(J)V
.end method

.method public native pkcs5Pbes2_decrypt(J[B)[B
    .annotation system Ldalvik/annotation/Throws;
        value = {
            Lcom/virgilsecurity/crypto/foundation/FoundationException;
        }
    .end annotation
.end method

.method public native pkcs5Pbes2_decryptedLen(JI)I
.end method

.method public native pkcs5Pbes2_encrypt(J[B)[B
    .annotation system Ldalvik/annotation/Throws;
        value = {
            Lcom/virgilsecurity/crypto/foundation/FoundationException;
        }
    .end annotation
.end method

.method public native pkcs5Pbes2_encryptedLen(JI)I
.end method

.method public native pkcs5Pbes2_new()J
.end method

.method public native pkcs5Pbes2_preciseEncryptedLen(JI)I
.end method

.method public native pkcs5Pbes2_produceAlgInfo(J)Lcom/virgilsecurity/crypto/foundation/AlgInfo;
.end method

.method public native pkcs5Pbes2_reset(J[B)V
.end method

.method public native pkcs5Pbes2_restoreAlgInfo(JLcom/virgilsecurity/crypto/foundation/AlgInfo;)V
    .annotation system Ldalvik/annotation/Throws;
        value = {
            Lcom/virgilsecurity/crypto/foundation/FoundationException;
        }
    .end annotation
.end method

.method public native pkcs5Pbes2_setCipher(JLcom/virgilsecurity/crypto/foundation/Cipher;)V
.end method

.method public native pkcs5Pbes2_setKdf(JLcom/virgilsecurity/crypto/foundation/SaltedKdf;)V
.end method

.method public native pkcs5Pbkdf2_algId(J)Lcom/virgilsecurity/crypto/foundation/AlgId;
.end method

.method public native pkcs5Pbkdf2_close(J)V
.end method

.method public native pkcs5Pbkdf2_derive(J[BI)[B
.end method

.method public native pkcs5Pbkdf2_new()J
.end method

.method public native pkcs5Pbkdf2_produceAlgInfo(J)Lcom/virgilsecurity/crypto/foundation/AlgInfo;
.end method

.method public native pkcs5Pbkdf2_reset(J[BI)V
.end method

.method public native pkcs5Pbkdf2_restoreAlgInfo(JLcom/virgilsecurity/crypto/foundation/AlgInfo;)V
    .annotation system Ldalvik/annotation/Throws;
        value = {
            Lcom/virgilsecurity/crypto/foundation/FoundationException;
        }
    .end annotation
.end method

.method public native pkcs5Pbkdf2_setHmac(JLcom/virgilsecurity/crypto/foundation/Mac;)V
.end method

.method public native pkcs5Pbkdf2_setInfo(J[B)V
.end method

.method public native pkcs5Pbkdf2_setupDefaults(J)V
.end method

.method public native pkcs8Serializer_close(J)V
.end method

.method public native pkcs8Serializer_new()J
.end method

.method public native pkcs8Serializer_serializePrivateKey(JLcom/virgilsecurity/crypto/foundation/RawPrivateKey;)[B
    .annotation system Ldalvik/annotation/Throws;
        value = {
            Lcom/virgilsecurity/crypto/foundation/FoundationException;
        }
    .end annotation
.end method

.method public native pkcs8Serializer_serializePrivateKeyInplace(JLcom/virgilsecurity/crypto/foundation/RawPrivateKey;)I
    .annotation system Ldalvik/annotation/Throws;
        value = {
            Lcom/virgilsecurity/crypto/foundation/FoundationException;
        }
    .end annotation
.end method

.method public native pkcs8Serializer_serializePublicKey(JLcom/virgilsecurity/crypto/foundation/RawPublicKey;)[B
    .annotation system Ldalvik/annotation/Throws;
        value = {
            Lcom/virgilsecurity/crypto/foundation/FoundationException;
        }
    .end annotation
.end method

.method public native pkcs8Serializer_serializePublicKeyInplace(JLcom/virgilsecurity/crypto/foundation/RawPublicKey;)I
    .annotation system Ldalvik/annotation/Throws;
        value = {
            Lcom/virgilsecurity/crypto/foundation/FoundationException;
        }
    .end annotation
.end method

.method public native pkcs8Serializer_serializedPrivateKeyLen(JLcom/virgilsecurity/crypto/foundation/RawPrivateKey;)I
.end method

.method public native pkcs8Serializer_serializedPublicKeyLen(JLcom/virgilsecurity/crypto/foundation/RawPublicKey;)I
.end method

.method public native pkcs8Serializer_setAsn1Writer(JLcom/virgilsecurity/crypto/foundation/Asn1Writer;)V
    .annotation system Ldalvik/annotation/Throws;
        value = {
            Lcom/virgilsecurity/crypto/foundation/FoundationException;
        }
    .end annotation
.end method

.method public native pkcs8Serializer_setupDefaults(J)V
.end method

.method public native randomPadding_algId(J)Lcom/virgilsecurity/crypto/foundation/AlgId;
.end method

.method public native randomPadding_close(J)V
.end method

.method public native randomPadding_configure(JLcom/virgilsecurity/crypto/foundation/PaddingParams;)V
.end method

.method public native randomPadding_finishDataProcessing(J)[B
    .annotation system Ldalvik/annotation/Throws;
        value = {
            Lcom/virgilsecurity/crypto/foundation/FoundationException;
        }
    .end annotation
.end method

.method public native randomPadding_finishPaddedDataProcessing(J)[B
    .annotation system Ldalvik/annotation/Throws;
        value = {
            Lcom/virgilsecurity/crypto/foundation/FoundationException;
        }
    .end annotation
.end method

.method public native randomPadding_finishPaddedDataProcessingOutLen(J)I
.end method

.method public native randomPadding_len(J)I
.end method

.method public native randomPadding_lenMax(J)I
.end method

.method public native randomPadding_new()J
.end method

.method public native randomPadding_paddedDataLen(JI)I
.end method

.method public native randomPadding_processData(J[B)[B
.end method

.method public native randomPadding_processPaddedData(J[B)[B
.end method

.method public native randomPadding_produceAlgInfo(J)Lcom/virgilsecurity/crypto/foundation/AlgInfo;
.end method

.method public native randomPadding_restoreAlgInfo(JLcom/virgilsecurity/crypto/foundation/AlgInfo;)V
    .annotation system Ldalvik/annotation/Throws;
        value = {
            Lcom/virgilsecurity/crypto/foundation/FoundationException;
        }
    .end annotation
.end method

.method public native randomPadding_setRandom(JLcom/virgilsecurity/crypto/foundation/Random;)V
.end method

.method public native randomPadding_startDataProcessing(J)V
.end method

.method public native randomPadding_startPaddedDataProcessing(J)V
.end method

.method public native rawPrivateKey_algId(J)Lcom/virgilsecurity/crypto/foundation/AlgId;
.end method

.method public native rawPrivateKey_algInfo(J)Lcom/virgilsecurity/crypto/foundation/AlgInfo;
.end method

.method public native rawPrivateKey_bitlen(J)I
.end method

.method public native rawPrivateKey_close(J)V
.end method

.method public native rawPrivateKey_data(J)[B
.end method

.method public native rawPrivateKey_extractPublicKey(J)Lcom/virgilsecurity/crypto/foundation/PublicKey;
.end method

.method public native rawPrivateKey_getPublicKey(J)Lcom/virgilsecurity/crypto/foundation/RawPublicKey;
.end method

.method public native rawPrivateKey_hasPublicKey(J)Z
.end method

.method public native rawPrivateKey_isValid(J)Z
.end method

.method public native rawPrivateKey_len(J)I
.end method

.method public native rawPrivateKey_new()J
.end method

.method public native rawPrivateKey_setPublicKey(JLcom/virgilsecurity/crypto/foundation/RawPublicKey;)V
.end method

.method public native rawPublicKey_algId(J)Lcom/virgilsecurity/crypto/foundation/AlgId;
.end method

.method public native rawPublicKey_algInfo(J)Lcom/virgilsecurity/crypto/foundation/AlgInfo;
.end method

.method public native rawPublicKey_bitlen(J)I
.end method

.method public native rawPublicKey_close(J)V
.end method

.method public native rawPublicKey_data(J)[B
.end method

.method public native rawPublicKey_isValid(J)Z
.end method

.method public native rawPublicKey_len(J)I
.end method

.method public native rawPublicKey_new()J
.end method

.method public native recipientCipher_addKeyRecipient(J[BLcom/virgilsecurity/crypto/foundation/PublicKey;)V
.end method

.method public native recipientCipher_addSigner(J[BLcom/virgilsecurity/crypto/foundation/PrivateKey;)V
    .annotation system Ldalvik/annotation/Throws;
        value = {
            Lcom/virgilsecurity/crypto/foundation/FoundationException;
        }
    .end annotation
.end method

.method public native recipientCipher_clearRecipients(J)V
.end method

.method public native recipientCipher_clearSigners(J)V
.end method

.method public native recipientCipher_close(J)V
.end method

.method public native recipientCipher_customParams(J)Lcom/virgilsecurity/crypto/foundation/MessageInfoCustomParams;
.end method

.method public native recipientCipher_decryptionOutLen(JI)I
.end method

.method public native recipientCipher_encryptionOutLen(JI)I
.end method

.method public native recipientCipher_finishDecryption(J)[B
    .annotation system Ldalvik/annotation/Throws;
        value = {
            Lcom/virgilsecurity/crypto/foundation/FoundationException;
        }
    .end annotation
.end method

.method public native recipientCipher_finishEncryption(J)[B
    .annotation system Ldalvik/annotation/Throws;
        value = {
            Lcom/virgilsecurity/crypto/foundation/FoundationException;
        }
    .end annotation
.end method

.method public native recipientCipher_hasKeyRecipient(J[B)Z
.end method

.method public native recipientCipher_isDataSigned(J)Z
.end method

.method public native recipientCipher_messageInfoFooterLen(J)I
.end method

.method public native recipientCipher_messageInfoLen(J)I
.end method

.method public native recipientCipher_new()J
.end method

.method public native recipientCipher_packMessageInfo(J)[B
.end method

.method public native recipientCipher_packMessageInfoFooter(J)[B
    .annotation system Ldalvik/annotation/Throws;
        value = {
            Lcom/virgilsecurity/crypto/foundation/FoundationException;
        }
    .end annotation
.end method

.method public native recipientCipher_processDecryption(J[B)[B
    .annotation system Ldalvik/annotation/Throws;
        value = {
            Lcom/virgilsecurity/crypto/foundation/FoundationException;
        }
    .end annotation
.end method

.method public native recipientCipher_processEncryption(J[B)[B
    .annotation system Ldalvik/annotation/Throws;
        value = {
            Lcom/virgilsecurity/crypto/foundation/FoundationException;
        }
    .end annotation
.end method

.method public native recipientCipher_setEncryptionCipher(JLcom/virgilsecurity/crypto/foundation/Cipher;)V
.end method

.method public native recipientCipher_setEncryptionPadding(JLcom/virgilsecurity/crypto/foundation/Padding;)V
.end method

.method public native recipientCipher_setPaddingParams(JLcom/virgilsecurity/crypto/foundation/PaddingParams;)V
.end method

.method public native recipientCipher_setRandom(JLcom/virgilsecurity/crypto/foundation/Random;)V
.end method

.method public native recipientCipher_setSignerHash(JLcom/virgilsecurity/crypto/foundation/Hash;)V
.end method

.method public native recipientCipher_signerInfos(J)Lcom/virgilsecurity/crypto/foundation/SignerInfoList;
.end method

.method public native recipientCipher_startDecryptionWithKey(J[BLcom/virgilsecurity/crypto/foundation/PrivateKey;[B)V
    .annotation system Ldalvik/annotation/Throws;
        value = {
            Lcom/virgilsecurity/crypto/foundation/FoundationException;
        }
    .end annotation
.end method

.method public native recipientCipher_startEncryption(J)V
    .annotation system Ldalvik/annotation/Throws;
        value = {
            Lcom/virgilsecurity/crypto/foundation/FoundationException;
        }
    .end annotation
.end method

.method public native recipientCipher_startSignedEncryption(JI)V
    .annotation system Ldalvik/annotation/Throws;
        value = {
            Lcom/virgilsecurity/crypto/foundation/FoundationException;
        }
    .end annotation
.end method

.method public native recipientCipher_startVerifiedDecryptionWithKey(J[BLcom/virgilsecurity/crypto/foundation/PrivateKey;[B[B)V
    .annotation system Ldalvik/annotation/Throws;
        value = {
            Lcom/virgilsecurity/crypto/foundation/FoundationException;
        }
    .end annotation
.end method

.method public native recipientCipher_verifySignerInfo(JLcom/virgilsecurity/crypto/foundation/SignerInfo;Lcom/virgilsecurity/crypto/foundation/PublicKey;)Z
.end method

.method public native round5_close(J)V
.end method

.method public native round5_exportPrivateKey(JLcom/virgilsecurity/crypto/foundation/PrivateKey;)Lcom/virgilsecurity/crypto/foundation/RawPrivateKey;
    .annotation system Ldalvik/annotation/Throws;
        value = {
            Lcom/virgilsecurity/crypto/foundation/FoundationException;
        }
    .end annotation
.end method

.method public native round5_exportPublicKey(JLcom/virgilsecurity/crypto/foundation/PublicKey;)Lcom/virgilsecurity/crypto/foundation/RawPublicKey;
    .annotation system Ldalvik/annotation/Throws;
        value = {
            Lcom/virgilsecurity/crypto/foundation/FoundationException;
        }
    .end annotation
.end method

.method public native round5_generateEphemeralKey(JLcom/virgilsecurity/crypto/foundation/Key;)Lcom/virgilsecurity/crypto/foundation/PrivateKey;
    .annotation system Ldalvik/annotation/Throws;
        value = {
            Lcom/virgilsecurity/crypto/foundation/FoundationException;
        }
    .end annotation
.end method

.method public native round5_generateKey(JLcom/virgilsecurity/crypto/foundation/AlgId;)Lcom/virgilsecurity/crypto/foundation/PrivateKey;
    .annotation system Ldalvik/annotation/Throws;
        value = {
            Lcom/virgilsecurity/crypto/foundation/FoundationException;
        }
    .end annotation
.end method

.method public native round5_importPrivateKey(JLcom/virgilsecurity/crypto/foundation/RawPrivateKey;)Lcom/virgilsecurity/crypto/foundation/PrivateKey;
    .annotation system Ldalvik/annotation/Throws;
        value = {
            Lcom/virgilsecurity/crypto/foundation/FoundationException;
        }
    .end annotation
.end method

.method public native round5_importPublicKey(JLcom/virgilsecurity/crypto/foundation/RawPublicKey;)Lcom/virgilsecurity/crypto/foundation/PublicKey;
    .annotation system Ldalvik/annotation/Throws;
        value = {
            Lcom/virgilsecurity/crypto/foundation/FoundationException;
        }
    .end annotation
.end method

.method public native round5_kemDecapsulate(J[BLcom/virgilsecurity/crypto/foundation/PrivateKey;)[B
    .annotation system Ldalvik/annotation/Throws;
        value = {
            Lcom/virgilsecurity/crypto/foundation/FoundationException;
        }
    .end annotation
.end method

.method public native round5_kemEncapsulate(JLcom/virgilsecurity/crypto/foundation/PublicKey;)Lcom/virgilsecurity/crypto/foundation/KemKemEncapsulateResult;
    .annotation system Ldalvik/annotation/Throws;
        value = {
            Lcom/virgilsecurity/crypto/foundation/FoundationException;
        }
    .end annotation
.end method

.method public native round5_kemEncapsulatedKeyLen(JLcom/virgilsecurity/crypto/foundation/PublicKey;)I
.end method

.method public native round5_kemSharedKeyLen(JLcom/virgilsecurity/crypto/foundation/Key;)I
.end method

.method public native round5_new()J
.end method

.method public native round5_setRandom(JLcom/virgilsecurity/crypto/foundation/Random;)V
.end method

.method public native round5_setupDefaults(J)V
    .annotation system Ldalvik/annotation/Throws;
        value = {
            Lcom/virgilsecurity/crypto/foundation/FoundationException;
        }
    .end annotation
.end method

.method public native rsaPrivateKey_algId(J)Lcom/virgilsecurity/crypto/foundation/AlgId;
.end method

.method public native rsaPrivateKey_algInfo(J)Lcom/virgilsecurity/crypto/foundation/AlgInfo;
.end method

.method public native rsaPrivateKey_bitlen(J)I
.end method

.method public native rsaPrivateKey_close(J)V
.end method

.method public native rsaPrivateKey_extractPublicKey(J)Lcom/virgilsecurity/crypto/foundation/PublicKey;
.end method

.method public native rsaPrivateKey_isValid(J)Z
.end method

.method public native rsaPrivateKey_len(J)I
.end method

.method public native rsaPrivateKey_new()J
.end method

.method public native rsaPublicKey_algId(J)Lcom/virgilsecurity/crypto/foundation/AlgId;
.end method

.method public native rsaPublicKey_algInfo(J)Lcom/virgilsecurity/crypto/foundation/AlgInfo;
.end method

.method public native rsaPublicKey_bitlen(J)I
.end method

.method public native rsaPublicKey_close(J)V
.end method

.method public native rsaPublicKey_isValid(J)Z
.end method

.method public native rsaPublicKey_keyExponent(J)I
.end method

.method public native rsaPublicKey_len(J)I
.end method

.method public native rsaPublicKey_new()J
.end method

.method public native rsa_canDecrypt(JLcom/virgilsecurity/crypto/foundation/PrivateKey;I)Z
.end method

.method public native rsa_canEncrypt(JLcom/virgilsecurity/crypto/foundation/PublicKey;I)Z
.end method

.method public native rsa_canSign(JLcom/virgilsecurity/crypto/foundation/PrivateKey;)Z
.end method

.method public native rsa_canVerify(JLcom/virgilsecurity/crypto/foundation/PublicKey;)Z
.end method

.method public native rsa_close(J)V
.end method

.method public native rsa_decrypt(JLcom/virgilsecurity/crypto/foundation/PrivateKey;[B)[B
    .annotation system Ldalvik/annotation/Throws;
        value = {
            Lcom/virgilsecurity/crypto/foundation/FoundationException;
        }
    .end annotation
.end method

.method public native rsa_decryptedLen(JLcom/virgilsecurity/crypto/foundation/PrivateKey;I)I
.end method

.method public native rsa_encrypt(JLcom/virgilsecurity/crypto/foundation/PublicKey;[B)[B
    .annotation system Ldalvik/annotation/Throws;
        value = {
            Lcom/virgilsecurity/crypto/foundation/FoundationException;
        }
    .end annotation
.end method

.method public native rsa_encryptedLen(JLcom/virgilsecurity/crypto/foundation/PublicKey;I)I
.end method

.method public native rsa_exportPrivateKey(JLcom/virgilsecurity/crypto/foundation/PrivateKey;)Lcom/virgilsecurity/crypto/foundation/RawPrivateKey;
    .annotation system Ldalvik/annotation/Throws;
        value = {
            Lcom/virgilsecurity/crypto/foundation/FoundationException;
        }
    .end annotation
.end method

.method public native rsa_exportPublicKey(JLcom/virgilsecurity/crypto/foundation/PublicKey;)Lcom/virgilsecurity/crypto/foundation/RawPublicKey;
    .annotation system Ldalvik/annotation/Throws;
        value = {
            Lcom/virgilsecurity/crypto/foundation/FoundationException;
        }
    .end annotation
.end method

.method public native rsa_generateEphemeralKey(JLcom/virgilsecurity/crypto/foundation/Key;)Lcom/virgilsecurity/crypto/foundation/PrivateKey;
    .annotation system Ldalvik/annotation/Throws;
        value = {
            Lcom/virgilsecurity/crypto/foundation/FoundationException;
        }
    .end annotation
.end method

.method public native rsa_generateKey(JI)Lcom/virgilsecurity/crypto/foundation/PrivateKey;
    .annotation system Ldalvik/annotation/Throws;
        value = {
            Lcom/virgilsecurity/crypto/foundation/FoundationException;
        }
    .end annotation
.end method

.method public native rsa_importPrivateKey(JLcom/virgilsecurity/crypto/foundation/RawPrivateKey;)Lcom/virgilsecurity/crypto/foundation/PrivateKey;
    .annotation system Ldalvik/annotation/Throws;
        value = {
            Lcom/virgilsecurity/crypto/foundation/FoundationException;
        }
    .end annotation
.end method

.method public native rsa_importPublicKey(JLcom/virgilsecurity/crypto/foundation/RawPublicKey;)Lcom/virgilsecurity/crypto/foundation/PublicKey;
    .annotation system Ldalvik/annotation/Throws;
        value = {
            Lcom/virgilsecurity/crypto/foundation/FoundationException;
        }
    .end annotation
.end method

.method public native rsa_new()J
.end method

.method public native rsa_setRandom(JLcom/virgilsecurity/crypto/foundation/Random;)V
.end method

.method public native rsa_setupDefaults(J)V
    .annotation system Ldalvik/annotation/Throws;
        value = {
            Lcom/virgilsecurity/crypto/foundation/FoundationException;
        }
    .end annotation
.end method

.method public native rsa_signHash(JLcom/virgilsecurity/crypto/foundation/PrivateKey;Lcom/virgilsecurity/crypto/foundation/AlgId;[B)[B
    .annotation system Ldalvik/annotation/Throws;
        value = {
            Lcom/virgilsecurity/crypto/foundation/FoundationException;
        }
    .end annotation
.end method

.method public native rsa_signatureLen(JLcom/virgilsecurity/crypto/foundation/PrivateKey;)I
.end method

.method public native rsa_verifyHash(JLcom/virgilsecurity/crypto/foundation/PublicKey;Lcom/virgilsecurity/crypto/foundation/AlgId;[B[B)Z
.end method

.method public native saltedKdfAlgInfo_algId(J)Lcom/virgilsecurity/crypto/foundation/AlgId;
.end method

.method public native saltedKdfAlgInfo_close(J)V
.end method

.method public native saltedKdfAlgInfo_hashAlgInfo(J)Lcom/virgilsecurity/crypto/foundation/AlgInfo;
.end method

.method public native saltedKdfAlgInfo_iterationCount(J)I
.end method

.method public native saltedKdfAlgInfo_new()J
.end method

.method public native saltedKdfAlgInfo_salt(J)[B
.end method

.method public native sec1Serializer_close(J)V
.end method

.method public native sec1Serializer_new()J
.end method

.method public native sec1Serializer_serializePrivateKey(JLcom/virgilsecurity/crypto/foundation/RawPrivateKey;)[B
    .annotation system Ldalvik/annotation/Throws;
        value = {
            Lcom/virgilsecurity/crypto/foundation/FoundationException;
        }
    .end annotation
.end method

.method public native sec1Serializer_serializePrivateKeyInplace(JLcom/virgilsecurity/crypto/foundation/RawPrivateKey;)I
    .annotation system Ldalvik/annotation/Throws;
        value = {
            Lcom/virgilsecurity/crypto/foundation/FoundationException;
        }
    .end annotation
.end method

.method public native sec1Serializer_serializePublicKey(JLcom/virgilsecurity/crypto/foundation/RawPublicKey;)[B
    .annotation system Ldalvik/annotation/Throws;
        value = {
            Lcom/virgilsecurity/crypto/foundation/FoundationException;
        }
    .end annotation
.end method

.method public native sec1Serializer_serializePublicKeyInplace(JLcom/virgilsecurity/crypto/foundation/RawPublicKey;)I
    .annotation system Ldalvik/annotation/Throws;
        value = {
            Lcom/virgilsecurity/crypto/foundation/FoundationException;
        }
    .end annotation
.end method

.method public native sec1Serializer_serializedPrivateKeyLen(JLcom/virgilsecurity/crypto/foundation/RawPrivateKey;)I
.end method

.method public native sec1Serializer_serializedPublicKeyLen(JLcom/virgilsecurity/crypto/foundation/RawPublicKey;)I
.end method

.method public native sec1Serializer_setAsn1Writer(JLcom/virgilsecurity/crypto/foundation/Asn1Writer;)V
    .annotation system Ldalvik/annotation/Throws;
        value = {
            Lcom/virgilsecurity/crypto/foundation/FoundationException;
        }
    .end annotation
.end method

.method public native sec1Serializer_setupDefaults(J)V
.end method

.method public native seedEntropySource_close(J)V
.end method

.method public native seedEntropySource_gather(JI)[B
    .annotation system Ldalvik/annotation/Throws;
        value = {
            Lcom/virgilsecurity/crypto/foundation/FoundationException;
        }
    .end annotation
.end method

.method public native seedEntropySource_isStrong(J)Z
.end method

.method public native seedEntropySource_new()J
.end method

.method public native seedEntropySource_resetSeed(J[B)V
.end method

.method public native sha224_algId(J)Lcom/virgilsecurity/crypto/foundation/AlgId;
.end method

.method public native sha224_close(J)V
.end method

.method public native sha224_finish(J)[B
.end method

.method public native sha224_hash([B)[B
.end method

.method public native sha224_new()J
.end method

.method public native sha224_produceAlgInfo(J)Lcom/virgilsecurity/crypto/foundation/AlgInfo;
.end method

.method public native sha224_restoreAlgInfo(JLcom/virgilsecurity/crypto/foundation/AlgInfo;)V
    .annotation system Ldalvik/annotation/Throws;
        value = {
            Lcom/virgilsecurity/crypto/foundation/FoundationException;
        }
    .end annotation
.end method

.method public native sha224_start(J)V
.end method

.method public native sha224_update(J[B)V
.end method

.method public native sha256_algId(J)Lcom/virgilsecurity/crypto/foundation/AlgId;
.end method

.method public native sha256_close(J)V
.end method

.method public native sha256_finish(J)[B
.end method

.method public native sha256_hash([B)[B
.end method

.method public native sha256_new()J
.end method

.method public native sha256_produceAlgInfo(J)Lcom/virgilsecurity/crypto/foundation/AlgInfo;
.end method

.method public native sha256_restoreAlgInfo(JLcom/virgilsecurity/crypto/foundation/AlgInfo;)V
    .annotation system Ldalvik/annotation/Throws;
        value = {
            Lcom/virgilsecurity/crypto/foundation/FoundationException;
        }
    .end annotation
.end method

.method public native sha256_start(J)V
.end method

.method public native sha256_update(J[B)V
.end method

.method public native sha384_algId(J)Lcom/virgilsecurity/crypto/foundation/AlgId;
.end method

.method public native sha384_close(J)V
.end method

.method public native sha384_finish(J)[B
.end method

.method public native sha384_hash([B)[B
.end method

.method public native sha384_new()J
.end method

.method public native sha384_produceAlgInfo(J)Lcom/virgilsecurity/crypto/foundation/AlgInfo;
.end method

.method public native sha384_restoreAlgInfo(JLcom/virgilsecurity/crypto/foundation/AlgInfo;)V
    .annotation system Ldalvik/annotation/Throws;
        value = {
            Lcom/virgilsecurity/crypto/foundation/FoundationException;
        }
    .end annotation
.end method

.method public native sha384_start(J)V
.end method

.method public native sha384_update(J[B)V
.end method

.method public native sha512_algId(J)Lcom/virgilsecurity/crypto/foundation/AlgId;
.end method

.method public native sha512_close(J)V
.end method

.method public native sha512_finish(J)[B
.end method

.method public native sha512_hash([B)[B
.end method

.method public native sha512_new()J
.end method

.method public native sha512_produceAlgInfo(J)Lcom/virgilsecurity/crypto/foundation/AlgInfo;
.end method

.method public native sha512_restoreAlgInfo(JLcom/virgilsecurity/crypto/foundation/AlgInfo;)V
    .annotation system Ldalvik/annotation/Throws;
        value = {
            Lcom/virgilsecurity/crypto/foundation/FoundationException;
        }
    .end annotation
.end method

.method public native sha512_start(J)V
.end method

.method public native sha512_update(J[B)V
.end method

.method public native signedDataInfo_close(J)V
.end method

.method public native signedDataInfo_hashAlgInfo(J)Lcom/virgilsecurity/crypto/foundation/AlgInfo;
.end method

.method public native signedDataInfo_new()J
.end method

.method public native signerInfoList_clear(J)V
.end method

.method public native signerInfoList_close(J)V
.end method

.method public native signerInfoList_hasItem(J)Z
.end method

.method public native signerInfoList_hasNext(J)Z
.end method

.method public native signerInfoList_hasPrev(J)Z
.end method

.method public native signerInfoList_item(J)Lcom/virgilsecurity/crypto/foundation/SignerInfo;
.end method

.method public native signerInfoList_new()J
.end method

.method public native signerInfoList_next(J)Lcom/virgilsecurity/crypto/foundation/SignerInfoList;
.end method

.method public native signerInfoList_prev(J)Lcom/virgilsecurity/crypto/foundation/SignerInfoList;
.end method

.method public native signerInfo_close(J)V
.end method

.method public native signerInfo_new()J
.end method

.method public native signerInfo_signature(J)[B
.end method

.method public native signerInfo_signerAlgInfo(J)Lcom/virgilsecurity/crypto/foundation/AlgInfo;
.end method

.method public native signerInfo_signerId(J)[B
.end method

.method public native signer_appendData(J[B)V
.end method

.method public native signer_close(J)V
.end method

.method public native signer_new()J
.end method

.method public native signer_reset(J)V
.end method

.method public native signer_setHash(JLcom/virgilsecurity/crypto/foundation/Hash;)V
.end method

.method public native signer_setRandom(JLcom/virgilsecurity/crypto/foundation/Random;)V
.end method

.method public native signer_sign(JLcom/virgilsecurity/crypto/foundation/PrivateKey;)[B
    .annotation system Ldalvik/annotation/Throws;
        value = {
            Lcom/virgilsecurity/crypto/foundation/FoundationException;
        }
    .end annotation
.end method

.method public native signer_signatureLen(JLcom/virgilsecurity/crypto/foundation/PrivateKey;)I
.end method

.method public native simpleAlgInfo_algId(J)Lcom/virgilsecurity/crypto/foundation/AlgId;
.end method

.method public native simpleAlgInfo_close(J)V
.end method

.method public native simpleAlgInfo_new()J
.end method

.method public native simpleAlgInfo_new(Lcom/virgilsecurity/crypto/foundation/AlgId;)J
.end method

.method public native verifier_appendData(J[B)V
.end method

.method public native verifier_close(J)V
.end method

.method public native verifier_new()J
.end method

.method public native verifier_reset(J[B)V
    .annotation system Ldalvik/annotation/Throws;
        value = {
            Lcom/virgilsecurity/crypto/foundation/FoundationException;
        }
    .end annotation
.end method

.method public native verifier_verify(JLcom/virgilsecurity/crypto/foundation/PublicKey;)Z
.end method
