.class public Lcom/virgilsecurity/common/util/Base64;
.super Ljava/lang/Object;
.source "Base64.java"


# static fields
.field private static final map1:[C

.field private static final map2:[B


# direct methods
.method static constructor <clinit>()V
    .locals 5

    .line 44
    const/16 v0, 0x40

    new-array v1, v0, [C

    sput-object v1, Lcom/virgilsecurity/common/util/Base64;->map1:[C

    .line 47
    const/4 v1, 0x0

    .line 48
    .local v1, "i":I
    const/16 v2, 0x41

    .local v2, "c":C
    :goto_0
    const/16 v3, 0x5a

    if-gt v2, v3, :cond_0

    .line 49
    sget-object v3, Lcom/virgilsecurity/common/util/Base64;->map1:[C

    add-int/lit8 v4, v1, 0x1

    .end local v1    # "i":I
    .local v4, "i":I
    aput-char v2, v3, v1

    .line 48
    add-int/lit8 v1, v2, 0x1

    int-to-char v2, v1

    move v1, v4

    goto :goto_0

    .line 51
    .end local v2    # "c":C
    .end local v4    # "i":I
    .restart local v1    # "i":I
    :cond_0
    const/16 v2, 0x61

    .restart local v2    # "c":C
    :goto_1
    const/16 v3, 0x7a

    if-gt v2, v3, :cond_1

    .line 52
    sget-object v3, Lcom/virgilsecurity/common/util/Base64;->map1:[C

    add-int/lit8 v4, v1, 0x1

    .end local v1    # "i":I
    .restart local v4    # "i":I
    aput-char v2, v3, v1

    .line 51
    add-int/lit8 v1, v2, 0x1

    int-to-char v2, v1

    move v1, v4

    goto :goto_1

    .line 54
    .end local v2    # "c":C
    .end local v4    # "i":I
    .restart local v1    # "i":I
    :cond_1
    const/16 v2, 0x30

    .restart local v2    # "c":C
    :goto_2
    const/16 v3, 0x39

    if-gt v2, v3, :cond_2

    .line 55
    sget-object v3, Lcom/virgilsecurity/common/util/Base64;->map1:[C

    add-int/lit8 v4, v1, 0x1

    .end local v1    # "i":I
    .restart local v4    # "i":I
    aput-char v2, v3, v1

    .line 54
    add-int/lit8 v1, v2, 0x1

    int-to-char v2, v1

    move v1, v4

    goto :goto_2

    .line 57
    .end local v2    # "c":C
    .end local v4    # "i":I
    .restart local v1    # "i":I
    :cond_2
    sget-object v2, Lcom/virgilsecurity/common/util/Base64;->map1:[C

    add-int/lit8 v3, v1, 0x1

    .end local v1    # "i":I
    .local v3, "i":I
    const/16 v4, 0x2b

    aput-char v4, v2, v1

    .line 58
    add-int/lit8 v1, v3, 0x1

    .end local v3    # "i":I
    .restart local v1    # "i":I
    const/16 v4, 0x2f

    aput-char v4, v2, v3

    .line 62
    .end local v1    # "i":I
    const/16 v1, 0x80

    new-array v1, v1, [B

    sput-object v1, Lcom/virgilsecurity/common/util/Base64;->map2:[B

    .line 65
    const/4 v1, 0x0

    .restart local v1    # "i":I
    :goto_3
    sget-object v2, Lcom/virgilsecurity/common/util/Base64;->map2:[B

    array-length v3, v2

    if-ge v1, v3, :cond_3

    .line 66
    const/4 v3, -0x1

    aput-byte v3, v2, v1

    .line 65
    add-int/lit8 v1, v1, 0x1

    goto :goto_3

    .line 68
    .end local v1    # "i":I
    :cond_3
    const/4 v1, 0x0

    .restart local v1    # "i":I
    :goto_4
    if-ge v1, v0, :cond_4

    .line 69
    sget-object v2, Lcom/virgilsecurity/common/util/Base64;->map2:[B

    sget-object v3, Lcom/virgilsecurity/common/util/Base64;->map1:[C

    aget-char v3, v3, v1

    int-to-byte v4, v1

    aput-byte v4, v2, v3

    .line 68
    add-int/lit8 v1, v1, 0x1

    goto :goto_4

    .line 71
    .end local v1    # "i":I
    :cond_4
    return-void
.end method

.method public constructor <init>()V
    .locals 0

    .line 41
    invoke-direct {p0}, Ljava/lang/Object;-><init>()V

    return-void
.end method

.method public static decode(Ljava/lang/String;)[B
    .locals 1
    .param p0, "base64String"    # Ljava/lang/String;

    .line 144
    invoke-virtual {p0}, Ljava/lang/String;->toCharArray()[C

    move-result-object v0

    invoke-static {v0}, Lcom/virgilsecurity/common/util/Base64;->decode([C)[B

    move-result-object v0

    return-object v0
.end method

.method public static decode([B)[B
    .locals 2
    .param p0, "base64Bytes"    # [B

    .line 154
    new-instance v0, Ljava/lang/String;

    sget-object v1, Ljava/nio/charset/StandardCharsets;->UTF_8:Ljava/nio/charset/Charset;

    invoke-direct {v0, p0, v1}, Ljava/lang/String;-><init>([BLjava/nio/charset/Charset;)V

    invoke-static {v0}, Lcom/virgilsecurity/common/util/Base64;->decode(Ljava/lang/String;)[B

    move-result-object v0

    return-object v0
.end method

.method public static decode([C)[B
    .locals 2
    .param p0, "in"    # [C

    .line 82
    array-length v0, p0

    const/4 v1, 0x0

    invoke-static {p0, v1, v0}, Lcom/virgilsecurity/common/util/Base64;->decode([CII)[B

    move-result-object v0

    return-object v0
.end method

.method public static decode([CII)[B
    .locals 19
    .param p0, "in"    # [C
    .param p1, "offset"    # I
    .param p2, "len"    # I

    .line 96
    rem-int/lit8 v0, p2, 0x4

    if-nez v0, :cond_8

    move/from16 v0, p2

    .line 100
    .end local p2    # "len":I
    .local v0, "len":I
    :goto_0
    if-lez v0, :cond_0

    add-int v1, p1, v0

    add-int/lit8 v1, v1, -0x1

    aget-char v1, p0, v1

    const/16 v2, 0x3d

    if-ne v1, v2, :cond_0

    .line 101
    add-int/lit8 v0, v0, -0x1

    goto :goto_0

    .line 103
    :cond_0
    mul-int/lit8 v1, v0, 0x3

    div-int/lit8 v1, v1, 0x4

    .line 104
    .local v1, "outputLen":I
    new-array v2, v1, [B

    .line 105
    .local v2, "out":[B
    move/from16 v3, p1

    .line 106
    .local v3, "ip":I
    add-int v4, p1, v0

    .line 107
    .local v4, "end":I
    const/4 v5, 0x0

    .line 108
    .local v5, "op":I
    :goto_1
    if-ge v3, v4, :cond_7

    .line 109
    add-int/lit8 v6, v3, 0x1

    .end local v3    # "ip":I
    .local v6, "ip":I
    aget-char v3, p0, v3

    .line 110
    .local v3, "i0":I
    add-int/lit8 v7, v6, 0x1

    .end local v6    # "ip":I
    .local v7, "ip":I
    aget-char v6, p0, v6

    .line 111
    .local v6, "i1":I
    const/16 v8, 0x41

    if-ge v7, v4, :cond_1

    add-int/lit8 v9, v7, 0x1

    .end local v7    # "ip":I
    .local v9, "ip":I
    aget-char v7, p0, v7

    goto :goto_2

    .end local v9    # "ip":I
    .restart local v7    # "ip":I
    :cond_1
    move v9, v7

    move v7, v8

    .line 112
    .local v7, "i2":I
    .restart local v9    # "ip":I
    :goto_2
    if-ge v9, v4, :cond_2

    add-int/lit8 v8, v9, 0x1

    .end local v9    # "ip":I
    .local v8, "ip":I
    aget-char v9, p0, v9

    goto :goto_3

    .end local v8    # "ip":I
    .restart local v9    # "ip":I
    :cond_2
    move/from16 v18, v9

    move v9, v8

    move/from16 v8, v18

    .line 113
    .restart local v8    # "ip":I
    .local v9, "i3":I
    :goto_3
    const-string v10, "Illegal character in Base64 encoded data."

    const/16 v11, 0x7f

    if-gt v3, v11, :cond_6

    if-gt v6, v11, :cond_6

    if-gt v7, v11, :cond_6

    if-gt v9, v11, :cond_6

    .line 116
    sget-object v11, Lcom/virgilsecurity/common/util/Base64;->map2:[B

    aget-byte v12, v11, v3

    .line 117
    .local v12, "b0":I
    aget-byte v13, v11, v6

    .line 118
    .local v13, "b1":I
    aget-byte v14, v11, v7

    .line 119
    .local v14, "b2":I
    aget-byte v11, v11, v9

    .line 120
    .local v11, "b3":I
    if-ltz v12, :cond_5

    if-ltz v13, :cond_5

    if-ltz v14, :cond_5

    if-ltz v11, :cond_5

    .line 123
    shl-int/lit8 v10, v12, 0x2

    ushr-int/lit8 v15, v13, 0x4

    or-int/2addr v10, v15

    .line 124
    .local v10, "o0":I
    and-int/lit8 v15, v13, 0xf

    shl-int/lit8 v15, v15, 0x4

    ushr-int/lit8 v16, v14, 0x2

    or-int v15, v15, v16

    .line 125
    .local v15, "o1":I
    and-int/lit8 v16, v14, 0x3

    shl-int/lit8 v16, v16, 0x6

    move/from16 p2, v0

    .end local v0    # "len":I
    .restart local p2    # "len":I
    or-int v0, v16, v11

    .line 126
    .local v0, "o2":I
    move/from16 v16, v3

    .end local v3    # "i0":I
    .local v16, "i0":I
    add-int/lit8 v3, v5, 0x1

    move/from16 v17, v4

    .end local v4    # "end":I
    .end local v5    # "op":I
    .local v3, "op":I
    .local v17, "end":I
    int-to-byte v4, v10

    aput-byte v4, v2, v5

    .line 127
    if-ge v3, v1, :cond_3

    .line 128
    add-int/lit8 v4, v3, 0x1

    .end local v3    # "op":I
    .local v4, "op":I
    int-to-byte v5, v15

    aput-byte v5, v2, v3

    move v3, v4

    .line 130
    .end local v4    # "op":I
    .restart local v3    # "op":I
    :cond_3
    if-ge v3, v1, :cond_4

    .line 131
    add-int/lit8 v4, v3, 0x1

    .end local v3    # "op":I
    .restart local v4    # "op":I
    int-to-byte v5, v0

    aput-byte v5, v2, v3

    move v5, v4

    goto :goto_4

    .line 130
    .end local v4    # "op":I
    .restart local v3    # "op":I
    :cond_4
    move v5, v3

    .line 133
    .end local v0    # "o2":I
    .end local v3    # "op":I
    .end local v6    # "i1":I
    .end local v7    # "i2":I
    .end local v9    # "i3":I
    .end local v10    # "o0":I
    .end local v11    # "b3":I
    .end local v12    # "b0":I
    .end local v13    # "b1":I
    .end local v14    # "b2":I
    .end local v15    # "o1":I
    .end local v16    # "i0":I
    .restart local v5    # "op":I
    :goto_4
    move/from16 v0, p2

    move v3, v8

    move/from16 v4, v17

    goto :goto_1

    .line 120
    .end local v17    # "end":I
    .end local p2    # "len":I
    .local v0, "len":I
    .local v3, "i0":I
    .local v4, "end":I
    .restart local v6    # "i1":I
    .restart local v7    # "i2":I
    .restart local v9    # "i3":I
    .restart local v11    # "b3":I
    .restart local v12    # "b0":I
    .restart local v13    # "b1":I
    .restart local v14    # "b2":I
    :cond_5
    move/from16 p2, v0

    move/from16 v16, v3

    move/from16 v17, v4

    .line 121
    .end local v0    # "len":I
    .end local v3    # "i0":I
    .end local v4    # "end":I
    .restart local v16    # "i0":I
    .restart local v17    # "end":I
    .restart local p2    # "len":I
    new-instance v0, Ljava/lang/IllegalArgumentException;

    invoke-direct {v0, v10}, Ljava/lang/IllegalArgumentException;-><init>(Ljava/lang/String;)V

    throw v0

    .line 113
    .end local v11    # "b3":I
    .end local v12    # "b0":I
    .end local v13    # "b1":I
    .end local v14    # "b2":I
    .end local v16    # "i0":I
    .end local v17    # "end":I
    .end local p2    # "len":I
    .restart local v0    # "len":I
    .restart local v3    # "i0":I
    .restart local v4    # "end":I
    :cond_6
    move/from16 p2, v0

    move/from16 v16, v3

    move/from16 v17, v4

    .line 114
    .end local v0    # "len":I
    .end local v3    # "i0":I
    .end local v4    # "end":I
    .restart local v16    # "i0":I
    .restart local v17    # "end":I
    .restart local p2    # "len":I
    new-instance v0, Ljava/lang/IllegalArgumentException;

    invoke-direct {v0, v10}, Ljava/lang/IllegalArgumentException;-><init>(Ljava/lang/String;)V

    throw v0

    .line 134
    .end local v6    # "i1":I
    .end local v7    # "i2":I
    .end local v8    # "ip":I
    .end local v9    # "i3":I
    .end local v16    # "i0":I
    .end local v17    # "end":I
    .end local p2    # "len":I
    .restart local v0    # "len":I
    .local v3, "ip":I
    .restart local v4    # "end":I
    :cond_7
    return-object v2

    .line 97
    .end local v0    # "len":I
    .end local v1    # "outputLen":I
    .end local v2    # "out":[B
    .end local v3    # "ip":I
    .end local v4    # "end":I
    .end local v5    # "op":I
    .restart local p2    # "len":I
    :cond_8
    new-instance v0, Ljava/lang/IllegalArgumentException;

    const-string v1, "Length of Base64 encoded input string is not a multiple of 4."

    invoke-direct {v0, v1}, Ljava/lang/IllegalArgumentException;-><init>(Ljava/lang/String;)V

    throw v0
.end method

.method public static encode(Ljava/lang/String;)Ljava/lang/String;
    .locals 1
    .param p0, "string"    # Ljava/lang/String;

    .line 164
    sget-object v0, Ljava/nio/charset/StandardCharsets;->UTF_8:Ljava/nio/charset/Charset;

    invoke-virtual {p0, v0}, Ljava/lang/String;->getBytes(Ljava/nio/charset/Charset;)[B

    move-result-object v0

    invoke-static {v0}, Lcom/virgilsecurity/common/util/Base64;->encode([B)Ljava/lang/String;

    move-result-object v0

    return-object v0
.end method

.method public static encode([B)Ljava/lang/String;
    .locals 3
    .param p0, "bytes"    # [B

    .line 174
    new-instance v0, Ljava/lang/String;

    array-length v1, p0

    const/4 v2, 0x0

    invoke-static {p0, v2, v1}, Lcom/virgilsecurity/common/util/Base64;->encode([BII)[C

    move-result-object v1

    invoke-direct {v0, v1}, Ljava/lang/String;-><init>([C)V

    return-object v0
.end method

.method public static encode([BII)[C
    .locals 17
    .param p0, "in"    # [B
    .param p1, "offset"    # I
    .param p2, "len"    # I

    .line 186
    mul-int/lit8 v0, p2, 0x4

    add-int/lit8 v0, v0, 0x2

    div-int/lit8 v0, v0, 0x3

    .line 187
    .local v0, "outputDataLen":I
    add-int/lit8 v1, p2, 0x2

    div-int/lit8 v1, v1, 0x3

    mul-int/lit8 v1, v1, 0x4

    .line 188
    .local v1, "outputLen":I
    new-array v2, v1, [C

    .line 189
    .local v2, "out":[C
    move/from16 v3, p1

    .line 190
    .local v3, "ip":I
    add-int v4, p1, p2

    .line 191
    .local v4, "end":I
    const/4 v5, 0x0

    .line 192
    .local v5, "op":I
    :goto_0
    if-ge v3, v4, :cond_4

    .line 193
    add-int/lit8 v6, v3, 0x1

    .end local v3    # "ip":I
    .local v6, "ip":I
    aget-byte v3, p0, v3

    and-int/lit16 v3, v3, 0xff

    .line 194
    .local v3, "i0":I
    const/4 v7, 0x0

    if-ge v6, v4, :cond_0

    add-int/lit8 v8, v6, 0x1

    .end local v6    # "ip":I
    .local v8, "ip":I
    aget-byte v6, p0, v6

    and-int/lit16 v6, v6, 0xff

    goto :goto_1

    .end local v8    # "ip":I
    .restart local v6    # "ip":I
    :cond_0
    move v8, v6

    move v6, v7

    .line 195
    .local v6, "i1":I
    .restart local v8    # "ip":I
    :goto_1
    if-ge v8, v4, :cond_1

    add-int/lit8 v7, v8, 0x1

    .end local v8    # "ip":I
    .local v7, "ip":I
    aget-byte v8, p0, v8

    and-int/lit16 v8, v8, 0xff

    goto :goto_2

    .end local v7    # "ip":I
    .restart local v8    # "ip":I
    :cond_1
    move/from16 v16, v8

    move v8, v7

    move/from16 v7, v16

    .line 196
    .restart local v7    # "ip":I
    .local v8, "i2":I
    :goto_2
    ushr-int/lit8 v9, v3, 0x2

    .line 197
    .local v9, "o0":I
    and-int/lit8 v10, v3, 0x3

    shl-int/lit8 v10, v10, 0x4

    ushr-int/lit8 v11, v6, 0x4

    or-int/2addr v10, v11

    .line 198
    .local v10, "o1":I
    and-int/lit8 v11, v6, 0xf

    shl-int/lit8 v11, v11, 0x2

    ushr-int/lit8 v12, v8, 0x6

    or-int/2addr v11, v12

    .line 199
    .local v11, "o2":I
    and-int/lit8 v12, v8, 0x3f

    .line 200
    .local v12, "o3":I
    add-int/lit8 v13, v5, 0x1

    .end local v5    # "op":I
    .local v13, "op":I
    sget-object v14, Lcom/virgilsecurity/common/util/Base64;->map1:[C

    aget-char v15, v14, v9

    aput-char v15, v2, v5

    .line 201
    add-int/lit8 v5, v13, 0x1

    .end local v13    # "op":I
    .restart local v5    # "op":I
    aget-char v15, v14, v10

    aput-char v15, v2, v13

    .line 202
    const/16 v13, 0x3d

    if-ge v5, v0, :cond_2

    aget-char v15, v14, v11

    goto :goto_3

    :cond_2
    move v15, v13

    :goto_3
    aput-char v15, v2, v5

    .line 203
    add-int/lit8 v5, v5, 0x1

    .line 204
    if-ge v5, v0, :cond_3

    aget-char v13, v14, v12

    :cond_3
    aput-char v13, v2, v5

    .line 205
    nop

    .end local v3    # "i0":I
    .end local v6    # "i1":I
    .end local v8    # "i2":I
    .end local v9    # "o0":I
    .end local v10    # "o1":I
    .end local v11    # "o2":I
    .end local v12    # "o3":I
    add-int/lit8 v5, v5, 0x1

    .line 206
    move v3, v7

    goto :goto_0

    .line 207
    .end local v7    # "ip":I
    .local v3, "ip":I
    :cond_4
    return-object v2
.end method
