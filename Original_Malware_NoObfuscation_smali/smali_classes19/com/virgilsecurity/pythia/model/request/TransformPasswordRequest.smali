.class public Lcom/virgilsecurity/pythia/model/request/TransformPasswordRequest;
.super Ljava/lang/Object;
.source "TransformPasswordRequest.java"


# instance fields
.field private blindedPassword:[B
    .annotation runtime Lcom/google/gson/annotations/SerializedName;
        value = "blinded_password"
    .end annotation
.end field

.field private includeProof:Z
    .annotation runtime Lcom/google/gson/annotations/SerializedName;
        value = "include_proof"
    .end annotation
.end field

.field private salt:[B
    .annotation runtime Lcom/google/gson/annotations/SerializedName;
        value = "user_id"
    .end annotation
.end field

.field private version:I
    .annotation runtime Lcom/google/gson/annotations/SerializedName;
        value = "version"
    .end annotation
.end field


# direct methods
.method public constructor <init>()V
    .locals 0

    .line 63
    invoke-direct {p0}, Ljava/lang/Object;-><init>()V

    .line 64
    return-void
.end method

.method public constructor <init>([B[BIZ)V
    .locals 1
    .param p1, "salt"    # [B
    .param p2, "blindedPassword"    # [B
    .param p3, "version"    # I
    .param p4, "includeProof"    # Z

    .line 79
    invoke-direct {p0}, Ljava/lang/Object;-><init>()V

    .line 80
    const-string v0, "TransformPasswordRequest -> \'userId\' should not be null"

    invoke-static {p1, v0}, Lcom/virgilsecurity/common/util/Validator;->checkNullAgrument(Ljava/lang/Object;Ljava/lang/String;)V

    .line 81
    const-string v0, "TransformPasswordRequest -> \'userId\' should not be empty"

    invoke-static {p1, v0}, Lcom/virgilsecurity/common/util/Validator;->checkEmptyAgrument([BLjava/lang/String;)V

    .line 82
    iput-object p1, p0, Lcom/virgilsecurity/pythia/model/request/TransformPasswordRequest;->salt:[B

    .line 84
    const-string v0, "TransformPasswordRequest -> \'blindedPassword\' should not be null"

    invoke-static {p2, v0}, Lcom/virgilsecurity/common/util/Validator;->checkNullAgrument(Ljava/lang/Object;Ljava/lang/String;)V

    .line 86
    const-string v0, "TransformPasswordRequest -> \'blindedPassword\' should not be empty"

    invoke-static {p2, v0}, Lcom/virgilsecurity/common/util/Validator;->checkEmptyAgrument([BLjava/lang/String;)V

    .line 89
    iput-object p2, p0, Lcom/virgilsecurity/pythia/model/request/TransformPasswordRequest;->blindedPassword:[B

    .line 90
    iput p3, p0, Lcom/virgilsecurity/pythia/model/request/TransformPasswordRequest;->version:I

    .line 91
    iput-boolean p4, p0, Lcom/virgilsecurity/pythia/model/request/TransformPasswordRequest;->includeProof:Z

    .line 92
    return-void
.end method


# virtual methods
.method public getBlindedPassword()[B
    .locals 1

    .line 109
    iget-object v0, p0, Lcom/virgilsecurity/pythia/model/request/TransformPasswordRequest;->blindedPassword:[B

    return-object v0
.end method

.method public getIncludeProof()Z
    .locals 1

    .line 127
    iget-boolean v0, p0, Lcom/virgilsecurity/pythia/model/request/TransformPasswordRequest;->includeProof:Z

    return v0
.end method

.method public getSalt()[B
    .locals 1

    .line 100
    iget-object v0, p0, Lcom/virgilsecurity/pythia/model/request/TransformPasswordRequest;->salt:[B

    return-object v0
.end method

.method public getVersion()I
    .locals 1

    .line 118
    iget v0, p0, Lcom/virgilsecurity/pythia/model/request/TransformPasswordRequest;->version:I

    return v0
.end method

.method public setIncludeProof(Z)V
    .locals 0
    .param p1, "includeProof"    # Z

    .line 137
    iput-boolean p1, p0, Lcom/virgilsecurity/pythia/model/request/TransformPasswordRequest;->includeProof:Z

    .line 138
    return-void
.end method
