.class public Lcom/virgilsecurity/pythia/brainkey/BrainKey;
.super Ljava/lang/Object;
.source "BrainKey.java"


# instance fields
.field private accessTokenProvider:Lcom/virgilsecurity/sdk/jwt/contract/AccessTokenProvider;

.field private client:Lcom/virgilsecurity/pythia/client/PythiaClient;

.field private pythiaCrypto:Lcom/virgilsecurity/pythia/crypto/PythiaCrypto;


# direct methods
.method public constructor <init>(Lcom/virgilsecurity/pythia/brainkey/BrainKeyContext;)V
    .locals 1
    .param p1, "context"    # Lcom/virgilsecurity/pythia/brainkey/BrainKeyContext;

    .line 61
    invoke-direct {p0}, Ljava/lang/Object;-><init>()V

    .line 62
    invoke-virtual {p1}, Lcom/virgilsecurity/pythia/brainkey/BrainKeyContext;->getPythiaClient()Lcom/virgilsecurity/pythia/client/PythiaClient;

    move-result-object v0

    iput-object v0, p0, Lcom/virgilsecurity/pythia/brainkey/BrainKey;->client:Lcom/virgilsecurity/pythia/client/PythiaClient;

    .line 63
    invoke-virtual {p1}, Lcom/virgilsecurity/pythia/brainkey/BrainKeyContext;->getPythiaCrypto()Lcom/virgilsecurity/pythia/crypto/PythiaCrypto;

    move-result-object v0

    iput-object v0, p0, Lcom/virgilsecurity/pythia/brainkey/BrainKey;->pythiaCrypto:Lcom/virgilsecurity/pythia/crypto/PythiaCrypto;

    .line 64
    invoke-virtual {p1}, Lcom/virgilsecurity/pythia/brainkey/BrainKeyContext;->getAccessTokenProvider()Lcom/virgilsecurity/sdk/jwt/contract/AccessTokenProvider;

    move-result-object v0

    iput-object v0, p0, Lcom/virgilsecurity/pythia/brainkey/BrainKey;->accessTokenProvider:Lcom/virgilsecurity/sdk/jwt/contract/AccessTokenProvider;

    .line 65
    return-void
.end method


# virtual methods
.method public generateKeyPair(Ljava/lang/String;)Lcom/virgilsecurity/sdk/crypto/VirgilKeyPair;
    .locals 1
    .param p1, "password"    # Ljava/lang/String;
    .annotation system Ldalvik/annotation/Throws;
        value = {
            Lcom/virgilsecurity/sdk/crypto/exceptions/CryptoException;,
            Lcom/virgilsecurity/pythia/model/exception/VirgilPythiaServiceException;
        }
    .end annotation

    .line 79
    const/4 v0, 0x0

    invoke-virtual {p0, p1, v0}, Lcom/virgilsecurity/pythia/brainkey/BrainKey;->generateKeyPair(Ljava/lang/String;Ljava/lang/String;)Lcom/virgilsecurity/sdk/crypto/VirgilKeyPair;

    move-result-object v0

    return-object v0
.end method

.method public generateKeyPair(Ljava/lang/String;Ljava/lang/String;)Lcom/virgilsecurity/sdk/crypto/VirgilKeyPair;
    .locals 5
    .param p1, "password"    # Ljava/lang/String;
    .param p2, "brainKeyId"    # Ljava/lang/String;
    .annotation system Ldalvik/annotation/Throws;
        value = {
            Lcom/virgilsecurity/sdk/crypto/exceptions/CryptoException;,
            Lcom/virgilsecurity/pythia/model/exception/VirgilPythiaServiceException;
        }
    .end annotation

    .line 96
    iget-object v0, p0, Lcom/virgilsecurity/pythia/brainkey/BrainKey;->accessTokenProvider:Lcom/virgilsecurity/sdk/jwt/contract/AccessTokenProvider;

    new-instance v1, Lcom/virgilsecurity/sdk/jwt/TokenContext;

    const-string v2, "pythia"

    const-string v3, "seed"

    const/4 v4, 0x0

    invoke-direct {v1, v2, v3, v4}, Lcom/virgilsecurity/sdk/jwt/TokenContext;-><init>(Ljava/lang/String;Ljava/lang/String;Z)V

    invoke-interface {v0, v1}, Lcom/virgilsecurity/sdk/jwt/contract/AccessTokenProvider;->getToken(Lcom/virgilsecurity/sdk/jwt/TokenContext;)Lcom/virgilsecurity/sdk/jwt/contract/AccessToken;

    move-result-object v0

    .line 97
    invoke-interface {v0}, Lcom/virgilsecurity/sdk/jwt/contract/AccessToken;->stringRepresentation()Ljava/lang/String;

    move-result-object v0

    .line 98
    .local v0, "token":Ljava/lang/String;
    iget-object v1, p0, Lcom/virgilsecurity/pythia/brainkey/BrainKey;->pythiaCrypto:Lcom/virgilsecurity/pythia/crypto/PythiaCrypto;

    invoke-interface {v1, p1}, Lcom/virgilsecurity/pythia/crypto/PythiaCrypto;->blind(Ljava/lang/String;)Lcom/virgilsecurity/pythia/crypto/BlindResult;

    move-result-object v1

    .line 99
    .local v1, "blindedResult":Lcom/virgilsecurity/pythia/crypto/BlindResult;
    iget-object v2, p0, Lcom/virgilsecurity/pythia/brainkey/BrainKey;->client:Lcom/virgilsecurity/pythia/client/PythiaClient;

    invoke-virtual {v1}, Lcom/virgilsecurity/pythia/crypto/BlindResult;->getBlindedPassword()[B

    move-result-object v3

    invoke-interface {v2, v3, p2, v0}, Lcom/virgilsecurity/pythia/client/PythiaClient;->generateSeed([BLjava/lang/String;Ljava/lang/String;)[B

    move-result-object v2

    .line 100
    .local v2, "seed":[B
    iget-object v3, p0, Lcom/virgilsecurity/pythia/brainkey/BrainKey;->pythiaCrypto:Lcom/virgilsecurity/pythia/crypto/PythiaCrypto;

    invoke-virtual {v1}, Lcom/virgilsecurity/pythia/crypto/BlindResult;->getBlindingSecret()[B

    move-result-object v4

    invoke-interface {v3, v2, v4}, Lcom/virgilsecurity/pythia/crypto/PythiaCrypto;->deblind([B[B)[B

    move-result-object v3

    .line 101
    .local v3, "deblindedPassword":[B
    iget-object v4, p0, Lcom/virgilsecurity/pythia/brainkey/BrainKey;->pythiaCrypto:Lcom/virgilsecurity/pythia/crypto/PythiaCrypto;

    invoke-interface {v4, v3}, Lcom/virgilsecurity/pythia/crypto/PythiaCrypto;->generateKeyPair([B)Lcom/virgilsecurity/sdk/crypto/VirgilKeyPair;

    move-result-object v4

    return-object v4
.end method

.method public getAccessTokenProvider()Lcom/virgilsecurity/sdk/jwt/contract/AccessTokenProvider;
    .locals 1

    .line 128
    iget-object v0, p0, Lcom/virgilsecurity/pythia/brainkey/BrainKey;->accessTokenProvider:Lcom/virgilsecurity/sdk/jwt/contract/AccessTokenProvider;

    return-object v0
.end method

.method public getClient()Lcom/virgilsecurity/pythia/client/PythiaClient;
    .locals 1

    .line 110
    iget-object v0, p0, Lcom/virgilsecurity/pythia/brainkey/BrainKey;->client:Lcom/virgilsecurity/pythia/client/PythiaClient;

    return-object v0
.end method

.method public getPythiaCrypto()Lcom/virgilsecurity/pythia/crypto/PythiaCrypto;
    .locals 1

    .line 119
    iget-object v0, p0, Lcom/virgilsecurity/pythia/brainkey/BrainKey;->pythiaCrypto:Lcom/virgilsecurity/pythia/crypto/PythiaCrypto;

    return-object v0
.end method
