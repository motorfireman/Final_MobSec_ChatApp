.class public Lcom/virgilsecurity/pythia/ProofKeys;
.super Ljava/lang/Object;
.source "ProofKeys.java"


# instance fields
.field private proofKeys:Ljava/util/List;
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "Ljava/util/List<",
            "Lcom/virgilsecurity/pythia/ProofKey;",
            ">;"
        }
    .end annotation
.end field


# direct methods
.method public constructor <init>(Ljava/util/List;)V
    .locals 4
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "(",
            "Ljava/util/List<",
            "Ljava/lang/String;",
            ">;)V"
        }
    .end annotation

    .line 63
    .local p1, "proofKeys":Ljava/util/List;, "Ljava/util/List<Ljava/lang/String;>;"
    invoke-direct {p0}, Ljava/lang/Object;-><init>()V

    .line 64
    if-eqz p1, :cond_1

    invoke-interface {p1}, Ljava/util/List;->isEmpty()Z

    move-result v0

    if-nez v0, :cond_1

    .line 68
    new-instance v0, Ljava/util/ArrayList;

    invoke-interface {p1}, Ljava/util/List;->size()I

    move-result v1

    invoke-direct {v0, v1}, Ljava/util/ArrayList;-><init>(I)V

    iput-object v0, p0, Lcom/virgilsecurity/pythia/ProofKeys;->proofKeys:Ljava/util/List;

    .line 69
    invoke-interface {p1}, Ljava/util/List;->iterator()Ljava/util/Iterator;

    move-result-object v0

    :goto_0
    invoke-interface {v0}, Ljava/util/Iterator;->hasNext()Z

    move-result v1

    if-eqz v1, :cond_0

    invoke-interface {v0}, Ljava/util/Iterator;->next()Ljava/lang/Object;

    move-result-object v1

    check-cast v1, Ljava/lang/String;

    .line 70
    .local v1, "proofKey":Ljava/lang/String;
    iget-object v2, p0, Lcom/virgilsecurity/pythia/ProofKeys;->proofKeys:Ljava/util/List;

    invoke-direct {p0, v1}, Lcom/virgilsecurity/pythia/ProofKeys;->parsePublicKey(Ljava/lang/String;)Lcom/virgilsecurity/pythia/ProofKey;

    move-result-object v3

    invoke-interface {v2, v3}, Ljava/util/List;->add(Ljava/lang/Object;)Z

    .line 71
    .end local v1    # "proofKey":Ljava/lang/String;
    goto :goto_0

    .line 72
    :cond_0
    iget-object v0, p0, Lcom/virgilsecurity/pythia/ProofKeys;->proofKeys:Ljava/util/List;

    new-instance v1, Lcom/virgilsecurity/pythia/ProofKeys$1;

    invoke-direct {v1, p0}, Lcom/virgilsecurity/pythia/ProofKeys$1;-><init>(Lcom/virgilsecurity/pythia/ProofKeys;)V

    invoke-static {v0, v1}, Ljava/util/Collections;->sort(Ljava/util/List;Ljava/util/Comparator;)V

    .line 79
    return-void

    .line 65
    :cond_1
    new-instance v0, Ljava/lang/IllegalArgumentException;

    const-string v1, "No public keys found"

    invoke-direct {v0, v1}, Ljava/lang/IllegalArgumentException;-><init>(Ljava/lang/String;)V

    throw v0
.end method

.method private parsePublicKey(Ljava/lang/String;)Lcom/virgilsecurity/pythia/ProofKey;
    .locals 4
    .param p1, "publicKeyStr"    # Ljava/lang/String;

    .line 114
    invoke-static {p1}, Lcom/virgilsecurity/sdk/utils/StringUtils;->isBlank(Ljava/lang/CharSequence;)Z

    move-result v0

    if-nez v0, :cond_2

    .line 117
    const-string v0, "\\."

    invoke-virtual {p1, v0}, Ljava/lang/String;->split(Ljava/lang/String;)[Ljava/lang/String;

    move-result-object v0

    .line 118
    .local v0, "parts":[Ljava/lang/String;
    array-length v1, v0

    const/4 v2, 0x3

    if-ne v1, v2, :cond_1

    const/4 v1, 0x0

    aget-object v1, v0, v1

    const-string v2, "PK"

    invoke-virtual {v2, v1}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v1

    if-eqz v1, :cond_1

    .line 120
    const/4 v1, 0x1

    :try_start_0
    aget-object v1, v0, v1

    invoke-static {v1}, Ljava/lang/Integer;->parseInt(Ljava/lang/String;)I

    move-result v1

    .line 121
    .local v1, "version":I
    const/4 v2, 0x2

    aget-object v2, v0, v2

    invoke-virtual {v2}, Ljava/lang/String;->getBytes()[B

    move-result-object v2

    invoke-static {v2}, Lcom/virgilsecurity/crypto/foundation/Base64;->decode([B)[B

    move-result-object v2

    .line 122
    .local v2, "data":[B
    array-length v3, v2

    if-eqz v3, :cond_0

    .line 125
    new-instance v3, Lcom/virgilsecurity/pythia/ProofKey;

    invoke-direct {v3, v2, v1}, Lcom/virgilsecurity/pythia/ProofKey;-><init>([BI)V

    return-object v3

    .line 123
    :cond_0
    new-instance v3, Lcom/virgilsecurity/pythia/model/exception/ProofKeyParseException;

    invoke-direct {v3}, Lcom/virgilsecurity/pythia/model/exception/ProofKeyParseException;-><init>()V

    .end local v0    # "parts":[Ljava/lang/String;
    .end local p1    # "publicKeyStr":Ljava/lang/String;
    throw v3
    :try_end_0
    .catch Ljava/lang/IllegalArgumentException; {:try_start_0 .. :try_end_0} :catch_0

    .line 126
    .end local v1    # "version":I
    .end local v2    # "data":[B
    .restart local v0    # "parts":[Ljava/lang/String;
    .restart local p1    # "publicKeyStr":Ljava/lang/String;
    :catch_0
    move-exception v1

    .line 127
    .local v1, "e":Ljava/lang/IllegalArgumentException;
    new-instance v2, Lcom/virgilsecurity/pythia/model/exception/ProofKeyParseException;

    invoke-direct {v2}, Lcom/virgilsecurity/pythia/model/exception/ProofKeyParseException;-><init>()V

    throw v2

    .line 130
    .end local v1    # "e":Ljava/lang/IllegalArgumentException;
    :cond_1
    new-instance v1, Lcom/virgilsecurity/pythia/model/exception/ProofKeyParseException;

    invoke-direct {v1}, Lcom/virgilsecurity/pythia/model/exception/ProofKeyParseException;-><init>()V

    throw v1

    .line 115
    .end local v0    # "parts":[Ljava/lang/String;
    :cond_2
    new-instance v0, Lcom/virgilsecurity/pythia/model/exception/ProofKeyParseException;

    invoke-direct {v0}, Lcom/virgilsecurity/pythia/model/exception/ProofKeyParseException;-><init>()V

    throw v0
.end method


# virtual methods
.method public getCurrentKey()Lcom/virgilsecurity/pythia/ProofKey;
    .locals 2

    .line 89
    iget-object v0, p0, Lcom/virgilsecurity/pythia/ProofKeys;->proofKeys:Ljava/util/List;

    invoke-interface {v0}, Ljava/util/List;->isEmpty()Z

    move-result v0

    if-nez v0, :cond_0

    .line 92
    iget-object v0, p0, Lcom/virgilsecurity/pythia/ProofKeys;->proofKeys:Ljava/util/List;

    const/4 v1, 0x0

    invoke-interface {v0, v1}, Ljava/util/List;->get(I)Ljava/lang/Object;

    move-result-object v0

    check-cast v0, Lcom/virgilsecurity/pythia/ProofKey;

    return-object v0

    .line 90
    :cond_0
    new-instance v0, Lcom/virgilsecurity/pythia/model/exception/ProofKeyNotFoundException;

    invoke-direct {v0}, Lcom/virgilsecurity/pythia/model/exception/ProofKeyNotFoundException;-><init>()V

    throw v0
.end method

.method public getProofKey(I)Lcom/virgilsecurity/pythia/ProofKey;
    .locals 3
    .param p1, "version"    # I

    .line 105
    iget-object v0, p0, Lcom/virgilsecurity/pythia/ProofKeys;->proofKeys:Ljava/util/List;

    invoke-interface {v0}, Ljava/util/List;->iterator()Ljava/util/Iterator;

    move-result-object v0

    :goto_0
    invoke-interface {v0}, Ljava/util/Iterator;->hasNext()Z

    move-result v1

    if-eqz v1, :cond_1

    invoke-interface {v0}, Ljava/util/Iterator;->next()Ljava/lang/Object;

    move-result-object v1

    check-cast v1, Lcom/virgilsecurity/pythia/ProofKey;

    .line 106
    .local v1, "proofKey":Lcom/virgilsecurity/pythia/ProofKey;
    invoke-virtual {v1}, Lcom/virgilsecurity/pythia/ProofKey;->getVersion()I

    move-result v2

    if-ne v2, p1, :cond_0

    .line 107
    return-object v1

    .line 109
    .end local v1    # "proofKey":Lcom/virgilsecurity/pythia/ProofKey;
    :cond_0
    goto :goto_0

    .line 110
    :cond_1
    new-instance v0, Lcom/virgilsecurity/pythia/model/exception/ProofKeyNotFoundException;

    invoke-direct {v0}, Lcom/virgilsecurity/pythia/model/exception/ProofKeyNotFoundException;-><init>()V

    throw v0
.end method
