.class public Lcom/yalantis/ucrop/util/BitmapLoadUtils;
.super Ljava/lang/Object;
.source "BitmapLoadUtils.java"


# static fields
.field private static final CONTENT_SCHEME:Ljava/lang/String; = "content"

.field private static final MAX_BITMAP_SIZE:I = 0x6400000

.field private static final TAG:Ljava/lang/String; = "BitmapLoadUtils"


# direct methods
.method public constructor <init>()V
    .locals 0

    .line 29
    invoke-direct {p0}, Ljava/lang/Object;-><init>()V

    return-void
.end method

.method public static calculateInSampleSize(Landroid/graphics/BitmapFactory$Options;II)I
    .locals 4
    .param p0, "options"    # Landroid/graphics/BitmapFactory$Options;
    .param p1, "reqWidth"    # I
    .param p2, "reqHeight"    # I
    .annotation runtime Ljava/lang/Deprecated;
    .end annotation

    .line 59
    iget v0, p0, Landroid/graphics/BitmapFactory$Options;->outHeight:I

    .line 60
    .local v0, "height":I
    iget v1, p0, Landroid/graphics/BitmapFactory$Options;->outWidth:I

    .line 61
    .local v1, "width":I
    const/4 v2, 0x1

    .line 63
    .local v2, "inSampleSize":I
    if-gt v0, p2, :cond_0

    if-le v1, p1, :cond_1

    .line 66
    :cond_0
    :goto_0
    div-int v3, v0, v2

    if-gt v3, p2, :cond_2

    div-int v3, v1, v2

    if-le v3, p1, :cond_1

    goto :goto_1

    .line 70
    :cond_1
    return v2

    .line 67
    :cond_2
    :goto_1
    mul-int/lit8 v2, v2, 0x2

    goto :goto_0
.end method

.method public static calculateMaxBitmapSize(Landroid/content/Context;)I
    .locals 10
    .param p0, "context"    # Landroid/content/Context;

    .line 232
    const-string/jumbo v0, "window"

    invoke-virtual {p0, v0}, Landroid/content/Context;->getSystemService(Ljava/lang/String;)Ljava/lang/Object;

    move-result-object v0

    check-cast v0, Landroid/view/WindowManager;

    .line 235
    .local v0, "wm":Landroid/view/WindowManager;
    new-instance v1, Landroid/graphics/Point;

    invoke-direct {v1}, Landroid/graphics/Point;-><init>()V

    .line 237
    .local v1, "size":Landroid/graphics/Point;
    if-eqz v0, :cond_0

    .line 238
    invoke-interface {v0}, Landroid/view/WindowManager;->getDefaultDisplay()Landroid/view/Display;

    move-result-object v2

    .line 239
    .local v2, "display":Landroid/view/Display;
    invoke-virtual {v2, v1}, Landroid/view/Display;->getSize(Landroid/graphics/Point;)V

    .line 242
    .end local v2    # "display":Landroid/view/Display;
    :cond_0
    iget v2, v1, Landroid/graphics/Point;->x:I

    .line 243
    .local v2, "width":I
    iget v3, v1, Landroid/graphics/Point;->y:I

    .line 246
    .local v3, "height":I
    int-to-double v4, v2

    const-wide/high16 v6, 0x4000000000000000L    # 2.0

    invoke-static {v4, v5, v6, v7}, Ljava/lang/Math;->pow(DD)D

    move-result-wide v4

    int-to-double v8, v3

    invoke-static {v8, v9, v6, v7}, Ljava/lang/Math;->pow(DD)D

    move-result-wide v6

    add-double/2addr v4, v6

    invoke-static {v4, v5}, Ljava/lang/Math;->sqrt(D)D

    move-result-wide v4

    double-to-int v4, v4

    .line 249
    .local v4, "maxBitmapSize":I
    new-instance v5, Landroid/graphics/Canvas;

    invoke-direct {v5}, Landroid/graphics/Canvas;-><init>()V

    .line 250
    .local v5, "canvas":Landroid/graphics/Canvas;
    invoke-virtual {v5}, Landroid/graphics/Canvas;->getMaximumBitmapWidth()I

    move-result v6

    invoke-virtual {v5}, Landroid/graphics/Canvas;->getMaximumBitmapHeight()I

    move-result v7

    invoke-static {v6, v7}, Ljava/lang/Math;->min(II)I

    move-result v6

    .line 251
    .local v6, "maxCanvasSize":I
    if-lez v6, :cond_1

    .line 252
    invoke-static {v4, v6}, Ljava/lang/Math;->min(II)I

    move-result v4

    .line 256
    :cond_1
    invoke-static {}, Lcom/yalantis/ucrop/util/EglUtils;->getMaxTextureSize()I

    move-result v7

    .line 257
    .local v7, "maxTextureSize":I
    if-lez v7, :cond_2

    .line 258
    invoke-static {v4, v7}, Ljava/lang/Math;->min(II)I

    move-result v4

    .line 261
    :cond_2
    new-instance v8, Ljava/lang/StringBuilder;

    invoke-direct {v8}, Ljava/lang/StringBuilder;-><init>()V

    const-string v9, "maxBitmapSize: "

    invoke-virtual {v8, v9}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v8

    invoke-virtual {v8, v4}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v8

    invoke-virtual {v8}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v8

    const-string v9, "BitmapLoadUtils"

    invoke-static {v9, v8}, Landroid/util/Log;->d(Ljava/lang/String;Ljava/lang/String;)I

    .line 262
    return v4
.end method

.method public static checkSize(Landroid/graphics/Bitmap;Landroid/graphics/BitmapFactory$Options;)Z
    .locals 6
    .param p0, "bitmap"    # Landroid/graphics/Bitmap;
    .param p1, "options"    # Landroid/graphics/BitmapFactory$Options;

    .line 154
    const/4 v0, 0x0

    if-eqz p0, :cond_0

    invoke-virtual {p0}, Landroid/graphics/Bitmap;->getByteCount()I

    move-result v1

    goto :goto_0

    :cond_0
    move v1, v0

    .line 155
    .local v1, "bitmapSize":I
    :goto_0
    int-to-long v2, v1

    invoke-static {}, Lcom/yalantis/ucrop/util/BitmapLoadUtils;->getTotalMemory()J

    move-result-wide v4

    cmp-long v2, v2, v4

    if-lez v2, :cond_1

    .line 156
    iget v0, p1, Landroid/graphics/BitmapFactory$Options;->inSampleSize:I

    mul-int/lit8 v0, v0, 0x2

    iput v0, p1, Landroid/graphics/BitmapFactory$Options;->inSampleSize:I

    .line 157
    const/4 v0, 0x1

    return v0

    .line 159
    :cond_1
    return v0
.end method

.method public static close(Ljava/io/Closeable;)V
    .locals 1
    .param p0, "c"    # Ljava/io/Closeable;

    .line 267
    if-eqz p0, :cond_0

    instance-of v0, p0, Ljava/io/Closeable;

    if-eqz v0, :cond_0

    .line 269
    :try_start_0
    invoke-interface {p0}, Ljava/io/Closeable;->close()V
    :try_end_0
    .catch Ljava/io/IOException; {:try_start_0 .. :try_end_0} :catch_0

    .line 272
    goto :goto_0

    .line 270
    :catch_0
    move-exception v0

    .line 274
    :cond_0
    :goto_0
    return-void
.end method

.method public static computeSize(II)I
    .locals 10
    .param p0, "srcWidth"    # I
    .param p1, "srcHeight"    # I

    .line 81
    rem-int/lit8 v0, p0, 0x2

    const/4 v1, 0x1

    if-ne v0, v1, :cond_0

    add-int/lit8 v0, p0, 0x1

    goto :goto_0

    :cond_0
    move v0, p0

    :goto_0
    move p0, v0

    .line 82
    rem-int/lit8 v0, p1, 0x2

    if-ne v0, v1, :cond_1

    add-int/lit8 v0, p1, 0x1

    goto :goto_1

    :cond_1
    move v0, p1

    :goto_1
    move p1, v0

    .line 84
    invoke-static {p0, p1}, Ljava/lang/Math;->max(II)I

    move-result v0

    .line 85
    .local v0, "longSide":I
    invoke-static {p0, p1}, Ljava/lang/Math;->min(II)I

    move-result v2

    .line 87
    .local v2, "shortSide":I
    int-to-float v3, v2

    int-to-float v4, v0

    div-float/2addr v3, v4

    .line 88
    .local v3, "scale":F
    const/high16 v4, 0x3f800000    # 1.0f

    cmpg-float v4, v3, v4

    const-wide/high16 v5, 0x3fe2000000000000L    # 0.5625

    if-gtz v4, :cond_5

    float-to-double v7, v3

    cmpl-double v4, v7, v5

    if-lez v4, :cond_5

    .line 89
    const/16 v4, 0x680

    if-ge v0, v4, :cond_2

    .line 90
    return v1

    .line 91
    :cond_2
    const/16 v1, 0x137e

    if-ge v0, v1, :cond_3

    .line 92
    const/4 v1, 0x2

    return v1

    .line 93
    :cond_3
    if-le v0, v1, :cond_4

    const/16 v1, 0x2800

    if-ge v0, v1, :cond_4

    .line 94
    const/4 v1, 0x4

    return v1

    .line 96
    :cond_4
    div-int/lit16 v1, v0, 0x500

    return v1

    .line 98
    :cond_5
    float-to-double v7, v3

    cmpg-double v4, v7, v5

    if-gtz v4, :cond_7

    float-to-double v4, v3

    const-wide/high16 v6, 0x3fe0000000000000L    # 0.5

    cmpl-double v4, v4, v6

    if-lez v4, :cond_7

    .line 99
    div-int/lit16 v4, v0, 0x500

    if-nez v4, :cond_6

    goto :goto_2

    :cond_6
    div-int/lit16 v1, v0, 0x500

    :goto_2
    return v1

    .line 101
    :cond_7
    int-to-double v4, v0

    const-wide/high16 v6, 0x4094000000000000L    # 1280.0

    float-to-double v8, v3

    div-double/2addr v6, v8

    div-double/2addr v4, v6

    invoke-static {v4, v5}, Ljava/lang/Math;->ceil(D)D

    move-result-wide v4

    double-to-int v1, v4

    return v1
.end method

.method public static decodeBitmapInBackground(Landroid/content/Context;Landroid/net/Uri;Landroid/net/Uri;IILcom/yalantis/ucrop/callback/BitmapLoadCallback;)V
    .locals 8
    .param p0, "context"    # Landroid/content/Context;
    .param p1, "uri"    # Landroid/net/Uri;
    .param p2, "outputUri"    # Landroid/net/Uri;
    .param p3, "requiredWidth"    # I
    .param p4, "requiredHeight"    # I
    .param p5, "loadCallback"    # Lcom/yalantis/ucrop/callback/BitmapLoadCallback;

    .line 40
    new-instance v7, Lcom/yalantis/ucrop/task/BitmapLoadTask;

    move-object v0, v7

    move-object v1, p0

    move-object v2, p1

    move-object v3, p2

    move v4, p3

    move v5, p4

    move-object v6, p5

    invoke-direct/range {v0 .. v6}, Lcom/yalantis/ucrop/task/BitmapLoadTask;-><init>(Landroid/content/Context;Landroid/net/Uri;Landroid/net/Uri;IILcom/yalantis/ucrop/callback/BitmapLoadCallback;)V

    sget-object v0, Landroid/os/AsyncTask;->THREAD_POOL_EXECUTOR:Ljava/util/concurrent/Executor;

    const/4 v1, 0x0

    new-array v1, v1, [Ljava/lang/Void;

    .line 41
    invoke-virtual {v7, v0, v1}, Lcom/yalantis/ucrop/task/BitmapLoadTask;->executeOnExecutor(Ljava/util/concurrent/Executor;[Ljava/lang/Object;)Landroid/os/AsyncTask;

    .line 42
    return-void
.end method

.method public static exifToDegrees(I)I
    .locals 1
    .param p0, "exifOrientation"    # I

    .line 189
    packed-switch p0, :pswitch_data_0

    .line 203
    const/4 v0, 0x0

    .local v0, "rotation":I
    goto :goto_0

    .line 200
    .end local v0    # "rotation":I
    :pswitch_0
    const/16 v0, 0x10e

    .line 201
    .restart local v0    # "rotation":I
    goto :goto_0

    .line 192
    .end local v0    # "rotation":I
    :pswitch_1
    const/16 v0, 0x5a

    .line 193
    .restart local v0    # "rotation":I
    goto :goto_0

    .line 196
    .end local v0    # "rotation":I
    :pswitch_2
    const/16 v0, 0xb4

    .line 197
    .restart local v0    # "rotation":I
    nop

    .line 205
    :goto_0
    return v0

    nop

    :pswitch_data_0
    .packed-switch 0x3
        :pswitch_2
        :pswitch_2
        :pswitch_1
        :pswitch_1
        :pswitch_0
        :pswitch_0
    .end packed-switch
.end method

.method public static exifToTranslation(I)I
    .locals 1
    .param p0, "exifOrientation"    # I

    .line 210
    packed-switch p0, :pswitch_data_0

    .line 218
    :pswitch_0
    const/4 v0, 0x1

    .local v0, "translation":I
    goto :goto_0

    .line 215
    .end local v0    # "translation":I
    :pswitch_1
    const/4 v0, -0x1

    .line 216
    .restart local v0    # "translation":I
    nop

    .line 220
    :goto_0
    return v0

    :pswitch_data_0
    .packed-switch 0x2
        :pswitch_1
        :pswitch_0
        :pswitch_1
        :pswitch_1
        :pswitch_0
        :pswitch_1
    .end packed-switch
.end method

.method public static getExifOrientation(Landroid/content/Context;Landroid/net/Uri;)I
    .locals 4
    .param p0, "context"    # Landroid/content/Context;
    .param p1, "imageUri"    # Landroid/net/Uri;

    .line 173
    const/4 v0, 0x0

    .line 175
    .local v0, "orientation":I
    :try_start_0
    invoke-virtual {p0}, Landroid/content/Context;->getContentResolver()Landroid/content/ContentResolver;

    move-result-object v1

    invoke-virtual {v1, p1}, Landroid/content/ContentResolver;->openInputStream(Landroid/net/Uri;)Ljava/io/InputStream;

    move-result-object v1

    .line 176
    .local v1, "stream":Ljava/io/InputStream;
    if-nez v1, :cond_0

    .line 177
    return v0

    .line 179
    :cond_0
    new-instance v2, Lcom/yalantis/ucrop/util/ImageHeaderParser;

    invoke-direct {v2, v1}, Lcom/yalantis/ucrop/util/ImageHeaderParser;-><init>(Ljava/io/InputStream;)V

    invoke-virtual {v2}, Lcom/yalantis/ucrop/util/ImageHeaderParser;->getOrientation()I

    move-result v2

    move v0, v2

    .line 180
    invoke-static {v1}, Lcom/yalantis/ucrop/util/BitmapLoadUtils;->close(Ljava/io/Closeable;)V
    :try_end_0
    .catch Ljava/io/IOException; {:try_start_0 .. :try_end_0} :catch_0

    .line 183
    .end local v1    # "stream":Ljava/io/InputStream;
    goto :goto_0

    .line 181
    :catch_0
    move-exception v1

    .line 182
    .local v1, "e":Ljava/io/IOException;
    new-instance v2, Ljava/lang/StringBuilder;

    invoke-direct {v2}, Ljava/lang/StringBuilder;-><init>()V

    const-string v3, "getExifOrientation: "

    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v2

    invoke-virtual {p1}, Landroid/net/Uri;->toString()Ljava/lang/String;

    move-result-object v3

    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v2

    invoke-virtual {v2}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v2

    const-string v3, "BitmapLoadUtils"

    invoke-static {v3, v2, v1}, Landroid/util/Log;->e(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)I

    .line 184
    .end local v1    # "e":Ljava/io/IOException;
    :goto_0
    return v0
.end method

.method public static getMaxImageSize(Landroid/content/Context;Landroid/net/Uri;)[I
    .locals 10
    .param p0, "context"    # Landroid/content/Context;
    .param p1, "mInputUri"    # Landroid/net/Uri;

    .line 113
    const-string v0, "BitmapLoadUtils"

    invoke-virtual {p1}, Landroid/net/Uri;->toString()Ljava/lang/String;

    move-result-object v1

    invoke-static {v1}, Lcom/yalantis/ucrop/util/FileUtils;->isHasHttp(Ljava/lang/String;)Z

    move-result v1

    const/4 v2, 0x2

    if-eqz v1, :cond_0

    .line 114
    new-array v0, v2, [I

    fill-array-data v0, :array_0

    return-object v0

    .line 116
    :cond_0
    new-instance v1, Landroid/graphics/BitmapFactory$Options;

    invoke-direct {v1}, Landroid/graphics/BitmapFactory$Options;-><init>()V

    .line 117
    .local v1, "options":Landroid/graphics/BitmapFactory$Options;
    const/4 v3, 0x1

    iput-boolean v3, v1, Landroid/graphics/BitmapFactory$Options;->inJustDecodeBounds:Z

    .line 119
    const/4 v4, 0x0

    :try_start_0
    invoke-virtual {p0}, Landroid/content/Context;->getContentResolver()Landroid/content/ContentResolver;

    move-result-object v5

    invoke-virtual {v5, p1}, Landroid/content/ContentResolver;->openInputStream(Landroid/net/Uri;)Ljava/io/InputStream;

    move-result-object v5

    .line 120
    .local v5, "stream":Ljava/io/InputStream;
    invoke-static {v5, v4, v1}, Landroid/graphics/BitmapFactory;->decodeStream(Ljava/io/InputStream;Landroid/graphics/Rect;Landroid/graphics/BitmapFactory$Options;)Landroid/graphics/Bitmap;

    .line 121
    iget v6, v1, Landroid/graphics/BitmapFactory$Options;->outWidth:I

    iget v7, v1, Landroid/graphics/BitmapFactory$Options;->outHeight:I

    invoke-static {v6, v7}, Lcom/yalantis/ucrop/util/BitmapLoadUtils;->computeSize(II)I

    move-result v6

    iput v6, v1, Landroid/graphics/BitmapFactory$Options;->inSampleSize:I
    :try_end_0
    .catch Ljava/lang/Exception; {:try_start_0 .. :try_end_0} :catch_0

    .line 124
    .end local v5    # "stream":Ljava/io/InputStream;
    goto :goto_0

    .line 122
    :catch_0
    move-exception v5

    .line 123
    .local v5, "e":Ljava/lang/Exception;
    invoke-virtual {v5}, Ljava/lang/Exception;->printStackTrace()V

    .line 125
    .end local v5    # "e":Ljava/lang/Exception;
    :goto_0
    const/4 v5, 0x0

    iput-boolean v5, v1, Landroid/graphics/BitmapFactory$Options;->inJustDecodeBounds:Z

    .line 127
    const/4 v6, 0x0

    .line 129
    .local v6, "decodeSampledBitmap":Landroid/graphics/Bitmap;
    const/4 v7, 0x0

    .line 130
    .local v7, "decodeAttemptSuccess":Z
    :goto_1
    if-nez v7, :cond_2

    .line 132
    :try_start_1
    invoke-virtual {p0}, Landroid/content/Context;->getContentResolver()Landroid/content/ContentResolver;

    move-result-object v8

    invoke-virtual {v8, p1}, Landroid/content/ContentResolver;->openInputStream(Landroid/net/Uri;)Ljava/io/InputStream;

    move-result-object v8
    :try_end_1
    .catch Ljava/lang/OutOfMemoryError; {:try_start_1 .. :try_end_1} :catch_2
    .catch Ljava/io/IOException; {:try_start_1 .. :try_end_1} :catch_1

    .line 134
    .local v8, "stream":Ljava/io/InputStream;
    :try_start_2
    invoke-static {v8, v4, v1}, Landroid/graphics/BitmapFactory;->decodeStream(Ljava/io/InputStream;Landroid/graphics/Rect;Landroid/graphics/BitmapFactory$Options;)Landroid/graphics/Bitmap;

    move-result-object v9
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_0

    move-object v6, v9

    .line 136
    :try_start_3
    invoke-static {v8}, Lcom/yalantis/ucrop/util/BitmapLoadUtils;->close(Ljava/io/Closeable;)V

    .line 137
    nop

    .line 138
    invoke-static {v6, v1}, Lcom/yalantis/ucrop/util/BitmapLoadUtils;->checkSize(Landroid/graphics/Bitmap;Landroid/graphics/BitmapFactory$Options;)Z

    move-result v9

    if-eqz v9, :cond_1

    goto :goto_1

    .line 139
    :cond_1
    const/4 v7, 0x1

    .end local v8    # "stream":Ljava/io/InputStream;
    goto :goto_2

    .line 136
    .restart local v8    # "stream":Ljava/io/InputStream;
    :catchall_0
    move-exception v9

    invoke-static {v8}, Lcom/yalantis/ucrop/util/BitmapLoadUtils;->close(Ljava/io/Closeable;)V

    .line 137
    nop

    .end local v1    # "options":Landroid/graphics/BitmapFactory$Options;
    .end local v6    # "decodeSampledBitmap":Landroid/graphics/Bitmap;
    .end local v7    # "decodeAttemptSuccess":Z
    .end local p0    # "context":Landroid/content/Context;
    .end local p1    # "mInputUri":Landroid/net/Uri;
    throw v9
    :try_end_3
    .catch Ljava/lang/OutOfMemoryError; {:try_start_3 .. :try_end_3} :catch_2
    .catch Ljava/io/IOException; {:try_start_3 .. :try_end_3} :catch_1

    .line 143
    .end local v8    # "stream":Ljava/io/InputStream;
    .restart local v1    # "options":Landroid/graphics/BitmapFactory$Options;
    .restart local v6    # "decodeSampledBitmap":Landroid/graphics/Bitmap;
    .restart local v7    # "decodeAttemptSuccess":Z
    .restart local p0    # "context":Landroid/content/Context;
    .restart local p1    # "mInputUri":Landroid/net/Uri;
    :catch_1
    move-exception v8

    .line 144
    .local v8, "e":Ljava/io/IOException;
    const-string v9, "doInBackground: ImageDecoder.createSource: "

    invoke-static {v0, v9, v8}, Landroid/util/Log;->e(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)I

    .end local v8    # "e":Ljava/io/IOException;
    goto :goto_2

    .line 140
    :catch_2
    move-exception v8

    .line 141
    .local v8, "error":Ljava/lang/OutOfMemoryError;
    const-string v9, "doInBackground: BitmapFactory.decodeFileDescriptor: "

    invoke-static {v0, v9, v8}, Landroid/util/Log;->e(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)I

    .line 142
    iget v9, v1, Landroid/graphics/BitmapFactory$Options;->inSampleSize:I

    mul-int/2addr v9, v2

    iput v9, v1, Landroid/graphics/BitmapFactory$Options;->inSampleSize:I

    .line 145
    .end local v8    # "error":Ljava/lang/OutOfMemoryError;
    :goto_2
    goto :goto_1

    .line 147
    :cond_2
    if-nez v6, :cond_3

    .line 148
    new-array v0, v2, [I

    fill-array-data v0, :array_1

    return-object v0

    .line 150
    :cond_3
    new-array v0, v2, [I

    invoke-virtual {v6}, Landroid/graphics/Bitmap;->getWidth()I

    move-result v2

    aput v2, v0, v5

    invoke-virtual {v6}, Landroid/graphics/Bitmap;->getHeight()I

    move-result v2

    aput v2, v0, v3

    return-object v0

    nop

    :array_0
    .array-data 4
        0x0
        0x0
    .end array-data

    :array_1
    .array-data 4
        0x0
        0x0
    .end array-data
.end method

.method public static getTotalMemory()J
    .locals 5

    .line 168
    invoke-static {}, Ljava/lang/Runtime;->getRuntime()Ljava/lang/Runtime;

    move-result-object v0

    invoke-virtual {v0}, Ljava/lang/Runtime;->totalMemory()J

    move-result-wide v0

    .line 169
    .local v0, "totalMemory":J
    const-wide/32 v2, 0x6400000

    cmp-long v4, v0, v2

    if-lez v4, :cond_0

    goto :goto_0

    :cond_0
    move-wide v2, v0

    :goto_0
    return-wide v2
.end method

.method public static hasContentScheme(Landroid/net/Uri;)Z
    .locals 2
    .param p0, "uri"    # Landroid/net/Uri;

    .line 277
    if-eqz p0, :cond_0

    invoke-virtual {p0}, Landroid/net/Uri;->getScheme()Ljava/lang/String;

    move-result-object v0

    const-string v1, "content"

    invoke-virtual {v1, v0}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v0

    if-eqz v0, :cond_0

    const/4 v0, 0x1

    goto :goto_0

    :cond_0
    const/4 v0, 0x0

    :goto_0
    return v0
.end method

.method public static transformBitmap(Landroid/graphics/Bitmap;Landroid/graphics/Matrix;)Landroid/graphics/Bitmap;
    .locals 7
    .param p0, "bitmap"    # Landroid/graphics/Bitmap;
    .param p1, "transformMatrix"    # Landroid/graphics/Matrix;

    .line 46
    const/4 v1, 0x0

    const/4 v2, 0x0

    :try_start_0
    invoke-virtual {p0}, Landroid/graphics/Bitmap;->getWidth()I

    move-result v3

    invoke-virtual {p0}, Landroid/graphics/Bitmap;->getHeight()I

    move-result v4

    const/4 v6, 0x1

    move-object v0, p0

    move-object v5, p1

    invoke-static/range {v0 .. v6}, Landroid/graphics/Bitmap;->createBitmap(Landroid/graphics/Bitmap;IIIILandroid/graphics/Matrix;Z)Landroid/graphics/Bitmap;

    move-result-object v0

    .line 47
    .local v0, "converted":Landroid/graphics/Bitmap;
    invoke-virtual {p0, v0}, Landroid/graphics/Bitmap;->sameAs(Landroid/graphics/Bitmap;)Z

    move-result v1
    :try_end_0
    .catch Ljava/lang/OutOfMemoryError; {:try_start_0 .. :try_end_0} :catch_0

    if-nez v1, :cond_0

    .line 48
    move-object p0, v0

    .line 52
    .end local v0    # "converted":Landroid/graphics/Bitmap;
    :cond_0
    goto :goto_0

    .line 50
    :catch_0
    move-exception v0

    .line 51
    .local v0, "error":Ljava/lang/OutOfMemoryError;
    const-string v1, "BitmapLoadUtils"

    const-string/jumbo v2, "transformBitmap: "

    invoke-static {v1, v2, v0}, Landroid/util/Log;->e(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)I

    .line 53
    .end local v0    # "error":Ljava/lang/OutOfMemoryError;
    :goto_0
    return-object p0
.end method
