.class public abstract Lcom/thoughtbot/expandablecheckrecyclerview/viewholders/CheckableChildViewHolder;
.super Lcom/thoughtbot/expandablerecyclerview/viewholders/ChildViewHolder;
.source "CheckableChildViewHolder.java"

# interfaces
.implements Landroid/view/View$OnClickListener;


# instance fields
.field private checkable:Landroid/widget/Checkable;

.field private listener:Lcom/thoughtbot/expandablecheckrecyclerview/listeners/OnChildCheckChangedListener;


# direct methods
.method public constructor <init>(Landroid/view/View;)V
    .locals 0
    .param p1, "itemView"    # Landroid/view/View;

    .line 22
    invoke-direct {p0, p1}, Lcom/thoughtbot/expandablerecyclerview/viewholders/ChildViewHolder;-><init>(Landroid/view/View;)V

    .line 23
    invoke-virtual {p1, p0}, Landroid/view/View;->setOnClickListener(Landroid/view/View$OnClickListener;)V

    .line 24
    return-void
.end method


# virtual methods
.method public abstract getCheckable()Landroid/widget/Checkable;
.end method

.method public onBindViewHolder(IZ)V
    .locals 1
    .param p1, "flatPos"    # I
    .param p2, "checked"    # Z

    .line 33
    invoke-virtual {p0}, Lcom/thoughtbot/expandablecheckrecyclerview/viewholders/CheckableChildViewHolder;->getCheckable()Landroid/widget/Checkable;

    move-result-object v0

    iput-object v0, p0, Lcom/thoughtbot/expandablecheckrecyclerview/viewholders/CheckableChildViewHolder;->checkable:Landroid/widget/Checkable;

    .line 34
    invoke-interface {v0, p2}, Landroid/widget/Checkable;->setChecked(Z)V

    .line 35
    return-void
.end method

.method public onClick(Landroid/view/View;)V
    .locals 3
    .param p1, "v"    # Landroid/view/View;

    .line 39
    iget-object v0, p0, Lcom/thoughtbot/expandablecheckrecyclerview/viewholders/CheckableChildViewHolder;->checkable:Landroid/widget/Checkable;

    instance-of v1, v0, Landroid/widget/CheckedTextView;

    if-eqz v1, :cond_0

    .line 40
    invoke-interface {v0}, Landroid/widget/Checkable;->toggle()V

    .line 42
    :cond_0
    iget-object v0, p0, Lcom/thoughtbot/expandablecheckrecyclerview/viewholders/CheckableChildViewHolder;->listener:Lcom/thoughtbot/expandablecheckrecyclerview/listeners/OnChildCheckChangedListener;

    if-eqz v0, :cond_1

    .line 43
    iget-object v1, p0, Lcom/thoughtbot/expandablecheckrecyclerview/viewholders/CheckableChildViewHolder;->checkable:Landroid/widget/Checkable;

    invoke-interface {v1}, Landroid/widget/Checkable;->isChecked()Z

    move-result v1

    invoke-virtual {p0}, Lcom/thoughtbot/expandablecheckrecyclerview/viewholders/CheckableChildViewHolder;->getAdapterPosition()I

    move-result v2

    invoke-interface {v0, p1, v1, v2}, Lcom/thoughtbot/expandablecheckrecyclerview/listeners/OnChildCheckChangedListener;->onChildCheckChanged(Landroid/view/View;ZI)V

    .line 45
    :cond_1
    return-void
.end method

.method public setOnChildCheckedListener(Lcom/thoughtbot/expandablecheckrecyclerview/listeners/OnChildCheckChangedListener;)V
    .locals 0
    .param p1, "listener"    # Lcom/thoughtbot/expandablecheckrecyclerview/listeners/OnChildCheckChangedListener;

    .line 48
    iput-object p1, p0, Lcom/thoughtbot/expandablecheckrecyclerview/viewholders/CheckableChildViewHolder;->listener:Lcom/thoughtbot/expandablecheckrecyclerview/listeners/OnChildCheckChangedListener;

    .line 49
    return-void
.end method
