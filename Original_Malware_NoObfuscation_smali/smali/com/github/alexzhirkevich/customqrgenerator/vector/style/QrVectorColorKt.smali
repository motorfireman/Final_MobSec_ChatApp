.class public final Lcom/github/alexzhirkevich/customqrgenerator/vector/style/QrVectorColorKt;
.super Ljava/lang/Object;
.source "QrVectorColor.kt"


# annotations
.annotation system Ldalvik/annotation/SourceDebugExtension;
    value = "SMAP\nQrVectorColor.kt\nKotlin\n*S Kotlin\n*F\n+ 1 QrVectorColor.kt\ncom/github/alexzhirkevich/customqrgenerator/vector/style/QrVectorColorKt\n+ 2 Color.kt\nandroidx/core/graphics/ColorKt\n*L\n1#1,113:1\n117#2:114\n*S KotlinDebug\n*F\n+ 1 QrVectorColor.kt\ncom/github/alexzhirkevich/customqrgenerator/vector/style/QrVectorColorKt\n*L\n113#1:114\n*E\n"
.end annotation

.annotation runtime Lkotlin/Metadata;
    d1 = {
        "\u0000\u000e\n\u0000\n\u0002\u0010\u000b\n\u0002\u0018\u0002\n\u0002\u0008\u0002\"\u0018\u0010\u0000\u001a\u00020\u0001*\u00020\u00028@X\u0080\u0004\u00a2\u0006\u0006\u001a\u0004\u0008\u0000\u0010\u0003\u00a8\u0006\u0004"
    }
    d2 = {
        "isTransparent",
        "",
        "Lcom/github/alexzhirkevich/customqrgenerator/vector/style/QrVectorColor;",
        "(Lcom/github/alexzhirkevich/customqrgenerator/vector/style/QrVectorColor;)Z",
        "custom_qr_generator_release"
    }
    k = 0x2
    mv = {
        0x1,
        0x6,
        0x0
    }
    xi = 0x30
.end annotation


# direct methods
.method public static final isTransparent(Lcom/github/alexzhirkevich/customqrgenerator/vector/style/QrVectorColor;)Z
    .locals 3
    .param p0, "$this$isTransparent"    # Lcom/github/alexzhirkevich/customqrgenerator/vector/style/QrVectorColor;

    const-string v0, "<this>"

    invoke-static {p0, v0}, Lkotlin/jvm/internal/Intrinsics;->checkNotNullParameter(Ljava/lang/Object;Ljava/lang/String;)V

    .line 112
    instance-of v0, p0, Lcom/github/alexzhirkevich/customqrgenerator/vector/style/QrVectorColor$Transparent;

    if-nez v0, :cond_1

    instance-of v0, p0, Lcom/github/alexzhirkevich/customqrgenerator/vector/style/QrVectorColor$Unspecified;

    if-nez v0, :cond_1

    .line 113
    instance-of v0, p0, Lcom/github/alexzhirkevich/customqrgenerator/vector/style/QrVectorColor$Solid;

    if-eqz v0, :cond_0

    move-object v0, p0

    check-cast v0, Lcom/github/alexzhirkevich/customqrgenerator/vector/style/QrVectorColor$Solid;

    invoke-virtual {v0}, Lcom/github/alexzhirkevich/customqrgenerator/vector/style/QrVectorColor$Solid;->getColor()I

    move-result v0

    .local v0, "$this$alpha$iv":I
    const/4 v1, 0x0

    .line 114
    .local v1, "$i$f$getAlpha":I
    shr-int/lit8 v2, v0, 0x18

    and-int/lit16 v0, v2, 0xff

    .end local v0    # "$this$alpha$iv":I
    .end local v1    # "$i$f$getAlpha":I
    if-nez v0, :cond_0

    goto :goto_0

    :cond_0
    const/4 v0, 0x0

    goto :goto_1

    :cond_1
    :goto_0
    const/4 v0, 0x1

    .line 113
    :goto_1
    return v0
.end method
