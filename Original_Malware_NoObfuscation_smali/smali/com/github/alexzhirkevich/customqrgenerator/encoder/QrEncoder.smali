.class public final Lcom/github/alexzhirkevich/customqrgenerator/encoder/QrEncoder;
.super Ljava/lang/Object;
.source "QrEncoder.kt"


# annotations
.annotation system Ldalvik/annotation/MemberClasses;
    value = {
        Lcom/github/alexzhirkevich/customqrgenerator/encoder/QrEncoder$Companion;
    }
.end annotation

.annotation runtime Lkotlin/Metadata;
    d1 = {
        "\u0000Z\n\u0002\u0018\u0002\n\u0002\u0010\u0000\n\u0000\n\u0002\u0018\u0002\n\u0002\u0008\u0002\n\u0002\u0018\u0002\n\u0000\n\u0002\u0010\u0008\n\u0002\u0008\u0005\n\u0002\u0018\u0002\n\u0000\n\u0002\u0018\u0002\n\u0000\n\u0002\u0018\u0002\n\u0000\n\u0002\u0018\u0002\n\u0000\n\u0002\u0018\u0002\n\u0002\u0008\u0003\n\u0002\u0018\u0002\n\u0002\u0008\u0002\n\u0002\u0010\u0002\n\u0002\u0018\u0002\n\u0000\n\u0002\u0010\u0007\n\u0002\u0008\u0003\u0008\u0000\u0018\u0000 \"2\u00020\u0001:\u0001\"B\r\u0012\u0006\u0010\u0002\u001a\u00020\u0003\u00a2\u0006\u0002\u0010\u0004JB\u0010\u0005\u001a\u0004\u0018\u00010\u00062\u0006\u0010\u0007\u001a\u00020\u00082\u0006\u0010\t\u001a\u00020\u00082\u0006\u0010\n\u001a\u00020\u00082\u0006\u0010\u000b\u001a\u00020\u00082\u0006\u0010\u000c\u001a\u00020\u00082\u0006\u0010\r\u001a\u00020\u000e2\u0006\u0010\u000f\u001a\u00020\u0010H\u0002J#\u0010\u0011\u001a\u00020\u00122\u0006\u0010\u0013\u001a\u00020\u00142\u0008\u0010\u0015\u001a\u0004\u0018\u00010\u0016H\u0086@\u00f8\u0001\u0000\u00a2\u0006\u0002\u0010\u0017J\u0019\u0010\u0018\u001a\u00020\u00122\u0006\u0010\u0019\u001a\u00020\u001aH\u0082@\u00f8\u0001\u0000\u00a2\u0006\u0002\u0010\u001bJ\u0014\u0010\u001c\u001a\u00020\u001d*\u00020\u001e2\u0006\u0010\u001f\u001a\u00020 H\u0002J\u0014\u0010!\u001a\u00020\u001d*\u00020\u001e2\u0006\u0010\u001f\u001a\u00020\u0008H\u0002R\u000e\u0010\u0002\u001a\u00020\u0003X\u0082\u0004\u00a2\u0006\u0002\n\u0000\u0082\u0002\u0004\n\u0002\u0008\u0019\u00a8\u0006#"
    }
    d2 = {
        "Lcom/github/alexzhirkevich/customqrgenerator/encoder/QrEncoder;",
        "",
        "options",
        "Lcom/github/alexzhirkevich/customqrgenerator/QrOptions;",
        "(Lcom/github/alexzhirkevich/customqrgenerator/QrOptions;)V",
        "elementDataOrNull",
        "Lcom/github/alexzhirkevich/customqrgenerator/encoder/ElementData;",
        "inputX",
        "",
        "inputY",
        "diff",
        "multiple",
        "inputSize",
        "ballShape",
        "Lcom/github/alexzhirkevich/customqrgenerator/style/QrBallShape;",
        "frameShape",
        "Lcom/github/alexzhirkevich/customqrgenerator/style/QrFrameShape;",
        "encode",
        "Lcom/github/alexzhirkevich/customqrgenerator/encoder/QrRenderResult;",
        "contents",
        "Lcom/github/alexzhirkevich/customqrgenerator/QrData;",
        "charset",
        "Ljava/nio/charset/Charset;",
        "(Lcom/github/alexzhirkevich/customqrgenerator/QrData;Ljava/nio/charset/Charset;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;",
        "renderResult",
        "code",
        "Lcom/google/zxing/qrcode/encoder/QRCode;",
        "(Lcom/google/zxing/qrcode/encoder/QRCode;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;",
        "applyLogoPadding",
        "",
        "Lcom/github/alexzhirkevich/customqrgenerator/encoder/QrCodeMatrix;",
        "error",
        "",
        "applyMinimalLogoPadding",
        "Companion",
        "custom_qr_generator_release"
    }
    k = 0x1
    mv = {
        0x1,
        0x6,
        0x0
    }
    xi = 0x30
.end annotation


# static fields
.field public static final BALL_SIZE:I = 0x3

.field public static final Companion:Lcom/github/alexzhirkevich/customqrgenerator/encoder/QrEncoder$Companion;

.field public static final FRAME_SIZE:I = 0x7


# instance fields
.field private final options:Lcom/github/alexzhirkevich/customqrgenerator/QrOptions;


# direct methods
.method static constructor <clinit>()V
    .locals 2

    new-instance v0, Lcom/github/alexzhirkevich/customqrgenerator/encoder/QrEncoder$Companion;

    const/4 v1, 0x0

    invoke-direct {v0, v1}, Lcom/github/alexzhirkevich/customqrgenerator/encoder/QrEncoder$Companion;-><init>(Lkotlin/jvm/internal/DefaultConstructorMarker;)V

    sput-object v0, Lcom/github/alexzhirkevich/customqrgenerator/encoder/QrEncoder;->Companion:Lcom/github/alexzhirkevich/customqrgenerator/encoder/QrEncoder$Companion;

    return-void
.end method

.method public constructor <init>(Lcom/github/alexzhirkevich/customqrgenerator/QrOptions;)V
    .locals 1
    .param p1, "options"    # Lcom/github/alexzhirkevich/customqrgenerator/QrOptions;

    const-string/jumbo v0, "options"

    invoke-static {p1, v0}, Lkotlin/jvm/internal/Intrinsics;->checkNotNullParameter(Ljava/lang/Object;Ljava/lang/String;)V

    .line 25
    invoke-direct {p0}, Ljava/lang/Object;-><init>()V

    iput-object p1, p0, Lcom/github/alexzhirkevich/customqrgenerator/encoder/QrEncoder;->options:Lcom/github/alexzhirkevich/customqrgenerator/QrOptions;

    return-void
.end method

.method public static final synthetic access$applyLogoPadding(Lcom/github/alexzhirkevich/customqrgenerator/encoder/QrEncoder;Lcom/github/alexzhirkevich/customqrgenerator/encoder/QrCodeMatrix;F)V
    .locals 0
    .param p0, "$this"    # Lcom/github/alexzhirkevich/customqrgenerator/encoder/QrEncoder;
    .param p1, "$receiver"    # Lcom/github/alexzhirkevich/customqrgenerator/encoder/QrCodeMatrix;
    .param p2, "error"    # F

    .line 25
    invoke-direct {p0, p1, p2}, Lcom/github/alexzhirkevich/customqrgenerator/encoder/QrEncoder;->applyLogoPadding(Lcom/github/alexzhirkevich/customqrgenerator/encoder/QrCodeMatrix;F)V

    return-void
.end method

.method public static final synthetic access$applyMinimalLogoPadding(Lcom/github/alexzhirkevich/customqrgenerator/encoder/QrEncoder;Lcom/github/alexzhirkevich/customqrgenerator/encoder/QrCodeMatrix;I)V
    .locals 0
    .param p0, "$this"    # Lcom/github/alexzhirkevich/customqrgenerator/encoder/QrEncoder;
    .param p1, "$receiver"    # Lcom/github/alexzhirkevich/customqrgenerator/encoder/QrCodeMatrix;
    .param p2, "error"    # I

    .line 25
    invoke-direct {p0, p1, p2}, Lcom/github/alexzhirkevich/customqrgenerator/encoder/QrEncoder;->applyMinimalLogoPadding(Lcom/github/alexzhirkevich/customqrgenerator/encoder/QrCodeMatrix;I)V

    return-void
.end method

.method public static final synthetic access$elementDataOrNull(Lcom/github/alexzhirkevich/customqrgenerator/encoder/QrEncoder;IIIIILcom/github/alexzhirkevich/customqrgenerator/style/QrBallShape;Lcom/github/alexzhirkevich/customqrgenerator/style/QrFrameShape;)Lcom/github/alexzhirkevich/customqrgenerator/encoder/ElementData;
    .locals 1
    .param p0, "$this"    # Lcom/github/alexzhirkevich/customqrgenerator/encoder/QrEncoder;
    .param p1, "inputX"    # I
    .param p2, "inputY"    # I
    .param p3, "diff"    # I
    .param p4, "multiple"    # I
    .param p5, "inputSize"    # I
    .param p6, "ballShape"    # Lcom/github/alexzhirkevich/customqrgenerator/style/QrBallShape;
    .param p7, "frameShape"    # Lcom/github/alexzhirkevich/customqrgenerator/style/QrFrameShape;

    .line 25
    invoke-direct/range {p0 .. p7}, Lcom/github/alexzhirkevich/customqrgenerator/encoder/QrEncoder;->elementDataOrNull(IIIIILcom/github/alexzhirkevich/customqrgenerator/style/QrBallShape;Lcom/github/alexzhirkevich/customqrgenerator/style/QrFrameShape;)Lcom/github/alexzhirkevich/customqrgenerator/encoder/ElementData;

    move-result-object v0

    return-object v0
.end method

.method public static final synthetic access$getOptions$p(Lcom/github/alexzhirkevich/customqrgenerator/encoder/QrEncoder;)Lcom/github/alexzhirkevich/customqrgenerator/QrOptions;
    .locals 1
    .param p0, "$this"    # Lcom/github/alexzhirkevich/customqrgenerator/encoder/QrEncoder;

    .line 25
    iget-object v0, p0, Lcom/github/alexzhirkevich/customqrgenerator/encoder/QrEncoder;->options:Lcom/github/alexzhirkevich/customqrgenerator/QrOptions;

    return-object v0
.end method

.method public static final synthetic access$renderResult(Lcom/github/alexzhirkevich/customqrgenerator/encoder/QrEncoder;Lcom/google/zxing/qrcode/encoder/QRCode;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
    .locals 1
    .param p0, "$this"    # Lcom/github/alexzhirkevich/customqrgenerator/encoder/QrEncoder;
    .param p1, "code"    # Lcom/google/zxing/qrcode/encoder/QRCode;
    .param p2, "$completion"    # Lkotlin/coroutines/Continuation;

    .line 25
    invoke-direct {p0, p1, p2}, Lcom/github/alexzhirkevich/customqrgenerator/encoder/QrEncoder;->renderResult(Lcom/google/zxing/qrcode/encoder/QRCode;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;

    move-result-object v0

    return-object v0
.end method

.method private final applyLogoPadding(Lcom/github/alexzhirkevich/customqrgenerator/encoder/QrCodeMatrix;F)V
    .locals 7
    .param p1, "$this$applyLogoPadding"    # Lcom/github/alexzhirkevich/customqrgenerator/encoder/QrCodeMatrix;
    .param p2, "error"    # F

    .line 162
    invoke-virtual {p1}, Lcom/github/alexzhirkevich/customqrgenerator/encoder/QrCodeMatrix;->getSize()I

    move-result v0

    int-to-float v0, v0

    .line 163
    iget-object v1, p0, Lcom/github/alexzhirkevich/customqrgenerator/encoder/QrEncoder;->options:Lcom/github/alexzhirkevich/customqrgenerator/QrOptions;

    invoke-virtual {v1}, Lcom/github/alexzhirkevich/customqrgenerator/QrOptions;->getCodeShape()Lcom/github/alexzhirkevich/customqrgenerator/style/QrShape;

    move-result-object v1

    invoke-interface {v1}, Lcom/github/alexzhirkevich/customqrgenerator/style/QrShape;->getShapeSizeIncrease()F

    move-result v1

    const/high16 v2, 0x3f800000    # 1.0f

    invoke-static {v1, v2}, Lkotlin/ranges/RangesKt;->coerceAtLeast(FF)F

    move-result v1

    .line 162
    div-float/2addr v0, v1

    .line 164
    iget-object v1, p0, Lcom/github/alexzhirkevich/customqrgenerator/encoder/QrEncoder;->options:Lcom/github/alexzhirkevich/customqrgenerator/QrOptions;

    invoke-virtual {v1}, Lcom/github/alexzhirkevich/customqrgenerator/QrOptions;->getLogo()Lcom/github/alexzhirkevich/customqrgenerator/style/QrLogo;

    move-result-object v1

    invoke-virtual {v1}, Lcom/github/alexzhirkevich/customqrgenerator/style/QrLogo;->getSize()F

    move-result v1

    const/4 v3, 0x0

    invoke-static {v1, v3, v2}, Lkotlin/ranges/RangesKt;->coerceIn(FFF)F

    move-result v1

    .line 162
    mul-float/2addr v0, v1

    .line 165
    const/4 v1, 0x1

    int-to-float v1, v1

    iget-object v4, p0, Lcom/github/alexzhirkevich/customqrgenerator/encoder/QrEncoder;->options:Lcom/github/alexzhirkevich/customqrgenerator/QrOptions;

    invoke-virtual {v4}, Lcom/github/alexzhirkevich/customqrgenerator/QrOptions;->getLogo()Lcom/github/alexzhirkevich/customqrgenerator/style/QrLogo;

    move-result-object v4

    invoke-virtual {v4}, Lcom/github/alexzhirkevich/customqrgenerator/style/QrLogo;->getPadding()Lcom/github/alexzhirkevich/customqrgenerator/style/QrLogoPadding;

    move-result-object v4

    invoke-interface {v4}, Lcom/github/alexzhirkevich/customqrgenerator/style/QrLogoPadding;->getValue()F

    move-result v4

    invoke-static {v4, v3, v2}, Lkotlin/ranges/RangesKt;->coerceIn(FFF)F

    move-result v4

    add-float/2addr v1, v4

    .line 162
    mul-float/2addr v0, v1

    .line 165
    const/4 v1, 0x2

    int-to-float v4, v1

    .line 162
    add-float/2addr v0, v4

    .line 167
    .local v0, "logoSize":F
    iget-object v5, p0, Lcom/github/alexzhirkevich/customqrgenerator/encoder/QrEncoder;->options:Lcom/github/alexzhirkevich/customqrgenerator/QrOptions;

    invoke-virtual {v5}, Lcom/github/alexzhirkevich/customqrgenerator/QrOptions;->getLogo()Lcom/github/alexzhirkevich/customqrgenerator/style/QrLogo;

    move-result-object v5

    invoke-virtual {v5}, Lcom/github/alexzhirkevich/customqrgenerator/style/QrLogo;->getShape()Lcom/github/alexzhirkevich/customqrgenerator/style/QrLogoShape;

    move-result-object v5

    instance-of v5, v5, Lcom/github/alexzhirkevich/customqrgenerator/style/QrLogoShape$Default;

    if-nez v5, :cond_0

    .line 168
    invoke-static {v0}, Lkotlin/math/MathKt;->roundToInt(F)I

    move-result v2

    rem-int/2addr v2, v1

    invoke-virtual {p1}, Lcom/github/alexzhirkevich/customqrgenerator/encoder/QrCodeMatrix;->getSize()I

    move-result v5

    rem-int/2addr v5, v1

    if-ne v2, v5, :cond_1

    .line 169
    const/high16 v1, -0x40800000    # -1.0f

    add-float/2addr v0, v1

    goto :goto_0

    .line 171
    :cond_0
    invoke-static {v0}, Lkotlin/math/MathKt;->roundToInt(F)I

    move-result v5

    rem-int/2addr v5, v1

    invoke-virtual {p1}, Lcom/github/alexzhirkevich/customqrgenerator/encoder/QrCodeMatrix;->getSize()I

    move-result v6

    rem-int/2addr v6, v1

    if-eq v5, v6, :cond_1

    .line 172
    add-float/2addr v0, v2

    .line 176
    :cond_1
    :goto_0
    invoke-virtual {p1}, Lcom/github/alexzhirkevich/customqrgenerator/encoder/QrCodeMatrix;->getSize()I

    move-result v1

    int-to-float v1, v1

    invoke-static {v0, v3, v1}, Lkotlin/ranges/RangesKt;->coerceIn(FFF)F

    move-result v0

    .line 179
    invoke-virtual {p1}, Lcom/github/alexzhirkevich/customqrgenerator/encoder/QrCodeMatrix;->getSize()I

    move-result v1

    int-to-float v1, v1

    sub-float/2addr v1, v0

    const/high16 v2, 0x40000000    # 2.0f

    div-float/2addr v1, v2

    .line 181
    .local v1, "logoPos":F
    iget-object v2, p0, Lcom/github/alexzhirkevich/customqrgenerator/encoder/QrEncoder;->options:Lcom/github/alexzhirkevich/customqrgenerator/QrOptions;

    invoke-virtual {v2}, Lcom/github/alexzhirkevich/customqrgenerator/QrOptions;->getLogo()Lcom/github/alexzhirkevich/customqrgenerator/style/QrLogo;

    move-result-object v2

    invoke-virtual {v2}, Lcom/github/alexzhirkevich/customqrgenerator/style/QrLogo;->getShape()Lcom/github/alexzhirkevich/customqrgenerator/style/QrLogoShape;

    move-result-object v2

    instance-of v2, v2, Lcom/github/alexzhirkevich/customqrgenerator/style/QrLogoShape$Default;

    if-nez v2, :cond_2

    .line 182
    div-float v2, p2, v4

    sub-float/2addr v1, v2

    .line 185
    :cond_2
    iget-object v2, p0, Lcom/github/alexzhirkevich/customqrgenerator/encoder/QrEncoder;->options:Lcom/github/alexzhirkevich/customqrgenerator/QrOptions;

    invoke-virtual {v2}, Lcom/github/alexzhirkevich/customqrgenerator/QrOptions;->getLogo()Lcom/github/alexzhirkevich/customqrgenerator/style/QrLogo;

    move-result-object v2

    invoke-virtual {v2}, Lcom/github/alexzhirkevich/customqrgenerator/style/QrLogo;->getPadding()Lcom/github/alexzhirkevich/customqrgenerator/style/QrLogoPadding;

    move-result-object v2

    .line 186
    nop

    .line 187
    invoke-static {v0}, Lkotlin/math/MathKt;->roundToInt(F)I

    move-result v3

    .line 188
    invoke-static {v1}, Lkotlin/math/MathKt;->roundToInt(F)I

    move-result v4

    .line 189
    iget-object v5, p0, Lcom/github/alexzhirkevich/customqrgenerator/encoder/QrEncoder;->options:Lcom/github/alexzhirkevich/customqrgenerator/QrOptions;

    invoke-virtual {v5}, Lcom/github/alexzhirkevich/customqrgenerator/QrOptions;->getLogo()Lcom/github/alexzhirkevich/customqrgenerator/style/QrLogo;

    move-result-object v5

    invoke-virtual {v5}, Lcom/github/alexzhirkevich/customqrgenerator/style/QrLogo;->getShape()Lcom/github/alexzhirkevich/customqrgenerator/style/QrLogoShape;

    move-result-object v5

    .line 185
    invoke-interface {v2, p1, v3, v4, v5}, Lcom/github/alexzhirkevich/customqrgenerator/style/QrLogoPadding;->apply(Lcom/github/alexzhirkevich/customqrgenerator/encoder/QrCodeMatrix;IILcom/github/alexzhirkevich/customqrgenerator/style/QrLogoShape;)V

    .line 190
    return-void
.end method

.method private final applyMinimalLogoPadding(Lcom/github/alexzhirkevich/customqrgenerator/encoder/QrCodeMatrix;I)V
    .locals 8
    .param p1, "$this$applyMinimalLogoPadding"    # Lcom/github/alexzhirkevich/customqrgenerator/encoder/QrCodeMatrix;
    .param p2, "error"    # I

    .line 193
    iget-object v0, p0, Lcom/github/alexzhirkevich/customqrgenerator/encoder/QrEncoder;->options:Lcom/github/alexzhirkevich/customqrgenerator/QrOptions;

    invoke-virtual {v0}, Lcom/github/alexzhirkevich/customqrgenerator/QrOptions;->getLogo()Lcom/github/alexzhirkevich/customqrgenerator/style/QrLogo;

    move-result-object v0

    invoke-virtual {v0}, Lcom/github/alexzhirkevich/customqrgenerator/style/QrLogo;->getPadding()Lcom/github/alexzhirkevich/customqrgenerator/style/QrLogoPadding;

    move-result-object v0

    invoke-interface {v0}, Lcom/github/alexzhirkevich/customqrgenerator/style/QrLogoPadding;->getValue()F

    move-result v0

    const/4 v1, 0x1

    cmpl-float v0, v0, v1

    if-ltz v0, :cond_2

    .line 194
    invoke-virtual {p1}, Lcom/github/alexzhirkevich/customqrgenerator/encoder/QrCodeMatrix;->getSize()I

    move-result v0

    int-to-float v0, v0

    iget-object v1, p0, Lcom/github/alexzhirkevich/customqrgenerator/encoder/QrEncoder;->options:Lcom/github/alexzhirkevich/customqrgenerator/QrOptions;

    invoke-virtual {v1}, Lcom/github/alexzhirkevich/customqrgenerator/QrOptions;->getCodeShape()Lcom/github/alexzhirkevich/customqrgenerator/style/QrShape;

    move-result-object v1

    invoke-interface {v1}, Lcom/github/alexzhirkevich/customqrgenerator/style/QrShape;->getShapeSizeIncrease()F

    move-result v1

    const/high16 v2, 0x3f800000    # 1.0f

    invoke-static {v1, v2}, Lkotlin/ranges/RangesKt;->coerceAtLeast(FF)F

    move-result v1

    div-float/2addr v0, v1

    .line 195
    iget-object v1, p0, Lcom/github/alexzhirkevich/customqrgenerator/encoder/QrEncoder;->options:Lcom/github/alexzhirkevich/customqrgenerator/QrOptions;

    invoke-virtual {v1}, Lcom/github/alexzhirkevich/customqrgenerator/QrOptions;->getLogo()Lcom/github/alexzhirkevich/customqrgenerator/style/QrLogo;

    move-result-object v1

    invoke-virtual {v1}, Lcom/github/alexzhirkevich/customqrgenerator/style/QrLogo;->getSize()F

    move-result v1

    const/4 v3, 0x0

    invoke-static {v1, v3, v2}, Lkotlin/ranges/RangesKt;->coerceIn(FFF)F

    move-result v1

    .line 194
    mul-float/2addr v0, v1

    .line 195
    const/4 v1, 0x1

    int-to-float v1, v1

    iget-object v4, p0, Lcom/github/alexzhirkevich/customqrgenerator/encoder/QrEncoder;->options:Lcom/github/alexzhirkevich/customqrgenerator/QrOptions;

    invoke-virtual {v4}, Lcom/github/alexzhirkevich/customqrgenerator/QrOptions;->getLogo()Lcom/github/alexzhirkevich/customqrgenerator/style/QrLogo;

    move-result-object v4

    invoke-virtual {v4}, Lcom/github/alexzhirkevich/customqrgenerator/style/QrLogo;->getPadding()Lcom/github/alexzhirkevich/customqrgenerator/style/QrLogoPadding;

    move-result-object v4

    invoke-interface {v4}, Lcom/github/alexzhirkevich/customqrgenerator/style/QrLogoPadding;->getValue()F

    move-result v4

    invoke-static {v4, v3, v2}, Lkotlin/ranges/RangesKt;->coerceIn(FFF)F

    move-result v2

    add-float/2addr v1, v2

    .line 194
    mul-float/2addr v0, v1

    .line 196
    invoke-static {v0}, Lkotlin/math/MathKt;->roundToInt(F)I

    move-result v0

    const/4 v1, 0x0

    invoke-virtual {p1}, Lcom/github/alexzhirkevich/customqrgenerator/encoder/QrCodeMatrix;->getSize()I

    move-result v2

    invoke-static {v0, v1, v2}, Lkotlin/ranges/RangesKt;->coerceIn(III)I

    move-result v0

    .line 194
    nop

    .line 198
    .local v0, "logoSize":I
    invoke-virtual {p1}, Lcom/github/alexzhirkevich/customqrgenerator/encoder/QrCodeMatrix;->getSize()I

    move-result v1

    sub-int/2addr v1, v0

    sub-int/2addr v1, p2

    div-int/lit8 v1, v1, 0x2

    .line 200
    .local v1, "logoTopLeft":I
    const/4 v2, 0x0

    .local v2, "i":I
    :goto_0
    if-ge v2, v0, :cond_2

    .line 201
    const/4 v3, 0x0

    .local v3, "j":I
    :goto_1
    if-ge v3, v0, :cond_1

    .line 202
    iget-object v4, p0, Lcom/github/alexzhirkevich/customqrgenerator/encoder/QrEncoder;->options:Lcom/github/alexzhirkevich/customqrgenerator/QrOptions;

    invoke-virtual {v4}, Lcom/github/alexzhirkevich/customqrgenerator/QrOptions;->getLogo()Lcom/github/alexzhirkevich/customqrgenerator/style/QrLogo;

    move-result-object v4

    invoke-virtual {v4}, Lcom/github/alexzhirkevich/customqrgenerator/style/QrLogo;->getShape()Lcom/github/alexzhirkevich/customqrgenerator/style/QrLogoShape;

    move-result-object v4

    sget-object v5, Lcom/github/alexzhirkevich/customqrgenerator/style/Neighbors;->Companion:Lcom/github/alexzhirkevich/customqrgenerator/style/Neighbors$Companion;

    invoke-virtual {v5}, Lcom/github/alexzhirkevich/customqrgenerator/style/Neighbors$Companion;->getEmpty()Lcom/github/alexzhirkevich/customqrgenerator/style/Neighbors;

    move-result-object v5

    invoke-interface {v4, v2, v3, v0, v5}, Lcom/github/alexzhirkevich/customqrgenerator/style/QrLogoShape;->invoke(IIILcom/github/alexzhirkevich/customqrgenerator/style/Neighbors;)Z

    move-result v4

    if-eqz v4, :cond_0

    .line 203
    :try_start_0
    sget-object v4, Lkotlin/Result;->Companion:Lkotlin/Result$Companion;

    const/4 v4, 0x0

    .line 204
    .local v4, "$i$a$-runCatching-QrEncoder$applyMinimalLogoPadding$1":I
    add-int v5, v1, v2

    add-int v6, v1, v3

    sget-object v7, Lcom/github/alexzhirkevich/customqrgenerator/encoder/QrCodeMatrix$PixelType;->Background:Lcom/github/alexzhirkevich/customqrgenerator/encoder/QrCodeMatrix$PixelType;

    invoke-virtual {p1, v5, v6, v7}, Lcom/github/alexzhirkevich/customqrgenerator/encoder/QrCodeMatrix;->set(IILcom/github/alexzhirkevich/customqrgenerator/encoder/QrCodeMatrix$PixelType;)V

    .line 205
    nop

    .end local v4    # "$i$a$-runCatching-QrEncoder$applyMinimalLogoPadding$1":I
    sget-object v4, Lkotlin/Unit;->INSTANCE:Lkotlin/Unit;

    .line 203
    invoke-static {v4}, Lkotlin/Result;->constructor-impl(Ljava/lang/Object;)Ljava/lang/Object;
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    goto :goto_2

    :catchall_0
    move-exception v4

    sget-object v5, Lkotlin/Result;->Companion:Lkotlin/Result$Companion;

    invoke-static {v4}, Lkotlin/ResultKt;->createFailure(Ljava/lang/Throwable;)Ljava/lang/Object;

    move-result-object v4

    invoke-static {v4}, Lkotlin/Result;->constructor-impl(Ljava/lang/Object;)Ljava/lang/Object;

    .line 201
    :cond_0
    :goto_2
    add-int/lit8 v3, v3, 0x1

    goto :goto_1

    .line 200
    .end local v3    # "j":I
    :cond_1
    add-int/lit8 v2, v2, 0x1

    goto :goto_0

    .line 210
    .end local v0    # "logoSize":I
    .end local v1    # "logoTopLeft":I
    .end local v2    # "i":I
    :cond_2
    return-void
.end method

.method private final elementDataOrNull(IIIIILcom/github/alexzhirkevich/customqrgenerator/style/QrBallShape;Lcom/github/alexzhirkevich/customqrgenerator/style/QrFrameShape;)Lcom/github/alexzhirkevich/customqrgenerator/encoder/ElementData;
    .locals 6
    .param p1, "inputX"    # I
    .param p2, "inputY"    # I
    .param p3, "diff"    # I
    .param p4, "multiple"    # I
    .param p5, "inputSize"    # I
    .param p6, "ballShape"    # Lcom/github/alexzhirkevich/customqrgenerator/style/QrBallShape;
    .param p7, "frameShape"    # Lcom/github/alexzhirkevich/customqrgenerator/style/QrFrameShape;

    .line 215
    nop

    .line 218
    sub-int v0, p1, p3

    const/4 v1, 0x5

    const/4 v2, 0x2

    const/4 v3, 0x1

    const/4 v4, 0x0

    if-gt v2, v0, :cond_0

    if-ge v0, v1, :cond_0

    move v0, v3

    goto :goto_0

    :cond_0
    move v0, v4

    :goto_0
    if-eqz v0, :cond_2

    sub-int v0, p2, p3

    if-gt v2, v0, :cond_1

    if-ge v0, v1, :cond_1

    move v0, v3

    goto :goto_1

    :cond_1
    move v0, v4

    :goto_1
    if-eqz v0, :cond_2

    .line 219
    new-instance v0, Lcom/github/alexzhirkevich/customqrgenerator/encoder/ElementData;

    .line 220
    new-instance v1, Lcom/github/alexzhirkevich/customqrgenerator/encoder/QrEncoder$elementDataOrNull$1;

    invoke-direct {v1, p1, p3, p4}, Lcom/github/alexzhirkevich/customqrgenerator/encoder/QrEncoder$elementDataOrNull$1;-><init>(III)V

    check-cast v1, Lkotlin/jvm/functions/Function1;

    .line 221
    new-instance v2, Lcom/github/alexzhirkevich/customqrgenerator/encoder/QrEncoder$elementDataOrNull$2;

    invoke-direct {v2, p2, p3, p4}, Lcom/github/alexzhirkevich/customqrgenerator/encoder/QrEncoder$elementDataOrNull$2;-><init>(III)V

    check-cast v2, Lkotlin/jvm/functions/Function1;

    .line 222
    mul-int/lit8 v3, p4, 0x3

    .line 223
    move-object v4, p6

    check-cast v4, Lcom/github/alexzhirkevich/customqrgenerator/style/QrShapeModifier;

    .line 219
    invoke-direct {v0, v1, v2, v3, v4}, Lcom/github/alexzhirkevich/customqrgenerator/encoder/ElementData;-><init>(Lkotlin/jvm/functions/Function1;Lkotlin/jvm/functions/Function1;ILcom/github/alexzhirkevich/customqrgenerator/style/QrShapeModifier;)V

    goto/16 :goto_c

    .line 227
    :cond_2
    sub-int v0, p1, p3

    const/4 v5, 0x7

    if-ltz v0, :cond_3

    if-ge v0, v5, :cond_3

    move v0, v3

    goto :goto_2

    :cond_3
    move v0, v4

    :goto_2
    if-eqz v0, :cond_5

    sub-int v0, p2, p3

    if-ltz v0, :cond_4

    if-ge v0, v5, :cond_4

    move v0, v3

    goto :goto_3

    :cond_4
    move v0, v4

    :goto_3
    if-eqz v0, :cond_5

    .line 228
    new-instance v0, Lcom/github/alexzhirkevich/customqrgenerator/encoder/ElementData;

    .line 229
    new-instance v1, Lcom/github/alexzhirkevich/customqrgenerator/encoder/QrEncoder$elementDataOrNull$3;

    invoke-direct {v1, p1, p3, p4}, Lcom/github/alexzhirkevich/customqrgenerator/encoder/QrEncoder$elementDataOrNull$3;-><init>(III)V

    check-cast v1, Lkotlin/jvm/functions/Function1;

    .line 230
    new-instance v2, Lcom/github/alexzhirkevich/customqrgenerator/encoder/QrEncoder$elementDataOrNull$4;

    invoke-direct {v2, p2, p3, p4}, Lcom/github/alexzhirkevich/customqrgenerator/encoder/QrEncoder$elementDataOrNull$4;-><init>(III)V

    check-cast v2, Lkotlin/jvm/functions/Function1;

    .line 231
    mul-int/lit8 v3, p4, 0x7

    .line 232
    move-object v4, p7

    check-cast v4, Lcom/github/alexzhirkevich/customqrgenerator/style/QrShapeModifier;

    .line 228
    invoke-direct {v0, v1, v2, v3, v4}, Lcom/github/alexzhirkevich/customqrgenerator/encoder/ElementData;-><init>(Lkotlin/jvm/functions/Function1;Lkotlin/jvm/functions/Function1;ILcom/github/alexzhirkevich/customqrgenerator/style/QrShapeModifier;)V

    goto/16 :goto_c

    .line 236
    :cond_5
    sub-int v0, p5, p1

    sub-int/2addr v0, v3

    sub-int/2addr v0, p3

    if-gt v2, v0, :cond_6

    if-ge v0, v1, :cond_6

    move v0, v3

    goto :goto_4

    :cond_6
    move v0, v4

    :goto_4
    if-eqz v0, :cond_8

    sub-int v0, p2, p3

    if-gt v2, v0, :cond_7

    if-ge v0, v1, :cond_7

    move v0, v3

    goto :goto_5

    :cond_7
    move v0, v4

    :goto_5
    if-eqz v0, :cond_8

    .line 237
    new-instance v0, Lcom/github/alexzhirkevich/customqrgenerator/encoder/ElementData;

    .line 238
    new-instance v1, Lcom/github/alexzhirkevich/customqrgenerator/encoder/QrEncoder$elementDataOrNull$5;

    invoke-direct {v1, p5, p1, p3, p4}, Lcom/github/alexzhirkevich/customqrgenerator/encoder/QrEncoder$elementDataOrNull$5;-><init>(IIII)V

    check-cast v1, Lkotlin/jvm/functions/Function1;

    .line 239
    new-instance v2, Lcom/github/alexzhirkevich/customqrgenerator/encoder/QrEncoder$elementDataOrNull$6;

    invoke-direct {v2, p2, p3, p4}, Lcom/github/alexzhirkevich/customqrgenerator/encoder/QrEncoder$elementDataOrNull$6;-><init>(III)V

    check-cast v2, Lkotlin/jvm/functions/Function1;

    .line 240
    mul-int/lit8 v3, p4, 0x3

    .line 241
    move-object v4, p6

    check-cast v4, Lcom/github/alexzhirkevich/customqrgenerator/style/QrShapeModifier;

    .line 237
    invoke-direct {v0, v1, v2, v3, v4}, Lcom/github/alexzhirkevich/customqrgenerator/encoder/ElementData;-><init>(Lkotlin/jvm/functions/Function1;Lkotlin/jvm/functions/Function1;ILcom/github/alexzhirkevich/customqrgenerator/style/QrShapeModifier;)V

    goto/16 :goto_c

    .line 245
    :cond_8
    sub-int v0, p5, p1

    sub-int/2addr v0, v3

    sub-int/2addr v0, p3

    if-ltz v0, :cond_9

    if-ge v0, v5, :cond_9

    move v0, v3

    goto :goto_6

    :cond_9
    move v0, v4

    :goto_6
    if-eqz v0, :cond_b

    sub-int v0, p2, p3

    if-ltz v0, :cond_a

    if-ge v0, v5, :cond_a

    move v0, v3

    goto :goto_7

    :cond_a
    move v0, v4

    :goto_7
    if-eqz v0, :cond_b

    .line 246
    new-instance v0, Lcom/github/alexzhirkevich/customqrgenerator/encoder/ElementData;

    .line 247
    new-instance v1, Lcom/github/alexzhirkevich/customqrgenerator/encoder/QrEncoder$elementDataOrNull$7;

    invoke-direct {v1, p5, p1, p3, p4}, Lcom/github/alexzhirkevich/customqrgenerator/encoder/QrEncoder$elementDataOrNull$7;-><init>(IIII)V

    check-cast v1, Lkotlin/jvm/functions/Function1;

    .line 248
    new-instance v2, Lcom/github/alexzhirkevich/customqrgenerator/encoder/QrEncoder$elementDataOrNull$8;

    invoke-direct {v2, p2, p3, p4}, Lcom/github/alexzhirkevich/customqrgenerator/encoder/QrEncoder$elementDataOrNull$8;-><init>(III)V

    check-cast v2, Lkotlin/jvm/functions/Function1;

    .line 249
    mul-int/lit8 v3, p4, 0x7

    .line 250
    move-object v4, p7

    check-cast v4, Lcom/github/alexzhirkevich/customqrgenerator/style/QrShapeModifier;

    .line 246
    invoke-direct {v0, v1, v2, v3, v4}, Lcom/github/alexzhirkevich/customqrgenerator/encoder/ElementData;-><init>(Lkotlin/jvm/functions/Function1;Lkotlin/jvm/functions/Function1;ILcom/github/alexzhirkevich/customqrgenerator/style/QrShapeModifier;)V

    goto/16 :goto_c

    .line 254
    :cond_b
    sub-int v0, p1, p3

    if-gt v2, v0, :cond_c

    if-ge v0, v1, :cond_c

    move v0, v3

    goto :goto_8

    :cond_c
    move v0, v4

    :goto_8
    if-eqz v0, :cond_e

    sub-int v0, p5, p2

    sub-int/2addr v0, v3

    sub-int/2addr v0, p3

    if-gt v2, v0, :cond_d

    if-ge v0, v1, :cond_d

    move v0, v3

    goto :goto_9

    :cond_d
    move v0, v4

    :goto_9
    if-eqz v0, :cond_e

    .line 255
    new-instance v0, Lcom/github/alexzhirkevich/customqrgenerator/encoder/ElementData;

    .line 256
    new-instance v1, Lcom/github/alexzhirkevich/customqrgenerator/encoder/QrEncoder$elementDataOrNull$9;

    invoke-direct {v1, p1, p3, p4}, Lcom/github/alexzhirkevich/customqrgenerator/encoder/QrEncoder$elementDataOrNull$9;-><init>(III)V

    check-cast v1, Lkotlin/jvm/functions/Function1;

    .line 257
    new-instance v2, Lcom/github/alexzhirkevich/customqrgenerator/encoder/QrEncoder$elementDataOrNull$10;

    invoke-direct {v2, p5, p2, p3, p4}, Lcom/github/alexzhirkevich/customqrgenerator/encoder/QrEncoder$elementDataOrNull$10;-><init>(IIII)V

    check-cast v2, Lkotlin/jvm/functions/Function1;

    .line 258
    mul-int/lit8 v3, p4, 0x3

    .line 259
    move-object v4, p6

    check-cast v4, Lcom/github/alexzhirkevich/customqrgenerator/style/QrShapeModifier;

    .line 255
    invoke-direct {v0, v1, v2, v3, v4}, Lcom/github/alexzhirkevich/customqrgenerator/encoder/ElementData;-><init>(Lkotlin/jvm/functions/Function1;Lkotlin/jvm/functions/Function1;ILcom/github/alexzhirkevich/customqrgenerator/style/QrShapeModifier;)V

    goto :goto_c

    .line 262
    :cond_e
    sub-int v0, p1, p3

    if-ltz v0, :cond_f

    if-ge v0, v5, :cond_f

    move v0, v3

    goto :goto_a

    :cond_f
    move v0, v4

    :goto_a
    if-eqz v0, :cond_11

    sub-int v0, p5, p2

    sub-int/2addr v0, v3

    sub-int/2addr v0, p3

    if-ltz v0, :cond_10

    if-ge v0, v5, :cond_10

    goto :goto_b

    :cond_10
    move v3, v4

    :goto_b
    if-eqz v3, :cond_11

    .line 263
    new-instance v0, Lcom/github/alexzhirkevich/customqrgenerator/encoder/ElementData;

    .line 264
    new-instance v1, Lcom/github/alexzhirkevich/customqrgenerator/encoder/QrEncoder$elementDataOrNull$11;

    invoke-direct {v1, p1, p3, p4}, Lcom/github/alexzhirkevich/customqrgenerator/encoder/QrEncoder$elementDataOrNull$11;-><init>(III)V

    check-cast v1, Lkotlin/jvm/functions/Function1;

    .line 265
    new-instance v2, Lcom/github/alexzhirkevich/customqrgenerator/encoder/QrEncoder$elementDataOrNull$12;

    invoke-direct {v2, p5, p2, p3, p4}, Lcom/github/alexzhirkevich/customqrgenerator/encoder/QrEncoder$elementDataOrNull$12;-><init>(IIII)V

    check-cast v2, Lkotlin/jvm/functions/Function1;

    .line 266
    mul-int/lit8 v3, p4, 0x7

    .line 267
    move-object v4, p7

    check-cast v4, Lcom/github/alexzhirkevich/customqrgenerator/style/QrShapeModifier;

    .line 263
    invoke-direct {v0, v1, v2, v3, v4}, Lcom/github/alexzhirkevich/customqrgenerator/encoder/ElementData;-><init>(Lkotlin/jvm/functions/Function1;Lkotlin/jvm/functions/Function1;ILcom/github/alexzhirkevich/customqrgenerator/style/QrShapeModifier;)V

    goto :goto_c

    .line 269
    :cond_11
    const/4 v0, 0x0

    .line 270
    :goto_c
    return-object v0
.end method

.method private final renderResult(Lcom/google/zxing/qrcode/encoder/QRCode;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
    .locals 2
    .param p1, "code"    # Lcom/google/zxing/qrcode/encoder/QRCode;
    .param p2, "$completion"    # Lkotlin/coroutines/Continuation;
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "(",
            "Lcom/google/zxing/qrcode/encoder/QRCode;",
            "Lkotlin/coroutines/Continuation<",
            "-",
            "Lcom/github/alexzhirkevich/customqrgenerator/encoder/QrRenderResult;",
            ">;)",
            "Ljava/lang/Object;"
        }
    .end annotation

    .line 46
    new-instance v0, Lcom/github/alexzhirkevich/customqrgenerator/encoder/QrEncoder$renderResult$2;

    const/4 v1, 0x0

    invoke-direct {v0, p1, p0, v1}, Lcom/github/alexzhirkevich/customqrgenerator/encoder/QrEncoder$renderResult$2;-><init>(Lcom/google/zxing/qrcode/encoder/QRCode;Lcom/github/alexzhirkevich/customqrgenerator/encoder/QrEncoder;Lkotlin/coroutines/Continuation;)V

    check-cast v0, Lkotlin/jvm/functions/Function2;

    invoke-static {v0, p2}, Lkotlinx/coroutines/CoroutineScopeKt;->coroutineScope(Lkotlin/jvm/functions/Function2;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;

    move-result-object v0

    .line 159
    return-object v0
.end method


# virtual methods
.method public final encode(Lcom/github/alexzhirkevich/customqrgenerator/QrData;Ljava/nio/charset/Charset;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
    .locals 2
    .param p1, "contents"    # Lcom/github/alexzhirkevich/customqrgenerator/QrData;
    .param p2, "charset"    # Ljava/nio/charset/Charset;
    .param p3, "$completion"    # Lkotlin/coroutines/Continuation;
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "(",
            "Lcom/github/alexzhirkevich/customqrgenerator/QrData;",
            "Ljava/nio/charset/Charset;",
            "Lkotlin/coroutines/Continuation<",
            "-",
            "Lcom/github/alexzhirkevich/customqrgenerator/encoder/QrRenderResult;",
            ">;)",
            "Ljava/lang/Object;"
        }
    .end annotation

    .line 34
    new-instance v0, Lcom/github/alexzhirkevich/customqrgenerator/encoder/QrEncoder$encode$2;

    const/4 v1, 0x0

    invoke-direct {v0, p1, p0, p2, v1}, Lcom/github/alexzhirkevich/customqrgenerator/encoder/QrEncoder$encode$2;-><init>(Lcom/github/alexzhirkevich/customqrgenerator/QrData;Lcom/github/alexzhirkevich/customqrgenerator/encoder/QrEncoder;Ljava/nio/charset/Charset;Lkotlin/coroutines/Continuation;)V

    check-cast v0, Lkotlin/jvm/functions/Function2;

    invoke-static {v0, p3}, Lkotlinx/coroutines/CoroutineScopeKt;->coroutineScope(Lkotlin/jvm/functions/Function2;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;

    move-result-object v0

    .line 44
    return-object v0
.end method
