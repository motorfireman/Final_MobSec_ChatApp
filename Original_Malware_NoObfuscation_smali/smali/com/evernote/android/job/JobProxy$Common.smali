.class public final Lcom/evernote/android/job/JobProxy$Common;
.super Ljava/lang/Object;
.source "JobProxy.java"


# annotations
.annotation system Ldalvik/annotation/EnclosingClass;
    value = Lcom/evernote/android/job/JobProxy;
.end annotation

.annotation system Ldalvik/annotation/InnerClass;
    accessFlags = 0x19
    name = "Common"
.end annotation


# static fields
.field private static final COMMON_MONITOR:Ljava/lang/Object;


# instance fields
.field private final mCat:Lcom/evernote/android/job/util/JobCat;

.field private final mContext:Landroid/content/Context;

.field private final mJobId:I

.field private final mJobManager:Lcom/evernote/android/job/JobManager;


# direct methods
.method static constructor <clinit>()V
    .locals 1

    .line 54
    new-instance v0, Ljava/lang/Object;

    invoke-direct {v0}, Ljava/lang/Object;-><init>()V

    sput-object v0, Lcom/evernote/android/job/JobProxy$Common;->COMMON_MONITOR:Ljava/lang/Object;

    return-void
.end method

.method public constructor <init>(Landroid/app/Service;Lcom/evernote/android/job/util/JobCat;I)V
    .locals 0
    .param p1, "service"    # Landroid/app/Service;
    .param p2, "cat"    # Lcom/evernote/android/job/util/JobCat;
    .param p3, "jobId"    # I

    .line 132
    invoke-direct {p0, p1, p2, p3}, Lcom/evernote/android/job/JobProxy$Common;-><init>(Landroid/content/Context;Lcom/evernote/android/job/util/JobCat;I)V

    .line 133
    return-void
.end method

.method constructor <init>(Landroid/content/Context;Lcom/evernote/android/job/util/JobCat;I)V
    .locals 2
    .param p1, "context"    # Landroid/content/Context;
    .param p2, "cat"    # Lcom/evernote/android/job/util/JobCat;
    .param p3, "jobId"    # I

    .line 135
    invoke-direct {p0}, Ljava/lang/Object;-><init>()V

    .line 136
    iput-object p1, p0, Lcom/evernote/android/job/JobProxy$Common;->mContext:Landroid/content/Context;

    .line 137
    iput p3, p0, Lcom/evernote/android/job/JobProxy$Common;->mJobId:I

    .line 138
    iput-object p2, p0, Lcom/evernote/android/job/JobProxy$Common;->mCat:Lcom/evernote/android/job/util/JobCat;

    .line 142
    :try_start_0
    invoke-static {p1}, Lcom/evernote/android/job/JobManager;->create(Landroid/content/Context;)Lcom/evernote/android/job/JobManager;

    move-result-object v0
    :try_end_0
    .catch Lcom/evernote/android/job/JobManagerCreateException; {:try_start_0 .. :try_end_0} :catch_0

    .line 146
    .local v0, "manager":Lcom/evernote/android/job/JobManager;
    goto :goto_0

    .line 143
    .end local v0    # "manager":Lcom/evernote/android/job/JobManager;
    :catch_0
    move-exception v0

    .line 144
    .local v0, "e":Lcom/evernote/android/job/JobManagerCreateException;
    iget-object v1, p0, Lcom/evernote/android/job/JobProxy$Common;->mCat:Lcom/evernote/android/job/util/JobCat;

    invoke-virtual {v1, v0}, Lcom/evernote/android/job/util/JobCat;->e(Ljava/lang/Throwable;)V

    .line 145
    const/4 v1, 0x0

    move-object v0, v1

    .line 147
    .local v0, "manager":Lcom/evernote/android/job/JobManager;
    :goto_0
    iput-object v0, p0, Lcom/evernote/android/job/JobProxy$Common;->mJobManager:Lcom/evernote/android/job/JobManager;

    .line 148
    return-void
.end method

.method private static checkNoOverflow(JZ)J
    .locals 2
    .param p0, "result"    # J
    .param p2, "condition"    # Z

    .line 76
    if-eqz p2, :cond_0

    move-wide v0, p0

    goto :goto_0

    :cond_0
    const-wide v0, 0x7fffffffffffffffL

    :goto_0
    return-wide v0
.end method

.method private static checkedAdd(JJ)J
    .locals 9
    .param p0, "a"    # J
    .param p2, "b"    # J

    .line 58
    add-long v0, p0, p2

    .line 59
    .local v0, "result":J
    xor-long v2, p0, p2

    const-wide/16 v4, 0x0

    cmp-long v2, v2, v4

    const/4 v3, 0x1

    const/4 v6, 0x0

    if-gez v2, :cond_0

    move v2, v3

    goto :goto_0

    :cond_0
    move v2, v6

    :goto_0
    xor-long v7, p0, v0

    cmp-long v4, v7, v4

    if-ltz v4, :cond_1

    goto :goto_1

    :cond_1
    move v3, v6

    :goto_1
    or-int/2addr v2, v3

    invoke-static {v0, v1, v2}, Lcom/evernote/android/job/JobProxy$Common;->checkNoOverflow(JZ)J

    move-result-wide v2

    return-wide v2
.end method

.method private static checkedMultiply(JJ)J
    .locals 10
    .param p0, "a"    # J
    .param p2, "b"    # J

    .line 64
    invoke-static {p0, p1}, Ljava/lang/Long;->numberOfLeadingZeros(J)I

    move-result v0

    not-long v1, p0

    invoke-static {v1, v2}, Ljava/lang/Long;->numberOfLeadingZeros(J)I

    move-result v1

    add-int/2addr v0, v1

    invoke-static {p2, p3}, Ljava/lang/Long;->numberOfLeadingZeros(J)I

    move-result v1

    add-int/2addr v0, v1

    not-long v1, p2

    invoke-static {v1, v2}, Ljava/lang/Long;->numberOfLeadingZeros(J)I

    move-result v1

    add-int/2addr v0, v1

    .line 65
    .local v0, "leadingZeros":I
    const/16 v1, 0x41

    if-le v0, v1, :cond_0

    .line 66
    mul-long v1, p0, p2

    return-wide v1

    .line 68
    :cond_0
    mul-long v1, p0, p2

    .line 69
    .local v1, "result":J
    const/16 v3, 0x40

    const/4 v4, 0x1

    const/4 v5, 0x0

    if-lt v0, v3, :cond_1

    move v3, v4

    goto :goto_0

    :cond_1
    move v3, v5

    :goto_0
    invoke-static {v1, v2, v3}, Lcom/evernote/android/job/JobProxy$Common;->checkNoOverflow(JZ)J

    move-result-wide v1

    .line 70
    const-wide/16 v6, 0x0

    cmp-long v3, p0, v6

    if-ltz v3, :cond_2

    move v3, v4

    goto :goto_1

    :cond_2
    move v3, v5

    :goto_1
    const-wide/high16 v8, -0x8000000000000000L

    cmp-long v8, p2, v8

    if-eqz v8, :cond_3

    move v8, v4

    goto :goto_2

    :cond_3
    move v8, v5

    :goto_2
    or-int/2addr v3, v8

    invoke-static {v1, v2, v3}, Lcom/evernote/android/job/JobProxy$Common;->checkNoOverflow(JZ)J

    move-result-wide v1

    .line 71
    cmp-long v3, p0, v6

    if-eqz v3, :cond_5

    div-long v6, v1, p0

    cmp-long v3, v6, p2

    if-nez v3, :cond_4

    goto :goto_3

    :cond_4
    move v4, v5

    :cond_5
    :goto_3
    invoke-static {v1, v2, v4}, Lcom/evernote/android/job/JobProxy$Common;->checkNoOverflow(JZ)J

    move-result-wide v1

    .line 72
    return-wide v1
.end method

.method static cleanUpOrphanedJob(Landroid/content/Context;I)V
    .locals 5
    .param p0, "context"    # Landroid/content/Context;
    .param p1, "jobId"    # I

    .line 285
    invoke-static {}, Lcom/evernote/android/job/JobApi;->values()[Lcom/evernote/android/job/JobApi;

    move-result-object v0

    array-length v1, v0

    const/4 v2, 0x0

    :goto_0
    if-ge v2, v1, :cond_1

    aget-object v3, v0, v2

    .line 286
    .local v3, "jobApi":Lcom/evernote/android/job/JobApi;
    invoke-virtual {v3, p0}, Lcom/evernote/android/job/JobApi;->isSupported(Landroid/content/Context;)Z

    move-result v4

    if-eqz v4, :cond_0

    .line 288
    :try_start_0
    invoke-virtual {v3, p0}, Lcom/evernote/android/job/JobApi;->getProxy(Landroid/content/Context;)Lcom/evernote/android/job/JobProxy;

    move-result-object v4

    invoke-interface {v4, p1}, Lcom/evernote/android/job/JobProxy;->cancel(I)V
    :try_end_0
    .catch Ljava/lang/Exception; {:try_start_0 .. :try_end_0} :catch_0

    .line 291
    goto :goto_1

    .line 289
    :catch_0
    move-exception v4

    .line 285
    .end local v3    # "jobApi":Lcom/evernote/android/job/JobApi;
    :cond_0
    :goto_1
    add-int/lit8 v2, v2, 0x1

    goto :goto_0

    .line 294
    :cond_1
    return-void
.end method

.method private cleanUpOrphanedJob(Z)V
    .locals 2
    .param p1, "cleanUp"    # Z

    .line 274
    if-eqz p1, :cond_0

    .line 275
    iget-object v0, p0, Lcom/evernote/android/job/JobProxy$Common;->mContext:Landroid/content/Context;

    iget v1, p0, Lcom/evernote/android/job/JobProxy$Common;->mJobId:I

    invoke-static {v0, v1}, Lcom/evernote/android/job/JobProxy$Common;->cleanUpOrphanedJob(Landroid/content/Context;I)V

    .line 277
    :cond_0
    return-void
.end method

.method public static completeWakefulIntent(Landroid/content/Intent;)Z
    .locals 1
    .param p0, "intent"    # Landroid/content/Intent;

    .line 301
    invoke-static {p0}, Lcom/evernote/android/job/WakeLockUtil;->completeWakefulIntent(Landroid/content/Intent;)Z

    move-result v0

    return v0
.end method

.method public static getAverageDelayMs(Lcom/evernote/android/job/JobRequest;)J
    .locals 6
    .param p0, "request"    # Lcom/evernote/android/job/JobRequest;

    .line 106
    invoke-static {p0}, Lcom/evernote/android/job/JobProxy$Common;->getStartMs(Lcom/evernote/android/job/JobRequest;)J

    move-result-wide v0

    invoke-static {p0}, Lcom/evernote/android/job/JobProxy$Common;->getEndMs(Lcom/evernote/android/job/JobRequest;)J

    move-result-wide v2

    invoke-static {p0}, Lcom/evernote/android/job/JobProxy$Common;->getStartMs(Lcom/evernote/android/job/JobRequest;)J

    move-result-wide v4

    sub-long/2addr v2, v4

    const-wide/16 v4, 0x2

    div-long/2addr v2, v4

    invoke-static {v0, v1, v2, v3}, Lcom/evernote/android/job/JobProxy$Common;->checkedAdd(JJ)J

    move-result-wide v0

    return-wide v0
.end method

.method public static getAverageDelayMsSupportFlex(Lcom/evernote/android/job/JobRequest;)J
    .locals 6
    .param p0, "request"    # Lcom/evernote/android/job/JobRequest;

    .line 118
    invoke-static {p0}, Lcom/evernote/android/job/JobProxy$Common;->getStartMsSupportFlex(Lcom/evernote/android/job/JobRequest;)J

    move-result-wide v0

    invoke-static {p0}, Lcom/evernote/android/job/JobProxy$Common;->getEndMsSupportFlex(Lcom/evernote/android/job/JobRequest;)J

    move-result-wide v2

    invoke-static {p0}, Lcom/evernote/android/job/JobProxy$Common;->getStartMsSupportFlex(Lcom/evernote/android/job/JobRequest;)J

    move-result-wide v4

    sub-long/2addr v2, v4

    const-wide/16 v4, 0x2

    div-long/2addr v2, v4

    invoke-static {v0, v1, v2, v3}, Lcom/evernote/android/job/JobProxy$Common;->checkedAdd(JJ)J

    move-result-wide v0

    return-wide v0
.end method

.method public static getEndMs(Lcom/evernote/android/job/JobRequest;)J
    .locals 2
    .param p0, "request"    # Lcom/evernote/android/job/JobRequest;

    .line 88
    const/4 v0, 0x0

    invoke-static {p0, v0}, Lcom/evernote/android/job/JobProxy$Common;->getEndMs(Lcom/evernote/android/job/JobRequest;Z)J

    move-result-wide v0

    return-wide v0
.end method

.method public static getEndMs(Lcom/evernote/android/job/JobRequest;Z)J
    .locals 4
    .param p0, "request"    # Lcom/evernote/android/job/JobRequest;
    .param p1, "shiftEnd"    # Z

    .line 93
    invoke-virtual {p0}, Lcom/evernote/android/job/JobRequest;->getFailureCount()I

    move-result v0

    if-lez v0, :cond_0

    .line 94
    invoke-virtual {p0}, Lcom/evernote/android/job/JobRequest;->getBackoffOffset()J

    move-result-wide v0

    .local v0, "endMs":J
    goto :goto_0

    .line 96
    .end local v0    # "endMs":J
    :cond_0
    invoke-virtual {p0}, Lcom/evernote/android/job/JobRequest;->getEndMs()J

    move-result-wide v0

    .line 98
    .restart local v0    # "endMs":J
    :goto_0
    if-eqz p1, :cond_1

    invoke-virtual {p0}, Lcom/evernote/android/job/JobRequest;->requirementsEnforced()Z

    move-result v2

    if-eqz v2, :cond_1

    invoke-virtual {p0}, Lcom/evernote/android/job/JobRequest;->hasRequirements()Z

    move-result v2

    if-eqz v2, :cond_1

    .line 100
    const-wide/16 v2, 0x64

    invoke-static {v0, v1, v2, v3}, Lcom/evernote/android/job/JobProxy$Common;->checkedMultiply(JJ)J

    move-result-wide v0

    .line 102
    :cond_1
    return-wide v0
.end method

.method public static getEndMsSupportFlex(Lcom/evernote/android/job/JobRequest;)J
    .locals 2
    .param p0, "request"    # Lcom/evernote/android/job/JobRequest;

    .line 114
    invoke-virtual {p0}, Lcom/evernote/android/job/JobRequest;->getIntervalMs()J

    move-result-wide v0

    return-wide v0
.end method

.method public static getRescheduleCount(Lcom/evernote/android/job/JobRequest;)I
    .locals 1
    .param p0, "request"    # Lcom/evernote/android/job/JobRequest;

    .line 122
    invoke-virtual {p0}, Lcom/evernote/android/job/JobRequest;->getFailureCount()I

    move-result v0

    return v0
.end method

.method public static getStartMs(Lcom/evernote/android/job/JobRequest;)J
    .locals 2
    .param p0, "request"    # Lcom/evernote/android/job/JobRequest;

    .line 80
    invoke-virtual {p0}, Lcom/evernote/android/job/JobRequest;->getFailureCount()I

    move-result v0

    if-lez v0, :cond_0

    .line 81
    invoke-virtual {p0}, Lcom/evernote/android/job/JobRequest;->getBackoffOffset()J

    move-result-wide v0

    return-wide v0

    .line 83
    :cond_0
    invoke-virtual {p0}, Lcom/evernote/android/job/JobRequest;->getStartMs()J

    move-result-wide v0

    return-wide v0
.end method

.method public static getStartMsSupportFlex(Lcom/evernote/android/job/JobRequest;)J
    .locals 4
    .param p0, "request"    # Lcom/evernote/android/job/JobRequest;

    .line 110
    invoke-virtual {p0}, Lcom/evernote/android/job/JobRequest;->getIntervalMs()J

    move-result-wide v0

    invoke-virtual {p0}, Lcom/evernote/android/job/JobRequest;->getFlexMs()J

    move-result-wide v2

    sub-long/2addr v0, v2

    const-wide/16 v2, 0x1

    invoke-static {v2, v3, v0, v1}, Ljava/lang/Math;->max(JJ)J

    move-result-wide v0

    return-wide v0
.end method

.method public static startWakefulService(Landroid/content/Context;Landroid/content/Intent;)Landroid/content/ComponentName;
    .locals 1
    .param p0, "context"    # Landroid/content/Context;
    .param p1, "intent"    # Landroid/content/Intent;

    .line 297
    invoke-static {p0, p1}, Lcom/evernote/android/job/WakeLockUtil;->startWakefulService(Landroid/content/Context;Landroid/content/Intent;)Landroid/content/ComponentName;

    move-result-object v0

    return-object v0
.end method


# virtual methods
.method public executeJobRequest(Lcom/evernote/android/job/JobRequest;Landroid/os/Bundle;)Lcom/evernote/android/job/Job$Result;
    .locals 12
    .param p1, "request"    # Lcom/evernote/android/job/JobRequest;
    .param p2, "transientExtras"    # Landroid/os/Bundle;

    .line 207
    invoke-static {}, Ljava/lang/System;->currentTimeMillis()J

    move-result-wide v0

    invoke-virtual {p1}, Lcom/evernote/android/job/JobRequest;->getScheduledAt()J

    move-result-wide v2

    sub-long/2addr v0, v2

    .line 209
    .local v0, "waited":J
    invoke-virtual {p1}, Lcom/evernote/android/job/JobRequest;->isPeriodic()Z

    move-result v2

    const/4 v3, 0x2

    const/4 v4, 0x1

    const/4 v5, 0x0

    if-eqz v2, :cond_0

    .line 210
    sget-object v2, Ljava/util/Locale;->US:Ljava/util/Locale;

    new-array v6, v3, [Ljava/lang/Object;

    invoke-virtual {p1}, Lcom/evernote/android/job/JobRequest;->getIntervalMs()J

    move-result-wide v7

    invoke-static {v7, v8}, Lcom/evernote/android/job/util/JobUtil;->timeToString(J)Ljava/lang/String;

    move-result-object v7

    aput-object v7, v6, v5

    .line 211
    invoke-virtual {p1}, Lcom/evernote/android/job/JobRequest;->getFlexMs()J

    move-result-wide v7

    invoke-static {v7, v8}, Lcom/evernote/android/job/util/JobUtil;->timeToString(J)Ljava/lang/String;

    move-result-object v7

    aput-object v7, v6, v4

    .line 210
    const-string v7, "interval %s, flex %s"

    invoke-static {v2, v7, v6}, Ljava/lang/String;->format(Ljava/util/Locale;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;

    move-result-object v2

    .local v2, "timeWindow":Ljava/lang/String;
    goto :goto_0

    .line 212
    .end local v2    # "timeWindow":Ljava/lang/String;
    :cond_0
    invoke-virtual {p1}, Lcom/evernote/android/job/JobRequest;->getJobApi()Lcom/evernote/android/job/JobApi;

    move-result-object v2

    invoke-virtual {v2}, Lcom/evernote/android/job/JobApi;->supportsExecutionWindow()Z

    move-result v2

    if-eqz v2, :cond_1

    .line 213
    sget-object v2, Ljava/util/Locale;->US:Ljava/util/Locale;

    new-array v6, v3, [Ljava/lang/Object;

    invoke-static {p1}, Lcom/evernote/android/job/JobProxy$Common;->getStartMs(Lcom/evernote/android/job/JobRequest;)J

    move-result-wide v7

    invoke-static {v7, v8}, Lcom/evernote/android/job/util/JobUtil;->timeToString(J)Ljava/lang/String;

    move-result-object v7

    aput-object v7, v6, v5

    .line 214
    invoke-static {p1}, Lcom/evernote/android/job/JobProxy$Common;->getEndMs(Lcom/evernote/android/job/JobRequest;)J

    move-result-wide v7

    invoke-static {v7, v8}, Lcom/evernote/android/job/util/JobUtil;->timeToString(J)Ljava/lang/String;

    move-result-object v7

    aput-object v7, v6, v4

    .line 213
    const-string/jumbo v7, "start %s, end %s"

    invoke-static {v2, v7, v6}, Ljava/lang/String;->format(Ljava/util/Locale;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;

    move-result-object v2

    .restart local v2    # "timeWindow":Ljava/lang/String;
    goto :goto_0

    .line 216
    .end local v2    # "timeWindow":Ljava/lang/String;
    :cond_1
    new-instance v2, Ljava/lang/StringBuilder;

    invoke-direct {v2}, Ljava/lang/StringBuilder;-><init>()V

    const-string v6, "delay "

    invoke-virtual {v2, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v2

    invoke-static {p1}, Lcom/evernote/android/job/JobProxy$Common;->getAverageDelayMs(Lcom/evernote/android/job/JobRequest;)J

    move-result-wide v6

    invoke-static {v6, v7}, Lcom/evernote/android/job/util/JobUtil;->timeToString(J)Ljava/lang/String;

    move-result-object v6

    invoke-virtual {v2, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v2

    invoke-virtual {v2}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v2

    .line 219
    .restart local v2    # "timeWindow":Ljava/lang/String;
    :goto_0
    invoke-static {}, Landroid/os/Looper;->myLooper()Landroid/os/Looper;

    move-result-object v6

    invoke-static {}, Landroid/os/Looper;->getMainLooper()Landroid/os/Looper;

    move-result-object v7

    if-ne v6, v7, :cond_2

    .line 220
    iget-object v6, p0, Lcom/evernote/android/job/JobProxy$Common;->mCat:Lcom/evernote/android/job/util/JobCat;

    const-string v7, "Running JobRequest on a main thread, this could cause stutter or ANR in your app."

    invoke-virtual {v6, v7}, Lcom/evernote/android/job/util/JobCat;->w(Ljava/lang/String;)V

    .line 223
    :cond_2
    iget-object v6, p0, Lcom/evernote/android/job/JobProxy$Common;->mCat:Lcom/evernote/android/job/util/JobCat;

    const/4 v7, 0x3

    new-array v7, v7, [Ljava/lang/Object;

    aput-object p1, v7, v5

    invoke-static {v0, v1}, Lcom/evernote/android/job/util/JobUtil;->timeToString(J)Ljava/lang/String;

    move-result-object v8

    aput-object v8, v7, v4

    aput-object v2, v7, v3

    const-string v8, "Run job, %s, waited %s, %s"

    invoke-virtual {v6, v8, v7}, Lcom/evernote/android/job/util/JobCat;->d(Ljava/lang/String;[Ljava/lang/Object;)V

    .line 224
    iget-object v6, p0, Lcom/evernote/android/job/JobProxy$Common;->mJobManager:Lcom/evernote/android/job/JobManager;

    invoke-virtual {v6}, Lcom/evernote/android/job/JobManager;->getJobExecutor()Lcom/evernote/android/job/JobExecutor;

    move-result-object v6

    .line 225
    .local v6, "jobExecutor":Lcom/evernote/android/job/JobExecutor;
    const/4 v7, 0x0

    .line 229
    .local v7, "job":Lcom/evernote/android/job/Job;
    :try_start_0
    iget-object v8, p0, Lcom/evernote/android/job/JobProxy$Common;->mJobManager:Lcom/evernote/android/job/JobManager;

    invoke-virtual {v8}, Lcom/evernote/android/job/JobManager;->getJobCreatorHolder()Lcom/evernote/android/job/JobCreatorHolder;

    move-result-object v8

    invoke-virtual {p1}, Lcom/evernote/android/job/JobRequest;->getTag()Ljava/lang/String;

    move-result-object v9

    invoke-virtual {v8, v9}, Lcom/evernote/android/job/JobCreatorHolder;->createJob(Ljava/lang/String;)Lcom/evernote/android/job/Job;

    move-result-object v8

    move-object v7, v8

    .line 231
    invoke-virtual {p1}, Lcom/evernote/android/job/JobRequest;->isPeriodic()Z

    move-result v8

    if-nez v8, :cond_3

    .line 232
    invoke-virtual {p1, v4}, Lcom/evernote/android/job/JobRequest;->setStarted(Z)V

    .line 235
    :cond_3
    if-nez p2, :cond_4

    .line 236
    sget-object v8, Landroid/os/Bundle;->EMPTY:Landroid/os/Bundle;

    move-object p2, v8

    .line 239
    :cond_4
    iget-object v8, p0, Lcom/evernote/android/job/JobProxy$Common;->mContext:Landroid/content/Context;

    invoke-virtual {v6, v8, p1, v7, p2}, Lcom/evernote/android/job/JobExecutor;->execute(Landroid/content/Context;Lcom/evernote/android/job/JobRequest;Lcom/evernote/android/job/Job;Landroid/os/Bundle;)Ljava/util/concurrent/Future;

    move-result-object v8

    .line 240
    .local v8, "future":Ljava/util/concurrent/Future;, "Ljava/util/concurrent/Future<Lcom/evernote/android/job/Job$Result;>;"
    if-nez v8, :cond_8

    .line 241
    sget-object v3, Lcom/evernote/android/job/Job$Result;->FAILURE:Lcom/evernote/android/job/Job$Result;
    :try_end_0
    .catch Ljava/lang/InterruptedException; {:try_start_0 .. :try_end_0} :catch_1
    .catch Ljava/util/concurrent/ExecutionException; {:try_start_0 .. :try_end_0} :catch_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    .line 260
    if-nez v7, :cond_5

    .line 261
    iget-object v4, p0, Lcom/evernote/android/job/JobProxy$Common;->mJobManager:Lcom/evernote/android/job/JobManager;

    invoke-virtual {v4}, Lcom/evernote/android/job/JobManager;->getJobStorage()Lcom/evernote/android/job/JobStorage;

    move-result-object v4

    invoke-virtual {v4, p1}, Lcom/evernote/android/job/JobStorage;->remove(Lcom/evernote/android/job/JobRequest;)V

    goto :goto_1

    .line 263
    :cond_5
    invoke-virtual {p1}, Lcom/evernote/android/job/JobRequest;->isPeriodic()Z

    move-result v4

    if-nez v4, :cond_6

    .line 264
    iget-object v4, p0, Lcom/evernote/android/job/JobProxy$Common;->mJobManager:Lcom/evernote/android/job/JobManager;

    invoke-virtual {v4}, Lcom/evernote/android/job/JobManager;->getJobStorage()Lcom/evernote/android/job/JobStorage;

    move-result-object v4

    invoke-virtual {v4, p1}, Lcom/evernote/android/job/JobStorage;->remove(Lcom/evernote/android/job/JobRequest;)V

    goto :goto_1

    .line 266
    :cond_6
    invoke-virtual {p1}, Lcom/evernote/android/job/JobRequest;->isFlexSupport()Z

    move-result v4

    if-eqz v4, :cond_7

    invoke-virtual {v7}, Lcom/evernote/android/job/Job;->isDeleted()Z

    move-result v4

    if-nez v4, :cond_7

    .line 267
    iget-object v4, p0, Lcom/evernote/android/job/JobProxy$Common;->mJobManager:Lcom/evernote/android/job/JobManager;

    invoke-virtual {v4}, Lcom/evernote/android/job/JobManager;->getJobStorage()Lcom/evernote/android/job/JobStorage;

    move-result-object v4

    invoke-virtual {v4, p1}, Lcom/evernote/android/job/JobStorage;->remove(Lcom/evernote/android/job/JobRequest;)V

    .line 268
    invoke-virtual {p1, v5, v5}, Lcom/evernote/android/job/JobRequest;->reschedule(ZZ)Lcom/evernote/android/job/JobRequest;

    .line 241
    :cond_7
    :goto_1
    return-object v3

    .line 245
    :cond_8
    :try_start_1
    invoke-interface {v8}, Ljava/util/concurrent/Future;->get()Ljava/lang/Object;

    move-result-object v9

    check-cast v9, Lcom/evernote/android/job/Job$Result;

    .line 246
    .local v9, "result":Lcom/evernote/android/job/Job$Result;
    iget-object v10, p0, Lcom/evernote/android/job/JobProxy$Common;->mCat:Lcom/evernote/android/job/util/JobCat;

    const-string v11, "Finished job, %s %s"

    new-array v3, v3, [Ljava/lang/Object;

    aput-object p1, v3, v5

    aput-object v9, v3, v4

    invoke-virtual {v10, v11, v3}, Lcom/evernote/android/job/util/JobCat;->d(Ljava/lang/String;[Ljava/lang/Object;)V
    :try_end_1
    .catch Ljava/lang/InterruptedException; {:try_start_1 .. :try_end_1} :catch_1
    .catch Ljava/util/concurrent/ExecutionException; {:try_start_1 .. :try_end_1} :catch_0
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    .line 247
    nop

    .line 260
    if-nez v7, :cond_9

    .line 261
    iget-object v3, p0, Lcom/evernote/android/job/JobProxy$Common;->mJobManager:Lcom/evernote/android/job/JobManager;

    invoke-virtual {v3}, Lcom/evernote/android/job/JobManager;->getJobStorage()Lcom/evernote/android/job/JobStorage;

    move-result-object v3

    invoke-virtual {v3, p1}, Lcom/evernote/android/job/JobStorage;->remove(Lcom/evernote/android/job/JobRequest;)V

    goto :goto_2

    .line 263
    :cond_9
    invoke-virtual {p1}, Lcom/evernote/android/job/JobRequest;->isPeriodic()Z

    move-result v3

    if-nez v3, :cond_a

    .line 264
    iget-object v3, p0, Lcom/evernote/android/job/JobProxy$Common;->mJobManager:Lcom/evernote/android/job/JobManager;

    invoke-virtual {v3}, Lcom/evernote/android/job/JobManager;->getJobStorage()Lcom/evernote/android/job/JobStorage;

    move-result-object v3

    invoke-virtual {v3, p1}, Lcom/evernote/android/job/JobStorage;->remove(Lcom/evernote/android/job/JobRequest;)V

    goto :goto_2

    .line 266
    :cond_a
    invoke-virtual {p1}, Lcom/evernote/android/job/JobRequest;->isFlexSupport()Z

    move-result v3

    if-eqz v3, :cond_b

    invoke-virtual {v7}, Lcom/evernote/android/job/Job;->isDeleted()Z

    move-result v3

    if-nez v3, :cond_b

    .line 267
    iget-object v3, p0, Lcom/evernote/android/job/JobProxy$Common;->mJobManager:Lcom/evernote/android/job/JobManager;

    invoke-virtual {v3}, Lcom/evernote/android/job/JobManager;->getJobStorage()Lcom/evernote/android/job/JobStorage;

    move-result-object v3

    invoke-virtual {v3, p1}, Lcom/evernote/android/job/JobStorage;->remove(Lcom/evernote/android/job/JobRequest;)V

    .line 268
    invoke-virtual {p1, v5, v5}, Lcom/evernote/android/job/JobRequest;->reschedule(ZZ)Lcom/evernote/android/job/JobRequest;

    .line 247
    :cond_b
    :goto_2
    return-object v9

    .line 260
    .end local v8    # "future":Ljava/util/concurrent/Future;, "Ljava/util/concurrent/Future<Lcom/evernote/android/job/Job$Result;>;"
    .end local v9    # "result":Lcom/evernote/android/job/Job$Result;
    :catchall_0
    move-exception v3

    goto :goto_5

    .line 249
    :catch_0
    move-exception v3

    goto :goto_3

    :catch_1
    move-exception v3

    .line 250
    .local v3, "e":Ljava/lang/Exception;
    :goto_3
    :try_start_2
    iget-object v8, p0, Lcom/evernote/android/job/JobProxy$Common;->mCat:Lcom/evernote/android/job/util/JobCat;

    invoke-virtual {v8, v3}, Lcom/evernote/android/job/util/JobCat;->e(Ljava/lang/Throwable;)V

    .line 252
    if-eqz v7, :cond_c

    .line 253
    invoke-virtual {v7}, Lcom/evernote/android/job/Job;->cancel()V

    .line 254
    iget-object v8, p0, Lcom/evernote/android/job/JobProxy$Common;->mCat:Lcom/evernote/android/job/util/JobCat;

    const-string v9, "Canceled %s"

    new-array v4, v4, [Ljava/lang/Object;

    aput-object p1, v4, v5

    invoke-virtual {v8, v9, v4}, Lcom/evernote/android/job/util/JobCat;->e(Ljava/lang/String;[Ljava/lang/Object;)V

    .line 257
    :cond_c
    sget-object v4, Lcom/evernote/android/job/Job$Result;->FAILURE:Lcom/evernote/android/job/Job$Result;
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_0

    .line 260
    if-nez v7, :cond_d

    .line 261
    iget-object v5, p0, Lcom/evernote/android/job/JobProxy$Common;->mJobManager:Lcom/evernote/android/job/JobManager;

    invoke-virtual {v5}, Lcom/evernote/android/job/JobManager;->getJobStorage()Lcom/evernote/android/job/JobStorage;

    move-result-object v5

    invoke-virtual {v5, p1}, Lcom/evernote/android/job/JobStorage;->remove(Lcom/evernote/android/job/JobRequest;)V

    goto :goto_4

    .line 263
    :cond_d
    invoke-virtual {p1}, Lcom/evernote/android/job/JobRequest;->isPeriodic()Z

    move-result v8

    if-nez v8, :cond_e

    .line 264
    iget-object v5, p0, Lcom/evernote/android/job/JobProxy$Common;->mJobManager:Lcom/evernote/android/job/JobManager;

    invoke-virtual {v5}, Lcom/evernote/android/job/JobManager;->getJobStorage()Lcom/evernote/android/job/JobStorage;

    move-result-object v5

    invoke-virtual {v5, p1}, Lcom/evernote/android/job/JobStorage;->remove(Lcom/evernote/android/job/JobRequest;)V

    goto :goto_4

    .line 266
    :cond_e
    invoke-virtual {p1}, Lcom/evernote/android/job/JobRequest;->isFlexSupport()Z

    move-result v8

    if-eqz v8, :cond_f

    invoke-virtual {v7}, Lcom/evernote/android/job/Job;->isDeleted()Z

    move-result v8

    if-nez v8, :cond_f

    .line 267
    iget-object v8, p0, Lcom/evernote/android/job/JobProxy$Common;->mJobManager:Lcom/evernote/android/job/JobManager;

    invoke-virtual {v8}, Lcom/evernote/android/job/JobManager;->getJobStorage()Lcom/evernote/android/job/JobStorage;

    move-result-object v8

    invoke-virtual {v8, p1}, Lcom/evernote/android/job/JobStorage;->remove(Lcom/evernote/android/job/JobRequest;)V

    .line 268
    invoke-virtual {p1, v5, v5}, Lcom/evernote/android/job/JobRequest;->reschedule(ZZ)Lcom/evernote/android/job/JobRequest;

    .line 257
    :cond_f
    :goto_4
    return-object v4

    .line 260
    .end local v3    # "e":Ljava/lang/Exception;
    :goto_5
    if-eqz v7, :cond_11

    .line 263
    invoke-virtual {p1}, Lcom/evernote/android/job/JobRequest;->isPeriodic()Z

    move-result v4

    if-eqz v4, :cond_10

    .line 266
    invoke-virtual {p1}, Lcom/evernote/android/job/JobRequest;->isFlexSupport()Z

    move-result v4

    if-eqz v4, :cond_12

    invoke-virtual {v7}, Lcom/evernote/android/job/Job;->isDeleted()Z

    move-result v4

    if-nez v4, :cond_12

    .line 267
    iget-object v4, p0, Lcom/evernote/android/job/JobProxy$Common;->mJobManager:Lcom/evernote/android/job/JobManager;

    invoke-virtual {v4}, Lcom/evernote/android/job/JobManager;->getJobStorage()Lcom/evernote/android/job/JobStorage;

    move-result-object v4

    invoke-virtual {v4, p1}, Lcom/evernote/android/job/JobStorage;->remove(Lcom/evernote/android/job/JobRequest;)V

    .line 268
    invoke-virtual {p1, v5, v5}, Lcom/evernote/android/job/JobRequest;->reschedule(ZZ)Lcom/evernote/android/job/JobRequest;

    goto :goto_6

    .line 264
    :cond_10
    iget-object v4, p0, Lcom/evernote/android/job/JobProxy$Common;->mJobManager:Lcom/evernote/android/job/JobManager;

    invoke-virtual {v4}, Lcom/evernote/android/job/JobManager;->getJobStorage()Lcom/evernote/android/job/JobStorage;

    move-result-object v4

    invoke-virtual {v4, p1}, Lcom/evernote/android/job/JobStorage;->remove(Lcom/evernote/android/job/JobRequest;)V

    goto :goto_6

    .line 261
    :cond_11
    iget-object v4, p0, Lcom/evernote/android/job/JobProxy$Common;->mJobManager:Lcom/evernote/android/job/JobManager;

    invoke-virtual {v4}, Lcom/evernote/android/job/JobManager;->getJobStorage()Lcom/evernote/android/job/JobStorage;

    move-result-object v4

    invoke-virtual {v4, p1}, Lcom/evernote/android/job/JobStorage;->remove(Lcom/evernote/android/job/JobRequest;)V

    .line 268
    :cond_12
    :goto_6
    throw v3
.end method

.method public getPendingRequest(ZZ)Lcom/evernote/android/job/JobRequest;
    .locals 12
    .param p1, "cleanUpOrphanedJob"    # Z
    .param p2, "markStarting"    # Z

    .line 151
    sget-object v0, Lcom/evernote/android/job/JobProxy$Common;->COMMON_MONITOR:Ljava/lang/Object;

    monitor-enter v0

    .line 152
    :try_start_0
    iget-object v1, p0, Lcom/evernote/android/job/JobProxy$Common;->mJobManager:Lcom/evernote/android/job/JobManager;

    const/4 v2, 0x0

    if-nez v1, :cond_0

    .line 153
    monitor-exit v0

    return-object v2

    .line 157
    :cond_0
    iget v3, p0, Lcom/evernote/android/job/JobProxy$Common;->mJobId:I

    const/4 v4, 0x1

    invoke-virtual {v1, v3, v4}, Lcom/evernote/android/job/JobManager;->getJobRequest(IZ)Lcom/evernote/android/job/JobRequest;

    move-result-object v1

    .line 158
    .local v1, "request":Lcom/evernote/android/job/JobRequest;
    iget-object v3, p0, Lcom/evernote/android/job/JobProxy$Common;->mJobManager:Lcom/evernote/android/job/JobManager;

    iget v5, p0, Lcom/evernote/android/job/JobProxy$Common;->mJobId:I

    invoke-virtual {v3, v5}, Lcom/evernote/android/job/JobManager;->getJob(I)Lcom/evernote/android/job/Job;

    move-result-object v3

    .line 159
    .local v3, "job":Lcom/evernote/android/job/Job;
    const/4 v5, 0x0

    if-eqz v1, :cond_1

    invoke-virtual {v1}, Lcom/evernote/android/job/JobRequest;->isPeriodic()Z

    move-result v6

    if-eqz v6, :cond_1

    move v6, v4

    goto :goto_0

    :cond_1
    move v6, v5

    .line 161
    .local v6, "periodic":Z
    :goto_0
    const/4 v7, 0x2

    if-eqz v3, :cond_2

    invoke-virtual {v3}, Lcom/evernote/android/job/Job;->isFinished()Z

    move-result v8

    if-nez v8, :cond_2

    .line 163
    iget-object v8, p0, Lcom/evernote/android/job/JobProxy$Common;->mCat:Lcom/evernote/android/job/util/JobCat;

    const-string v9, "Job %d is already running, %s"

    new-array v7, v7, [Ljava/lang/Object;

    iget v10, p0, Lcom/evernote/android/job/JobProxy$Common;->mJobId:I

    invoke-static {v10}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;

    move-result-object v10

    aput-object v10, v7, v5

    aput-object v1, v7, v4

    invoke-virtual {v8, v9, v7}, Lcom/evernote/android/job/util/JobCat;->d(Ljava/lang/String;[Ljava/lang/Object;)V

    .line 165
    monitor-exit v0

    return-object v2

    .line 167
    :cond_2
    if-eqz v3, :cond_3

    if-nez v6, :cond_3

    .line 168
    iget-object v8, p0, Lcom/evernote/android/job/JobProxy$Common;->mCat:Lcom/evernote/android/job/util/JobCat;

    const-string v9, "Job %d already finished, %s"

    new-array v7, v7, [Ljava/lang/Object;

    iget v10, p0, Lcom/evernote/android/job/JobProxy$Common;->mJobId:I

    invoke-static {v10}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;

    move-result-object v10

    aput-object v10, v7, v5

    aput-object v1, v7, v4

    invoke-virtual {v8, v9, v7}, Lcom/evernote/android/job/util/JobCat;->d(Ljava/lang/String;[Ljava/lang/Object;)V

    .line 169
    invoke-direct {p0, p1}, Lcom/evernote/android/job/JobProxy$Common;->cleanUpOrphanedJob(Z)V

    .line 170
    monitor-exit v0

    return-object v2

    .line 172
    :cond_3
    if-eqz v3, :cond_4

    invoke-static {}, Ljava/lang/System;->currentTimeMillis()J

    move-result-wide v8

    invoke-virtual {v3}, Lcom/evernote/android/job/Job;->getFinishedTimeStamp()J

    move-result-wide v10

    sub-long/2addr v8, v10

    const-wide/16 v10, 0x7d0

    cmp-long v8, v8, v10

    if-gez v8, :cond_4

    .line 174
    iget-object v8, p0, Lcom/evernote/android/job/JobProxy$Common;->mCat:Lcom/evernote/android/job/util/JobCat;

    const-string v9, "Job %d is periodic and just finished, %s"

    new-array v7, v7, [Ljava/lang/Object;

    iget v10, p0, Lcom/evernote/android/job/JobProxy$Common;->mJobId:I

    invoke-static {v10}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;

    move-result-object v10

    aput-object v10, v7, v5

    aput-object v1, v7, v4

    invoke-virtual {v8, v9, v7}, Lcom/evernote/android/job/util/JobCat;->d(Ljava/lang/String;[Ljava/lang/Object;)V

    .line 176
    monitor-exit v0

    return-object v2

    .line 178
    :cond_4
    if-eqz v1, :cond_5

    invoke-virtual {v1}, Lcom/evernote/android/job/JobRequest;->isStarted()Z

    move-result v8

    if-eqz v8, :cond_5

    .line 179
    iget-object v8, p0, Lcom/evernote/android/job/JobProxy$Common;->mCat:Lcom/evernote/android/job/util/JobCat;

    const-string v9, "Request %d already started, %s"

    new-array v7, v7, [Ljava/lang/Object;

    iget v10, p0, Lcom/evernote/android/job/JobProxy$Common;->mJobId:I

    invoke-static {v10}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;

    move-result-object v10

    aput-object v10, v7, v5

    aput-object v1, v7, v4

    invoke-virtual {v8, v9, v7}, Lcom/evernote/android/job/util/JobCat;->d(Ljava/lang/String;[Ljava/lang/Object;)V

    .line 181
    monitor-exit v0

    return-object v2

    .line 183
    :cond_5
    if-eqz v1, :cond_6

    iget-object v8, p0, Lcom/evernote/android/job/JobProxy$Common;->mJobManager:Lcom/evernote/android/job/JobManager;

    invoke-virtual {v8}, Lcom/evernote/android/job/JobManager;->getJobExecutor()Lcom/evernote/android/job/JobExecutor;

    move-result-object v8

    invoke-virtual {v8, v1}, Lcom/evernote/android/job/JobExecutor;->isRequestStarting(Lcom/evernote/android/job/JobRequest;)Z

    move-result v8

    if-eqz v8, :cond_6

    .line 184
    iget-object v8, p0, Lcom/evernote/android/job/JobProxy$Common;->mCat:Lcom/evernote/android/job/util/JobCat;

    const-string v9, "Request %d is in the queue to start, %s"

    new-array v7, v7, [Ljava/lang/Object;

    iget v10, p0, Lcom/evernote/android/job/JobProxy$Common;->mJobId:I

    invoke-static {v10}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;

    move-result-object v10

    aput-object v10, v7, v5

    aput-object v1, v7, v4

    invoke-virtual {v8, v9, v7}, Lcom/evernote/android/job/util/JobCat;->d(Ljava/lang/String;[Ljava/lang/Object;)V

    .line 185
    monitor-exit v0

    return-object v2

    .line 187
    :cond_6
    if-nez v1, :cond_7

    .line 188
    iget-object v7, p0, Lcom/evernote/android/job/JobProxy$Common;->mCat:Lcom/evernote/android/job/util/JobCat;

    const-string v8, "Request for ID %d was null"

    new-array v4, v4, [Ljava/lang/Object;

    iget v9, p0, Lcom/evernote/android/job/JobProxy$Common;->mJobId:I

    invoke-static {v9}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;

    move-result-object v9

    aput-object v9, v4, v5

    invoke-virtual {v7, v8, v4}, Lcom/evernote/android/job/util/JobCat;->d(Ljava/lang/String;[Ljava/lang/Object;)V

    .line 189
    invoke-direct {p0, p1}, Lcom/evernote/android/job/JobProxy$Common;->cleanUpOrphanedJob(Z)V

    .line 190
    monitor-exit v0

    return-object v2

    .line 193
    :cond_7
    if-eqz p2, :cond_8

    .line 194
    invoke-virtual {p0, v1}, Lcom/evernote/android/job/JobProxy$Common;->markStarting(Lcom/evernote/android/job/JobRequest;)V

    .line 197
    :cond_8
    monitor-exit v0

    return-object v1

    .line 198
    .end local v1    # "request":Lcom/evernote/android/job/JobRequest;
    .end local v3    # "job":Lcom/evernote/android/job/Job;
    .end local v6    # "periodic":Z
    :catchall_0
    move-exception v1

    monitor-exit v0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    throw v1
.end method

.method public markStarting(Lcom/evernote/android/job/JobRequest;)V
    .locals 1
    .param p1, "request"    # Lcom/evernote/android/job/JobRequest;

    .line 202
    iget-object v0, p0, Lcom/evernote/android/job/JobProxy$Common;->mJobManager:Lcom/evernote/android/job/JobManager;

    invoke-virtual {v0}, Lcom/evernote/android/job/JobManager;->getJobExecutor()Lcom/evernote/android/job/JobExecutor;

    move-result-object v0

    invoke-virtual {v0, p1}, Lcom/evernote/android/job/JobExecutor;->markJobRequestStarting(Lcom/evernote/android/job/JobRequest;)V

    .line 203
    return-void
.end method
