.class Lcom/evernote/android/job/JobStorage;
.super Ljava/lang/Object;
.source "JobStorage.java"


# annotations
.annotation system Ldalvik/annotation/MemberClasses;
    value = {
        Lcom/evernote/android/job/JobStorage$JobOpenHelper;,
        Lcom/evernote/android/job/JobStorage$JobCacheId;
    }
.end annotation


# static fields
.field private static final CACHE_SIZE:I = 0x1e

.field private static final CAT:Lcom/evernote/android/job/util/JobCat;

.field public static final COLUMN_BACKOFF_MS:Ljava/lang/String; = "backoffMs"

.field public static final COLUMN_BACKOFF_POLICY:Ljava/lang/String; = "backoffPolicy"

.field public static final COLUMN_END_MS:Ljava/lang/String; = "endMs"

.field public static final COLUMN_EXACT:Ljava/lang/String; = "exact"

.field public static final COLUMN_EXTRAS:Ljava/lang/String; = "extras"

.field public static final COLUMN_FLEX_MS:Ljava/lang/String; = "flexMs"

.field public static final COLUMN_FLEX_SUPPORT:Ljava/lang/String; = "flexSupport"

.field public static final COLUMN_ID:Ljava/lang/String; = "_id"

.field public static final COLUMN_INTERVAL_MS:Ljava/lang/String; = "intervalMs"

.field public static final COLUMN_LAST_RUN:Ljava/lang/String; = "lastRun"

.field public static final COLUMN_NETWORK_TYPE:Ljava/lang/String; = "networkType"

.field public static final COLUMN_NUM_FAILURES:Ljava/lang/String; = "numFailures"

.field private static final COLUMN_PERSISTED:Ljava/lang/String; = "persisted"
    .annotation runtime Ljava/lang/Deprecated;
    .end annotation
.end field

.field public static final COLUMN_REQUIREMENTS_ENFORCED:Ljava/lang/String; = "requirementsEnforced"

.field public static final COLUMN_REQUIRES_BATTERY_NOT_LOW:Ljava/lang/String; = "requiresBatteryNotLow"

.field public static final COLUMN_REQUIRES_CHARGING:Ljava/lang/String; = "requiresCharging"

.field public static final COLUMN_REQUIRES_DEVICE_IDLE:Ljava/lang/String; = "requiresDeviceIdle"

.field public static final COLUMN_REQUIRES_STORAGE_NOT_LOW:Ljava/lang/String; = "requiresStorageNotLow"

.field public static final COLUMN_SCHEDULED_AT:Ljava/lang/String; = "scheduledAt"

.field public static final COLUMN_STARTED:Ljava/lang/String; = "started"

.field public static final COLUMN_START_MS:Ljava/lang/String; = "startMs"

.field public static final COLUMN_TAG:Ljava/lang/String; = "tag"

.field public static final COLUMN_TRANSIENT:Ljava/lang/String; = "transient"

.field private static final COLUMN_TRANSIENT_OLD:Ljava/lang/String; = "isTransient"
    .annotation runtime Ljava/lang/Deprecated;
    .end annotation
.end field

.field public static final DATABASE_NAME:Ljava/lang/String; = "evernote_jobs.db"

.field public static final DATABASE_VERSION:I = 0x6

.field private static final FAILED_DELETE_IDS:Ljava/lang/String; = "FAILED_DELETE_IDS"

.field public static final JOB_ID_COUNTER:Ljava/lang/String; = "JOB_ID_COUNTER_v2"

.field public static final JOB_TABLE_NAME:Ljava/lang/String; = "jobs"

.field public static final PREF_FILE_NAME:Ljava/lang/String; = "evernote_jobs"

.field private static final WHERE_NOT_STARTED:Ljava/lang/String; = "ifnull(started, 0)<=0"


# instance fields
.field private final mCacheId:Lcom/evernote/android/job/JobStorage$JobCacheId;

.field private final mDbHelper:Lcom/evernote/android/job/JobStorage$JobOpenHelper;

.field private final mFailedDeleteIds:Ljava/util/Set;
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "Ljava/util/Set<",
            "Ljava/lang/String;",
            ">;"
        }
    .end annotation
.end field

.field private mInjectedDatabase:Landroid/database/sqlite/SQLiteDatabase;

.field private mJobCounter:Ljava/util/concurrent/atomic/AtomicInteger;

.field private final mLock:Ljava/util/concurrent/locks/ReadWriteLock;

.field private final mPreferences:Landroid/content/SharedPreferences;


# direct methods
.method static constructor <clinit>()V
    .locals 2

    .line 49
    new-instance v0, Lcom/evernote/android/job/util/JobCat;

    const-string v1, "JobStorage"

    invoke-direct {v0, v1}, Lcom/evernote/android/job/util/JobCat;-><init>(Ljava/lang/String;)V

    sput-object v0, Lcom/evernote/android/job/JobStorage;->CAT:Lcom/evernote/android/job/util/JobCat;

    return-void
.end method

.method public constructor <init>(Landroid/content/Context;)V
    .locals 1
    .param p1, "context"    # Landroid/content/Context;

    .line 109
    const-string v0, "evernote_jobs.db"

    invoke-direct {p0, p1, v0}, Lcom/evernote/android/job/JobStorage;-><init>(Landroid/content/Context;Ljava/lang/String;)V

    .line 110
    return-void
.end method

.method public constructor <init>(Landroid/content/Context;Ljava/lang/String;)V
    .locals 3
    .param p1, "context"    # Landroid/content/Context;
    .param p2, "databasePath"    # Ljava/lang/String;

    .line 112
    invoke-direct {p0}, Ljava/lang/Object;-><init>()V

    .line 113
    const-string v0, "evernote_jobs"

    const/4 v1, 0x0

    invoke-virtual {p1, v0, v1}, Landroid/content/Context;->getSharedPreferences(Ljava/lang/String;I)Landroid/content/SharedPreferences;

    move-result-object v0

    iput-object v0, p0, Lcom/evernote/android/job/JobStorage;->mPreferences:Landroid/content/SharedPreferences;

    .line 114
    new-instance v1, Ljava/util/concurrent/locks/ReentrantReadWriteLock;

    invoke-direct {v1}, Ljava/util/concurrent/locks/ReentrantReadWriteLock;-><init>()V

    iput-object v1, p0, Lcom/evernote/android/job/JobStorage;->mLock:Ljava/util/concurrent/locks/ReadWriteLock;

    .line 116
    new-instance v1, Lcom/evernote/android/job/JobStorage$JobCacheId;

    invoke-direct {v1, p0}, Lcom/evernote/android/job/JobStorage$JobCacheId;-><init>(Lcom/evernote/android/job/JobStorage;)V

    iput-object v1, p0, Lcom/evernote/android/job/JobStorage;->mCacheId:Lcom/evernote/android/job/JobStorage$JobCacheId;

    .line 118
    new-instance v1, Lcom/evernote/android/job/JobStorage$JobOpenHelper;

    const/4 v2, 0x0

    invoke-direct {v1, p1, p2, v2}, Lcom/evernote/android/job/JobStorage$JobOpenHelper;-><init>(Landroid/content/Context;Ljava/lang/String;Lcom/evernote/android/job/JobStorage$1;)V

    iput-object v1, p0, Lcom/evernote/android/job/JobStorage;->mDbHelper:Lcom/evernote/android/job/JobStorage$JobOpenHelper;

    .line 120
    new-instance v1, Ljava/util/HashSet;

    invoke-direct {v1}, Ljava/util/HashSet;-><init>()V

    const-string v2, "FAILED_DELETE_IDS"

    invoke-interface {v0, v2, v1}, Landroid/content/SharedPreferences;->getStringSet(Ljava/lang/String;Ljava/util/Set;)Ljava/util/Set;

    move-result-object v0

    iput-object v0, p0, Lcom/evernote/android/job/JobStorage;->mFailedDeleteIds:Ljava/util/Set;

    .line 121
    invoke-interface {v0}, Ljava/util/Set;->isEmpty()Z

    move-result v0

    if-nez v0, :cond_0

    .line 122
    invoke-direct {p0}, Lcom/evernote/android/job/JobStorage;->tryToCleanupFinishedJobs()V

    .line 124
    :cond_0
    return-void
.end method

.method static synthetic access$100(Lcom/evernote/android/job/JobStorage;)Ljava/util/Set;
    .locals 1
    .param p0, "x0"    # Lcom/evernote/android/job/JobStorage;

    .line 47
    iget-object v0, p0, Lcom/evernote/android/job/JobStorage;->mFailedDeleteIds:Ljava/util/Set;

    return-object v0
.end method

.method static synthetic access$200(Lcom/evernote/android/job/JobStorage;Lcom/evernote/android/job/JobRequest;I)Z
    .locals 1
    .param p0, "x0"    # Lcom/evernote/android/job/JobStorage;
    .param p1, "x1"    # Lcom/evernote/android/job/JobRequest;
    .param p2, "x2"    # I

    .line 47
    invoke-direct {p0, p1, p2}, Lcom/evernote/android/job/JobStorage;->remove(Lcom/evernote/android/job/JobRequest;I)Z

    move-result v0

    return v0
.end method

.method static synthetic access$300()Lcom/evernote/android/job/util/JobCat;
    .locals 1

    .line 47
    sget-object v0, Lcom/evernote/android/job/JobStorage;->CAT:Lcom/evernote/android/job/util/JobCat;

    return-object v0
.end method

.method static synthetic access$400(Lcom/evernote/android/job/JobStorage;IZ)Lcom/evernote/android/job/JobRequest;
    .locals 1
    .param p0, "x0"    # Lcom/evernote/android/job/JobStorage;
    .param p1, "x1"    # I
    .param p2, "x2"    # Z

    .line 47
    invoke-direct {p0, p1, p2}, Lcom/evernote/android/job/JobStorage;->load(IZ)Lcom/evernote/android/job/JobRequest;

    move-result-object v0

    return-object v0
.end method

.method private addFailedDeleteId(I)V
    .locals 4
    .param p1, "id"    # I

    .line 368
    iget-object v0, p0, Lcom/evernote/android/job/JobStorage;->mFailedDeleteIds:Ljava/util/Set;

    monitor-enter v0

    .line 369
    :try_start_0
    iget-object v1, p0, Lcom/evernote/android/job/JobStorage;->mFailedDeleteIds:Ljava/util/Set;

    invoke-static {p1}, Ljava/lang/String;->valueOf(I)Ljava/lang/String;

    move-result-object v2

    invoke-interface {v1, v2}, Ljava/util/Set;->add(Ljava/lang/Object;)Z

    .line 370
    iget-object v1, p0, Lcom/evernote/android/job/JobStorage;->mPreferences:Landroid/content/SharedPreferences;

    invoke-interface {v1}, Landroid/content/SharedPreferences;->edit()Landroid/content/SharedPreferences$Editor;

    move-result-object v1

    const-string v2, "FAILED_DELETE_IDS"

    iget-object v3, p0, Lcom/evernote/android/job/JobStorage;->mFailedDeleteIds:Ljava/util/Set;

    invoke-interface {v1, v2, v3}, Landroid/content/SharedPreferences$Editor;->putStringSet(Ljava/lang/String;Ljava/util/Set;)Landroid/content/SharedPreferences$Editor;

    move-result-object v1

    invoke-interface {v1}, Landroid/content/SharedPreferences$Editor;->apply()V

    .line 371
    monitor-exit v0

    .line 372
    return-void

    .line 371
    :catchall_0
    move-exception v1

    monitor-exit v0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    throw v1
.end method

.method private static closeCursor(Landroid/database/Cursor;)V
    .locals 1
    .param p0, "cursor"    # Landroid/database/Cursor;

    .line 596
    if-eqz p0, :cond_0

    .line 598
    :try_start_0
    invoke-interface {p0}, Landroid/database/Cursor;->close()V
    :try_end_0
    .catch Ljava/lang/Exception; {:try_start_0 .. :try_end_0} :catch_0

    .line 600
    goto :goto_0

    .line 599
    :catch_0
    move-exception v0

    .line 602
    :cond_0
    :goto_0
    return-void
.end method

.method private static closeDatabase(Landroid/database/sqlite/SQLiteDatabase;)V
    .locals 1
    .param p0, "database"    # Landroid/database/sqlite/SQLiteDatabase;

    .line 606
    if-eqz p0, :cond_0

    invoke-static {}, Lcom/evernote/android/job/JobConfig;->isCloseDatabase()Z

    move-result v0

    if-eqz v0, :cond_0

    .line 608
    :try_start_0
    invoke-virtual {p0}, Landroid/database/sqlite/SQLiteDatabase;->close()V
    :try_end_0
    .catch Ljava/lang/Exception; {:try_start_0 .. :try_end_0} :catch_0

    .line 610
    goto :goto_0

    .line 609
    :catch_0
    move-exception v0

    .line 612
    :cond_0
    :goto_0
    return-void
.end method

.method private didFailToDelete(I)Z
    .locals 3
    .param p1, "id"    # I

    .line 375
    iget-object v0, p0, Lcom/evernote/android/job/JobStorage;->mFailedDeleteIds:Ljava/util/Set;

    monitor-enter v0

    .line 376
    :try_start_0
    iget-object v1, p0, Lcom/evernote/android/job/JobStorage;->mFailedDeleteIds:Ljava/util/Set;

    invoke-interface {v1}, Ljava/util/Set;->isEmpty()Z

    move-result v1

    if-nez v1, :cond_0

    iget-object v1, p0, Lcom/evernote/android/job/JobStorage;->mFailedDeleteIds:Ljava/util/Set;

    invoke-static {p1}, Ljava/lang/String;->valueOf(I)Ljava/lang/String;

    move-result-object v2

    invoke-interface {v1, v2}, Ljava/util/Set;->contains(Ljava/lang/Object;)Z

    move-result v1

    if-eqz v1, :cond_0

    const/4 v1, 0x1

    goto :goto_0

    :cond_0
    const/4 v1, 0x0

    :goto_0
    monitor-exit v0

    return v1

    .line 377
    :catchall_0
    move-exception v1

    monitor-exit v0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    throw v1
.end method

.method private load(IZ)Lcom/evernote/android/job/JobRequest;
    .locals 14
    .param p1, "id"    # I
    .param p2, "includeStarted"    # Z

    .line 285
    invoke-direct {p0, p1}, Lcom/evernote/android/job/JobStorage;->didFailToDelete(I)Z

    move-result v0

    const/4 v1, 0x0

    if-eqz v0, :cond_0

    .line 286
    return-object v1

    .line 289
    :cond_0
    const/4 v2, 0x0

    .line 290
    .local v2, "database":Landroid/database/sqlite/SQLiteDatabase;
    const/4 v3, 0x0

    .line 292
    .local v3, "cursor":Landroid/database/Cursor;
    const/4 v4, 0x0

    const/4 v5, 0x1

    :try_start_0
    const-string v0, "_id=?"

    .line 293
    .local v0, "where":Ljava/lang/String;
    if-nez p2, :cond_1

    .line 294
    new-instance v6, Ljava/lang/StringBuilder;

    invoke-direct {v6}, Ljava/lang/StringBuilder;-><init>()V

    invoke-virtual {v6, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v6

    const-string v7, " AND started<=0"

    invoke-virtual {v6, v7}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v6

    invoke-virtual {v6}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v6

    move-object v0, v6

    .line 297
    :cond_1
    invoke-virtual {p0}, Lcom/evernote/android/job/JobStorage;->getDatabase()Landroid/database/sqlite/SQLiteDatabase;

    move-result-object v6
    :try_end_0
    .catch Ljava/lang/Exception; {:try_start_0 .. :try_end_0} :catch_1
    .catchall {:try_start_0 .. :try_end_0} :catchall_1

    .line 298
    .end local v2    # "database":Landroid/database/sqlite/SQLiteDatabase;
    .local v6, "database":Landroid/database/sqlite/SQLiteDatabase;
    :try_start_1
    const-string v7, "jobs"

    const/4 v8, 0x0

    new-array v10, v5, [Ljava/lang/String;

    invoke-static {p1}, Ljava/lang/String;->valueOf(I)Ljava/lang/String;

    move-result-object v2

    aput-object v2, v10, v4

    const/4 v11, 0x0

    const/4 v12, 0x0

    const/4 v13, 0x0

    move-object v9, v0

    invoke-virtual/range {v6 .. v13}, Landroid/database/sqlite/SQLiteDatabase;->query(Ljava/lang/String;[Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Landroid/database/Cursor;

    move-result-object v2

    move-object v3, v2

    .line 299
    if-eqz v3, :cond_2

    invoke-interface {v3}, Landroid/database/Cursor;->moveToFirst()Z

    move-result v2

    if-eqz v2, :cond_2

    .line 300
    invoke-static {v3}, Lcom/evernote/android/job/JobRequest;->fromCursor(Landroid/database/Cursor;)Lcom/evernote/android/job/JobRequest;

    move-result-object v1
    :try_end_1
    .catch Ljava/lang/Exception; {:try_start_1 .. :try_end_1} :catch_0
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    .line 307
    invoke-static {v3}, Lcom/evernote/android/job/JobStorage;->closeCursor(Landroid/database/Cursor;)V

    .line 308
    invoke-static {v6}, Lcom/evernote/android/job/JobStorage;->closeDatabase(Landroid/database/sqlite/SQLiteDatabase;)V

    .line 300
    return-object v1

    .line 307
    .end local v0    # "where":Ljava/lang/String;
    :cond_2
    invoke-static {v3}, Lcom/evernote/android/job/JobStorage;->closeCursor(Landroid/database/Cursor;)V

    .line 308
    invoke-static {v6}, Lcom/evernote/android/job/JobStorage;->closeDatabase(Landroid/database/sqlite/SQLiteDatabase;)V

    .line 309
    move-object v2, v6

    goto :goto_1

    .line 307
    :catchall_0
    move-exception v0

    move-object v2, v6

    goto :goto_2

    .line 303
    :catch_0
    move-exception v0

    move-object v2, v6

    goto :goto_0

    .line 307
    .end local v6    # "database":Landroid/database/sqlite/SQLiteDatabase;
    .restart local v2    # "database":Landroid/database/sqlite/SQLiteDatabase;
    :catchall_1
    move-exception v0

    goto :goto_2

    .line 303
    :catch_1
    move-exception v0

    .line 304
    .local v0, "e":Ljava/lang/Exception;
    :goto_0
    :try_start_2
    sget-object v6, Lcom/evernote/android/job/JobStorage;->CAT:Lcom/evernote/android/job/util/JobCat;

    const-string v7, "could not load id %d"

    new-array v5, v5, [Ljava/lang/Object;

    invoke-static {p1}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;

    move-result-object v8

    aput-object v8, v5, v4

    invoke-virtual {v6, v0, v7, v5}, Lcom/evernote/android/job/util/JobCat;->e(Ljava/lang/Throwable;Ljava/lang/String;[Ljava/lang/Object;)V
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_1

    .line 307
    .end local v0    # "e":Ljava/lang/Exception;
    invoke-static {v3}, Lcom/evernote/android/job/JobStorage;->closeCursor(Landroid/database/Cursor;)V

    .line 308
    invoke-static {v2}, Lcom/evernote/android/job/JobStorage;->closeDatabase(Landroid/database/sqlite/SQLiteDatabase;)V

    .line 309
    nop

    .line 311
    :goto_1
    return-object v1

    .line 307
    :goto_2
    invoke-static {v3}, Lcom/evernote/android/job/JobStorage;->closeCursor(Landroid/database/Cursor;)V

    .line 308
    invoke-static {v2}, Lcom/evernote/android/job/JobStorage;->closeDatabase(Landroid/database/sqlite/SQLiteDatabase;)V

    throw v0
.end method

.method private remove(Lcom/evernote/android/job/JobRequest;I)Z
    .locals 8
    .param p1, "request"    # Lcom/evernote/android/job/JobRequest;
    .param p2, "jobId"    # I

    .line 224
    const/4 v0, 0x0

    .line 225
    .local v0, "database":Landroid/database/sqlite/SQLiteDatabase;
    iget-object v1, p0, Lcom/evernote/android/job/JobStorage;->mLock:Ljava/util/concurrent/locks/ReadWriteLock;

    invoke-interface {v1}, Ljava/util/concurrent/locks/ReadWriteLock;->writeLock()Ljava/util/concurrent/locks/Lock;

    move-result-object v1

    invoke-interface {v1}, Ljava/util/concurrent/locks/Lock;->lock()V

    .line 228
    const/4 v1, 0x1

    const/4 v2, 0x0

    :try_start_0
    iget-object v3, p0, Lcom/evernote/android/job/JobStorage;->mCacheId:Lcom/evernote/android/job/JobStorage$JobCacheId;

    invoke-static {p2}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;

    move-result-object v4

    invoke-virtual {v3, v4}, Lcom/evernote/android/job/JobStorage$JobCacheId;->remove(Ljava/lang/Object;)Ljava/lang/Object;

    .line 230
    invoke-virtual {p0}, Lcom/evernote/android/job/JobStorage;->getDatabase()Landroid/database/sqlite/SQLiteDatabase;

    move-result-object v3

    move-object v0, v3

    .line 231
    const-string v3, "jobs"

    const-string v4, "_id=?"

    new-array v5, v1, [Ljava/lang/String;

    invoke-static {p2}, Ljava/lang/String;->valueOf(I)Ljava/lang/String;

    move-result-object v6

    aput-object v6, v5, v2

    invoke-virtual {v0, v3, v4, v5}, Landroid/database/sqlite/SQLiteDatabase;->delete(Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;)I
    :try_end_0
    .catch Ljava/lang/Exception; {:try_start_0 .. :try_end_0} :catch_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    .line 232
    nop

    .line 238
    invoke-static {v0}, Lcom/evernote/android/job/JobStorage;->closeDatabase(Landroid/database/sqlite/SQLiteDatabase;)V

    .line 239
    iget-object v2, p0, Lcom/evernote/android/job/JobStorage;->mLock:Ljava/util/concurrent/locks/ReadWriteLock;

    invoke-interface {v2}, Ljava/util/concurrent/locks/ReadWriteLock;->writeLock()Ljava/util/concurrent/locks/Lock;

    move-result-object v2

    invoke-interface {v2}, Ljava/util/concurrent/locks/Lock;->unlock()V

    .line 232
    return v1

    .line 238
    :catchall_0
    move-exception v1

    goto :goto_0

    .line 233
    :catch_0
    move-exception v3

    .line 234
    .local v3, "e":Ljava/lang/Exception;
    :try_start_1
    sget-object v4, Lcom/evernote/android/job/JobStorage;->CAT:Lcom/evernote/android/job/util/JobCat;

    const-string v5, "could not delete %d %s"

    const/4 v6, 0x2

    new-array v6, v6, [Ljava/lang/Object;

    invoke-static {p2}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;

    move-result-object v7

    aput-object v7, v6, v2

    aput-object p1, v6, v1

    invoke-virtual {v4, v3, v5, v6}, Lcom/evernote/android/job/util/JobCat;->e(Ljava/lang/Throwable;Ljava/lang/String;[Ljava/lang/Object;)V

    .line 235
    invoke-direct {p0, p2}, Lcom/evernote/android/job/JobStorage;->addFailedDeleteId(I)V
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    .line 236
    nop

    .line 238
    invoke-static {v0}, Lcom/evernote/android/job/JobStorage;->closeDatabase(Landroid/database/sqlite/SQLiteDatabase;)V

    .line 239
    iget-object v1, p0, Lcom/evernote/android/job/JobStorage;->mLock:Ljava/util/concurrent/locks/ReadWriteLock;

    invoke-interface {v1}, Ljava/util/concurrent/locks/ReadWriteLock;->writeLock()Ljava/util/concurrent/locks/Lock;

    move-result-object v1

    invoke-interface {v1}, Ljava/util/concurrent/locks/Lock;->unlock()V

    .line 236
    return v2

    .line 238
    .end local v3    # "e":Ljava/lang/Exception;
    :goto_0
    invoke-static {v0}, Lcom/evernote/android/job/JobStorage;->closeDatabase(Landroid/database/sqlite/SQLiteDatabase;)V

    .line 239
    iget-object v2, p0, Lcom/evernote/android/job/JobStorage;->mLock:Ljava/util/concurrent/locks/ReadWriteLock;

    invoke-interface {v2}, Ljava/util/concurrent/locks/ReadWriteLock;->writeLock()Ljava/util/concurrent/locks/Lock;

    move-result-object v2

    invoke-interface {v2}, Ljava/util/concurrent/locks/Lock;->unlock()V

    throw v1
.end method

.method private store(Lcom/evernote/android/job/JobRequest;)V
    .locals 6
    .param p1, "request"    # Lcom/evernote/android/job/JobRequest;

    .line 266
    invoke-virtual {p1}, Lcom/evernote/android/job/JobRequest;->toContentValues()Landroid/content/ContentValues;

    move-result-object v0

    .line 267
    .local v0, "contentValues":Landroid/content/ContentValues;
    const/4 v1, 0x0

    .line 269
    .local v1, "database":Landroid/database/sqlite/SQLiteDatabase;
    :try_start_0
    invoke-virtual {p0}, Lcom/evernote/android/job/JobStorage;->getDatabase()Landroid/database/sqlite/SQLiteDatabase;

    move-result-object v2

    move-object v1, v2

    .line 275
    const-string v2, "jobs"

    const/4 v3, 0x0

    const/4 v4, 0x5

    invoke-virtual {v1, v2, v3, v0, v4}, Landroid/database/sqlite/SQLiteDatabase;->insertWithOnConflict(Ljava/lang/String;Ljava/lang/String;Landroid/content/ContentValues;I)J

    move-result-wide v2
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    const-wide/16 v4, 0x0

    cmp-long v2, v2, v4

    if-ltz v2, :cond_0

    .line 279
    invoke-static {v1}, Lcom/evernote/android/job/JobStorage;->closeDatabase(Landroid/database/sqlite/SQLiteDatabase;)V

    .line 280
    nop

    .line 281
    return-void

    .line 276
    :cond_0
    :try_start_1
    new-instance v2, Landroid/database/SQLException;

    const-string v3, "Couldn\'t insert job request into database"

    invoke-direct {v2, v3}, Landroid/database/SQLException;-><init>(Ljava/lang/String;)V

    .end local v0    # "contentValues":Landroid/content/ContentValues;
    .end local v1    # "database":Landroid/database/sqlite/SQLiteDatabase;
    .end local p1    # "request":Lcom/evernote/android/job/JobRequest;
    throw v2
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    .line 279
    .restart local v0    # "contentValues":Landroid/content/ContentValues;
    .restart local v1    # "database":Landroid/database/sqlite/SQLiteDatabase;
    .restart local p1    # "request":Lcom/evernote/android/job/JobRequest;
    :catchall_0
    move-exception v2

    invoke-static {v1}, Lcom/evernote/android/job/JobStorage;->closeDatabase(Landroid/database/sqlite/SQLiteDatabase;)V

    throw v2
.end method

.method private tryToCleanupFinishedJobs()V
    .locals 2

    .line 381
    new-instance v0, Lcom/evernote/android/job/JobStorage$1;

    const-string v1, "CleanupFinishedJobsThread"

    invoke-direct {v0, p0, v1}, Lcom/evernote/android/job/JobStorage$1;-><init>(Lcom/evernote/android/job/JobStorage;Ljava/lang/String;)V

    .line 423
    invoke-virtual {v0}, Lcom/evernote/android/job/JobStorage$1;->start()V

    .line 424
    return-void
.end method

.method private updateRequestInCache(Lcom/evernote/android/job/JobRequest;)V
    .locals 2
    .param p1, "request"    # Lcom/evernote/android/job/JobRequest;

    .line 157
    iget-object v0, p0, Lcom/evernote/android/job/JobStorage;->mCacheId:Lcom/evernote/android/job/JobStorage$JobCacheId;

    invoke-virtual {p1}, Lcom/evernote/android/job/JobRequest;->getJobId()I

    move-result v1

    invoke-static {v1}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;

    move-result-object v1

    invoke-virtual {v0, v1, p1}, Lcom/evernote/android/job/JobStorage$JobCacheId;->put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;

    .line 158
    return-void
.end method


# virtual methods
.method public get(I)Lcom/evernote/android/job/JobRequest;
    .locals 2
    .param p1, "id"    # I

    .line 161
    iget-object v0, p0, Lcom/evernote/android/job/JobStorage;->mLock:Ljava/util/concurrent/locks/ReadWriteLock;

    invoke-interface {v0}, Ljava/util/concurrent/locks/ReadWriteLock;->readLock()Ljava/util/concurrent/locks/Lock;

    move-result-object v0

    invoke-interface {v0}, Ljava/util/concurrent/locks/Lock;->lock()V

    .line 164
    :try_start_0
    iget-object v0, p0, Lcom/evernote/android/job/JobStorage;->mCacheId:Lcom/evernote/android/job/JobStorage$JobCacheId;

    invoke-static {p1}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;

    move-result-object v1

    invoke-virtual {v0, v1}, Lcom/evernote/android/job/JobStorage$JobCacheId;->get(Ljava/lang/Object;)Ljava/lang/Object;

    move-result-object v0

    check-cast v0, Lcom/evernote/android/job/JobRequest;
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    .line 166
    iget-object v1, p0, Lcom/evernote/android/job/JobStorage;->mLock:Ljava/util/concurrent/locks/ReadWriteLock;

    invoke-interface {v1}, Ljava/util/concurrent/locks/ReadWriteLock;->readLock()Ljava/util/concurrent/locks/Lock;

    move-result-object v1

    invoke-interface {v1}, Ljava/util/concurrent/locks/Lock;->unlock()V

    .line 164
    return-object v0

    .line 166
    :catchall_0
    move-exception v0

    iget-object v1, p0, Lcom/evernote/android/job/JobStorage;->mLock:Ljava/util/concurrent/locks/ReadWriteLock;

    invoke-interface {v1}, Ljava/util/concurrent/locks/ReadWriteLock;->readLock()Ljava/util/concurrent/locks/Lock;

    move-result-object v1

    invoke-interface {v1}, Ljava/util/concurrent/locks/Lock;->unlock()V

    throw v0
.end method

.method public getAllJobRequests(Ljava/lang/String;Z)Ljava/util/Set;
    .locals 15
    .param p1, "tag"    # Ljava/lang/String;
    .param p2, "includeStarted"    # Z
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "(",
            "Ljava/lang/String;",
            "Z)",
            "Ljava/util/Set<",
            "Lcom/evernote/android/job/JobRequest;",
            ">;"
        }
    .end annotation

    .line 171
    move-object v1, p0

    new-instance v0, Ljava/util/HashSet;

    invoke-direct {v0}, Ljava/util/HashSet;-><init>()V

    move-object v2, v0

    .line 173
    .local v2, "result":Ljava/util/Set;, "Ljava/util/Set<Lcom/evernote/android/job/JobRequest;>;"
    const/4 v3, 0x0

    .line 174
    .local v3, "database":Landroid/database/sqlite/SQLiteDatabase;
    const/4 v4, 0x0

    .line 176
    .local v4, "cursor":Landroid/database/Cursor;
    iget-object v0, v1, Lcom/evernote/android/job/JobStorage;->mLock:Ljava/util/concurrent/locks/ReadWriteLock;

    invoke-interface {v0}, Ljava/util/concurrent/locks/ReadWriteLock;->readLock()Ljava/util/concurrent/locks/Lock;

    move-result-object v0

    invoke-interface {v0}, Ljava/util/concurrent/locks/Lock;->lock()V

    .line 181
    const/4 v5, 0x0

    :try_start_0
    invoke-static/range {p1 .. p1}, Landroid/text/TextUtils;->isEmpty(Ljava/lang/CharSequence;)Z

    move-result v0

    if-eqz v0, :cond_1

    .line 182
    if-eqz p2, :cond_0

    const/4 v0, 0x0

    goto :goto_0

    :cond_0
    const-string v0, "ifnull(started, 0)<=0"

    .line 183
    .local v0, "where":Ljava/lang/String;
    :goto_0
    const/4 v6, 0x0

    .local v6, "args":[Ljava/lang/String;
    goto :goto_2

    .line 185
    .end local v0    # "where":Ljava/lang/String;
    .end local v6    # "args":[Ljava/lang/String;
    :cond_1
    if-eqz p2, :cond_2

    const-string v0, ""

    goto :goto_1

    :cond_2
    const-string v0, "ifnull(started, 0)<=0 AND "

    .line 186
    .restart local v0    # "where":Ljava/lang/String;
    :goto_1
    new-instance v6, Ljava/lang/StringBuilder;

    invoke-direct {v6}, Ljava/lang/StringBuilder;-><init>()V

    invoke-virtual {v6, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v6

    const-string/jumbo v7, "tag=?"

    invoke-virtual {v6, v7}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v6

    invoke-virtual {v6}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v6

    move-object v0, v6

    .line 187
    const/4 v6, 0x1

    new-array v6, v6, [Ljava/lang/String;

    aput-object p1, v6, v5

    .line 190
    .restart local v6    # "args":[Ljava/lang/String;
    :goto_2
    invoke-virtual {p0}, Lcom/evernote/android/job/JobStorage;->getDatabase()Landroid/database/sqlite/SQLiteDatabase;

    move-result-object v7
    :try_end_0
    .catch Ljava/lang/Exception; {:try_start_0 .. :try_end_0} :catch_1
    .catchall {:try_start_0 .. :try_end_0} :catchall_1

    .line 191
    .end local v3    # "database":Landroid/database/sqlite/SQLiteDatabase;
    .local v7, "database":Landroid/database/sqlite/SQLiteDatabase;
    :try_start_1
    const-string v8, "jobs"

    const/4 v9, 0x0

    const/4 v12, 0x0

    const/4 v13, 0x0

    const/4 v14, 0x0

    move-object v10, v0

    move-object v11, v6

    invoke-virtual/range {v7 .. v14}, Landroid/database/sqlite/SQLiteDatabase;->query(Ljava/lang/String;[Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Landroid/database/Cursor;

    move-result-object v3

    move-object v4, v3

    .line 194
    new-instance v3, Ljava/util/HashMap;

    iget-object v8, v1, Lcom/evernote/android/job/JobStorage;->mCacheId:Lcom/evernote/android/job/JobStorage$JobCacheId;

    invoke-virtual {v8}, Lcom/evernote/android/job/JobStorage$JobCacheId;->snapshot()Ljava/util/Map;

    move-result-object v8

    invoke-direct {v3, v8}, Ljava/util/HashMap;-><init>(Ljava/util/Map;)V

    .line 196
    .local v3, "cachedRequests":Ljava/util/HashMap;, "Ljava/util/HashMap<Ljava/lang/Integer;Lcom/evernote/android/job/JobRequest;>;"
    :goto_3
    if-eqz v4, :cond_5

    invoke-interface {v4}, Landroid/database/Cursor;->moveToNext()Z

    move-result v8

    if-eqz v8, :cond_5

    .line 198
    const-string v8, "_id"

    invoke-interface {v4, v8}, Landroid/database/Cursor;->getColumnIndex(Ljava/lang/String;)I

    move-result v8

    invoke-interface {v4, v8}, Landroid/database/Cursor;->getInt(I)I

    move-result v8

    invoke-static {v8}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;

    move-result-object v8

    .line 199
    .local v8, "id":Ljava/lang/Integer;
    invoke-virtual {v8}, Ljava/lang/Integer;->intValue()I

    move-result v9

    invoke-direct {p0, v9}, Lcom/evernote/android/job/JobStorage;->didFailToDelete(I)Z

    move-result v9

    if-nez v9, :cond_4

    .line 200
    invoke-virtual {v3, v8}, Ljava/util/HashMap;->containsKey(Ljava/lang/Object;)Z

    move-result v9

    if-eqz v9, :cond_3

    .line 201
    invoke-virtual {v3, v8}, Ljava/util/HashMap;->get(Ljava/lang/Object;)Ljava/lang/Object;

    move-result-object v9

    invoke-interface {v2, v9}, Ljava/util/Set;->add(Ljava/lang/Object;)Z

    goto :goto_4

    .line 203
    :cond_3
    invoke-static {v4}, Lcom/evernote/android/job/JobRequest;->fromCursor(Landroid/database/Cursor;)Lcom/evernote/android/job/JobRequest;

    move-result-object v9

    invoke-interface {v2, v9}, Ljava/util/Set;->add(Ljava/lang/Object;)Z
    :try_end_1
    .catch Ljava/lang/Exception; {:try_start_1 .. :try_end_1} :catch_0
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    .line 206
    .end local v8    # "id":Ljava/lang/Integer;
    :cond_4
    :goto_4
    goto :goto_3

    .line 211
    .end local v0    # "where":Ljava/lang/String;
    .end local v3    # "cachedRequests":Ljava/util/HashMap;, "Ljava/util/HashMap<Ljava/lang/Integer;Lcom/evernote/android/job/JobRequest;>;"
    .end local v6    # "args":[Ljava/lang/String;
    :cond_5
    invoke-static {v4}, Lcom/evernote/android/job/JobStorage;->closeCursor(Landroid/database/Cursor;)V

    .line 212
    invoke-static {v7}, Lcom/evernote/android/job/JobStorage;->closeDatabase(Landroid/database/sqlite/SQLiteDatabase;)V

    .line 213
    iget-object v0, v1, Lcom/evernote/android/job/JobStorage;->mLock:Ljava/util/concurrent/locks/ReadWriteLock;

    invoke-interface {v0}, Ljava/util/concurrent/locks/ReadWriteLock;->readLock()Ljava/util/concurrent/locks/Lock;

    move-result-object v0

    invoke-interface {v0}, Ljava/util/concurrent/locks/Lock;->unlock()V

    .line 214
    move-object v3, v7

    goto :goto_6

    .line 211
    :catchall_0
    move-exception v0

    move-object v3, v7

    goto :goto_7

    .line 207
    :catch_0
    move-exception v0

    move-object v3, v7

    goto :goto_5

    .line 211
    .end local v7    # "database":Landroid/database/sqlite/SQLiteDatabase;
    .local v3, "database":Landroid/database/sqlite/SQLiteDatabase;
    :catchall_1
    move-exception v0

    goto :goto_7

    .line 207
    :catch_1
    move-exception v0

    .line 208
    .local v0, "e":Ljava/lang/Exception;
    :goto_5
    :try_start_2
    sget-object v6, Lcom/evernote/android/job/JobStorage;->CAT:Lcom/evernote/android/job/util/JobCat;

    const-string v7, "could not load all jobs"

    new-array v5, v5, [Ljava/lang/Object;

    invoke-virtual {v6, v0, v7, v5}, Lcom/evernote/android/job/util/JobCat;->e(Ljava/lang/Throwable;Ljava/lang/String;[Ljava/lang/Object;)V
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_1

    .line 211
    .end local v0    # "e":Ljava/lang/Exception;
    invoke-static {v4}, Lcom/evernote/android/job/JobStorage;->closeCursor(Landroid/database/Cursor;)V

    .line 212
    invoke-static {v3}, Lcom/evernote/android/job/JobStorage;->closeDatabase(Landroid/database/sqlite/SQLiteDatabase;)V

    .line 213
    iget-object v0, v1, Lcom/evernote/android/job/JobStorage;->mLock:Ljava/util/concurrent/locks/ReadWriteLock;

    invoke-interface {v0}, Ljava/util/concurrent/locks/ReadWriteLock;->readLock()Ljava/util/concurrent/locks/Lock;

    move-result-object v0

    invoke-interface {v0}, Ljava/util/concurrent/locks/Lock;->unlock()V

    .line 214
    nop

    .line 216
    :goto_6
    return-object v2

    .line 211
    :goto_7
    invoke-static {v4}, Lcom/evernote/android/job/JobStorage;->closeCursor(Landroid/database/Cursor;)V

    .line 212
    invoke-static {v3}, Lcom/evernote/android/job/JobStorage;->closeDatabase(Landroid/database/sqlite/SQLiteDatabase;)V

    .line 213
    iget-object v5, v1, Lcom/evernote/android/job/JobStorage;->mLock:Ljava/util/concurrent/locks/ReadWriteLock;

    invoke-interface {v5}, Ljava/util/concurrent/locks/ReadWriteLock;->readLock()Ljava/util/concurrent/locks/Lock;

    move-result-object v5

    invoke-interface {v5}, Ljava/util/concurrent/locks/Lock;->unlock()V

    throw v0
.end method

.method getDatabase()Landroid/database/sqlite/SQLiteDatabase;
    .locals 3

    .line 317
    iget-object v0, p0, Lcom/evernote/android/job/JobStorage;->mInjectedDatabase:Landroid/database/sqlite/SQLiteDatabase;

    if-eqz v0, :cond_0

    .line 318
    return-object v0

    .line 321
    :cond_0
    :try_start_0
    iget-object v0, p0, Lcom/evernote/android/job/JobStorage;->mDbHelper:Lcom/evernote/android/job/JobStorage$JobOpenHelper;

    invoke-virtual {v0}, Lcom/evernote/android/job/JobStorage$JobOpenHelper;->getWritableDatabase()Landroid/database/sqlite/SQLiteDatabase;

    move-result-object v0
    :try_end_0
    .catch Landroid/database/sqlite/SQLiteCantOpenDatabaseException; {:try_start_0 .. :try_end_0} :catch_0

    return-object v0

    .line 323
    :catch_0
    move-exception v0

    .line 324
    .local v0, "e":Landroid/database/sqlite/SQLiteCantOpenDatabaseException;
    sget-object v1, Lcom/evernote/android/job/JobStorage;->CAT:Lcom/evernote/android/job/util/JobCat;

    invoke-virtual {v1, v0}, Lcom/evernote/android/job/util/JobCat;->e(Ljava/lang/Throwable;)V

    .line 327
    new-instance v1, Lcom/evernote/android/job/JobStorageDatabaseErrorHandler;

    invoke-direct {v1}, Lcom/evernote/android/job/JobStorageDatabaseErrorHandler;-><init>()V

    const-string v2, "evernote_jobs.db"

    invoke-virtual {v1, v2}, Lcom/evernote/android/job/JobStorageDatabaseErrorHandler;->deleteDatabaseFile(Ljava/lang/String;)V

    .line 328
    iget-object v1, p0, Lcom/evernote/android/job/JobStorage;->mDbHelper:Lcom/evernote/android/job/JobStorage$JobOpenHelper;

    invoke-virtual {v1}, Lcom/evernote/android/job/JobStorage$JobOpenHelper;->getWritableDatabase()Landroid/database/sqlite/SQLiteDatabase;

    move-result-object v1

    return-object v1
.end method

.method getFailedDeleteIds()Ljava/util/Set;
    .locals 1
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "()",
            "Ljava/util/Set<",
            "Ljava/lang/String;",
            ">;"
        }
    .end annotation

    .line 340
    iget-object v0, p0, Lcom/evernote/android/job/JobStorage;->mFailedDeleteIds:Ljava/util/Set;

    return-object v0
.end method

.method getMaxJobId()I
    .locals 7

    .line 345
    const/4 v0, 0x0

    .line 346
    .local v0, "database":Landroid/database/sqlite/SQLiteDatabase;
    const/4 v1, 0x0

    .line 348
    .local v1, "cursor":Landroid/database/Cursor;
    const/4 v2, 0x0

    .line 351
    .local v2, "jobId":I
    const/4 v3, 0x0

    :try_start_0
    invoke-virtual {p0}, Lcom/evernote/android/job/JobStorage;->getDatabase()Landroid/database/sqlite/SQLiteDatabase;

    move-result-object v4

    move-object v0, v4

    .line 352
    const-string v4, "SELECT MAX(_id) FROM jobs"

    const/4 v5, 0x0

    invoke-virtual {v0, v4, v5}, Landroid/database/sqlite/SQLiteDatabase;->rawQuery(Ljava/lang/String;[Ljava/lang/String;)Landroid/database/Cursor;

    move-result-object v4

    move-object v1, v4

    .line 353
    if-eqz v1, :cond_0

    invoke-interface {v1}, Landroid/database/Cursor;->moveToFirst()Z

    move-result v4

    if-eqz v4, :cond_0

    .line 354
    invoke-interface {v1, v3}, Landroid/database/Cursor;->getInt(I)I

    move-result v4
    :try_end_0
    .catch Ljava/lang/Exception; {:try_start_0 .. :try_end_0} :catch_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    move v2, v4

    goto :goto_0

    .line 360
    :catchall_0
    move-exception v3

    goto :goto_1

    .line 356
    :catch_0
    move-exception v4

    .line 357
    .local v4, "e":Ljava/lang/Exception;
    :try_start_1
    sget-object v5, Lcom/evernote/android/job/JobStorage;->CAT:Lcom/evernote/android/job/util/JobCat;

    invoke-virtual {v5, v4}, Lcom/evernote/android/job/util/JobCat;->e(Ljava/lang/Throwable;)V
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    .line 360
    .end local v4    # "e":Ljava/lang/Exception;
    :cond_0
    :goto_0
    invoke-static {v1}, Lcom/evernote/android/job/JobStorage;->closeCursor(Landroid/database/Cursor;)V

    .line 361
    invoke-static {v0}, Lcom/evernote/android/job/JobStorage;->closeDatabase(Landroid/database/sqlite/SQLiteDatabase;)V

    .line 362
    nop

    .line 364
    invoke-static {}, Lcom/evernote/android/job/JobConfig;->getJobIdOffset()I

    move-result v4

    iget-object v5, p0, Lcom/evernote/android/job/JobStorage;->mPreferences:Landroid/content/SharedPreferences;

    const-string v6, "JOB_ID_COUNTER_v2"

    invoke-interface {v5, v6, v3}, Landroid/content/SharedPreferences;->getInt(Ljava/lang/String;I)I

    move-result v3

    invoke-static {v2, v3}, Ljava/lang/Math;->max(II)I

    move-result v3

    invoke-static {v4, v3}, Ljava/lang/Math;->max(II)I

    move-result v3

    return v3

    .line 360
    :goto_1
    invoke-static {v1}, Lcom/evernote/android/job/JobStorage;->closeCursor(Landroid/database/Cursor;)V

    .line 361
    invoke-static {v0}, Lcom/evernote/android/job/JobStorage;->closeDatabase(Landroid/database/sqlite/SQLiteDatabase;)V

    throw v3
.end method

.method injectDatabase(Landroid/database/sqlite/SQLiteDatabase;)V
    .locals 0
    .param p1, "database"    # Landroid/database/sqlite/SQLiteDatabase;

    .line 335
    iput-object p1, p0, Lcom/evernote/android/job/JobStorage;->mInjectedDatabase:Landroid/database/sqlite/SQLiteDatabase;

    .line 336
    return-void
.end method

.method public declared-synchronized nextJobId()I
    .locals 4

    monitor-enter p0

    .line 244
    :try_start_0
    iget-object v0, p0, Lcom/evernote/android/job/JobStorage;->mJobCounter:Ljava/util/concurrent/atomic/AtomicInteger;

    if-nez v0, :cond_0

    .line 245
    new-instance v0, Ljava/util/concurrent/atomic/AtomicInteger;

    invoke-virtual {p0}, Lcom/evernote/android/job/JobStorage;->getMaxJobId()I

    move-result v1

    invoke-direct {v0, v1}, Ljava/util/concurrent/atomic/AtomicInteger;-><init>(I)V

    iput-object v0, p0, Lcom/evernote/android/job/JobStorage;->mJobCounter:Ljava/util/concurrent/atomic/AtomicInteger;

    .line 248
    .end local p0    # "this":Lcom/evernote/android/job/JobStorage;
    :cond_0
    iget-object v0, p0, Lcom/evernote/android/job/JobStorage;->mJobCounter:Ljava/util/concurrent/atomic/AtomicInteger;

    invoke-virtual {v0}, Ljava/util/concurrent/atomic/AtomicInteger;->incrementAndGet()I

    move-result v0

    .line 250
    .local v0, "id":I
    invoke-static {}, Lcom/evernote/android/job/JobConfig;->getJobIdOffset()I

    move-result v1

    .line 251
    .local v1, "offset":I
    if-lt v0, v1, :cond_1

    const v2, 0x7ffff1c0

    if-lt v0, v2, :cond_2

    .line 256
    :cond_1
    iget-object v2, p0, Lcom/evernote/android/job/JobStorage;->mJobCounter:Ljava/util/concurrent/atomic/AtomicInteger;

    invoke-virtual {v2, v1}, Ljava/util/concurrent/atomic/AtomicInteger;->set(I)V

    .line 257
    iget-object v2, p0, Lcom/evernote/android/job/JobStorage;->mJobCounter:Ljava/util/concurrent/atomic/AtomicInteger;

    invoke-virtual {v2}, Ljava/util/concurrent/atomic/AtomicInteger;->incrementAndGet()I

    move-result v2

    move v0, v2

    .line 260
    :cond_2
    iget-object v2, p0, Lcom/evernote/android/job/JobStorage;->mPreferences:Landroid/content/SharedPreferences;

    invoke-interface {v2}, Landroid/content/SharedPreferences;->edit()Landroid/content/SharedPreferences$Editor;

    move-result-object v2

    const-string v3, "JOB_ID_COUNTER_v2"

    invoke-interface {v2, v3, v0}, Landroid/content/SharedPreferences$Editor;->putInt(Ljava/lang/String;I)Landroid/content/SharedPreferences$Editor;

    move-result-object v2

    invoke-interface {v2}, Landroid/content/SharedPreferences$Editor;->apply()V
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    .line 262
    monitor-exit p0

    return v0

    .line 243
    .end local v0    # "id":I
    .end local v1    # "offset":I
    :catchall_0
    move-exception v0

    monitor-exit p0

    throw v0
.end method

.method public put(Lcom/evernote/android/job/JobRequest;)V
    .locals 2
    .param p1, "request"    # Lcom/evernote/android/job/JobRequest;

    .line 127
    iget-object v0, p0, Lcom/evernote/android/job/JobStorage;->mLock:Ljava/util/concurrent/locks/ReadWriteLock;

    invoke-interface {v0}, Ljava/util/concurrent/locks/ReadWriteLock;->writeLock()Ljava/util/concurrent/locks/Lock;

    move-result-object v0

    invoke-interface {v0}, Ljava/util/concurrent/locks/Lock;->lock()V

    .line 130
    :try_start_0
    invoke-direct {p0, p1}, Lcom/evernote/android/job/JobStorage;->store(Lcom/evernote/android/job/JobRequest;)V

    .line 133
    invoke-direct {p0, p1}, Lcom/evernote/android/job/JobStorage;->updateRequestInCache(Lcom/evernote/android/job/JobRequest;)V
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    .line 135
    iget-object v0, p0, Lcom/evernote/android/job/JobStorage;->mLock:Ljava/util/concurrent/locks/ReadWriteLock;

    invoke-interface {v0}, Ljava/util/concurrent/locks/ReadWriteLock;->writeLock()Ljava/util/concurrent/locks/Lock;

    move-result-object v0

    invoke-interface {v0}, Ljava/util/concurrent/locks/Lock;->unlock()V

    .line 136
    nop

    .line 137
    return-void

    .line 135
    :catchall_0
    move-exception v0

    iget-object v1, p0, Lcom/evernote/android/job/JobStorage;->mLock:Ljava/util/concurrent/locks/ReadWriteLock;

    invoke-interface {v1}, Ljava/util/concurrent/locks/ReadWriteLock;->writeLock()Ljava/util/concurrent/locks/Lock;

    move-result-object v1

    invoke-interface {v1}, Ljava/util/concurrent/locks/Lock;->unlock()V

    throw v0
.end method

.method public remove(Lcom/evernote/android/job/JobRequest;)V
    .locals 1
    .param p1, "request"    # Lcom/evernote/android/job/JobRequest;

    .line 220
    invoke-virtual {p1}, Lcom/evernote/android/job/JobRequest;->getJobId()I

    move-result v0

    invoke-direct {p0, p1, v0}, Lcom/evernote/android/job/JobStorage;->remove(Lcom/evernote/android/job/JobRequest;I)Z

    .line 221
    return-void
.end method

.method public update(Lcom/evernote/android/job/JobRequest;Landroid/content/ContentValues;)V
    .locals 7
    .param p1, "request"    # Lcom/evernote/android/job/JobRequest;
    .param p2, "contentValues"    # Landroid/content/ContentValues;

    .line 140
    const/4 v0, 0x0

    .line 141
    .local v0, "database":Landroid/database/sqlite/SQLiteDatabase;
    iget-object v1, p0, Lcom/evernote/android/job/JobStorage;->mLock:Ljava/util/concurrent/locks/ReadWriteLock;

    invoke-interface {v1}, Ljava/util/concurrent/locks/ReadWriteLock;->writeLock()Ljava/util/concurrent/locks/Lock;

    move-result-object v1

    invoke-interface {v1}, Ljava/util/concurrent/locks/Lock;->lock()V

    .line 144
    const/4 v1, 0x0

    const/4 v2, 0x1

    :try_start_0
    invoke-direct {p0, p1}, Lcom/evernote/android/job/JobStorage;->updateRequestInCache(Lcom/evernote/android/job/JobRequest;)V

    .line 145
    invoke-virtual {p0}, Lcom/evernote/android/job/JobStorage;->getDatabase()Landroid/database/sqlite/SQLiteDatabase;

    move-result-object v3

    move-object v0, v3

    .line 146
    const-string v3, "jobs"

    const-string v4, "_id=?"

    new-array v5, v2, [Ljava/lang/String;

    invoke-virtual {p1}, Lcom/evernote/android/job/JobRequest;->getJobId()I

    move-result v6

    invoke-static {v6}, Ljava/lang/String;->valueOf(I)Ljava/lang/String;

    move-result-object v6

    aput-object v6, v5, v1

    invoke-virtual {v0, v3, p2, v4, v5}, Landroid/database/sqlite/SQLiteDatabase;->update(Ljava/lang/String;Landroid/content/ContentValues;Ljava/lang/String;[Ljava/lang/String;)I
    :try_end_0
    .catch Ljava/lang/Exception; {:try_start_0 .. :try_end_0} :catch_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    goto :goto_0

    .line 151
    :catchall_0
    move-exception v1

    goto :goto_1

    .line 147
    :catch_0
    move-exception v3

    .line 149
    .local v3, "e":Ljava/lang/Exception;
    :try_start_1
    sget-object v4, Lcom/evernote/android/job/JobStorage;->CAT:Lcom/evernote/android/job/util/JobCat;

    const-string v5, "could not update %s"

    new-array v2, v2, [Ljava/lang/Object;

    aput-object p1, v2, v1

    invoke-virtual {v4, v3, v5, v2}, Lcom/evernote/android/job/util/JobCat;->e(Ljava/lang/Throwable;Ljava/lang/String;[Ljava/lang/Object;)V
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    .line 151
    .end local v3    # "e":Ljava/lang/Exception;
    :goto_0
    invoke-static {v0}, Lcom/evernote/android/job/JobStorage;->closeDatabase(Landroid/database/sqlite/SQLiteDatabase;)V

    .line 152
    iget-object v1, p0, Lcom/evernote/android/job/JobStorage;->mLock:Ljava/util/concurrent/locks/ReadWriteLock;

    invoke-interface {v1}, Ljava/util/concurrent/locks/ReadWriteLock;->writeLock()Ljava/util/concurrent/locks/Lock;

    move-result-object v1

    invoke-interface {v1}, Ljava/util/concurrent/locks/Lock;->unlock()V

    .line 153
    nop

    .line 154
    return-void

    .line 151
    :goto_1
    invoke-static {v0}, Lcom/evernote/android/job/JobStorage;->closeDatabase(Landroid/database/sqlite/SQLiteDatabase;)V

    .line 152
    iget-object v2, p0, Lcom/evernote/android/job/JobStorage;->mLock:Ljava/util/concurrent/locks/ReadWriteLock;

    invoke-interface {v2}, Ljava/util/concurrent/locks/ReadWriteLock;->writeLock()Ljava/util/concurrent/locks/Lock;

    move-result-object v2

    invoke-interface {v2}, Ljava/util/concurrent/locks/Lock;->unlock()V

    throw v1
.end method
