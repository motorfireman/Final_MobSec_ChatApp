.class final Lcom/annimon/stream/function/ints/IntPredicate$Util$1;
.super Ljava/lang/Object;
.source "IntPredicate.java"

# interfaces
.implements Lcom/annimon/stream/function/ints/IntPredicate;


# annotations
.annotation system Ldalvik/annotation/EnclosingMethod;
    value = Lcom/annimon/stream/function/ints/IntPredicate$Util;->and(Lcom/annimon/stream/function/ints/IntPredicate;Lcom/annimon/stream/function/ints/IntPredicate;)Lcom/annimon/stream/function/ints/IntPredicate;
.end annotation

.annotation system Ldalvik/annotation/InnerClass;
    accessFlags = 0x8
    name = null
.end annotation


# instance fields
.field final synthetic val$p1:Lcom/annimon/stream/function/ints/IntPredicate;

.field final synthetic val$p2:Lcom/annimon/stream/function/ints/IntPredicate;


# direct methods
.method constructor <init>(Lcom/annimon/stream/function/ints/IntPredicate;Lcom/annimon/stream/function/ints/IntPredicate;)V
    .locals 0

    .line 37
    iput-object p1, p0, Lcom/annimon/stream/function/ints/IntPredicate$Util$1;->val$p1:Lcom/annimon/stream/function/ints/IntPredicate;

    iput-object p2, p0, Lcom/annimon/stream/function/ints/IntPredicate$Util$1;->val$p2:Lcom/annimon/stream/function/ints/IntPredicate;

    invoke-direct {p0}, Ljava/lang/Object;-><init>()V

    return-void
.end method


# virtual methods
.method public test(I)Z
    .locals 1
    .param p1, "value"    # I

    .line 40
    iget-object v0, p0, Lcom/annimon/stream/function/ints/IntPredicate$Util$1;->val$p1:Lcom/annimon/stream/function/ints/IntPredicate;

    invoke-interface {v0, p1}, Lcom/annimon/stream/function/ints/IntPredicate;->test(I)Z

    move-result v0

    if-eqz v0, :cond_0

    iget-object v0, p0, Lcom/annimon/stream/function/ints/IntPredicate$Util$1;->val$p2:Lcom/annimon/stream/function/ints/IntPredicate;

    invoke-interface {v0, p1}, Lcom/annimon/stream/function/ints/IntPredicate;->test(I)Z

    move-result v0

    if-eqz v0, :cond_0

    const/4 v0, 0x1

    goto :goto_0

    :cond_0
    const/4 v0, 0x0

    :goto_0
    return v0
.end method
