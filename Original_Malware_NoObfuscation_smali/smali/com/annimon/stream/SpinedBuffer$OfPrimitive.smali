.class abstract Lcom/annimon/stream/SpinedBuffer$OfPrimitive;
.super Lcom/annimon/stream/AbstractSpinedBuffer;
.source "SpinedBuffer.java"

# interfaces
.implements Ljava/lang/Iterable;


# annotations
.annotation system Ldalvik/annotation/EnclosingClass;
    value = Lcom/annimon/stream/SpinedBuffer;
.end annotation

.annotation system Ldalvik/annotation/InnerClass;
    accessFlags = 0x408
    name = "OfPrimitive"
.end annotation

.annotation system Ldalvik/annotation/Signature;
    value = {
        "<E:",
        "Ljava/lang/Object;",
        "T_ARR:",
        "Ljava/lang/Object;",
        "T_CONS:",
        "Ljava/lang/Object;",
        ">",
        "Lcom/annimon/stream/AbstractSpinedBuffer;",
        "Ljava/lang/Iterable<",
        "TE;>;"
    }
.end annotation


# instance fields
.field curChunk:Ljava/lang/Object;
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "TT_ARR;"
        }
    .end annotation
.end field

.field spine:[Ljava/lang/Object;
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "[TT_ARR;"
        }
    .end annotation
.end field


# direct methods
.method constructor <init>()V
    .locals 2

    .line 26
    .local p0, "this":Lcom/annimon/stream/SpinedBuffer$OfPrimitive;, "Lcom/annimon/stream/SpinedBuffer$OfPrimitive<TE;TT_ARR;TT_CONS;>;"
    invoke-direct {p0}, Lcom/annimon/stream/AbstractSpinedBuffer;-><init>()V

    .line 27
    iget v0, p0, Lcom/annimon/stream/SpinedBuffer$OfPrimitive;->initialChunkPower:I

    const/4 v1, 0x1

    shl-int v0, v1, v0

    invoke-virtual {p0, v0}, Lcom/annimon/stream/SpinedBuffer$OfPrimitive;->newArray(I)Ljava/lang/Object;

    move-result-object v0

    iput-object v0, p0, Lcom/annimon/stream/SpinedBuffer$OfPrimitive;->curChunk:Ljava/lang/Object;

    .line 28
    return-void
.end method

.method constructor <init>(I)V
    .locals 2
    .param p1, "initialCapacity"    # I

    .line 21
    .local p0, "this":Lcom/annimon/stream/SpinedBuffer$OfPrimitive;, "Lcom/annimon/stream/SpinedBuffer$OfPrimitive<TE;TT_ARR;TT_CONS;>;"
    invoke-direct {p0, p1}, Lcom/annimon/stream/AbstractSpinedBuffer;-><init>(I)V

    .line 22
    iget v0, p0, Lcom/annimon/stream/SpinedBuffer$OfPrimitive;->initialChunkPower:I

    const/4 v1, 0x1

    shl-int v0, v1, v0

    invoke-virtual {p0, v0}, Lcom/annimon/stream/SpinedBuffer$OfPrimitive;->newArray(I)Ljava/lang/Object;

    move-result-object v0

    iput-object v0, p0, Lcom/annimon/stream/SpinedBuffer$OfPrimitive;->curChunk:Ljava/lang/Object;

    .line 23
    return-void
.end method

.method private inflateSpine()V
    .locals 3

    .line 46
    .local p0, "this":Lcom/annimon/stream/SpinedBuffer$OfPrimitive;, "Lcom/annimon/stream/SpinedBuffer$OfPrimitive<TE;TT_ARR;TT_CONS;>;"
    iget-object v0, p0, Lcom/annimon/stream/SpinedBuffer$OfPrimitive;->spine:[Ljava/lang/Object;

    if-nez v0, :cond_0

    .line 47
    const/16 v0, 0x8

    invoke-virtual {p0, v0}, Lcom/annimon/stream/SpinedBuffer$OfPrimitive;->newArrayArray(I)[Ljava/lang/Object;

    move-result-object v1

    iput-object v1, p0, Lcom/annimon/stream/SpinedBuffer$OfPrimitive;->spine:[Ljava/lang/Object;

    .line 48
    new-array v0, v0, [J

    iput-object v0, p0, Lcom/annimon/stream/SpinedBuffer$OfPrimitive;->priorElementCount:[J

    .line 49
    iget-object v0, p0, Lcom/annimon/stream/SpinedBuffer$OfPrimitive;->spine:[Ljava/lang/Object;

    const/4 v1, 0x0

    iget-object v2, p0, Lcom/annimon/stream/SpinedBuffer$OfPrimitive;->curChunk:Ljava/lang/Object;

    aput-object v2, v0, v1

    .line 51
    :cond_0
    return-void
.end method


# virtual methods
.method protected abstract arrayLength(Ljava/lang/Object;)I
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "(TT_ARR;)I"
        }
    .end annotation
.end method

.method asPrimitiveArray()Ljava/lang/Object;
    .locals 4
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "()TT_ARR;"
        }
    .end annotation

    .line 114
    .local p0, "this":Lcom/annimon/stream/SpinedBuffer$OfPrimitive;, "Lcom/annimon/stream/SpinedBuffer$OfPrimitive<TE;TT_ARR;TT_CONS;>;"
    invoke-virtual {p0}, Lcom/annimon/stream/SpinedBuffer$OfPrimitive;->count()J

    move-result-wide v0

    .line 116
    .local v0, "size":J
    const-wide/32 v2, 0x7ffffff7

    cmp-long v2, v0, v2

    if-gez v2, :cond_0

    .line 119
    long-to-int v2, v0

    invoke-virtual {p0, v2}, Lcom/annimon/stream/SpinedBuffer$OfPrimitive;->newArray(I)Ljava/lang/Object;

    move-result-object v2

    .line 120
    .local v2, "result":Ljava/lang/Object;, "TT_ARR;"
    const/4 v3, 0x0

    invoke-virtual {p0, v2, v3}, Lcom/annimon/stream/SpinedBuffer$OfPrimitive;->copyInto(Ljava/lang/Object;I)V

    .line 121
    return-object v2

    .line 117
    .end local v2    # "result":Ljava/lang/Object;, "TT_ARR;"
    :cond_0
    new-instance v2, Ljava/lang/IllegalArgumentException;

    const-string v3, "Stream size exceeds max array size"

    invoke-direct {v2, v3}, Ljava/lang/IllegalArgumentException;-><init>(Ljava/lang/String;)V

    throw v2
.end method

.method capacity()J
    .locals 5

    .line 40
    .local p0, "this":Lcom/annimon/stream/SpinedBuffer$OfPrimitive;, "Lcom/annimon/stream/SpinedBuffer$OfPrimitive<TE;TT_ARR;TT_CONS;>;"
    iget v0, p0, Lcom/annimon/stream/SpinedBuffer$OfPrimitive;->spineIndex:I

    if-nez v0, :cond_0

    iget-object v0, p0, Lcom/annimon/stream/SpinedBuffer$OfPrimitive;->curChunk:Ljava/lang/Object;

    .line 41
    invoke-virtual {p0, v0}, Lcom/annimon/stream/SpinedBuffer$OfPrimitive;->arrayLength(Ljava/lang/Object;)I

    move-result v0

    int-to-long v0, v0

    goto :goto_0

    :cond_0
    iget-object v0, p0, Lcom/annimon/stream/SpinedBuffer$OfPrimitive;->priorElementCount:[J

    iget v1, p0, Lcom/annimon/stream/SpinedBuffer$OfPrimitive;->spineIndex:I

    aget-wide v1, v0, v1

    iget-object v0, p0, Lcom/annimon/stream/SpinedBuffer$OfPrimitive;->spine:[Ljava/lang/Object;

    iget v3, p0, Lcom/annimon/stream/SpinedBuffer$OfPrimitive;->spineIndex:I

    aget-object v0, v0, v3

    .line 42
    invoke-virtual {p0, v0}, Lcom/annimon/stream/SpinedBuffer$OfPrimitive;->arrayLength(Ljava/lang/Object;)I

    move-result v0

    int-to-long v3, v0

    add-long v0, v1, v3

    :goto_0
    return-wide v0
.end method

.method chunkFor(J)I
    .locals 6
    .param p1, "index"    # J

    .line 76
    .local p0, "this":Lcom/annimon/stream/SpinedBuffer$OfPrimitive;, "Lcom/annimon/stream/SpinedBuffer$OfPrimitive<TE;TT_ARR;TT_CONS;>;"
    iget v0, p0, Lcom/annimon/stream/SpinedBuffer$OfPrimitive;->spineIndex:I

    if-nez v0, :cond_1

    .line 77
    iget v0, p0, Lcom/annimon/stream/SpinedBuffer$OfPrimitive;->elementIndex:I

    int-to-long v0, v0

    cmp-long v0, p1, v0

    if-gez v0, :cond_0

    .line 78
    const/4 v0, 0x0

    return v0

    .line 80
    :cond_0
    new-instance v0, Ljava/lang/IndexOutOfBoundsException;

    invoke-static {p1, p2}, Ljava/lang/Long;->toString(J)Ljava/lang/String;

    move-result-object v1

    invoke-direct {v0, v1}, Ljava/lang/IndexOutOfBoundsException;-><init>(Ljava/lang/String;)V

    throw v0

    .line 83
    :cond_1
    invoke-virtual {p0}, Lcom/annimon/stream/SpinedBuffer$OfPrimitive;->count()J

    move-result-wide v0

    cmp-long v0, p1, v0

    if-gez v0, :cond_4

    .line 86
    const/4 v0, 0x0

    .local v0, "j":I
    :goto_0
    iget v1, p0, Lcom/annimon/stream/SpinedBuffer$OfPrimitive;->spineIndex:I

    if-gt v0, v1, :cond_3

    .line 87
    iget-object v1, p0, Lcom/annimon/stream/SpinedBuffer$OfPrimitive;->priorElementCount:[J

    aget-wide v2, v1, v0

    iget-object v1, p0, Lcom/annimon/stream/SpinedBuffer$OfPrimitive;->spine:[Ljava/lang/Object;

    aget-object v1, v1, v0

    invoke-virtual {p0, v1}, Lcom/annimon/stream/SpinedBuffer$OfPrimitive;->arrayLength(Ljava/lang/Object;)I

    move-result v1

    int-to-long v4, v1

    add-long/2addr v2, v4

    cmp-long v1, p1, v2

    if-gez v1, :cond_2

    .line 88
    return v0

    .line 86
    :cond_2
    add-int/lit8 v0, v0, 0x1

    goto :goto_0

    .line 90
    .end local v0    # "j":I
    :cond_3
    new-instance v0, Ljava/lang/IndexOutOfBoundsException;

    invoke-static {p1, p2}, Ljava/lang/Long;->toString(J)Ljava/lang/String;

    move-result-object v1

    invoke-direct {v0, v1}, Ljava/lang/IndexOutOfBoundsException;-><init>(Ljava/lang/String;)V

    throw v0

    .line 84
    :cond_4
    new-instance v0, Ljava/lang/IndexOutOfBoundsException;

    invoke-static {p1, p2}, Ljava/lang/Long;->toString(J)Ljava/lang/String;

    move-result-object v1

    invoke-direct {v0, v1}, Ljava/lang/IndexOutOfBoundsException;-><init>(Ljava/lang/String;)V

    throw v0
.end method

.method public clear()V
    .locals 2

    .line 137
    .local p0, "this":Lcom/annimon/stream/SpinedBuffer$OfPrimitive;, "Lcom/annimon/stream/SpinedBuffer$OfPrimitive<TE;TT_ARR;TT_CONS;>;"
    iget-object v0, p0, Lcom/annimon/stream/SpinedBuffer$OfPrimitive;->spine:[Ljava/lang/Object;

    const/4 v1, 0x0

    if-eqz v0, :cond_0

    .line 138
    aget-object v0, v0, v1

    iput-object v0, p0, Lcom/annimon/stream/SpinedBuffer$OfPrimitive;->curChunk:Ljava/lang/Object;

    .line 139
    const/4 v0, 0x0

    iput-object v0, p0, Lcom/annimon/stream/SpinedBuffer$OfPrimitive;->spine:[Ljava/lang/Object;

    .line 140
    iput-object v0, p0, Lcom/annimon/stream/SpinedBuffer$OfPrimitive;->priorElementCount:[J

    .line 142
    :cond_0
    iput v1, p0, Lcom/annimon/stream/SpinedBuffer$OfPrimitive;->elementIndex:I

    .line 143
    iput v1, p0, Lcom/annimon/stream/SpinedBuffer$OfPrimitive;->spineIndex:I

    .line 144
    return-void
.end method

.method copyInto(Ljava/lang/Object;I)V
    .locals 6
    .param p2, "offset"    # I
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "(TT_ARR;I)V"
        }
    .end annotation

    .line 95
    .local p0, "this":Lcom/annimon/stream/SpinedBuffer$OfPrimitive;, "Lcom/annimon/stream/SpinedBuffer$OfPrimitive<TE;TT_ARR;TT_CONS;>;"
    .local p1, "array":Ljava/lang/Object;, "TT_ARR;"
    int-to-long v0, p2

    invoke-virtual {p0}, Lcom/annimon/stream/SpinedBuffer$OfPrimitive;->count()J

    move-result-wide v2

    add-long/2addr v0, v2

    .line 96
    .local v0, "finalOffset":J
    invoke-virtual {p0, p1}, Lcom/annimon/stream/SpinedBuffer$OfPrimitive;->arrayLength(Ljava/lang/Object;)I

    move-result v2

    int-to-long v2, v2

    cmp-long v2, v0, v2

    if-gtz v2, :cond_3

    int-to-long v2, p2

    cmp-long v2, v0, v2

    if-ltz v2, :cond_3

    .line 100
    iget v2, p0, Lcom/annimon/stream/SpinedBuffer$OfPrimitive;->spineIndex:I

    const/4 v3, 0x0

    if-nez v2, :cond_0

    .line 101
    iget-object v2, p0, Lcom/annimon/stream/SpinedBuffer$OfPrimitive;->curChunk:Ljava/lang/Object;

    iget v4, p0, Lcom/annimon/stream/SpinedBuffer$OfPrimitive;->elementIndex:I

    invoke-static {v2, v3, p1, p2, v4}, Ljava/lang/System;->arraycopy(Ljava/lang/Object;ILjava/lang/Object;II)V

    goto :goto_1

    .line 104
    :cond_0
    const/4 v2, 0x0

    .local v2, "i":I
    :goto_0
    iget v4, p0, Lcom/annimon/stream/SpinedBuffer$OfPrimitive;->spineIndex:I

    if-ge v2, v4, :cond_1

    .line 105
    iget-object v4, p0, Lcom/annimon/stream/SpinedBuffer$OfPrimitive;->spine:[Ljava/lang/Object;

    aget-object v5, v4, v2

    aget-object v4, v4, v2

    invoke-virtual {p0, v4}, Lcom/annimon/stream/SpinedBuffer$OfPrimitive;->arrayLength(Ljava/lang/Object;)I

    move-result v4

    invoke-static {v5, v3, p1, p2, v4}, Ljava/lang/System;->arraycopy(Ljava/lang/Object;ILjava/lang/Object;II)V

    .line 106
    iget-object v4, p0, Lcom/annimon/stream/SpinedBuffer$OfPrimitive;->spine:[Ljava/lang/Object;

    aget-object v4, v4, v2

    invoke-virtual {p0, v4}, Lcom/annimon/stream/SpinedBuffer$OfPrimitive;->arrayLength(Ljava/lang/Object;)I

    move-result v4

    add-int/2addr p2, v4

    .line 104
    add-int/lit8 v2, v2, 0x1

    goto :goto_0

    .line 108
    .end local v2    # "i":I
    :cond_1
    iget v2, p0, Lcom/annimon/stream/SpinedBuffer$OfPrimitive;->elementIndex:I

    if-lez v2, :cond_2

    .line 109
    iget-object v2, p0, Lcom/annimon/stream/SpinedBuffer$OfPrimitive;->curChunk:Ljava/lang/Object;

    iget v4, p0, Lcom/annimon/stream/SpinedBuffer$OfPrimitive;->elementIndex:I

    invoke-static {v2, v3, p1, p2, v4}, Ljava/lang/System;->arraycopy(Ljava/lang/Object;ILjava/lang/Object;II)V

    .line 111
    :cond_2
    :goto_1
    return-void

    .line 97
    :cond_3
    new-instance v2, Ljava/lang/IndexOutOfBoundsException;

    const-string v3, "does not fit"

    invoke-direct {v2, v3}, Ljava/lang/IndexOutOfBoundsException;-><init>(Ljava/lang/String;)V

    throw v2
.end method

.method final ensureCapacity(J)V
    .locals 10
    .param p1, "targetSize"    # J

    .line 54
    .local p0, "this":Lcom/annimon/stream/SpinedBuffer$OfPrimitive;, "Lcom/annimon/stream/SpinedBuffer$OfPrimitive<TE;TT_ARR;TT_CONS;>;"
    invoke-virtual {p0}, Lcom/annimon/stream/SpinedBuffer$OfPrimitive;->capacity()J

    move-result-wide v0

    .line 55
    .local v0, "capacity":J
    cmp-long v2, p1, v0

    if-lez v2, :cond_1

    .line 56
    invoke-direct {p0}, Lcom/annimon/stream/SpinedBuffer$OfPrimitive;->inflateSpine()V

    .line 57
    iget v2, p0, Lcom/annimon/stream/SpinedBuffer$OfPrimitive;->spineIndex:I

    add-int/lit8 v2, v2, 0x1

    .local v2, "i":I
    :goto_0
    cmp-long v3, p1, v0

    if-lez v3, :cond_1

    .line 58
    iget-object v3, p0, Lcom/annimon/stream/SpinedBuffer$OfPrimitive;->spine:[Ljava/lang/Object;

    array-length v4, v3

    if-lt v2, v4, :cond_0

    .line 59
    array-length v4, v3

    mul-int/lit8 v4, v4, 0x2

    .line 60
    .local v4, "newSpineSize":I
    invoke-static {v3, v4}, Ljava/util/Arrays;->copyOf([Ljava/lang/Object;I)[Ljava/lang/Object;

    move-result-object v3

    iput-object v3, p0, Lcom/annimon/stream/SpinedBuffer$OfPrimitive;->spine:[Ljava/lang/Object;

    .line 61
    iget-object v3, p0, Lcom/annimon/stream/SpinedBuffer$OfPrimitive;->priorElementCount:[J

    invoke-static {v3, v4}, Ljava/util/Arrays;->copyOf([JI)[J

    move-result-object v3

    iput-object v3, p0, Lcom/annimon/stream/SpinedBuffer$OfPrimitive;->priorElementCount:[J

    .line 63
    .end local v4    # "newSpineSize":I
    :cond_0
    invoke-virtual {p0, v2}, Lcom/annimon/stream/SpinedBuffer$OfPrimitive;->chunkSize(I)I

    move-result v3

    .line 64
    .local v3, "nextChunkSize":I
    iget-object v4, p0, Lcom/annimon/stream/SpinedBuffer$OfPrimitive;->spine:[Ljava/lang/Object;

    invoke-virtual {p0, v3}, Lcom/annimon/stream/SpinedBuffer$OfPrimitive;->newArray(I)Ljava/lang/Object;

    move-result-object v5

    aput-object v5, v4, v2

    .line 65
    iget-object v4, p0, Lcom/annimon/stream/SpinedBuffer$OfPrimitive;->priorElementCount:[J

    iget-object v5, p0, Lcom/annimon/stream/SpinedBuffer$OfPrimitive;->priorElementCount:[J

    add-int/lit8 v6, v2, -0x1

    aget-wide v6, v5, v6

    iget-object v5, p0, Lcom/annimon/stream/SpinedBuffer$OfPrimitive;->spine:[Ljava/lang/Object;

    add-int/lit8 v8, v2, -0x1

    aget-object v5, v5, v8

    invoke-virtual {p0, v5}, Lcom/annimon/stream/SpinedBuffer$OfPrimitive;->arrayLength(Ljava/lang/Object;)I

    move-result v5

    int-to-long v8, v5

    add-long/2addr v6, v8

    aput-wide v6, v4, v2

    .line 66
    int-to-long v4, v3

    add-long/2addr v0, v4

    .line 57
    .end local v3    # "nextChunkSize":I
    add-int/lit8 v2, v2, 0x1

    goto :goto_0

    .line 69
    .end local v2    # "i":I
    :cond_1
    return-void
.end method

.method increaseCapacity()V
    .locals 4

    .line 72
    .local p0, "this":Lcom/annimon/stream/SpinedBuffer$OfPrimitive;, "Lcom/annimon/stream/SpinedBuffer$OfPrimitive<TE;TT_ARR;TT_CONS;>;"
    invoke-virtual {p0}, Lcom/annimon/stream/SpinedBuffer$OfPrimitive;->capacity()J

    move-result-wide v0

    const-wide/16 v2, 0x1

    add-long/2addr v0, v2

    invoke-virtual {p0, v0, v1}, Lcom/annimon/stream/SpinedBuffer$OfPrimitive;->ensureCapacity(J)V

    .line 73
    return-void
.end method

.method public abstract iterator()Ljava/util/Iterator;
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "()",
            "Ljava/util/Iterator<",
            "TE;>;"
        }
    .end annotation
.end method

.method public abstract newArray(I)Ljava/lang/Object;
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "(I)TT_ARR;"
        }
    .end annotation
.end method

.method protected abstract newArrayArray(I)[Ljava/lang/Object;
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "(I)[TT_ARR;"
        }
    .end annotation
.end method

.method preAccept()V
    .locals 3

    .line 125
    .local p0, "this":Lcom/annimon/stream/SpinedBuffer$OfPrimitive;, "Lcom/annimon/stream/SpinedBuffer$OfPrimitive<TE;TT_ARR;TT_CONS;>;"
    iget v0, p0, Lcom/annimon/stream/SpinedBuffer$OfPrimitive;->elementIndex:I

    iget-object v1, p0, Lcom/annimon/stream/SpinedBuffer$OfPrimitive;->curChunk:Ljava/lang/Object;

    invoke-virtual {p0, v1}, Lcom/annimon/stream/SpinedBuffer$OfPrimitive;->arrayLength(Ljava/lang/Object;)I

    move-result v1

    if-ne v0, v1, :cond_2

    .line 126
    invoke-direct {p0}, Lcom/annimon/stream/SpinedBuffer$OfPrimitive;->inflateSpine()V

    .line 127
    iget v0, p0, Lcom/annimon/stream/SpinedBuffer$OfPrimitive;->spineIndex:I

    add-int/lit8 v0, v0, 0x1

    iget-object v1, p0, Lcom/annimon/stream/SpinedBuffer$OfPrimitive;->spine:[Ljava/lang/Object;

    array-length v2, v1

    if-ge v0, v2, :cond_0

    iget v0, p0, Lcom/annimon/stream/SpinedBuffer$OfPrimitive;->spineIndex:I

    add-int/lit8 v0, v0, 0x1

    aget-object v0, v1, v0

    if-nez v0, :cond_1

    .line 128
    :cond_0
    invoke-virtual {p0}, Lcom/annimon/stream/SpinedBuffer$OfPrimitive;->increaseCapacity()V

    .line 129
    :cond_1
    const/4 v0, 0x0

    iput v0, p0, Lcom/annimon/stream/SpinedBuffer$OfPrimitive;->elementIndex:I

    .line 130
    iget v0, p0, Lcom/annimon/stream/SpinedBuffer$OfPrimitive;->spineIndex:I

    add-int/lit8 v0, v0, 0x1

    iput v0, p0, Lcom/annimon/stream/SpinedBuffer$OfPrimitive;->spineIndex:I

    .line 131
    iget-object v0, p0, Lcom/annimon/stream/SpinedBuffer$OfPrimitive;->spine:[Ljava/lang/Object;

    iget v1, p0, Lcom/annimon/stream/SpinedBuffer$OfPrimitive;->spineIndex:I

    aget-object v0, v0, v1

    iput-object v0, p0, Lcom/annimon/stream/SpinedBuffer$OfPrimitive;->curChunk:Ljava/lang/Object;

    .line 133
    :cond_2
    return-void
.end method
