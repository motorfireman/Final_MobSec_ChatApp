.class public final Lcom/annimon/stream/IntStream;
.super Ljava/lang/Object;
.source "IntStream.java"


# static fields
.field private static final EMPTY:Lcom/annimon/stream/IntStream;

.field private static final UNBOX_FUNCTION:Lcom/annimon/stream/function/ToIntFunction;
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "Lcom/annimon/stream/function/ToIntFunction<",
            "Ljava/lang/Integer;",
            ">;"
        }
    .end annotation
.end field


# instance fields
.field private final iterator:Lcom/annimon/stream/PrimitiveIterator$OfInt;


# direct methods
.method static constructor <clinit>()V
    .locals 2

    .line 18
    new-instance v0, Lcom/annimon/stream/IntStream;

    new-instance v1, Lcom/annimon/stream/IntStream$1;

    invoke-direct {v1}, Lcom/annimon/stream/IntStream$1;-><init>()V

    invoke-direct {v0, v1}, Lcom/annimon/stream/IntStream;-><init>(Lcom/annimon/stream/PrimitiveIterator$OfInt;)V

    sput-object v0, Lcom/annimon/stream/IntStream;->EMPTY:Lcom/annimon/stream/IntStream;

    .line 1200
    new-instance v0, Lcom/annimon/stream/IntStream$21;

    invoke-direct {v0}, Lcom/annimon/stream/IntStream$21;-><init>()V

    sput-object v0, Lcom/annimon/stream/IntStream;->UNBOX_FUNCTION:Lcom/annimon/stream/function/ToIntFunction;

    return-void
.end method

.method constructor <init>(Lcom/annimon/stream/PrimitiveIterator$OfInt;)V
    .locals 0
    .param p1, "iterator"    # Lcom/annimon/stream/PrimitiveIterator$OfInt;

    .line 261
    invoke-direct {p0}, Ljava/lang/Object;-><init>()V

    .line 262
    iput-object p1, p0, Lcom/annimon/stream/IntStream;->iterator:Lcom/annimon/stream/PrimitiveIterator$OfInt;

    .line 263
    return-void
.end method

.method static synthetic access$000(Lcom/annimon/stream/IntStream;)Lcom/annimon/stream/PrimitiveIterator$OfInt;
    .locals 1
    .param p0, "x0"    # Lcom/annimon/stream/IntStream;

    .line 13
    iget-object v0, p0, Lcom/annimon/stream/IntStream;->iterator:Lcom/annimon/stream/PrimitiveIterator$OfInt;

    return-object v0
.end method

.method public static concat(Lcom/annimon/stream/IntStream;Lcom/annimon/stream/IntStream;)Lcom/annimon/stream/IntStream;
    .locals 2
    .param p0, "a"    # Lcom/annimon/stream/IntStream;
    .param p1, "b"    # Lcom/annimon/stream/IntStream;

    .line 233
    invoke-static {p0}, Lcom/annimon/stream/Objects;->requireNonNull(Ljava/lang/Object;)Ljava/lang/Object;

    .line 234
    invoke-static {p1}, Lcom/annimon/stream/Objects;->requireNonNull(Ljava/lang/Object;)Ljava/lang/Object;

    .line 236
    new-instance v0, Lcom/annimon/stream/IntStream;

    new-instance v1, Lcom/annimon/stream/IntStream$7;

    invoke-direct {v1, p0, p1}, Lcom/annimon/stream/IntStream$7;-><init>(Lcom/annimon/stream/IntStream;Lcom/annimon/stream/IntStream;)V

    invoke-direct {v0, v1}, Lcom/annimon/stream/IntStream;-><init>(Lcom/annimon/stream/PrimitiveIterator$OfInt;)V

    return-object v0
.end method

.method public static empty()Lcom/annimon/stream/IntStream;
    .locals 1

    .line 36
    sget-object v0, Lcom/annimon/stream/IntStream;->EMPTY:Lcom/annimon/stream/IntStream;

    return-object v0
.end method

.method public static generate(Lcom/annimon/stream/function/IntSupplier;)Lcom/annimon/stream/IntStream;
    .locals 2
    .param p0, "s"    # Lcom/annimon/stream/function/IntSupplier;

    .line 155
    invoke-static {p0}, Lcom/annimon/stream/Objects;->requireNonNull(Ljava/lang/Object;)Ljava/lang/Object;

    .line 156
    new-instance v0, Lcom/annimon/stream/IntStream;

    new-instance v1, Lcom/annimon/stream/IntStream$5;

    invoke-direct {v1, p0}, Lcom/annimon/stream/IntStream$5;-><init>(Lcom/annimon/stream/function/IntSupplier;)V

    invoke-direct {v0, v1}, Lcom/annimon/stream/IntStream;-><init>(Lcom/annimon/stream/PrimitiveIterator$OfInt;)V

    return-object v0
.end method

.method public static iterate(ILcom/annimon/stream/function/IntUnaryOperator;)Lcom/annimon/stream/IntStream;
    .locals 2
    .param p0, "seed"    # I
    .param p1, "f"    # Lcom/annimon/stream/function/IntUnaryOperator;

    .line 194
    invoke-static {p1}, Lcom/annimon/stream/Objects;->requireNonNull(Ljava/lang/Object;)Ljava/lang/Object;

    .line 195
    new-instance v0, Lcom/annimon/stream/IntStream;

    new-instance v1, Lcom/annimon/stream/IntStream$6;

    invoke-direct {v1, p0, p1}, Lcom/annimon/stream/IntStream$6;-><init>(ILcom/annimon/stream/function/IntUnaryOperator;)V

    invoke-direct {v0, v1}, Lcom/annimon/stream/IntStream;-><init>(Lcom/annimon/stream/PrimitiveIterator$OfInt;)V

    return-object v0
.end method

.method public static of(I)Lcom/annimon/stream/IntStream;
    .locals 2
    .param p0, "t"    # I

    .line 83
    new-instance v0, Lcom/annimon/stream/IntStream;

    new-instance v1, Lcom/annimon/stream/IntStream$3;

    invoke-direct {v1, p0}, Lcom/annimon/stream/IntStream$3;-><init>(I)V

    invoke-direct {v0, v1}, Lcom/annimon/stream/IntStream;-><init>(Lcom/annimon/stream/PrimitiveIterator$OfInt;)V

    return-object v0
.end method

.method public static of(Lcom/annimon/stream/PrimitiveIterator$OfInt;)Lcom/annimon/stream/IntStream;
    .locals 1
    .param p0, "iterator"    # Lcom/annimon/stream/PrimitiveIterator$OfInt;

    .line 47
    invoke-static {p0}, Lcom/annimon/stream/Objects;->requireNonNull(Ljava/lang/Object;)Ljava/lang/Object;

    .line 48
    new-instance v0, Lcom/annimon/stream/IntStream;

    invoke-direct {v0, p0}, Lcom/annimon/stream/IntStream;-><init>(Lcom/annimon/stream/PrimitiveIterator$OfInt;)V

    return-object v0
.end method

.method public static varargs of([I)Lcom/annimon/stream/IntStream;
    .locals 2
    .param p0, "values"    # [I

    .line 59
    invoke-static {p0}, Lcom/annimon/stream/Objects;->requireNonNull(Ljava/lang/Object;)Ljava/lang/Object;

    .line 60
    new-instance v0, Lcom/annimon/stream/IntStream;

    new-instance v1, Lcom/annimon/stream/IntStream$2;

    invoke-direct {v1, p0}, Lcom/annimon/stream/IntStream$2;-><init>([I)V

    invoke-direct {v0, v1}, Lcom/annimon/stream/IntStream;-><init>(Lcom/annimon/stream/PrimitiveIterator$OfInt;)V

    return-object v0
.end method

.method public static range(II)Lcom/annimon/stream/IntStream;
    .locals 2
    .param p0, "startInclusive"    # I
    .param p1, "endExclusive"    # I

    .line 112
    if-lt p0, p1, :cond_0

    .line 113
    invoke-static {}, Lcom/annimon/stream/IntStream;->empty()Lcom/annimon/stream/IntStream;

    move-result-object v0

    return-object v0

    .line 115
    :cond_0
    new-instance v0, Lcom/annimon/stream/IntStream;

    new-instance v1, Lcom/annimon/stream/IntStream$4;

    invoke-direct {v1, p0, p1}, Lcom/annimon/stream/IntStream$4;-><init>(II)V

    invoke-direct {v0, v1}, Lcom/annimon/stream/IntStream;-><init>(Lcom/annimon/stream/PrimitiveIterator$OfInt;)V

    return-object v0
.end method

.method public static rangeClosed(II)Lcom/annimon/stream/IntStream;
    .locals 1
    .param p0, "startInclusive"    # I
    .param p1, "endInclusive"    # I

    .line 142
    add-int/lit8 v0, p1, 0x1

    invoke-static {p0, v0}, Lcom/annimon/stream/IntStream;->range(II)Lcom/annimon/stream/IntStream;

    move-result-object v0

    return-object v0
.end method


# virtual methods
.method public allMatch(Lcom/annimon/stream/function/IntPredicate;)Z
    .locals 1
    .param p1, "predicate"    # Lcom/annimon/stream/function/IntPredicate;

    .line 1064
    :cond_0
    iget-object v0, p0, Lcom/annimon/stream/IntStream;->iterator:Lcom/annimon/stream/PrimitiveIterator$OfInt;

    invoke-virtual {v0}, Lcom/annimon/stream/PrimitiveIterator$OfInt;->hasNext()Z

    move-result v0

    if-eqz v0, :cond_1

    .line 1065
    iget-object v0, p0, Lcom/annimon/stream/IntStream;->iterator:Lcom/annimon/stream/PrimitiveIterator$OfInt;

    invoke-virtual {v0}, Lcom/annimon/stream/PrimitiveIterator$OfInt;->nextInt()I

    move-result v0

    invoke-interface {p1, v0}, Lcom/annimon/stream/function/IntPredicate;->test(I)Z

    move-result v0

    if-nez v0, :cond_0

    .line 1066
    const/4 v0, 0x0

    return v0

    .line 1069
    :cond_1
    const/4 v0, 0x1

    return v0
.end method

.method public anyMatch(Lcom/annimon/stream/function/IntPredicate;)Z
    .locals 1
    .param p1, "predicate"    # Lcom/annimon/stream/function/IntPredicate;

    .line 1031
    :cond_0
    iget-object v0, p0, Lcom/annimon/stream/IntStream;->iterator:Lcom/annimon/stream/PrimitiveIterator$OfInt;

    invoke-virtual {v0}, Lcom/annimon/stream/PrimitiveIterator$OfInt;->hasNext()Z

    move-result v0

    if-eqz v0, :cond_1

    .line 1032
    iget-object v0, p0, Lcom/annimon/stream/IntStream;->iterator:Lcom/annimon/stream/PrimitiveIterator$OfInt;

    invoke-virtual {v0}, Lcom/annimon/stream/PrimitiveIterator$OfInt;->nextInt()I

    move-result v0

    invoke-interface {p1, v0}, Lcom/annimon/stream/function/IntPredicate;->test(I)Z

    move-result v0

    if-eqz v0, :cond_0

    .line 1033
    const/4 v0, 0x1

    return v0

    .line 1036
    :cond_1
    const/4 v0, 0x0

    return v0
.end method

.method public boxed()Lcom/annimon/stream/Stream;
    .locals 1
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "()",
            "Lcom/annimon/stream/Stream<",
            "Ljava/lang/Integer;",
            ">;"
        }
    .end annotation

    .line 355
    iget-object v0, p0, Lcom/annimon/stream/IntStream;->iterator:Lcom/annimon/stream/PrimitiveIterator$OfInt;

    invoke-static {v0}, Lcom/annimon/stream/Stream;->of(Ljava/util/Iterator;)Lcom/annimon/stream/Stream;

    move-result-object v0

    return-object v0
.end method

.method public collect(Lcom/annimon/stream/function/Supplier;Lcom/annimon/stream/function/ObjIntConsumer;)Ljava/lang/Object;
    .locals 2
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "<R:",
            "Ljava/lang/Object;",
            ">(",
            "Lcom/annimon/stream/function/Supplier<",
            "TR;>;",
            "Lcom/annimon/stream/function/ObjIntConsumer<",
            "TR;>;)TR;"
        }
    .end annotation

    .line 932
    .local p1, "supplier":Lcom/annimon/stream/function/Supplier;, "Lcom/annimon/stream/function/Supplier<TR;>;"
    .local p2, "accumulator":Lcom/annimon/stream/function/ObjIntConsumer;, "Lcom/annimon/stream/function/ObjIntConsumer<TR;>;"
    invoke-interface {p1}, Lcom/annimon/stream/function/Supplier;->get()Ljava/lang/Object;

    move-result-object v0

    .line 933
    .local v0, "result":Ljava/lang/Object;, "TR;"
    :goto_0
    iget-object v1, p0, Lcom/annimon/stream/IntStream;->iterator:Lcom/annimon/stream/PrimitiveIterator$OfInt;

    invoke-virtual {v1}, Lcom/annimon/stream/PrimitiveIterator$OfInt;->hasNext()Z

    move-result v1

    if-eqz v1, :cond_0

    .line 934
    iget-object v1, p0, Lcom/annimon/stream/IntStream;->iterator:Lcom/annimon/stream/PrimitiveIterator$OfInt;

    invoke-virtual {v1}, Lcom/annimon/stream/PrimitiveIterator$OfInt;->nextInt()I

    move-result v1

    .line 935
    .local v1, "value":I
    invoke-interface {p2, v0, v1}, Lcom/annimon/stream/function/ObjIntConsumer;->accept(Ljava/lang/Object;I)V

    .line 936
    .end local v1    # "value":I
    goto :goto_0

    .line 937
    :cond_0
    return-object v0
.end method

.method public count()J
    .locals 4

    .line 998
    const-wide/16 v0, 0x0

    .line 999
    .local v0, "count":J
    :goto_0
    iget-object v2, p0, Lcom/annimon/stream/IntStream;->iterator:Lcom/annimon/stream/PrimitiveIterator$OfInt;

    invoke-virtual {v2}, Lcom/annimon/stream/PrimitiveIterator$OfInt;->hasNext()Z

    move-result v2

    if-eqz v2, :cond_0

    .line 1000
    iget-object v2, p0, Lcom/annimon/stream/IntStream;->iterator:Lcom/annimon/stream/PrimitiveIterator$OfInt;

    invoke-virtual {v2}, Lcom/annimon/stream/PrimitiveIterator$OfInt;->nextInt()I

    .line 1001
    const-wide/16 v2, 0x1

    add-long/2addr v0, v2

    goto :goto_0

    .line 1003
    :cond_0
    return-wide v0
.end method

.method public custom(Lcom/annimon/stream/function/Function;)Ljava/lang/Object;
    .locals 1
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "<R:",
            "Ljava/lang/Object;",
            ">(",
            "Lcom/annimon/stream/function/Function<",
            "Lcom/annimon/stream/IntStream;",
            "TR;>;)TR;"
        }
    .end annotation

    .line 341
    .local p1, "function":Lcom/annimon/stream/function/Function;, "Lcom/annimon/stream/function/Function<Lcom/annimon/stream/IntStream;TR;>;"
    invoke-static {p1}, Lcom/annimon/stream/Objects;->requireNonNull(Ljava/lang/Object;)Ljava/lang/Object;

    .line 342
    invoke-interface {p1, p0}, Lcom/annimon/stream/function/Function;->apply(Ljava/lang/Object;)Ljava/lang/Object;

    move-result-object v0

    return-object v0
.end method

.method public distinct()Lcom/annimon/stream/IntStream;
    .locals 2

    .line 540
    invoke-virtual {p0}, Lcom/annimon/stream/IntStream;->boxed()Lcom/annimon/stream/Stream;

    move-result-object v0

    invoke-virtual {v0}, Lcom/annimon/stream/Stream;->distinct()Lcom/annimon/stream/Stream;

    move-result-object v0

    sget-object v1, Lcom/annimon/stream/IntStream;->UNBOX_FUNCTION:Lcom/annimon/stream/function/ToIntFunction;

    invoke-virtual {v0, v1}, Lcom/annimon/stream/Stream;->mapToInt(Lcom/annimon/stream/function/ToIntFunction;)Lcom/annimon/stream/IntStream;

    move-result-object v0

    return-object v0
.end method

.method public dropWhile(Lcom/annimon/stream/function/IntPredicate;)Lcom/annimon/stream/IntStream;
    .locals 2
    .param p1, "predicate"    # Lcom/annimon/stream/function/IntPredicate;

    .line 705
    new-instance v0, Lcom/annimon/stream/IntStream;

    new-instance v1, Lcom/annimon/stream/IntStream$16;

    invoke-direct {v1, p0, p1}, Lcom/annimon/stream/IntStream$16;-><init>(Lcom/annimon/stream/IntStream;Lcom/annimon/stream/function/IntPredicate;)V

    invoke-direct {v0, v1}, Lcom/annimon/stream/IntStream;-><init>(Lcom/annimon/stream/PrimitiveIterator$OfInt;)V

    return-object v0
.end method

.method public filter(Lcom/annimon/stream/function/IntPredicate;)Lcom/annimon/stream/IntStream;
    .locals 2
    .param p1, "predicate"    # Lcom/annimon/stream/function/IntPredicate;

    .line 376
    new-instance v0, Lcom/annimon/stream/IntStream;

    new-instance v1, Lcom/annimon/stream/IntStream$8;

    invoke-direct {v1, p0, p1}, Lcom/annimon/stream/IntStream$8;-><init>(Lcom/annimon/stream/IntStream;Lcom/annimon/stream/function/IntPredicate;)V

    invoke-direct {v0, v1}, Lcom/annimon/stream/IntStream;-><init>(Lcom/annimon/stream/PrimitiveIterator$OfInt;)V

    return-object v0
.end method

.method public filterNot(Lcom/annimon/stream/function/IntPredicate;)Lcom/annimon/stream/IntStream;
    .locals 1
    .param p1, "predicate"    # Lcom/annimon/stream/function/IntPredicate;

    .line 410
    invoke-static {p1}, Lcom/annimon/stream/function/IntPredicate$Util;->negate(Lcom/annimon/stream/function/IntPredicate;)Lcom/annimon/stream/function/IntPredicate;

    move-result-object v0

    invoke-virtual {p0, v0}, Lcom/annimon/stream/IntStream;->filter(Lcom/annimon/stream/function/IntPredicate;)Lcom/annimon/stream/IntStream;

    move-result-object v0

    return-object v0
.end method

.method public findFirst()Lcom/annimon/stream/OptionalInt;
    .locals 1

    .line 1119
    iget-object v0, p0, Lcom/annimon/stream/IntStream;->iterator:Lcom/annimon/stream/PrimitiveIterator$OfInt;

    invoke-virtual {v0}, Lcom/annimon/stream/PrimitiveIterator$OfInt;->hasNext()Z

    move-result v0

    if-eqz v0, :cond_0

    .line 1120
    iget-object v0, p0, Lcom/annimon/stream/IntStream;->iterator:Lcom/annimon/stream/PrimitiveIterator$OfInt;

    invoke-virtual {v0}, Lcom/annimon/stream/PrimitiveIterator$OfInt;->nextInt()I

    move-result v0

    invoke-static {v0}, Lcom/annimon/stream/OptionalInt;->of(I)Lcom/annimon/stream/OptionalInt;

    move-result-object v0

    return-object v0

    .line 1122
    :cond_0
    invoke-static {}, Lcom/annimon/stream/OptionalInt;->empty()Lcom/annimon/stream/OptionalInt;

    move-result-object v0

    return-object v0
.end method

.method public findSingle()Lcom/annimon/stream/OptionalInt;
    .locals 3

    .line 1187
    iget-object v0, p0, Lcom/annimon/stream/IntStream;->iterator:Lcom/annimon/stream/PrimitiveIterator$OfInt;

    invoke-virtual {v0}, Lcom/annimon/stream/PrimitiveIterator$OfInt;->hasNext()Z

    move-result v0

    if-eqz v0, :cond_1

    .line 1188
    iget-object v0, p0, Lcom/annimon/stream/IntStream;->iterator:Lcom/annimon/stream/PrimitiveIterator$OfInt;

    invoke-virtual {v0}, Lcom/annimon/stream/PrimitiveIterator$OfInt;->next()Ljava/lang/Integer;

    move-result-object v0

    invoke-virtual {v0}, Ljava/lang/Integer;->intValue()I

    move-result v0

    .line 1189
    .local v0, "singleCandidate":I
    iget-object v1, p0, Lcom/annimon/stream/IntStream;->iterator:Lcom/annimon/stream/PrimitiveIterator$OfInt;

    invoke-virtual {v1}, Lcom/annimon/stream/PrimitiveIterator$OfInt;->hasNext()Z

    move-result v1

    if-nez v1, :cond_0

    .line 1192
    invoke-static {v0}, Lcom/annimon/stream/OptionalInt;->of(I)Lcom/annimon/stream/OptionalInt;

    move-result-object v1

    return-object v1

    .line 1190
    :cond_0
    new-instance v1, Ljava/lang/IllegalStateException;

    const-string v2, "IntStream contains more than one element"

    invoke-direct {v1, v2}, Ljava/lang/IllegalStateException;-><init>(Ljava/lang/String;)V

    throw v1

    .line 1195
    .end local v0    # "singleCandidate":I
    :cond_1
    invoke-static {}, Lcom/annimon/stream/OptionalInt;->empty()Lcom/annimon/stream/OptionalInt;

    move-result-object v0

    return-object v0
.end method

.method public flatMap(Lcom/annimon/stream/function/IntFunction;)Lcom/annimon/stream/IntStream;
    .locals 2
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "(",
            "Lcom/annimon/stream/function/IntFunction<",
            "+",
            "Lcom/annimon/stream/IntStream;",
            ">;)",
            "Lcom/annimon/stream/IntStream;"
        }
    .end annotation

    .line 489
    .local p1, "mapper":Lcom/annimon/stream/function/IntFunction;, "Lcom/annimon/stream/function/IntFunction<+Lcom/annimon/stream/IntStream;>;"
    new-instance v0, Lcom/annimon/stream/IntStream;

    new-instance v1, Lcom/annimon/stream/IntStream$11;

    invoke-direct {v1, p0, p1}, Lcom/annimon/stream/IntStream$11;-><init>(Lcom/annimon/stream/IntStream;Lcom/annimon/stream/function/IntFunction;)V

    invoke-direct {v0, v1}, Lcom/annimon/stream/IntStream;-><init>(Lcom/annimon/stream/PrimitiveIterator$OfInt;)V

    return-object v0
.end method

.method public forEach(Lcom/annimon/stream/function/IntConsumer;)V
    .locals 1
    .param p1, "action"    # Lcom/annimon/stream/function/IntConsumer;

    .line 833
    :goto_0
    iget-object v0, p0, Lcom/annimon/stream/IntStream;->iterator:Lcom/annimon/stream/PrimitiveIterator$OfInt;

    invoke-virtual {v0}, Lcom/annimon/stream/PrimitiveIterator$OfInt;->hasNext()Z

    move-result v0

    if-eqz v0, :cond_0

    .line 834
    iget-object v0, p0, Lcom/annimon/stream/IntStream;->iterator:Lcom/annimon/stream/PrimitiveIterator$OfInt;

    invoke-virtual {v0}, Lcom/annimon/stream/PrimitiveIterator$OfInt;->nextInt()I

    move-result v0

    invoke-interface {p1, v0}, Lcom/annimon/stream/function/IntConsumer;->accept(I)V

    goto :goto_0

    .line 836
    :cond_0
    return-void
.end method

.method public iterator()Lcom/annimon/stream/PrimitiveIterator$OfInt;
    .locals 1

    .line 271
    iget-object v0, p0, Lcom/annimon/stream/IntStream;->iterator:Lcom/annimon/stream/PrimitiveIterator$OfInt;

    return-object v0
.end method

.method public limit(J)Lcom/annimon/stream/IntStream;
    .locals 3
    .param p1, "maxSize"    # J

    .line 749
    const-wide/16 v0, 0x0

    cmp-long v2, p1, v0

    if-ltz v2, :cond_1

    .line 752
    cmp-long v0, p1, v0

    if-nez v0, :cond_0

    .line 753
    invoke-static {}, Lcom/annimon/stream/IntStream;->empty()Lcom/annimon/stream/IntStream;

    move-result-object v0

    return-object v0

    .line 755
    :cond_0
    new-instance v0, Lcom/annimon/stream/IntStream;

    new-instance v1, Lcom/annimon/stream/IntStream$17;

    invoke-direct {v1, p0, p1, p2}, Lcom/annimon/stream/IntStream$17;-><init>(Lcom/annimon/stream/IntStream;J)V

    invoke-direct {v0, v1}, Lcom/annimon/stream/IntStream;-><init>(Lcom/annimon/stream/PrimitiveIterator$OfInt;)V

    return-object v0

    .line 750
    :cond_1
    new-instance v0, Ljava/lang/IllegalArgumentException;

    const-string v1, "maxSize cannot be negative"

    invoke-direct {v0, v1}, Ljava/lang/IllegalArgumentException;-><init>(Ljava/lang/String;)V

    throw v0
.end method

.method public map(Lcom/annimon/stream/function/IntUnaryOperator;)Lcom/annimon/stream/IntStream;
    .locals 2
    .param p1, "mapper"    # Lcom/annimon/stream/function/IntUnaryOperator;

    .line 431
    new-instance v0, Lcom/annimon/stream/IntStream;

    new-instance v1, Lcom/annimon/stream/IntStream$9;

    invoke-direct {v1, p0, p1}, Lcom/annimon/stream/IntStream$9;-><init>(Lcom/annimon/stream/IntStream;Lcom/annimon/stream/function/IntUnaryOperator;)V

    invoke-direct {v0, v1}, Lcom/annimon/stream/IntStream;-><init>(Lcom/annimon/stream/PrimitiveIterator$OfInt;)V

    return-object v0
.end method

.method public mapToObj(Lcom/annimon/stream/function/IntFunction;)Lcom/annimon/stream/Stream;
    .locals 1
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "<R:",
            "Ljava/lang/Object;",
            ">(",
            "Lcom/annimon/stream/function/IntFunction<",
            "+TR;>;)",
            "Lcom/annimon/stream/Stream<",
            "TR;>;"
        }
    .end annotation

    .line 455
    .local p1, "mapper":Lcom/annimon/stream/function/IntFunction;, "Lcom/annimon/stream/function/IntFunction<+TR;>;"
    new-instance v0, Lcom/annimon/stream/IntStream$10;

    invoke-direct {v0, p0, p1}, Lcom/annimon/stream/IntStream$10;-><init>(Lcom/annimon/stream/IntStream;Lcom/annimon/stream/function/IntFunction;)V

    invoke-static {v0}, Lcom/annimon/stream/Stream;->of(Ljava/util/Iterator;)Lcom/annimon/stream/Stream;

    move-result-object v0

    return-object v0
.end method

.method public max()Lcom/annimon/stream/OptionalInt;
    .locals 1

    .line 982
    new-instance v0, Lcom/annimon/stream/IntStream$20;

    invoke-direct {v0, p0}, Lcom/annimon/stream/IntStream$20;-><init>(Lcom/annimon/stream/IntStream;)V

    invoke-virtual {p0, v0}, Lcom/annimon/stream/IntStream;->reduce(Lcom/annimon/stream/function/IntBinaryOperator;)Lcom/annimon/stream/OptionalInt;

    move-result-object v0

    return-object v0
.end method

.method public min()Lcom/annimon/stream/OptionalInt;
    .locals 1

    .line 964
    new-instance v0, Lcom/annimon/stream/IntStream$19;

    invoke-direct {v0, p0}, Lcom/annimon/stream/IntStream$19;-><init>(Lcom/annimon/stream/IntStream;)V

    invoke-virtual {p0, v0}, Lcom/annimon/stream/IntStream;->reduce(Lcom/annimon/stream/function/IntBinaryOperator;)Lcom/annimon/stream/OptionalInt;

    move-result-object v0

    return-object v0
.end method

.method public noneMatch(Lcom/annimon/stream/function/IntPredicate;)Z
    .locals 2
    .param p1, "predicate"    # Lcom/annimon/stream/function/IntPredicate;

    .line 1098
    iget-object v0, p0, Lcom/annimon/stream/IntStream;->iterator:Lcom/annimon/stream/PrimitiveIterator$OfInt;

    invoke-virtual {v0}, Lcom/annimon/stream/PrimitiveIterator$OfInt;->hasNext()Z

    move-result v0

    const/4 v1, 0x1

    if-nez v0, :cond_0

    .line 1099
    return v1

    .line 1101
    :cond_0
    iget-object v0, p0, Lcom/annimon/stream/IntStream;->iterator:Lcom/annimon/stream/PrimitiveIterator$OfInt;

    invoke-virtual {v0}, Lcom/annimon/stream/PrimitiveIterator$OfInt;->hasNext()Z

    move-result v0

    if-eqz v0, :cond_1

    .line 1102
    iget-object v0, p0, Lcom/annimon/stream/IntStream;->iterator:Lcom/annimon/stream/PrimitiveIterator$OfInt;

    invoke-virtual {v0}, Lcom/annimon/stream/PrimitiveIterator$OfInt;->nextInt()I

    move-result v0

    invoke-interface {p1, v0}, Lcom/annimon/stream/function/IntPredicate;->test(I)Z

    move-result v0

    if-eqz v0, :cond_0

    .line 1103
    const/4 v0, 0x0

    return v0

    .line 1106
    :cond_1
    return v1
.end method

.method public peek(Lcom/annimon/stream/function/IntConsumer;)Lcom/annimon/stream/IntStream;
    .locals 2
    .param p1, "action"    # Lcom/annimon/stream/function/IntConsumer;

    .line 649
    new-instance v0, Lcom/annimon/stream/IntStream;

    new-instance v1, Lcom/annimon/stream/IntStream$14;

    invoke-direct {v1, p0, p1}, Lcom/annimon/stream/IntStream$14;-><init>(Lcom/annimon/stream/IntStream;Lcom/annimon/stream/function/IntConsumer;)V

    invoke-direct {v0, v1}, Lcom/annimon/stream/IntStream;-><init>(Lcom/annimon/stream/PrimitiveIterator$OfInt;)V

    return-object v0
.end method

.method public reduce(ILcom/annimon/stream/function/IntBinaryOperator;)I
    .locals 2
    .param p1, "identity"    # I
    .param p2, "op"    # Lcom/annimon/stream/function/IntBinaryOperator;

    .line 867
    move v0, p1

    .line 868
    .local v0, "result":I
    :goto_0
    iget-object v1, p0, Lcom/annimon/stream/IntStream;->iterator:Lcom/annimon/stream/PrimitiveIterator$OfInt;

    invoke-virtual {v1}, Lcom/annimon/stream/PrimitiveIterator$OfInt;->hasNext()Z

    move-result v1

    if-eqz v1, :cond_0

    .line 869
    iget-object v1, p0, Lcom/annimon/stream/IntStream;->iterator:Lcom/annimon/stream/PrimitiveIterator$OfInt;

    invoke-virtual {v1}, Lcom/annimon/stream/PrimitiveIterator$OfInt;->nextInt()I

    move-result v1

    .line 870
    .local v1, "value":I
    invoke-interface {p2, v0, v1}, Lcom/annimon/stream/function/IntBinaryOperator;->applyAsInt(II)I

    move-result v0

    .line 871
    .end local v1    # "value":I
    goto :goto_0

    .line 872
    :cond_0
    return v0
.end method

.method public reduce(Lcom/annimon/stream/function/IntBinaryOperator;)Lcom/annimon/stream/OptionalInt;
    .locals 3
    .param p1, "op"    # Lcom/annimon/stream/function/IntBinaryOperator;

    .line 890
    const/4 v0, 0x0

    .line 891
    .local v0, "foundAny":Z
    const/4 v1, 0x0

    .line 892
    .local v1, "result":I
    :goto_0
    iget-object v2, p0, Lcom/annimon/stream/IntStream;->iterator:Lcom/annimon/stream/PrimitiveIterator$OfInt;

    invoke-virtual {v2}, Lcom/annimon/stream/PrimitiveIterator$OfInt;->hasNext()Z

    move-result v2

    if-eqz v2, :cond_1

    .line 893
    iget-object v2, p0, Lcom/annimon/stream/IntStream;->iterator:Lcom/annimon/stream/PrimitiveIterator$OfInt;

    invoke-virtual {v2}, Lcom/annimon/stream/PrimitiveIterator$OfInt;->nextInt()I

    move-result v2

    .line 895
    .local v2, "value":I
    if-nez v0, :cond_0

    .line 896
    const/4 v0, 0x1

    .line 897
    move v1, v2

    goto :goto_1

    .line 899
    :cond_0
    invoke-interface {p1, v1, v2}, Lcom/annimon/stream/function/IntBinaryOperator;->applyAsInt(II)I

    move-result v1

    .line 901
    .end local v2    # "value":I
    :goto_1
    goto :goto_0

    .line 902
    :cond_1
    if-eqz v0, :cond_2

    invoke-static {v1}, Lcom/annimon/stream/OptionalInt;->of(I)Lcom/annimon/stream/OptionalInt;

    move-result-object v2

    goto :goto_2

    :cond_2
    invoke-static {}, Lcom/annimon/stream/OptionalInt;->empty()Lcom/annimon/stream/OptionalInt;

    move-result-object v2

    :goto_2
    return-object v2
.end method

.method public sample(I)Lcom/annimon/stream/IntStream;
    .locals 2
    .param p1, "stepWidth"    # I

    .line 616
    if-lez p1, :cond_1

    .line 617
    const/4 v0, 0x1

    if-ne p1, v0, :cond_0

    return-object p0

    .line 618
    :cond_0
    new-instance v0, Lcom/annimon/stream/IntStream;

    new-instance v1, Lcom/annimon/stream/IntStream$13;

    invoke-direct {v1, p0, p1}, Lcom/annimon/stream/IntStream$13;-><init>(Lcom/annimon/stream/IntStream;I)V

    invoke-direct {v0, v1}, Lcom/annimon/stream/IntStream;-><init>(Lcom/annimon/stream/PrimitiveIterator$OfInt;)V

    return-object v0

    .line 616
    :cond_1
    new-instance v0, Ljava/lang/IllegalArgumentException;

    const-string/jumbo v1, "stepWidth cannot be zero or negative"

    invoke-direct {v0, v1}, Ljava/lang/IllegalArgumentException;-><init>(Ljava/lang/String;)V

    throw v0
.end method

.method public single()I
    .locals 3

    .line 1151
    iget-object v0, p0, Lcom/annimon/stream/IntStream;->iterator:Lcom/annimon/stream/PrimitiveIterator$OfInt;

    invoke-virtual {v0}, Lcom/annimon/stream/PrimitiveIterator$OfInt;->hasNext()Z

    move-result v0

    if-eqz v0, :cond_1

    .line 1152
    iget-object v0, p0, Lcom/annimon/stream/IntStream;->iterator:Lcom/annimon/stream/PrimitiveIterator$OfInt;

    invoke-virtual {v0}, Lcom/annimon/stream/PrimitiveIterator$OfInt;->next()Ljava/lang/Integer;

    move-result-object v0

    invoke-virtual {v0}, Ljava/lang/Integer;->intValue()I

    move-result v0

    .line 1153
    .local v0, "singleCandidate":I
    iget-object v1, p0, Lcom/annimon/stream/IntStream;->iterator:Lcom/annimon/stream/PrimitiveIterator$OfInt;

    invoke-virtual {v1}, Lcom/annimon/stream/PrimitiveIterator$OfInt;->hasNext()Z

    move-result v1

    if-nez v1, :cond_0

    .line 1156
    return v0

    .line 1154
    :cond_0
    new-instance v1, Ljava/lang/IllegalStateException;

    const-string v2, "IntStream contains more than one element"

    invoke-direct {v1, v2}, Ljava/lang/IllegalStateException;-><init>(Ljava/lang/String;)V

    throw v1

    .line 1159
    .end local v0    # "singleCandidate":I
    :cond_1
    new-instance v0, Ljava/util/NoSuchElementException;

    const-string v1, "IntStream contains no element"

    invoke-direct {v0, v1}, Ljava/util/NoSuchElementException;-><init>(Ljava/lang/String;)V

    throw v0
.end method

.method public skip(J)Lcom/annimon/stream/IntStream;
    .locals 3
    .param p1, "n"    # J

    .line 796
    const-wide/16 v0, 0x0

    cmp-long v2, p1, v0

    if-ltz v2, :cond_1

    .line 799
    cmp-long v0, p1, v0

    if-nez v0, :cond_0

    .line 800
    return-object p0

    .line 802
    :cond_0
    new-instance v0, Lcom/annimon/stream/IntStream;

    new-instance v1, Lcom/annimon/stream/IntStream$18;

    invoke-direct {v1, p0, p1, p2}, Lcom/annimon/stream/IntStream$18;-><init>(Lcom/annimon/stream/IntStream;J)V

    invoke-direct {v0, v1}, Lcom/annimon/stream/IntStream;-><init>(Lcom/annimon/stream/PrimitiveIterator$OfInt;)V

    return-object v0

    .line 797
    :cond_1
    new-instance v0, Ljava/lang/IllegalArgumentException;

    const-string v1, "n cannot be negative"

    invoke-direct {v0, v1}, Ljava/lang/IllegalArgumentException;-><init>(Ljava/lang/String;)V

    throw v0
.end method

.method public sorted()Lcom/annimon/stream/IntStream;
    .locals 2

    .line 558
    new-instance v0, Lcom/annimon/stream/IntStream;

    new-instance v1, Lcom/annimon/stream/IntStream$12;

    invoke-direct {v1, p0}, Lcom/annimon/stream/IntStream$12;-><init>(Lcom/annimon/stream/IntStream;)V

    invoke-direct {v0, v1}, Lcom/annimon/stream/IntStream;-><init>(Lcom/annimon/stream/PrimitiveIterator$OfInt;)V

    return-object v0
.end method

.method public sorted(Ljava/util/Comparator;)Lcom/annimon/stream/IntStream;
    .locals 2
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "(",
            "Ljava/util/Comparator<",
            "Ljava/lang/Integer;",
            ">;)",
            "Lcom/annimon/stream/IntStream;"
        }
    .end annotation

    .line 595
    .local p1, "comparator":Ljava/util/Comparator;, "Ljava/util/Comparator<Ljava/lang/Integer;>;"
    invoke-virtual {p0}, Lcom/annimon/stream/IntStream;->boxed()Lcom/annimon/stream/Stream;

    move-result-object v0

    invoke-virtual {v0, p1}, Lcom/annimon/stream/Stream;->sorted(Ljava/util/Comparator;)Lcom/annimon/stream/Stream;

    move-result-object v0

    sget-object v1, Lcom/annimon/stream/IntStream;->UNBOX_FUNCTION:Lcom/annimon/stream/function/ToIntFunction;

    invoke-virtual {v0, v1}, Lcom/annimon/stream/Stream;->mapToInt(Lcom/annimon/stream/function/ToIntFunction;)Lcom/annimon/stream/IntStream;

    move-result-object v0

    return-object v0
.end method

.method public sum()I
    .locals 2

    .line 946
    const/4 v0, 0x0

    .line 947
    .local v0, "sum":I
    :goto_0
    iget-object v1, p0, Lcom/annimon/stream/IntStream;->iterator:Lcom/annimon/stream/PrimitiveIterator$OfInt;

    invoke-virtual {v1}, Lcom/annimon/stream/PrimitiveIterator$OfInt;->hasNext()Z

    move-result v1

    if-eqz v1, :cond_0

    .line 948
    iget-object v1, p0, Lcom/annimon/stream/IntStream;->iterator:Lcom/annimon/stream/PrimitiveIterator$OfInt;

    invoke-virtual {v1}, Lcom/annimon/stream/PrimitiveIterator$OfInt;->nextInt()I

    move-result v1

    add-int/2addr v0, v1

    goto :goto_0

    .line 951
    :cond_0
    return v0
.end method

.method public takeWhile(Lcom/annimon/stream/function/IntPredicate;)Lcom/annimon/stream/IntStream;
    .locals 2
    .param p1, "predicate"    # Lcom/annimon/stream/function/IntPredicate;

    .line 680
    new-instance v0, Lcom/annimon/stream/IntStream;

    new-instance v1, Lcom/annimon/stream/IntStream$15;

    invoke-direct {v1, p0, p1}, Lcom/annimon/stream/IntStream$15;-><init>(Lcom/annimon/stream/IntStream;Lcom/annimon/stream/function/IntPredicate;)V

    invoke-direct {v0, v1}, Lcom/annimon/stream/IntStream;-><init>(Lcom/annimon/stream/PrimitiveIterator$OfInt;)V

    return-object v0
.end method

.method public toArray()[I
    .locals 2

    .line 913
    new-instance v0, Lcom/annimon/stream/SpinedBuffer$OfInt;

    invoke-direct {v0}, Lcom/annimon/stream/SpinedBuffer$OfInt;-><init>()V

    .line 915
    .local v0, "b":Lcom/annimon/stream/SpinedBuffer$OfInt;
    invoke-virtual {p0, v0}, Lcom/annimon/stream/IntStream;->forEach(Lcom/annimon/stream/function/IntConsumer;)V

    .line 917
    invoke-virtual {v0}, Lcom/annimon/stream/SpinedBuffer$OfInt;->asPrimitiveArray()Ljava/lang/Object;

    move-result-object v1

    check-cast v1, [I

    return-object v1
.end method
