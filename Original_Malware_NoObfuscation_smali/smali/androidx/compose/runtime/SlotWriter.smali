.class public final Landroidx/compose/runtime/SlotWriter;
.super Ljava/lang/Object;
.source "SlotTable.kt"


# annotations
.annotation system Ldalvik/annotation/SourceDebugExtension;
    value = "SMAP\nSlotTable.kt\nKotlin\n*S Kotlin\n*F\n+ 1 SlotTable.kt\nandroidx/compose/runtime/SlotWriter\n+ 2 Composer.kt\nandroidx/compose/runtime/ComposerKt\n+ 3 fake.kt\nkotlin/jvm/internal/FakeKt\n+ 4 SlotTable.kt\nandroidx/compose/runtime/SlotTable\n+ 5 SlotTable.kt\nandroidx/compose/runtime/SlotTableKt\n+ 6 ListUtils.kt\nandroidx/compose/runtime/snapshots/ListUtilsKt\n*L\n1#1,2687:1\n3446#2,5:2688\n3446#2,5:2693\n3446#2,5:2698\n3446#2,5:2704\n3446#2,5:2709\n3446#2,5:2714\n3446#2,5:2719\n3446#2,5:2724\n3446#2,5:2733\n3446#2,5:2747\n3446#2,5:2752\n3446#2,5:2757\n1#3:2703\n161#4,4:2729\n166#4,3:2738\n2652#5,6:2741\n28#6,6:2762\n63#6,3:2768\n28#6,4:2771\n66#6,2:2775\n33#6:2777\n68#6:2778\n155#6,3:2779\n50#6,4:2782\n158#6,2:2786\n55#6:2788\n160#6:2789\n*S KotlinDebug\n*F\n+ 1 SlotTable.kt\nandroidx/compose/runtime/SlotWriter\n*L\n1123#1:2688,5\n1136#1:2693,5\n1139#1:2698,5\n1179#1:2704,5\n1194#1:2709,5\n1223#1:2714,5\n1263#1:2719,5\n1642#1:2724,5\n1796#1:2733,5\n1954#1:2747,5\n1966#1:2752,5\n2151#1:2757,5\n1687#1:2729,4\n1687#1:2738,3\n1811#1:2741,6\n2247#1:2762,6\n2385#1:2768,3\n2385#1:2771,4\n2385#1:2775,2\n2385#1:2777\n2385#1:2778\n2388#1:2779,3\n2388#1:2782,4\n2388#1:2786,2\n2388#1:2788\n2388#1:2789\n*E\n"
.end annotation

.annotation runtime Lkotlin/Metadata;
    d1 = {
        "\u0000r\n\u0002\u0018\u0002\n\u0002\u0010\u0000\n\u0000\n\u0002\u0018\u0002\n\u0002\u0008\u0002\n\u0002\u0018\u0002\n\u0002\u0018\u0002\n\u0002\u0018\u0002\n\u0000\n\u0002\u0010\u0008\n\u0002\u0008\u0003\n\u0002\u0010\u000b\n\u0002\u0008\t\n\u0002\u0018\u0002\n\u0002\u0008\u0003\n\u0002\u0010\u0015\n\u0002\u0008\n\n\u0002\u0010\u0011\n\u0002\u0008\u0008\n\u0002\u0010\u0002\n\u0002\u0008\u0017\n\u0002\u0010(\n\u0000\n\u0002\u0010\u000e\n\u0002\u0008\u0006\n\u0002\u0010 \n\u0002\u00080\n\u0002\u0018\u0002\n\u0002\u0018\u0002\n\u0002\u0008\u0004\u0008\u0000\u0018\u00002\u00020\u0001B\r\u0012\u0006\u0010\u0002\u001a\u00020\u0003\u00a2\u0006\u0002\u0010\u0004J\u000e\u0010/\u001a\u0002002\u0006\u00101\u001a\u00020\nJ\u0010\u00102\u001a\u00020\u00072\u0008\u0008\u0002\u00103\u001a\u00020\nJ\u000e\u00104\u001a\u00020\n2\u0006\u00102\u001a\u00020\u0007J\u0006\u00105\u001a\u000200J\u0006\u00106\u001a\u000200J \u00107\u001a\u00020\n2\u0006\u00102\u001a\u00020\n2\u0006\u00108\u001a\u00020\n2\u0006\u0010\t\u001a\u00020\nH\u0002J\u0010\u00109\u001a\u00020\n2\u0006\u00103\u001a\u00020\nH\u0002J\u0010\u0010:\u001a\u00020\n2\u0006\u00109\u001a\u00020\nH\u0002J(\u0010;\u001a\u00020\n2\u0006\u00103\u001a\u00020\n2\u0006\u0010<\u001a\u00020\n2\u0006\u00108\u001a\u00020\n2\u0006\u0010\t\u001a\u00020\nH\u0002J\u0006\u0010=\u001a\u00020\nJ\u0006\u0010>\u001a\u000200J\u000e\u0010?\u001a\u0002002\u0006\u00102\u001a\u00020\u0007J\u000e\u0010?\u001a\u0002002\u0006\u00103\u001a\u00020\nJ \u0010@\u001a\u0002002\u0006\u0010\"\u001a\u00020\n2\u0006\u0010=\u001a\u00020\n2\u0006\u0010A\u001a\u00020\nH\u0002J\u0010\u0010B\u001a\u0004\u0018\u00010\u00012\u0006\u00103\u001a\u00020\nJ\u0010\u0010C\u001a\u00020\n2\u0006\u00103\u001a\u00020\nH\u0002J\u000e\u0010D\u001a\u00020\n2\u0006\u00103\u001a\u00020\nJ\u0010\u0010E\u001a\u0004\u0018\u00010\u00012\u0006\u00103\u001a\u00020\nJ\u000e\u0010F\u001a\u00020\n2\u0006\u00103\u001a\u00020\nJ\u000e\u0010G\u001a\n\u0012\u0006\u0012\u0004\u0018\u00010\u00010HJ\u0006\u0010I\u001a\u00020JJ\u0010\u0010K\u001a\u0002002\u0008\u0010L\u001a\u0004\u0018\u00010\u0001J\u0010\u0010M\u001a\u0002002\u0006\u0010$\u001a\u00020\nH\u0002J\u0018\u0010N\u001a\u0002002\u0006\u0010$\u001a\u00020\n2\u0006\u0010O\u001a\u00020\nH\u0002J\u000e\u0010P\u001a\u0008\u0012\u0004\u0012\u00020\n0QH\u0002J \u0010R\u001a\u0002002\u0006\u0010S\u001a\u00020\n2\u0006\u0010T\u001a\u00020\n2\u0006\u0010$\u001a\u00020\nH\u0002J\u001c\u0010U\u001a\u0008\u0012\u0004\u0012\u00020\u00070Q2\u0006\u0010\u0002\u001a\u00020\u00032\u0006\u00103\u001a\u00020\nJ\u000e\u0010V\u001a\u0002002\u0006\u0010W\u001a\u00020\nJ\u0010\u0010X\u001a\u0002002\u0006\u00103\u001a\u00020\nH\u0002J\u0018\u0010Y\u001a\u0002002\u0006\u00103\u001a\u00020\n2\u0006\u0010O\u001a\u00020\nH\u0002J\u0010\u0010Z\u001a\u0004\u0018\u00010\u00012\u0006\u00102\u001a\u00020\u0007J\u0010\u0010Z\u001a\u0004\u0018\u00010\u00012\u0006\u00103\u001a\u00020\nJ\u000e\u0010\"\u001a\u00020\n2\u0006\u00102\u001a\u00020\u0007J\u000e\u0010\"\u001a\u00020\n2\u0006\u00103\u001a\u00020\nJ\u0010\u0010[\u001a\u00020\n2\u0006\u00103\u001a\u00020\nH\u0002J\u0018\u0010\\\u001a\u00020\n2\u0006\u00103\u001a\u00020\n2\u0006\u0010<\u001a\u00020\nH\u0002J\u0018\u0010]\u001a\u00020\u000e2\u0006\u0010<\u001a\u00020\n2\u0006\u0010$\u001a\u00020\nH\u0002J\u0006\u0010^\u001a\u00020\u000eJ\u0018\u0010_\u001a\u00020\u000e2\u0006\u0010`\u001a\u00020\n2\u0006\u0010a\u001a\u00020\nH\u0002J \u0010b\u001a\u0002002\u0006\u0010`\u001a\u00020\n2\u0006\u0010a\u001a\u00020\n2\u0006\u0010O\u001a\u00020\nH\u0002J\u0008\u0010c\u001a\u00020\nH\u0002J\u0008\u0010d\u001a\u000200H\u0002J\u000e\u0010e\u001a\u0002002\u0006\u00102\u001a\u00020\u0007J\u0010\u0010f\u001a\u0002002\u0008\u0010L\u001a\u0004\u0018\u00010\u0001J\u001a\u0010f\u001a\u0004\u0018\u00010\u00012\u0006\u00103\u001a\u00020\n2\u0008\u0010L\u001a\u0004\u0018\u00010\u0001J\u0008\u0010g\u001a\u0004\u0018\u00010\u0001J\u0006\u0010h\u001a\u00020\nJ\u0006\u0010i\u001a\u000200J\u0018\u0010j\u001a\u0002002\u0006\u0010k\u001a\u00020\n2\u0008\u0010l\u001a\u0004\u0018\u00010\u0001J\"\u0010j\u001a\u0002002\u0006\u0010k\u001a\u00020\n2\u0008\u0010m\u001a\u0004\u0018\u00010\u00012\u0008\u0010l\u001a\u0004\u0018\u00010\u0001J\u0006\u0010n\u001a\u000200J\u000e\u0010n\u001a\u0002002\u0006\u0010k\u001a\u00020\nJ\u0018\u0010n\u001a\u0002002\u0006\u0010k\u001a\u00020\n2\u0008\u0010o\u001a\u0004\u0018\u00010\u0001J,\u0010n\u001a\u0002002\u0006\u0010k\u001a\u00020\n2\u0008\u0010m\u001a\u0004\u0018\u00010\u00012\u0006\u0010\u001f\u001a\u00020\u000e2\u0008\u0010l\u001a\u0004\u0018\u00010\u0001H\u0002J\u0010\u0010p\u001a\u0002002\u0008\u0010k\u001a\u0004\u0018\u00010\u0001J\u001a\u0010p\u001a\u0002002\u0008\u0010k\u001a\u0004\u0018\u00010\u00012\u0008\u0010Z\u001a\u0004\u0018\u00010\u0001J\u0008\u0010q\u001a\u00020JH\u0016J\u0012\u0010r\u001a\u0004\u0018\u00010\u00012\u0008\u0010L\u001a\u0004\u0018\u00010\u0001J\u0018\u0010s\u001a\u0002002\u0006\u0010t\u001a\u00020\n2\u0006\u0010u\u001a\u00020\nH\u0002J\u0010\u0010v\u001a\u0002002\u0008\u0010L\u001a\u0004\u0018\u00010\u0001J\u0018\u0010w\u001a\u0002002\u0006\u00102\u001a\u00020\u00072\u0008\u0010L\u001a\u0004\u0018\u00010\u0001J\u0010\u0010w\u001a\u0002002\u0008\u0010L\u001a\u0004\u0018\u00010\u0001J\u001a\u0010x\u001a\u0002002\u0006\u00103\u001a\u00020\n2\u0008\u0010L\u001a\u0004\u0018\u00010\u0001H\u0002J\u0010\u0010y\u001a\u0002002\u0008\u0010L\u001a\u0004\u0018\u00010\u0001J\r\u0010z\u001a\u000200H\u0000\u00a2\u0006\u0002\u0008{J\r\u0010|\u001a\u000200H\u0000\u00a2\u0006\u0002\u0008}J\u0014\u0010~\u001a\u00020\n*\u00020\u001c2\u0006\u0010\u007f\u001a\u00020\nH\u0002J\u0014\u00109\u001a\u00020\n*\u00020\u001c2\u0006\u0010\u007f\u001a\u00020\nH\u0002J\u0013\u0010\u0080\u0001\u001a\u0008\u0012\u0004\u0012\u00020\n0Q*\u00020\u001cH\u0002J\u001b\u0010\u0081\u0001\u001a\u000200*\u00080\u0082\u0001j\u0003`\u0083\u00012\u0006\u00103\u001a\u00020\nH\u0002J\u0015\u0010\u0084\u0001\u001a\u00020\n*\u00020\u001c2\u0006\u0010\u007f\u001a\u00020\nH\u0002J\u0014\u0010\"\u001a\u00020\n*\u00020\u001c2\u0006\u00103\u001a\u00020\nH\u0002J\u0015\u0010\u0085\u0001\u001a\u00020\n*\u00020\u001c2\u0006\u0010\u007f\u001a\u00020\nH\u0002J\u001d\u0010\u0086\u0001\u001a\u000200*\u00020\u001c2\u0006\u0010\u007f\u001a\u00020\n2\u0006\u00109\u001a\u00020\nH\u0002R\u001e\u0010\u0005\u001a\u0012\u0012\u0004\u0012\u00020\u00070\u0006j\u0008\u0012\u0004\u0012\u00020\u0007`\u0008X\u0082\u000e\u00a2\u0006\u0002\n\u0000R\u0014\u0010\t\u001a\u00020\n8BX\u0082\u0004\u00a2\u0006\u0006\u001a\u0004\u0008\u000b\u0010\u000cR\u001e\u0010\u000f\u001a\u00020\u000e2\u0006\u0010\r\u001a\u00020\u000e@BX\u0086\u000e\u00a2\u0006\u0008\n\u0000\u001a\u0004\u0008\u0010\u0010\u0011R\u001e\u0010\u0012\u001a\u00020\n2\u0006\u0010\r\u001a\u00020\n@BX\u0086\u000e\u00a2\u0006\u0008\n\u0000\u001a\u0004\u0008\u0013\u0010\u000cR\u000e\u0010\u0014\u001a\u00020\nX\u0082\u000e\u00a2\u0006\u0002\n\u0000R\u000e\u0010\u0015\u001a\u00020\nX\u0082\u000e\u00a2\u0006\u0002\n\u0000R\u000e\u0010\u0016\u001a\u00020\nX\u0082\u000e\u00a2\u0006\u0002\n\u0000R\u000e\u0010\u0017\u001a\u00020\u0018X\u0082\u0004\u00a2\u0006\u0002\n\u0000R\u000e\u0010\u0019\u001a\u00020\nX\u0082\u000e\u00a2\u0006\u0002\n\u0000R\u000e\u0010\u001a\u001a\u00020\nX\u0082\u000e\u00a2\u0006\u0002\n\u0000R\u000e\u0010\u001b\u001a\u00020\u001cX\u0082\u000e\u00a2\u0006\u0002\n\u0000R\u000e\u0010\u001d\u001a\u00020\nX\u0082\u000e\u00a2\u0006\u0002\n\u0000R\u0011\u0010\u001e\u001a\u00020\u000e8F\u00a2\u0006\u0006\u001a\u0004\u0008\u001e\u0010\u0011R\u0011\u0010\u001f\u001a\u00020\u000e8F\u00a2\u0006\u0006\u001a\u0004\u0008\u001f\u0010\u0011R\u000e\u0010 \u001a\u00020\nX\u0082\u000e\u00a2\u0006\u0002\n\u0000R\u000e\u0010!\u001a\u00020\u0018X\u0082\u0004\u00a2\u0006\u0002\n\u0000R\u001e\u0010\"\u001a\u00020\n2\u0006\u0010\r\u001a\u00020\n@BX\u0086\u000e\u00a2\u0006\u0008\n\u0000\u001a\u0004\u0008#\u0010\u000cR\u0014\u0010$\u001a\u00020\n8@X\u0080\u0004\u00a2\u0006\u0006\u001a\u0004\u0008%\u0010\u000cR\u0018\u0010&\u001a\n\u0012\u0006\u0012\u0004\u0018\u00010\u00010\'X\u0082\u000e\u00a2\u0006\u0004\n\u0002\u0010(R\u000e\u0010)\u001a\u00020\nX\u0082\u000e\u00a2\u0006\u0002\n\u0000R\u000e\u0010*\u001a\u00020\nX\u0082\u000e\u00a2\u0006\u0002\n\u0000R\u000e\u0010+\u001a\u00020\nX\u0082\u000e\u00a2\u0006\u0002\n\u0000R\u000e\u0010,\u001a\u00020\u0018X\u0082\u0004\u00a2\u0006\u0002\n\u0000R\u0014\u0010\u0002\u001a\u00020\u0003X\u0080\u0004\u00a2\u0006\u0008\n\u0000\u001a\u0004\u0008-\u0010.\u00a8\u0006\u0087\u0001"
    }
    d2 = {
        "Landroidx/compose/runtime/SlotWriter;",
        "",
        "table",
        "Landroidx/compose/runtime/SlotTable;",
        "(Landroidx/compose/runtime/SlotTable;)V",
        "anchors",
        "Ljava/util/ArrayList;",
        "Landroidx/compose/runtime/Anchor;",
        "Lkotlin/collections/ArrayList;",
        "capacity",
        "",
        "getCapacity",
        "()I",
        "<set-?>",
        "",
        "closed",
        "getClosed",
        "()Z",
        "currentGroup",
        "getCurrentGroup",
        "currentGroupEnd",
        "currentSlot",
        "currentSlotEnd",
        "endStack",
        "Landroidx/compose/runtime/IntStack;",
        "groupGapLen",
        "groupGapStart",
        "groups",
        "",
        "insertCount",
        "isGroupEnd",
        "isNode",
        "nodeCount",
        "nodeCountStack",
        "parent",
        "getParent",
        "size",
        "getSize$runtime_release",
        "slots",
        "",
        "[Ljava/lang/Object;",
        "slotsGapLen",
        "slotsGapOwner",
        "slotsGapStart",
        "startStack",
        "getTable$runtime_release",
        "()Landroidx/compose/runtime/SlotTable;",
        "advanceBy",
        "",
        "amount",
        "anchor",
        "index",
        "anchorIndex",
        "beginInsert",
        "close",
        "dataAnchorToDataIndex",
        "gapLen",
        "dataIndex",
        "dataIndexToDataAddress",
        "dataIndexToDataAnchor",
        "gapStart",
        "endGroup",
        "endInsert",
        "ensureStarted",
        "fixParentAnchorsFor",
        "firstChild",
        "groupAux",
        "groupIndexToAddress",
        "groupKey",
        "groupObjectKey",
        "groupSize",
        "groupSlots",
        "",
        "groupsAsString",
        "",
        "insertAux",
        "value",
        "insertGroups",
        "insertSlots",
        "group",
        "keys",
        "",
        "moveAnchors",
        "originalLocation",
        "newLocation",
        "moveFrom",
        "moveGroup",
        "offset",
        "moveGroupGapTo",
        "moveSlotGapTo",
        "node",
        "parentAnchorToIndex",
        "parentIndexToAnchor",
        "removeAnchors",
        "removeGroup",
        "removeGroups",
        "start",
        "len",
        "removeSlots",
        "restoreCurrentGroupEnd",
        "saveCurrentGroupEnd",
        "seek",
        "set",
        "skip",
        "skipGroup",
        "skipToGroupEnd",
        "startData",
        "key",
        "aux",
        "objectKey",
        "startGroup",
        "dataKey",
        "startNode",
        "toString",
        "update",
        "updateAnchors",
        "previousGapStart",
        "newGapStart",
        "updateAux",
        "updateNode",
        "updateNodeOfGroup",
        "updateParentNode",
        "verifyDataAnchors",
        "verifyDataAnchors$runtime_release",
        "verifyParentAnchors",
        "verifyParentAnchors$runtime_release",
        "auxIndex",
        "address",
        "dataIndexes",
        "groupAsString",
        "Ljava/lang/StringBuilder;",
        "Lkotlin/text/StringBuilder;",
        "nodeIndex",
        "slotIndex",
        "updateDataIndex",
        "runtime_release"
    }
    k = 0x1
    mv = {
        0x1,
        0x5,
        0x1
    }
    xi = 0x30
.end annotation


# instance fields
.field private anchors:Ljava/util/ArrayList;
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "Ljava/util/ArrayList<",
            "Landroidx/compose/runtime/Anchor;",
            ">;"
        }
    .end annotation
.end field

.field private closed:Z

.field private currentGroup:I

.field private currentGroupEnd:I

.field private currentSlot:I

.field private currentSlotEnd:I

.field private final endStack:Landroidx/compose/runtime/IntStack;

.field private groupGapLen:I

.field private groupGapStart:I

.field private groups:[I

.field private insertCount:I

.field private nodeCount:I

.field private final nodeCountStack:Landroidx/compose/runtime/IntStack;

.field private parent:I

.field private slots:[Ljava/lang/Object;

.field private slotsGapLen:I

.field private slotsGapOwner:I

.field private slotsGapStart:I

.field private final startStack:Landroidx/compose/runtime/IntStack;

.field private final table:Landroidx/compose/runtime/SlotTable;


# direct methods
.method public constructor <init>(Landroidx/compose/runtime/SlotTable;)V
    .locals 2
    .param p1, "table"    # Landroidx/compose/runtime/SlotTable;

    const-string/jumbo v0, "table"

    invoke-static {p1, v0}, Lkotlin/jvm/internal/Intrinsics;->checkNotNullParameter(Ljava/lang/Object;Ljava/lang/String;)V

    .line 908
    invoke-direct {p0}, Ljava/lang/Object;-><init>()V

    .line 912
    iput-object p1, p0, Landroidx/compose/runtime/SlotWriter;->table:Landroidx/compose/runtime/SlotTable;

    .line 920
    invoke-virtual {p1}, Landroidx/compose/runtime/SlotTable;->getGroups()[I

    move-result-object v0

    iput-object v0, p0, Landroidx/compose/runtime/SlotWriter;->groups:[I

    .line 928
    invoke-virtual {p1}, Landroidx/compose/runtime/SlotTable;->getSlots()[Ljava/lang/Object;

    move-result-object v0

    iput-object v0, p0, Landroidx/compose/runtime/SlotWriter;->slots:[Ljava/lang/Object;

    .line 933
    invoke-virtual {p1}, Landroidx/compose/runtime/SlotTable;->getAnchors$runtime_release()Ljava/util/ArrayList;

    move-result-object v0

    iput-object v0, p0, Landroidx/compose/runtime/SlotWriter;->anchors:Ljava/util/ArrayList;

    .line 938
    invoke-virtual {p1}, Landroidx/compose/runtime/SlotTable;->getGroupsSize()I

    move-result v0

    iput v0, p0, Landroidx/compose/runtime/SlotWriter;->groupGapStart:I

    .line 943
    iget-object v0, p0, Landroidx/compose/runtime/SlotWriter;->groups:[I

    array-length v0, v0

    div-int/lit8 v0, v0, 0x5

    invoke-virtual {p1}, Landroidx/compose/runtime/SlotTable;->getGroupsSize()I

    move-result v1

    sub-int/2addr v0, v1

    iput v0, p0, Landroidx/compose/runtime/SlotWriter;->groupGapLen:I

    .line 948
    invoke-virtual {p1}, Landroidx/compose/runtime/SlotTable;->getGroupsSize()I

    move-result v0

    iput v0, p0, Landroidx/compose/runtime/SlotWriter;->currentGroupEnd:I

    .line 963
    invoke-virtual {p1}, Landroidx/compose/runtime/SlotTable;->getSlotsSize()I

    move-result v0

    iput v0, p0, Landroidx/compose/runtime/SlotWriter;->slotsGapStart:I

    .line 968
    iget-object v0, p0, Landroidx/compose/runtime/SlotWriter;->slots:[Ljava/lang/Object;

    array-length v0, v0

    invoke-virtual {p1}, Landroidx/compose/runtime/SlotTable;->getSlotsSize()I

    move-result v1

    sub-int/2addr v0, v1

    iput v0, p0, Landroidx/compose/runtime/SlotWriter;->slotsGapLen:I

    .line 973
    invoke-virtual {p1}, Landroidx/compose/runtime/SlotTable;->getGroupsSize()I

    move-result v0

    iput v0, p0, Landroidx/compose/runtime/SlotWriter;->slotsGapOwner:I

    .line 993
    new-instance v0, Landroidx/compose/runtime/IntStack;

    invoke-direct {v0}, Landroidx/compose/runtime/IntStack;-><init>()V

    iput-object v0, p0, Landroidx/compose/runtime/SlotWriter;->startStack:Landroidx/compose/runtime/IntStack;

    .line 1001
    new-instance v0, Landroidx/compose/runtime/IntStack;

    invoke-direct {v0}, Landroidx/compose/runtime/IntStack;-><init>()V

    iput-object v0, p0, Landroidx/compose/runtime/SlotWriter;->endStack:Landroidx/compose/runtime/IntStack;

    .line 1006
    new-instance v0, Landroidx/compose/runtime/IntStack;

    invoke-direct {v0}, Landroidx/compose/runtime/IntStack;-><init>()V

    iput-object v0, p0, Landroidx/compose/runtime/SlotWriter;->nodeCountStack:Landroidx/compose/runtime/IntStack;

    .line 1070
    const/4 v0, -0x1

    iput v0, p0, Landroidx/compose/runtime/SlotWriter;->parent:I

    .line 908
    return-void
.end method

.method public static final synthetic access$dataIndexToDataAddress(Landroidx/compose/runtime/SlotWriter;I)I
    .locals 1
    .param p0, "$this"    # Landroidx/compose/runtime/SlotWriter;
    .param p1, "dataIndex"    # I

    .line 908
    invoke-direct {p0, p1}, Landroidx/compose/runtime/SlotWriter;->dataIndexToDataAddress(I)I

    move-result v0

    return v0
.end method

.method public static final synthetic access$getSlots$p(Landroidx/compose/runtime/SlotWriter;)[Ljava/lang/Object;
    .locals 1
    .param p0, "$this"    # Landroidx/compose/runtime/SlotWriter;

    .line 908
    iget-object v0, p0, Landroidx/compose/runtime/SlotWriter;->slots:[Ljava/lang/Object;

    return-object v0
.end method

.method public static synthetic anchor$default(Landroidx/compose/runtime/SlotWriter;IILjava/lang/Object;)Landroidx/compose/runtime/Anchor;
    .locals 0

    .line 1811
    and-int/lit8 p2, p2, 0x1

    if-eqz p2, :cond_0

    iget p1, p0, Landroidx/compose/runtime/SlotWriter;->currentGroup:I

    :cond_0
    invoke-virtual {p0, p1}, Landroidx/compose/runtime/SlotWriter;->anchor(I)Landroidx/compose/runtime/Anchor;

    move-result-object p0

    return-object p0
.end method

.method private final auxIndex([II)I
    .locals 2
    .param p1, "$this$auxIndex"    # [I
    .param p2, "address"    # I

    .line 2379
    invoke-direct {p0, p1, p2}, Landroidx/compose/runtime/SlotWriter;->dataIndex([II)I

    move-result v0

    invoke-static {p1, p2}, Landroidx/compose/runtime/SlotTableKt;->access$groupInfo([II)I

    move-result v1

    shr-int/lit8 v1, v1, 0x1d

    invoke-static {v1}, Landroidx/compose/runtime/SlotTableKt;->access$countOneBits(I)I

    move-result v1

    add-int/2addr v0, v1

    return v0
.end method

.method private final dataAnchorToDataIndex(III)I
    .locals 1
    .param p1, "anchor"    # I
    .param p2, "gapLen"    # I
    .param p3, "capacity"    # I

    .line 2396
    if-gez p1, :cond_0

    sub-int v0, p3, p2

    add-int/2addr v0, p1

    add-int/lit8 v0, v0, 0x1

    goto :goto_0

    :cond_0
    move v0, p1

    :goto_0
    return v0
.end method

.method private final dataIndex(I)I
    .locals 2
    .param p1, "index"    # I

    .line 2360
    iget-object v0, p0, Landroidx/compose/runtime/SlotWriter;->groups:[I

    invoke-direct {p0, p1}, Landroidx/compose/runtime/SlotWriter;->groupIndexToAddress(I)I

    move-result v1

    invoke-direct {p0, v0, v1}, Landroidx/compose/runtime/SlotWriter;->dataIndex([II)I

    move-result v0

    return v0
.end method

.method private final dataIndex([II)I
    .locals 3
    .param p1, "$this$dataIndex"    # [I
    .param p2, "address"    # I

    .line 2363
    invoke-direct {p0}, Landroidx/compose/runtime/SlotWriter;->getCapacity()I

    move-result v0

    if-lt p2, v0, :cond_0

    iget-object v0, p0, Landroidx/compose/runtime/SlotWriter;->slots:[Ljava/lang/Object;

    array-length v0, v0

    iget v1, p0, Landroidx/compose/runtime/SlotWriter;->slotsGapLen:I

    sub-int/2addr v0, v1

    goto :goto_0

    .line 2364
    :cond_0
    invoke-static {p1, p2}, Landroidx/compose/runtime/SlotTableKt;->access$dataAnchor([II)I

    move-result v0

    iget v1, p0, Landroidx/compose/runtime/SlotWriter;->slotsGapLen:I

    iget-object v2, p0, Landroidx/compose/runtime/SlotWriter;->slots:[Ljava/lang/Object;

    array-length v2, v2

    invoke-direct {p0, v0, v1, v2}, Landroidx/compose/runtime/SlotWriter;->dataAnchorToDataIndex(III)I

    move-result v0

    :goto_0
    return v0
.end method

.method private final dataIndexToDataAddress(I)I
    .locals 1
    .param p1, "dataIndex"    # I

    .line 2355
    iget v0, p0, Landroidx/compose/runtime/SlotWriter;->slotsGapStart:I

    if-ge p1, v0, :cond_0

    move v0, p1

    goto :goto_0

    :cond_0
    iget v0, p0, Landroidx/compose/runtime/SlotWriter;->slotsGapLen:I

    add-int/2addr v0, p1

    :goto_0
    return v0
.end method

.method private final dataIndexToDataAnchor(IIII)I
    .locals 1
    .param p1, "index"    # I
    .param p2, "gapStart"    # I
    .param p3, "gapLen"    # I
    .param p4, "capacity"    # I

    .line 2393
    if-le p1, p2, :cond_0

    sub-int v0, p4, p3

    sub-int/2addr v0, p1

    add-int/lit8 v0, v0, 0x1

    neg-int v0, v0

    goto :goto_0

    :cond_0
    move v0, p1

    :goto_0
    return v0
.end method

.method private final dataIndexes([I)Ljava/util/List;
    .locals 18
    .param p1, "$this$dataIndexes"    # [I
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "([I)",
            "Ljava/util/List<",
            "Ljava/lang/Integer;",
            ">;"
        }
    .end annotation

    .line 2382
    move-object/from16 v0, p0

    iget-object v1, v0, Landroidx/compose/runtime/SlotWriter;->groups:[I

    const/4 v2, 0x0

    const/4 v3, 0x1

    const/4 v4, 0x0

    invoke-static {v1, v2, v3, v4}, Landroidx/compose/runtime/SlotTableKt;->dataAnchors$default([IIILjava/lang/Object;)Ljava/util/List;

    move-result-object v1

    .local v1, "it":Ljava/util/List;
    const/4 v4, 0x0

    .line 2383
    .local v4, "$i$a$-let-SlotWriter$dataIndexes$1":I
    iget v5, v0, Landroidx/compose/runtime/SlotWriter;->groupGapStart:I

    invoke-static {v2, v5}, Lkotlin/ranges/RangesKt;->until(II)Lkotlin/ranges/IntRange;

    move-result-object v5

    invoke-static {v1, v5}, Lkotlin/collections/CollectionsKt;->slice(Ljava/util/List;Lkotlin/ranges/IntRange;)Ljava/util/List;

    move-result-object v5

    check-cast v5, Ljava/util/Collection;

    .line 2384
    iget v6, v0, Landroidx/compose/runtime/SlotWriter;->groupGapStart:I

    iget v7, v0, Landroidx/compose/runtime/SlotWriter;->groupGapLen:I

    add-int/2addr v6, v7

    move-object/from16 v7, p1

    array-length v8, v7

    div-int/lit8 v8, v8, 0x5

    invoke-static {v6, v8}, Lkotlin/ranges/RangesKt;->until(II)Lkotlin/ranges/IntRange;

    move-result-object v6

    invoke-static {v1, v6}, Lkotlin/collections/CollectionsKt;->slice(Ljava/util/List;Lkotlin/ranges/IntRange;)Ljava/util/List;

    move-result-object v6

    check-cast v6, Ljava/lang/Iterable;

    .line 2383
    invoke-static {v5, v6}, Lkotlin/collections/CollectionsKt;->plus(Ljava/util/Collection;Ljava/lang/Iterable;)Ljava/util/List;

    move-result-object v1

    .line 2382
    .end local v1    # "it":Ljava/util/List;
    .end local v4    # "$i$a$-let-SlotWriter$dataIndexes$1":I
    nop

    .line 2385
    nop

    .local v1, "$this$fastMap$iv":Ljava/util/List;
    const/4 v4, 0x0

    .line 2768
    .local v4, "$i$f$fastMap":I
    nop

    .line 2769
    new-instance v5, Ljava/util/ArrayList;

    invoke-interface {v1}, Ljava/util/List;->size()I

    move-result v6

    invoke-direct {v5, v6}, Ljava/util/ArrayList;-><init>(I)V

    .line 2770
    .local v5, "target$iv":Ljava/util/ArrayList;
    move-object v6, v1

    .local v6, "$this$fastForEach$iv$iv":Ljava/util/List;
    const/4 v8, 0x0

    .line 2771
    .local v8, "$i$f$fastForEach":I
    nop

    .line 2772
    invoke-interface {v6}, Ljava/util/List;->size()I

    move-result v9

    add-int/lit8 v9, v9, -0x1

    if-ltz v9, :cond_1

    :goto_0
    move v10, v2

    .local v10, "index$iv$iv":I
    add-int/2addr v2, v3

    .line 2773
    invoke-interface {v6, v10}, Ljava/util/List;->get(I)Ljava/lang/Object;

    move-result-object v11

    .line 2774
    .local v11, "item$iv$iv":Ljava/lang/Object;
    move-object v12, v11

    .local v12, "it$iv":Ljava/lang/Object;
    const/4 v13, 0x0

    .line 2775
    .local v13, "$i$a$-fastForEach-ListUtilsKt$fastMap$2$iv":I
    move-object v14, v5

    check-cast v14, Ljava/util/Collection;

    move-object v15, v12

    check-cast v15, Ljava/lang/Number;

    invoke-virtual {v15}, Ljava/lang/Number;->intValue()I

    move-result v15

    .local v15, "anchor":I
    const/16 v16, 0x0

    .line 2385
    .local v16, "$i$a$-fastMap-SlotWriter$dataIndexes$2":I
    iget v3, v0, Landroidx/compose/runtime/SlotWriter;->slotsGapLen:I

    move-object/from16 v17, v1

    .end local v1    # "$this$fastMap$iv":Ljava/util/List;
    .local v17, "$this$fastMap$iv":Ljava/util/List;
    iget-object v1, v0, Landroidx/compose/runtime/SlotWriter;->slots:[Ljava/lang/Object;

    array-length v1, v1

    invoke-direct {v0, v15, v3, v1}, Landroidx/compose/runtime/SlotWriter;->dataAnchorToDataIndex(III)I

    move-result v1

    .end local v15    # "anchor":I
    .end local v16    # "$i$a$-fastMap-SlotWriter$dataIndexes$2":I
    invoke-static {v1}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;

    move-result-object v1

    invoke-interface {v14, v1}, Ljava/util/Collection;->add(Ljava/lang/Object;)Z

    .line 2776
    nop

    .line 2772
    .end local v11    # "item$iv$iv":Ljava/lang/Object;
    .end local v12    # "it$iv":Ljava/lang/Object;
    .end local v13    # "$i$a$-fastForEach-ListUtilsKt$fastMap$2$iv":I
    if-le v2, v9, :cond_0

    goto :goto_1

    :cond_0
    move-object/from16 v1, v17

    const/4 v3, 0x1

    goto :goto_0

    .end local v10    # "index$iv$iv":I
    .end local v17    # "$this$fastMap$iv":Ljava/util/List;
    .restart local v1    # "$this$fastMap$iv":Ljava/util/List;
    :cond_1
    move-object/from16 v17, v1

    .line 2777
    .end local v1    # "$this$fastMap$iv":Ljava/util/List;
    .restart local v17    # "$this$fastMap$iv":Ljava/util/List;
    :goto_1
    nop

    .line 2778
    .end local v6    # "$this$fastForEach$iv$iv":Ljava/util/List;
    .end local v8    # "$i$f$fastForEach":I
    move-object v1, v5

    check-cast v1, Ljava/util/List;

    .line 2385
    .end local v4    # "$i$f$fastMap":I
    .end local v5    # "target$iv":Ljava/util/ArrayList;
    .end local v17    # "$this$fastMap$iv":Ljava/util/List;
    return-object v1
.end method

.method private final fixParentAnchorsFor(III)V
    .locals 4
    .param p1, "parent"    # I
    .param p2, "endGroup"    # I
    .param p3, "firstChild"    # I

    .line 1851
    iget v0, p0, Landroidx/compose/runtime/SlotWriter;->groupGapStart:I

    invoke-direct {p0, p1, v0}, Landroidx/compose/runtime/SlotWriter;->parentIndexToAnchor(II)I

    move-result v0

    .line 1852
    .local v0, "parentAnchor":I
    move v1, p3

    .line 1853
    .local v1, "child":I
    :goto_0
    if-ge v1, p2, :cond_0

    .line 1854
    iget-object v2, p0, Landroidx/compose/runtime/SlotWriter;->groups:[I

    invoke-direct {p0, v1}, Landroidx/compose/runtime/SlotWriter;->groupIndexToAddress(I)I

    move-result v3

    invoke-static {v2, v3, v0}, Landroidx/compose/runtime/SlotTableKt;->access$updateParentAnchor([III)V

    .line 1855
    iget-object v2, p0, Landroidx/compose/runtime/SlotWriter;->groups:[I

    invoke-direct {p0, v1}, Landroidx/compose/runtime/SlotWriter;->groupIndexToAddress(I)I

    move-result v3

    invoke-static {v2, v3}, Landroidx/compose/runtime/SlotTableKt;->access$groupSize([II)I

    move-result v2

    add-int/2addr v2, v1

    .line 1856
    .local v2, "childEnd":I
    add-int/lit8 v3, v1, 0x1

    invoke-direct {p0, v1, v2, v3}, Landroidx/compose/runtime/SlotWriter;->fixParentAnchorsFor(III)V

    .line 1857
    move v1, v2

    .end local v2    # "childEnd":I
    goto :goto_0

    .line 1859
    :cond_0
    return-void
.end method

.method private final getCapacity()I
    .locals 1

    .line 2349
    iget-object v0, p0, Landroidx/compose/runtime/SlotWriter;->groups:[I

    array-length v0, v0

    div-int/lit8 v0, v0, 0x5

    return v0
.end method

.method private final groupAsString(Ljava/lang/StringBuilder;I)V
    .locals 3
    .param p1, "$this$groupAsString"    # Ljava/lang/StringBuilder;
    .param p2, "index"    # I

    .line 2275
    invoke-direct {p0, p2}, Landroidx/compose/runtime/SlotWriter;->groupIndexToAddress(I)I

    move-result v0

    .line 2276
    .local v0, "address":I
    const-string v1, "Group("

    invoke-virtual {p1, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 2277
    const/16 v1, 0x20

    const/16 v2, 0xa

    if-ge p2, v2, :cond_0

    invoke-virtual {p1, v1}, Ljava/lang/StringBuilder;->append(C)Ljava/lang/StringBuilder;

    .line 2278
    :cond_0
    const/16 v2, 0x64

    if-ge p2, v2, :cond_1

    invoke-virtual {p1, v1}, Ljava/lang/StringBuilder;->append(C)Ljava/lang/StringBuilder;

    .line 2279
    :cond_1
    const/16 v2, 0x3e8

    if-ge p2, v2, :cond_2

    invoke-virtual {p1, v1}, Ljava/lang/StringBuilder;->append(C)Ljava/lang/StringBuilder;

    .line 2280
    :cond_2
    invoke-virtual {p1, p2}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    .line 2281
    const/16 v1, 0x23

    invoke-virtual {p1, v1}, Ljava/lang/StringBuilder;->append(C)Ljava/lang/StringBuilder;

    .line 2282
    iget-object v1, p0, Landroidx/compose/runtime/SlotWriter;->groups:[I

    invoke-static {v1, v0}, Landroidx/compose/runtime/SlotTableKt;->access$groupSize([II)I

    move-result v1

    invoke-virtual {p1, v1}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    .line 2283
    const/16 v1, 0x5e

    invoke-virtual {p1, v1}, Ljava/lang/StringBuilder;->append(C)Ljava/lang/StringBuilder;

    .line 2284
    iget-object v1, p0, Landroidx/compose/runtime/SlotWriter;->groups:[I

    invoke-static {v1, v0}, Landroidx/compose/runtime/SlotTableKt;->access$parentAnchor([II)I

    move-result v1

    invoke-direct {p0, v1}, Landroidx/compose/runtime/SlotWriter;->parentAnchorToIndex(I)I

    move-result v1

    invoke-virtual {p1, v1}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    .line 2285
    const-string v1, ": key="

    invoke-virtual {p1, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 2286
    iget-object v1, p0, Landroidx/compose/runtime/SlotWriter;->groups:[I

    invoke-static {v1, v0}, Landroidx/compose/runtime/SlotTableKt;->access$key([II)I

    move-result v1

    invoke-virtual {p1, v1}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    .line 2287
    const-string v1, ", nodes="

    invoke-virtual {p1, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 2288
    iget-object v1, p0, Landroidx/compose/runtime/SlotWriter;->groups:[I

    invoke-static {v1, v0}, Landroidx/compose/runtime/SlotTableKt;->access$nodeCount([II)I

    move-result v1

    invoke-virtual {p1, v1}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    .line 2289
    const-string v1, ", dataAnchor="

    invoke-virtual {p1, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 2290
    iget-object v1, p0, Landroidx/compose/runtime/SlotWriter;->groups:[I

    invoke-static {v1, v0}, Landroidx/compose/runtime/SlotTableKt;->access$dataAnchor([II)I

    move-result v1

    invoke-virtual {p1, v1}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    .line 2291
    const-string v1, ", parentAnchor="

    invoke-virtual {p1, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 2292
    iget-object v1, p0, Landroidx/compose/runtime/SlotWriter;->groups:[I

    invoke-static {v1, v0}, Landroidx/compose/runtime/SlotTableKt;->access$parentAnchor([II)I

    move-result v1

    invoke-virtual {p1, v1}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    .line 2293
    const-string v1, ")"

    invoke-virtual {p1, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 2294
    return-void
.end method

.method private final groupIndexToAddress(I)I
    .locals 1
    .param p1, "index"    # I

    .line 2352
    iget v0, p0, Landroidx/compose/runtime/SlotWriter;->groupGapStart:I

    if-ge p1, v0, :cond_0

    move v0, p1

    goto :goto_0

    :cond_0
    iget v0, p0, Landroidx/compose/runtime/SlotWriter;->groupGapLen:I

    add-int/2addr v0, p1

    :goto_0
    return v0
.end method

.method private final insertGroups(I)V
    .locals 16
    .param p1, "size"    # I

    .line 1984
    move-object/from16 v0, p0

    move/from16 v1, p1

    if-lez v1, :cond_6

    .line 1985
    iget v2, v0, Landroidx/compose/runtime/SlotWriter;->currentGroup:I

    .line 1986
    .local v2, "currentGroup":I
    invoke-direct {v0, v2}, Landroidx/compose/runtime/SlotWriter;->moveGroupGapTo(I)V

    .line 1987
    iget v3, v0, Landroidx/compose/runtime/SlotWriter;->groupGapStart:I

    .line 1988
    .local v3, "gapStart":I
    iget v4, v0, Landroidx/compose/runtime/SlotWriter;->groupGapLen:I

    .line 1989
    .local v4, "gapLen":I
    iget-object v5, v0, Landroidx/compose/runtime/SlotWriter;->groups:[I

    array-length v5, v5

    div-int/lit8 v5, v5, 0x5

    .line 1990
    .local v5, "oldCapacity":I
    sub-int v6, v5, v4

    .line 1991
    .local v6, "oldSize":I
    const/4 v7, 0x0

    if-ge v4, v1, :cond_0

    .line 1993
    iget-object v8, v0, Landroidx/compose/runtime/SlotWriter;->groups:[I

    .line 1997
    .local v8, "groups":[I
    mul-int/lit8 v9, v5, 0x2

    add-int v10, v6, v1

    invoke-static {v9, v10}, Ljava/lang/Math;->max(II)I

    move-result v9

    .line 1998
    const/16 v10, 0x20

    .line 1996
    invoke-static {v9, v10}, Ljava/lang/Math;->max(II)I

    move-result v9

    .line 2000
    .local v9, "newCapacity":I
    mul-int/lit8 v10, v9, 0x5

    new-array v10, v10, [I

    .line 2001
    .local v10, "newGroups":[I
    sub-int v11, v9, v6

    .line 2002
    .local v11, "newGapLen":I
    add-int v12, v3, v4

    .line 2003
    .local v12, "oldGapEndAddress":I
    add-int v13, v3, v11

    .line 2006
    .local v13, "newGapEndAddress":I
    nop

    .line 2007
    nop

    .line 2008
    nop

    .line 2009
    nop

    .line 2010
    mul-int/lit8 v14, v3, 0x5

    .line 2006
    invoke-static {v8, v10, v7, v7, v14}, Lkotlin/collections/ArraysKt;->copyInto([I[IIII)[I

    .line 2012
    nop

    .line 2013
    nop

    .line 2014
    mul-int/lit8 v14, v13, 0x5

    .line 2015
    mul-int/lit8 v15, v12, 0x5

    .line 2016
    mul-int/lit8 v7, v5, 0x5

    .line 2012
    invoke-static {v8, v10, v14, v15, v7}, Lkotlin/collections/ArraysKt;->copyInto([I[IIII)[I

    .line 2020
    iput-object v10, v0, Landroidx/compose/runtime/SlotWriter;->groups:[I

    .line 2021
    move v4, v11

    .line 2025
    .end local v8    # "groups":[I
    .end local v9    # "newCapacity":I
    .end local v10    # "newGroups":[I
    .end local v11    # "newGapLen":I
    .end local v12    # "oldGapEndAddress":I
    .end local v13    # "newGapEndAddress":I
    :cond_0
    iget v7, v0, Landroidx/compose/runtime/SlotWriter;->currentGroupEnd:I

    .line 2026
    .local v7, "currentEnd":I
    if-lt v7, v3, :cond_1

    add-int v8, v7, v1

    iput v8, v0, Landroidx/compose/runtime/SlotWriter;->currentGroupEnd:I

    .line 2029
    :cond_1
    add-int v8, v3, v1

    iput v8, v0, Landroidx/compose/runtime/SlotWriter;->groupGapStart:I

    .line 2030
    sub-int v8, v4, v1

    iput v8, v0, Landroidx/compose/runtime/SlotWriter;->groupGapLen:I

    .line 2033
    if-lez v6, :cond_2

    add-int v8, v2, v1

    invoke-direct {v0, v8}, Landroidx/compose/runtime/SlotWriter;->dataIndex(I)I

    move-result v8

    goto :goto_0

    :cond_2
    const/4 v8, 0x0

    .line 2036
    .local v8, "index":I
    :goto_0
    nop

    .line 2037
    nop

    .line 2038
    iget v9, v0, Landroidx/compose/runtime/SlotWriter;->slotsGapOwner:I

    if-ge v9, v3, :cond_3

    const/4 v9, 0x0

    goto :goto_1

    :cond_3
    iget v9, v0, Landroidx/compose/runtime/SlotWriter;->slotsGapStart:I

    .line 2039
    :goto_1
    iget v10, v0, Landroidx/compose/runtime/SlotWriter;->slotsGapLen:I

    .line 2040
    iget-object v11, v0, Landroidx/compose/runtime/SlotWriter;->slots:[Ljava/lang/Object;

    array-length v11, v11

    .line 2036
    invoke-direct {v0, v8, v9, v10, v11}, Landroidx/compose/runtime/SlotWriter;->dataIndexToDataAnchor(IIII)I

    move-result v9

    .line 2042
    .local v9, "anchor":I
    add-int v10, v3, v1

    if-ge v3, v10, :cond_5

    move v11, v3

    :cond_4
    move v12, v11

    .local v12, "groupAddress":I
    add-int/lit8 v11, v11, 0x1

    .line 2043
    iget-object v13, v0, Landroidx/compose/runtime/SlotWriter;->groups:[I

    invoke-static {v13, v12, v9}, Landroidx/compose/runtime/SlotTableKt;->access$updateDataAnchor([III)V

    .line 2042
    if-lt v11, v10, :cond_4

    .line 2045
    .end local v12    # "groupAddress":I
    :cond_5
    iget v10, v0, Landroidx/compose/runtime/SlotWriter;->slotsGapOwner:I

    .line 2046
    .local v10, "slotsGapOwner":I
    if-lt v10, v3, :cond_6

    .line 2047
    add-int v11, v10, v1

    iput v11, v0, Landroidx/compose/runtime/SlotWriter;->slotsGapOwner:I

    .line 2050
    .end local v2    # "currentGroup":I
    .end local v3    # "gapStart":I
    .end local v4    # "gapLen":I
    .end local v5    # "oldCapacity":I
    .end local v6    # "oldSize":I
    .end local v7    # "currentEnd":I
    .end local v8    # "index":I
    .end local v9    # "anchor":I
    .end local v10    # "slotsGapOwner":I
    :cond_6
    return-void
.end method

.method private final insertSlots(II)V
    .locals 11
    .param p1, "size"    # I
    .param p2, "group"    # I

    .line 2058
    if-lez p1, :cond_3

    .line 2059
    iget v0, p0, Landroidx/compose/runtime/SlotWriter;->currentSlot:I

    invoke-direct {p0, v0, p2}, Landroidx/compose/runtime/SlotWriter;->moveSlotGapTo(II)V

    .line 2060
    iget v0, p0, Landroidx/compose/runtime/SlotWriter;->slotsGapStart:I

    .line 2061
    .local v0, "gapStart":I
    iget v1, p0, Landroidx/compose/runtime/SlotWriter;->slotsGapLen:I

    .line 2062
    .local v1, "gapLen":I
    if-ge v1, p1, :cond_1

    .line 2063
    iget-object v2, p0, Landroidx/compose/runtime/SlotWriter;->slots:[Ljava/lang/Object;

    .line 2066
    .local v2, "slots":[Ljava/lang/Object;
    array-length v3, v2

    .line 2067
    .local v3, "oldCapacity":I
    sub-int v4, v3, v1

    .line 2071
    .local v4, "oldSize":I
    mul-int/lit8 v5, v3, 0x2

    add-int v6, v4, p1

    invoke-static {v5, v6}, Ljava/lang/Math;->max(II)I

    move-result v5

    .line 2072
    const/16 v6, 0x20

    .line 2070
    invoke-static {v5, v6}, Ljava/lang/Math;->max(II)I

    move-result v5

    .line 2074
    .local v5, "newCapacity":I
    new-array v6, v5, [Ljava/lang/Object;

    const/4 v7, 0x0

    move v8, v7

    :goto_0
    if-ge v8, v5, :cond_0

    const/4 v9, 0x0

    aput-object v9, v6, v8

    add-int/lit8 v8, v8, 0x1

    goto :goto_0

    .line 2075
    .local v6, "newData":[Ljava/lang/Object;
    :cond_0
    sub-int v8, v5, v4

    .line 2076
    .local v8, "newGapLen":I
    add-int v9, v0, v1

    .line 2077
    .local v9, "oldGapEndAddress":I
    add-int v10, v0, v8

    .line 2080
    .local v10, "newGapEndAddress":I
    nop

    .line 2081
    nop

    .line 2082
    nop

    .line 2083
    nop

    .line 2084
    nop

    .line 2080
    invoke-static {v2, v6, v7, v7, v0}, Lkotlin/collections/ArraysKt;->copyInto([Ljava/lang/Object;[Ljava/lang/Object;III)[Ljava/lang/Object;

    .line 2086
    nop

    .line 2087
    nop

    .line 2088
    nop

    .line 2089
    nop

    .line 2090
    nop

    .line 2086
    invoke-static {v2, v6, v10, v9, v3}, Lkotlin/collections/ArraysKt;->copyInto([Ljava/lang/Object;[Ljava/lang/Object;III)[Ljava/lang/Object;

    .line 2094
    iput-object v6, p0, Landroidx/compose/runtime/SlotWriter;->slots:[Ljava/lang/Object;

    .line 2095
    move v1, v8

    .line 2097
    .end local v2    # "slots":[Ljava/lang/Object;
    .end local v3    # "oldCapacity":I
    .end local v4    # "oldSize":I
    .end local v5    # "newCapacity":I
    .end local v6    # "newData":[Ljava/lang/Object;
    .end local v8    # "newGapLen":I
    .end local v9    # "oldGapEndAddress":I
    .end local v10    # "newGapEndAddress":I
    :cond_1
    iget v2, p0, Landroidx/compose/runtime/SlotWriter;->currentSlotEnd:I

    .line 2098
    .local v2, "currentDataEnd":I
    if-lt v2, v0, :cond_2

    add-int v3, v2, p1

    iput v3, p0, Landroidx/compose/runtime/SlotWriter;->currentSlotEnd:I

    .line 2099
    :cond_2
    add-int v3, v0, p1

    iput v3, p0, Landroidx/compose/runtime/SlotWriter;->slotsGapStart:I

    .line 2100
    sub-int v3, v1, p1

    iput v3, p0, Landroidx/compose/runtime/SlotWriter;->slotsGapLen:I

    .line 2102
    .end local v0    # "gapStart":I
    .end local v1    # "gapLen":I
    .end local v2    # "currentDataEnd":I
    :cond_3
    return-void
.end method

.method private final keys()Ljava/util/List;
    .locals 18
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "()",
            "Ljava/util/List<",
            "Ljava/lang/Integer;",
            ">;"
        }
    .end annotation

    .line 2388
    move-object/from16 v0, p0

    iget-object v1, v0, Landroidx/compose/runtime/SlotWriter;->groups:[I

    const/4 v2, 0x0

    const/4 v3, 0x1

    const/4 v4, 0x0

    invoke-static {v1, v2, v3, v4}, Landroidx/compose/runtime/SlotTableKt;->keys$default([IIILjava/lang/Object;)Ljava/util/List;

    move-result-object v1

    .local v1, "$this$fastFilterIndexed$iv":Ljava/util/List;
    const/4 v4, 0x0

    .line 2779
    .local v4, "$i$f$fastFilterIndexed":I
    nop

    .line 2780
    new-instance v5, Ljava/util/ArrayList;

    invoke-interface {v1}, Ljava/util/List;->size()I

    move-result v6

    invoke-direct {v5, v6}, Ljava/util/ArrayList;-><init>(I)V

    .line 2781
    .local v5, "target$iv":Ljava/util/ArrayList;
    move-object v6, v1

    .local v6, "$this$fastForEachIndexed$iv$iv":Ljava/util/List;
    const/4 v7, 0x0

    .line 2782
    .local v7, "$i$f$fastForEachIndexed":I
    nop

    .line 2783
    invoke-interface {v6}, Ljava/util/List;->size()I

    move-result v8

    add-int/lit8 v8, v8, -0x1

    if-ltz v8, :cond_4

    move v9, v2

    :goto_0
    move v10, v9

    .local v10, "index$iv$iv":I
    add-int/2addr v9, v3

    .line 2784
    invoke-interface {v6, v10}, Ljava/util/List;->get(I)Ljava/lang/Object;

    move-result-object v11

    .line 2785
    .local v11, "item$iv$iv":Ljava/lang/Object;
    move v12, v10

    .local v12, "index$iv":I
    move-object v13, v11

    .local v13, "e$iv":Ljava/lang/Object;
    const/4 v14, 0x0

    .line 2786
    .local v14, "$i$a$-fastForEachIndexed-ListUtilsKt$fastFilterIndexed$2$iv":I
    move-object v15, v13

    check-cast v15, Ljava/lang/Number;

    invoke-virtual {v15}, Ljava/lang/Number;->intValue()I

    move-result v15

    .local v15, "$noName_1":I
    move/from16 v16, v12

    .local v16, "index":I
    const/16 v17, 0x0

    .line 2389
    .local v17, "$i$a$-fastFilterIndexed-SlotWriter$keys$1":I
    iget v2, v0, Landroidx/compose/runtime/SlotWriter;->groupGapStart:I

    move/from16 v3, v16

    .end local v16    # "index":I
    .local v3, "index":I
    if-lt v3, v2, :cond_1

    move-object/from16 v16, v1

    .end local v1    # "$this$fastFilterIndexed$iv":Ljava/util/List;
    .local v16, "$this$fastFilterIndexed$iv":Ljava/util/List;
    iget v1, v0, Landroidx/compose/runtime/SlotWriter;->groupGapLen:I

    add-int/2addr v2, v1

    if-lt v3, v2, :cond_0

    goto :goto_1

    :cond_0
    const/4 v1, 0x0

    goto :goto_2

    .end local v16    # "$this$fastFilterIndexed$iv":Ljava/util/List;
    .restart local v1    # "$this$fastFilterIndexed$iv":Ljava/util/List;
    :cond_1
    move-object/from16 v16, v1

    .end local v1    # "$this$fastFilterIndexed$iv":Ljava/util/List;
    .restart local v16    # "$this$fastFilterIndexed$iv":Ljava/util/List;
    :goto_1
    const/4 v1, 0x1

    .end local v3    # "index":I
    .end local v15    # "$noName_1":I
    .end local v17    # "$i$a$-fastFilterIndexed-SlotWriter$keys$1":I
    :goto_2
    if-eqz v1, :cond_2

    move-object v1, v5

    check-cast v1, Ljava/util/Collection;

    invoke-interface {v1, v13}, Ljava/util/Collection;->add(Ljava/lang/Object;)Z

    .line 2787
    :cond_2
    nop

    .line 2783
    .end local v11    # "item$iv$iv":Ljava/lang/Object;
    .end local v12    # "index$iv":I
    .end local v13    # "e$iv":Ljava/lang/Object;
    .end local v14    # "$i$a$-fastForEachIndexed-ListUtilsKt$fastFilterIndexed$2$iv":I
    if-le v9, v8, :cond_3

    goto :goto_3

    :cond_3
    move-object/from16 v1, v16

    const/4 v2, 0x0

    const/4 v3, 0x1

    goto :goto_0

    .end local v10    # "index$iv$iv":I
    .end local v16    # "$this$fastFilterIndexed$iv":Ljava/util/List;
    .restart local v1    # "$this$fastFilterIndexed$iv":Ljava/util/List;
    :cond_4
    move-object/from16 v16, v1

    .line 2788
    .end local v1    # "$this$fastFilterIndexed$iv":Ljava/util/List;
    .restart local v16    # "$this$fastFilterIndexed$iv":Ljava/util/List;
    :goto_3
    nop

    .line 2789
    .end local v6    # "$this$fastForEachIndexed$iv$iv":Ljava/util/List;
    .end local v7    # "$i$f$fastForEachIndexed":I
    move-object v1, v5

    check-cast v1, Ljava/util/List;

    .line 2390
    .end local v4    # "$i$f$fastFilterIndexed":I
    .end local v5    # "target$iv":Ljava/util/ArrayList;
    .end local v16    # "$this$fastFilterIndexed$iv":Ljava/util/List;
    return-object v1
.end method

.method private final moveAnchors(III)V
    .locals 18
    .param p1, "originalLocation"    # I
    .param p2, "newLocation"    # I
    .param p3, "size"    # I

    .line 2227
    move-object/from16 v0, p0

    move/from16 v1, p1

    add-int v2, v1, p3

    .line 2228
    .local v2, "end":I
    invoke-virtual/range {p0 .. p0}, Landroidx/compose/runtime/SlotWriter;->getSize$runtime_release()I

    move-result v3

    .line 2231
    .local v3, "groupsSize":I
    iget-object v4, v0, Landroidx/compose/runtime/SlotWriter;->anchors:Ljava/util/ArrayList;

    invoke-static {v4, v1, v3}, Landroidx/compose/runtime/SlotTableKt;->access$locationOf(Ljava/util/ArrayList;II)I

    move-result v4

    .line 2232
    .local v4, "index":I
    new-instance v5, Ljava/util/ArrayList;

    invoke-direct {v5}, Ljava/util/ArrayList;-><init>()V

    check-cast v5, Ljava/util/List;

    .line 2233
    .local v5, "removedAnchors":Ljava/util/List;
    if-ltz v4, :cond_0

    .line 2234
    :goto_0
    iget-object v6, v0, Landroidx/compose/runtime/SlotWriter;->anchors:Ljava/util/ArrayList;

    invoke-virtual {v6}, Ljava/util/ArrayList;->size()I

    move-result v6

    if-ge v4, v6, :cond_0

    .line 2235
    iget-object v6, v0, Landroidx/compose/runtime/SlotWriter;->anchors:Ljava/util/ArrayList;

    invoke-virtual {v6, v4}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    move-result-object v6

    const-string v7, "anchors[index]"

    invoke-static {v6, v7}, Lkotlin/jvm/internal/Intrinsics;->checkNotNullExpressionValue(Ljava/lang/Object;Ljava/lang/String;)V

    check-cast v6, Landroidx/compose/runtime/Anchor;

    .line 2236
    .local v6, "anchor":Landroidx/compose/runtime/Anchor;
    invoke-virtual {v0, v6}, Landroidx/compose/runtime/SlotWriter;->anchorIndex(Landroidx/compose/runtime/Anchor;)I

    move-result v7

    .line 2238
    .local v7, "location":I
    if-lt v7, v1, :cond_0

    if-ge v7, v2, :cond_0

    .line 2239
    invoke-interface {v5, v6}, Ljava/util/List;->add(Ljava/lang/Object;)Z

    .line 2240
    iget-object v8, v0, Landroidx/compose/runtime/SlotWriter;->anchors:Ljava/util/ArrayList;

    invoke-virtual {v8, v4}, Ljava/util/ArrayList;->remove(I)Ljava/lang/Object;

    goto :goto_0

    .line 2246
    .end local v6    # "anchor":Landroidx/compose/runtime/Anchor;
    .end local v7    # "location":I
    :cond_0
    sub-int v6, p2, v1

    .line 2247
    .local v6, "moveDelta":I
    move-object v7, v5

    .local v7, "$this$fastForEach$iv":Ljava/util/List;
    const/4 v8, 0x0

    .line 2762
    .local v8, "$i$f$fastForEach":I
    nop

    .line 2763
    const/4 v9, 0x0

    invoke-interface {v7}, Ljava/util/List;->size()I

    move-result v10

    add-int/lit8 v10, v10, -0x1

    if-ltz v10, :cond_3

    :goto_1
    move v11, v9

    .local v11, "index$iv":I
    add-int/lit8 v9, v9, 0x1

    .line 2764
    invoke-interface {v7, v11}, Ljava/util/List;->get(I)Ljava/lang/Object;

    move-result-object v12

    .line 2765
    .local v12, "item$iv":Ljava/lang/Object;
    move-object v13, v12

    check-cast v13, Landroidx/compose/runtime/Anchor;

    .local v13, "anchor":Landroidx/compose/runtime/Anchor;
    const/4 v14, 0x0

    .line 2248
    .local v14, "$i$a$-fastForEach-SlotWriter$moveAnchors$1":I
    invoke-virtual {v0, v13}, Landroidx/compose/runtime/SlotWriter;->anchorIndex(Landroidx/compose/runtime/Anchor;)I

    move-result v15

    .line 2249
    .local v15, "anchorIndex":I
    add-int v1, v15, v6

    .line 2250
    .local v1, "newAnchorIndex":I
    move/from16 v16, v2

    .end local v2    # "end":I
    .local v16, "end":I
    iget v2, v0, Landroidx/compose/runtime/SlotWriter;->groupGapStart:I

    if-lt v1, v2, :cond_1

    .line 2251
    sub-int v2, v3, v1

    neg-int v2, v2

    invoke-virtual {v13, v2}, Landroidx/compose/runtime/Anchor;->setLocation$runtime_release(I)V

    goto :goto_2

    .line 2253
    :cond_1
    invoke-virtual {v13, v1}, Landroidx/compose/runtime/Anchor;->setLocation$runtime_release(I)V

    .line 2255
    :goto_2
    iget-object v2, v0, Landroidx/compose/runtime/SlotWriter;->anchors:Ljava/util/ArrayList;

    invoke-static {v2, v1, v3}, Landroidx/compose/runtime/SlotTableKt;->access$locationOf(Ljava/util/ArrayList;II)I

    move-result v2

    .line 2256
    .local v2, "insertIndex":I
    move/from16 v17, v1

    .end local v1    # "newAnchorIndex":I
    .local v17, "newAnchorIndex":I
    iget-object v1, v0, Landroidx/compose/runtime/SlotWriter;->anchors:Ljava/util/ArrayList;

    invoke-virtual {v1, v2, v13}, Ljava/util/ArrayList;->add(ILjava/lang/Object;)V

    .line 2257
    nop

    .line 2763
    .end local v2    # "insertIndex":I
    .end local v12    # "item$iv":Ljava/lang/Object;
    .end local v13    # "anchor":Landroidx/compose/runtime/Anchor;
    .end local v14    # "$i$a$-fastForEach-SlotWriter$moveAnchors$1":I
    .end local v15    # "anchorIndex":I
    .end local v17    # "newAnchorIndex":I
    if-le v9, v10, :cond_2

    goto :goto_3

    :cond_2
    move/from16 v1, p1

    move/from16 v2, v16

    goto :goto_1

    .end local v11    # "index$iv":I
    .end local v16    # "end":I
    .local v2, "end":I
    :cond_3
    move/from16 v16, v2

    .line 2767
    .end local v2    # "end":I
    .restart local v16    # "end":I
    :goto_3
    nop

    .line 2258
    .end local v7    # "$this$fastForEach$iv":Ljava/util/List;
    .end local v8    # "$i$f$fastForEach":I
    return-void
.end method

.method private final moveGroupGapTo(I)V
    .locals 9
    .param p1, "index"    # I

    .line 1865
    iget v0, p0, Landroidx/compose/runtime/SlotWriter;->groupGapLen:I

    .line 1866
    .local v0, "gapLen":I
    iget v1, p0, Landroidx/compose/runtime/SlotWriter;->groupGapStart:I

    .line 1867
    .local v1, "gapStart":I
    if-eq v1, p1, :cond_7

    .line 1868
    iget-object v2, p0, Landroidx/compose/runtime/SlotWriter;->anchors:Ljava/util/ArrayList;

    check-cast v2, Ljava/util/Collection;

    invoke-interface {v2}, Ljava/util/Collection;->isEmpty()Z

    move-result v2

    const/4 v3, 0x1

    xor-int/2addr v2, v3

    if-eqz v2, :cond_0

    invoke-direct {p0, v1, p1}, Landroidx/compose/runtime/SlotWriter;->updateAnchors(II)V

    .line 1869
    :cond_0
    if-lez v0, :cond_2

    .line 1870
    iget-object v2, p0, Landroidx/compose/runtime/SlotWriter;->groups:[I

    .line 1874
    .local v2, "groups":[I
    mul-int/lit8 v4, p1, 0x5

    .line 1875
    .local v4, "groupPhysicalAddress":I
    mul-int/lit8 v5, v0, 0x5

    .line 1876
    .local v5, "groupPhysicalGapLen":I
    mul-int/lit8 v6, v1, 0x5

    .line 1877
    .local v6, "groupPhysicalGapStart":I
    if-ge p1, v1, :cond_1

    .line 1878
    nop

    .line 1879
    nop

    .line 1880
    add-int v7, v4, v5

    .line 1881
    nop

    .line 1882
    nop

    .line 1878
    invoke-static {v2, v2, v7, v4, v6}, Lkotlin/collections/ArraysKt;->copyInto([I[IIII)[I

    goto :goto_0

    .line 1885
    :cond_1
    nop

    .line 1886
    nop

    .line 1887
    nop

    .line 1888
    add-int v7, v6, v5

    .line 1889
    add-int v8, v4, v5

    .line 1885
    invoke-static {v2, v2, v6, v7, v8}, Lkotlin/collections/ArraysKt;->copyInto([I[IIII)[I

    .line 1896
    .end local v2    # "groups":[I
    .end local v4    # "groupPhysicalAddress":I
    .end local v5    # "groupPhysicalGapLen":I
    .end local v6    # "groupPhysicalGapStart":I
    :cond_2
    :goto_0
    if-ge p1, v1, :cond_3

    add-int v2, p1, v0

    goto :goto_1

    :cond_3
    move v2, v1

    .line 1897
    .local v2, "groupAddress":I
    :goto_1
    invoke-direct {p0}, Landroidx/compose/runtime/SlotWriter;->getCapacity()I

    move-result v4

    .line 1898
    .local v4, "capacity":I
    if-ge v2, v4, :cond_4

    goto :goto_2

    :cond_4
    const/4 v3, 0x0

    :goto_2
    invoke-static {v3}, Landroidx/compose/runtime/ComposerKt;->runtimeCheck(Z)V

    .line 1899
    :cond_5
    :goto_3
    if-ge v2, v4, :cond_7

    .line 1900
    iget-object v3, p0, Landroidx/compose/runtime/SlotWriter;->groups:[I

    invoke-static {v3, v2}, Landroidx/compose/runtime/SlotTableKt;->access$parentAnchor([II)I

    move-result v3

    .line 1901
    .local v3, "oldAnchor":I
    invoke-direct {p0, v3}, Landroidx/compose/runtime/SlotWriter;->parentAnchorToIndex(I)I

    move-result v5

    .line 1902
    .local v5, "oldIndex":I
    invoke-direct {p0, v5, p1}, Landroidx/compose/runtime/SlotWriter;->parentIndexToAnchor(II)I

    move-result v6

    .line 1903
    .local v6, "newAnchor":I
    if-eq v6, v3, :cond_6

    .line 1904
    iget-object v7, p0, Landroidx/compose/runtime/SlotWriter;->groups:[I

    invoke-static {v7, v2, v6}, Landroidx/compose/runtime/SlotTableKt;->access$updateParentAnchor([III)V

    .line 1906
    :cond_6
    add-int/lit8 v2, v2, 0x1

    .line 1907
    if-ne v2, p1, :cond_5

    add-int/2addr v2, v0

    .end local v3    # "oldAnchor":I
    .end local v5    # "oldIndex":I
    .end local v6    # "newAnchor":I
    goto :goto_3

    .line 1910
    .end local v2    # "groupAddress":I
    .end local v4    # "capacity":I
    :cond_7
    iput p1, p0, Landroidx/compose/runtime/SlotWriter;->groupGapStart:I

    .line 1911
    return-void
.end method

.method private final moveSlotGapTo(II)V
    .locals 13
    .param p1, "index"    # I
    .param p2, "group"    # I

    .line 1917
    iget v0, p0, Landroidx/compose/runtime/SlotWriter;->slotsGapLen:I

    .line 1918
    .local v0, "gapLen":I
    iget v1, p0, Landroidx/compose/runtime/SlotWriter;->slotsGapStart:I

    .line 1919
    .local v1, "gapStart":I
    iget v2, p0, Landroidx/compose/runtime/SlotWriter;->slotsGapOwner:I

    .line 1920
    .local v2, "slotsGapOwner":I
    if-eq v1, p1, :cond_1

    .line 1921
    iget-object v3, p0, Landroidx/compose/runtime/SlotWriter;->slots:[Ljava/lang/Object;

    .line 1922
    .local v3, "slots":[Ljava/lang/Object;
    if-ge p1, v1, :cond_0

    .line 1924
    nop

    .line 1925
    nop

    .line 1926
    add-int v4, p1, v0

    .line 1927
    nop

    .line 1928
    nop

    .line 1924
    invoke-static {v3, v3, v4, p1, v1}, Lkotlin/collections/ArraysKt;->copyInto([Ljava/lang/Object;[Ljava/lang/Object;III)[Ljava/lang/Object;

    goto :goto_0

    .line 1932
    :cond_0
    nop

    .line 1933
    nop

    .line 1934
    nop

    .line 1935
    add-int v4, v1, v0

    .line 1936
    add-int v5, p1, v0

    .line 1932
    invoke-static {v3, v3, v1, v4, v5}, Lkotlin/collections/ArraysKt;->copyInto([Ljava/lang/Object;[Ljava/lang/Object;III)[Ljava/lang/Object;

    .line 1941
    :goto_0
    const/4 v4, 0x0

    add-int v5, p1, v0

    invoke-static {v3, v4, p1, v5}, Lkotlin/collections/ArraysKt;->fill([Ljava/lang/Object;Ljava/lang/Object;II)V

    .line 1945
    .end local v3    # "slots":[Ljava/lang/Object;
    :cond_1
    add-int/lit8 v3, p2, 0x1

    invoke-virtual {p0}, Landroidx/compose/runtime/SlotWriter;->getSize$runtime_release()I

    move-result v4

    invoke-static {v3, v4}, Ljava/lang/Math;->min(II)I

    move-result v3

    .line 1946
    .local v3, "newSlotsGapOwner":I
    if-eq v2, v3, :cond_a

    .line 1947
    iget-object v4, p0, Landroidx/compose/runtime/SlotWriter;->slots:[Ljava/lang/Object;

    array-length v4, v4

    sub-int/2addr v4, v0

    .line 1948
    .local v4, "slotsSize":I
    const/4 v5, 0x0

    const/4 v6, 0x1

    if-ge v3, v2, :cond_5

    .line 1949
    invoke-direct {p0, v3}, Landroidx/compose/runtime/SlotWriter;->groupIndexToAddress(I)I

    move-result v7

    .line 1950
    .local v7, "updateAddress":I
    invoke-direct {p0, v2}, Landroidx/compose/runtime/SlotWriter;->groupIndexToAddress(I)I

    move-result v8

    .line 1951
    .local v8, "stopUpdateAddress":I
    iget v9, p0, Landroidx/compose/runtime/SlotWriter;->groupGapStart:I

    .line 1952
    .local v9, "groupGapStart":I
    :cond_2
    :goto_1
    if-ge v7, v8, :cond_9

    .line 1953
    iget-object v10, p0, Landroidx/compose/runtime/SlotWriter;->groups:[I

    invoke-static {v10, v7}, Landroidx/compose/runtime/SlotTableKt;->access$dataAnchor([II)I

    move-result v10

    .line 1954
    .local v10, "anchor":I
    if-ltz v10, :cond_3

    move v11, v6

    goto :goto_2

    :cond_3
    move v11, v5

    .local v11, "value$iv":Z
    :goto_2
    const/4 v12, 0x0

    .line 2747
    .local v12, "$i$f$runtimeCheck":I
    if-eqz v11, :cond_4

    .line 2751
    nop

    .line 1957
    .end local v11    # "value$iv":Z
    .end local v12    # "$i$f$runtimeCheck":I
    iget-object v11, p0, Landroidx/compose/runtime/SlotWriter;->groups:[I

    sub-int v12, v4, v10

    add-int/2addr v12, v6

    neg-int v12, v12

    invoke-static {v11, v7, v12}, Landroidx/compose/runtime/SlotTableKt;->access$updateDataAnchor([III)V

    .line 1958
    add-int/lit8 v7, v7, 0x1

    .line 1959
    if-ne v7, v9, :cond_2

    iget v11, p0, Landroidx/compose/runtime/SlotWriter;->groupGapLen:I

    add-int/2addr v7, v11

    .end local v10    # "anchor":I
    goto :goto_1

    .line 2748
    .restart local v10    # "anchor":I
    .restart local v11    # "value$iv":Z
    .restart local v12    # "$i$f$runtimeCheck":I
    :cond_4
    const/4 v5, 0x0

    .line 1955
    .local v5, "$i$a$-runtimeCheck-SlotWriter$moveSlotGapTo$1":I
    const-string v5, "Unexpected anchor value, expected a positive anchor"

    .line 2749
    .local v5, "message$iv":Ljava/lang/Object;
    invoke-virtual {v5}, Ljava/lang/Object;->toString()Ljava/lang/String;

    move-result-object v6

    invoke-static {v6}, Landroidx/compose/runtime/ComposerKt;->composeRuntimeError(Ljava/lang/String;)Ljava/lang/Void;

    new-instance v6, Lkotlin/KotlinNothingValueException;

    invoke-direct {v6}, Lkotlin/KotlinNothingValueException;-><init>()V

    throw v6

    .line 1962
    .end local v5    # "message$iv":Ljava/lang/Object;
    .end local v7    # "updateAddress":I
    .end local v8    # "stopUpdateAddress":I
    .end local v9    # "groupGapStart":I
    .end local v10    # "anchor":I
    .end local v11    # "value$iv":Z
    .end local v12    # "$i$f$runtimeCheck":I
    :cond_5
    invoke-direct {p0, v2}, Landroidx/compose/runtime/SlotWriter;->groupIndexToAddress(I)I

    move-result v7

    .line 1963
    .restart local v7    # "updateAddress":I
    invoke-direct {p0, v3}, Landroidx/compose/runtime/SlotWriter;->groupIndexToAddress(I)I

    move-result v8

    .line 1964
    .restart local v8    # "stopUpdateAddress":I
    :cond_6
    :goto_3
    if-ge v7, v8, :cond_9

    .line 1965
    iget-object v9, p0, Landroidx/compose/runtime/SlotWriter;->groups:[I

    invoke-static {v9, v7}, Landroidx/compose/runtime/SlotTableKt;->access$dataAnchor([II)I

    move-result v9

    .line 1966
    .local v9, "anchor":I
    if-gez v9, :cond_7

    move v10, v6

    goto :goto_4

    :cond_7
    move v10, v5

    .local v10, "value$iv":Z
    :goto_4
    const/4 v11, 0x0

    .line 2752
    .local v11, "$i$f$runtimeCheck":I
    if-eqz v10, :cond_8

    .line 2756
    nop

    .line 1969
    .end local v10    # "value$iv":Z
    .end local v11    # "$i$f$runtimeCheck":I
    iget-object v10, p0, Landroidx/compose/runtime/SlotWriter;->groups:[I

    add-int v11, v4, v9

    add-int/2addr v11, v6

    invoke-static {v10, v7, v11}, Landroidx/compose/runtime/SlotTableKt;->access$updateDataAnchor([III)V

    .line 1970
    add-int/lit8 v7, v7, 0x1

    .line 1971
    iget v10, p0, Landroidx/compose/runtime/SlotWriter;->groupGapStart:I

    if-ne v7, v10, :cond_6

    iget v10, p0, Landroidx/compose/runtime/SlotWriter;->groupGapLen:I

    add-int/2addr v7, v10

    .end local v9    # "anchor":I
    goto :goto_3

    .line 2753
    .restart local v9    # "anchor":I
    .restart local v10    # "value$iv":Z
    .restart local v11    # "$i$f$runtimeCheck":I
    :cond_8
    const/4 v5, 0x0

    .line 1967
    .local v5, "$i$a$-runtimeCheck-SlotWriter$moveSlotGapTo$2":I
    const-string v5, "Unexpected anchor value, expected a negative anchor"

    .line 2754
    .local v5, "message$iv":Ljava/lang/Object;
    invoke-virtual {v5}, Ljava/lang/Object;->toString()Ljava/lang/String;

    move-result-object v6

    invoke-static {v6}, Landroidx/compose/runtime/ComposerKt;->composeRuntimeError(Ljava/lang/String;)Ljava/lang/Void;

    new-instance v6, Lkotlin/KotlinNothingValueException;

    invoke-direct {v6}, Lkotlin/KotlinNothingValueException;-><init>()V

    throw v6

    .line 1974
    .end local v5    # "message$iv":Ljava/lang/Object;
    .end local v7    # "updateAddress":I
    .end local v8    # "stopUpdateAddress":I
    .end local v9    # "anchor":I
    .end local v10    # "value$iv":Z
    .end local v11    # "$i$f$runtimeCheck":I
    :cond_9
    iput v3, p0, Landroidx/compose/runtime/SlotWriter;->slotsGapOwner:I

    .line 1976
    .end local v4    # "slotsSize":I
    :cond_a
    iput p1, p0, Landroidx/compose/runtime/SlotWriter;->slotsGapStart:I

    .line 1977
    return-void
.end method

.method private final nodeIndex([II)I
    .locals 1
    .param p1, "$this$nodeIndex"    # [I
    .param p2, "address"    # I

    .line 2377
    invoke-direct {p0, p1, p2}, Landroidx/compose/runtime/SlotWriter;->dataIndex([II)I

    move-result v0

    return v0
.end method

.method private final parent([II)I
    .locals 1
    .param p1, "$this$parent"    # [I
    .param p2, "index"    # I

    .line 2358
    invoke-direct {p0, p2}, Landroidx/compose/runtime/SlotWriter;->groupIndexToAddress(I)I

    move-result v0

    invoke-static {p1, v0}, Landroidx/compose/runtime/SlotTableKt;->access$parentAnchor([II)I

    move-result v0

    invoke-direct {p0, v0}, Landroidx/compose/runtime/SlotWriter;->parentAnchorToIndex(I)I

    move-result v0

    return v0
.end method

.method private final parentAnchorToIndex(I)I
    .locals 2
    .param p1, "index"    # I

    .line 2402
    const/4 v0, -0x2

    if-le p1, v0, :cond_0

    move v1, p1

    goto :goto_0

    :cond_0
    invoke-virtual {p0}, Landroidx/compose/runtime/SlotWriter;->getSize$runtime_release()I

    move-result v1

    add-int/2addr v1, p1

    sub-int/2addr v1, v0

    :goto_0
    return v1
.end method

.method private final parentIndexToAnchor(II)I
    .locals 1
    .param p1, "index"    # I
    .param p2, "gapStart"    # I

    .line 2399
    if-ge p1, p2, :cond_0

    move v0, p1

    goto :goto_0

    :cond_0
    invoke-virtual {p0}, Landroidx/compose/runtime/SlotWriter;->getSize$runtime_release()I

    move-result v0

    sub-int/2addr v0, p1

    add-int/lit8 v0, v0, 0x2

    neg-int v0, v0

    :goto_0
    return v0
.end method

.method private final removeAnchors(II)Z
    .locals 10
    .param p1, "gapStart"    # I
    .param p2, "size"    # I

    .line 2198
    iget v0, p0, Landroidx/compose/runtime/SlotWriter;->groupGapLen:I

    .line 2199
    .local v0, "gapLen":I
    add-int v1, p1, p2

    .line 2200
    .local v1, "removeEnd":I
    invoke-direct {p0}, Landroidx/compose/runtime/SlotWriter;->getCapacity()I

    move-result v2

    sub-int/2addr v2, v0

    .line 2201
    .local v2, "groupsSize":I
    iget-object v3, p0, Landroidx/compose/runtime/SlotWriter;->anchors:Ljava/util/ArrayList;

    add-int v4, p1, p2

    invoke-static {v3, v4, v2}, Landroidx/compose/runtime/SlotTableKt;->access$locationOf(Ljava/util/ArrayList;II)I

    move-result v3

    .local v3, "it":I
    const/4 v4, 0x0

    .line 2202
    .local v4, "$i$a$-let-SlotWriter$removeAnchors$index$1":I
    iget-object v5, p0, Landroidx/compose/runtime/SlotWriter;->anchors:Ljava/util/ArrayList;

    invoke-virtual {v5}, Ljava/util/ArrayList;->size()I

    move-result v5

    if-lt v3, v5, :cond_0

    add-int/lit8 v5, v3, -0x1

    move v3, v5

    .line 2201
    .end local v3    # "it":I
    .end local v4    # "$i$a$-let-SlotWriter$removeAnchors$index$1":I
    :cond_0
    nop

    .line 2204
    .local v3, "index":I
    const/4 v4, 0x0

    .line 2205
    .local v4, "removeAnchorEnd":I
    const/4 v5, 0x0

    .local v5, "removeAnchorStart":I
    add-int/lit8 v5, v3, 0x1

    .line 2206
    :goto_0
    if-ltz v3, :cond_2

    .line 2207
    iget-object v6, p0, Landroidx/compose/runtime/SlotWriter;->anchors:Ljava/util/ArrayList;

    invoke-virtual {v6, v3}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    move-result-object v6

    const-string v7, "anchors[index]"

    invoke-static {v6, v7}, Lkotlin/jvm/internal/Intrinsics;->checkNotNullExpressionValue(Ljava/lang/Object;Ljava/lang/String;)V

    check-cast v6, Landroidx/compose/runtime/Anchor;

    .line 2208
    .local v6, "anchor":Landroidx/compose/runtime/Anchor;
    invoke-virtual {p0, v6}, Landroidx/compose/runtime/SlotWriter;->anchorIndex(Landroidx/compose/runtime/Anchor;)I

    move-result v7

    .line 2209
    .local v7, "location":I
    if-lt v7, p1, :cond_2

    .line 2210
    if-ge v7, v1, :cond_1

    .line 2211
    const/high16 v8, -0x80000000

    invoke-virtual {v6, v8}, Landroidx/compose/runtime/Anchor;->setLocation$runtime_release(I)V

    .line 2212
    move v5, v3

    .line 2213
    if-nez v4, :cond_1

    add-int/lit8 v4, v3, 0x1

    .line 2215
    :cond_1
    add-int/lit8 v3, v3, -0x1

    goto :goto_0

    .line 2218
    .end local v6    # "anchor":Landroidx/compose/runtime/Anchor;
    .end local v7    # "location":I
    :cond_2
    if-ge v5, v4, :cond_3

    const/4 v6, 0x1

    goto :goto_1

    :cond_3
    const/4 v6, 0x0

    :goto_1
    move v7, v6

    .local v7, "it":Z
    const/4 v8, 0x0

    .line 2219
    .local v8, "$i$a$-also-SlotWriter$removeAnchors$1":I
    if-eqz v7, :cond_4

    iget-object v9, p0, Landroidx/compose/runtime/SlotWriter;->anchors:Ljava/util/ArrayList;

    invoke-virtual {v9, v5, v4}, Ljava/util/ArrayList;->subList(II)Ljava/util/List;

    move-result-object v9

    invoke-interface {v9}, Ljava/util/List;->clear()V

    .line 2220
    :cond_4
    nop

    .line 2218
    .end local v7    # "it":Z
    .end local v8    # "$i$a$-also-SlotWriter$removeAnchors$1":I
    return v6
.end method

.method private final removeGroups(II)Z
    .locals 6
    .param p1, "start"    # I
    .param p2, "len"    # I

    .line 2108
    if-lez p2, :cond_3

    .line 2109
    const/4 v0, 0x0

    .line 2110
    .local v0, "anchorsRemoved":Z
    iget-object v1, p0, Landroidx/compose/runtime/SlotWriter;->anchors:Ljava/util/ArrayList;

    .line 2113
    .local v1, "anchors":Ljava/util/ArrayList;
    invoke-direct {p0, p1}, Landroidx/compose/runtime/SlotWriter;->moveGroupGapTo(I)V

    .line 2114
    move-object v2, v1

    check-cast v2, Ljava/util/Collection;

    invoke-interface {v2}, Ljava/util/Collection;->isEmpty()Z

    move-result v2

    xor-int/lit8 v2, v2, 0x1

    if-eqz v2, :cond_0

    invoke-direct {p0, p1, p2}, Landroidx/compose/runtime/SlotWriter;->removeAnchors(II)Z

    move-result v0

    .line 2115
    :cond_0
    iput p1, p0, Landroidx/compose/runtime/SlotWriter;->groupGapStart:I

    .line 2116
    iget v2, p0, Landroidx/compose/runtime/SlotWriter;->groupGapLen:I

    .line 2117
    .local v2, "previousGapLen":I
    add-int v3, v2, p2

    .line 2118
    .local v3, "newGapLen":I
    iput v3, p0, Landroidx/compose/runtime/SlotWriter;->groupGapLen:I

    .line 2121
    iget v4, p0, Landroidx/compose/runtime/SlotWriter;->slotsGapOwner:I

    .line 2122
    .local v4, "slotsGapOwner":I
    if-le v4, p1, :cond_1

    .line 2123
    sub-int v5, v4, p2

    iput v5, p0, Landroidx/compose/runtime/SlotWriter;->slotsGapOwner:I

    .line 2125
    :cond_1
    iget v5, p0, Landroidx/compose/runtime/SlotWriter;->currentGroupEnd:I

    if-lt v5, p1, :cond_2

    sub-int/2addr v5, p2

    iput v5, p0, Landroidx/compose/runtime/SlotWriter;->currentGroupEnd:I

    .line 2126
    :cond_2
    nop

    .end local v0    # "anchorsRemoved":Z
    .end local v1    # "anchors":Ljava/util/ArrayList;
    .end local v2    # "previousGapLen":I
    .end local v3    # "newGapLen":I
    .end local v4    # "slotsGapOwner":I
    goto :goto_0

    .line 2127
    :cond_3
    const/4 v0, 0x0

    .line 2108
    :goto_0
    return v0
.end method

.method private final removeSlots(III)V
    .locals 5
    .param p1, "start"    # I
    .param p2, "len"    # I
    .param p3, "group"    # I

    .line 2134
    if-lez p2, :cond_0

    .line 2135
    iget v0, p0, Landroidx/compose/runtime/SlotWriter;->slotsGapLen:I

    .line 2136
    .local v0, "gapLen":I
    add-int v1, p1, p2

    .line 2137
    .local v1, "removeEnd":I
    invoke-direct {p0, v1, p3}, Landroidx/compose/runtime/SlotWriter;->moveSlotGapTo(II)V

    .line 2138
    iput p1, p0, Landroidx/compose/runtime/SlotWriter;->slotsGapStart:I

    .line 2139
    add-int v2, v0, p2

    iput v2, p0, Landroidx/compose/runtime/SlotWriter;->slotsGapLen:I

    .line 2140
    iget-object v2, p0, Landroidx/compose/runtime/SlotWriter;->slots:[Ljava/lang/Object;

    const/4 v3, 0x0

    add-int v4, p1, p2

    invoke-static {v2, v3, p1, v4}, Lkotlin/collections/ArraysKt;->fill([Ljava/lang/Object;Ljava/lang/Object;II)V

    .line 2141
    iget v2, p0, Landroidx/compose/runtime/SlotWriter;->currentSlotEnd:I

    .line 2142
    .local v2, "currentDataEnd":I
    if-lt v2, p1, :cond_0

    sub-int v3, v2, p2

    iput v3, p0, Landroidx/compose/runtime/SlotWriter;->currentSlotEnd:I

    .line 2144
    .end local v0    # "gapLen":I
    .end local v1    # "removeEnd":I
    .end local v2    # "currentDataEnd":I
    :cond_0
    return-void
.end method

.method private final restoreCurrentGroupEnd()I
    .locals 2

    .line 1839
    invoke-direct {p0}, Landroidx/compose/runtime/SlotWriter;->getCapacity()I

    move-result v0

    iget v1, p0, Landroidx/compose/runtime/SlotWriter;->groupGapLen:I

    sub-int/2addr v0, v1

    iget-object v1, p0, Landroidx/compose/runtime/SlotWriter;->endStack:Landroidx/compose/runtime/IntStack;

    invoke-virtual {v1}, Landroidx/compose/runtime/IntStack;->pop()I

    move-result v1

    sub-int/2addr v0, v1

    .line 1840
    .local v0, "newGroupEnd":I
    iput v0, p0, Landroidx/compose/runtime/SlotWriter;->currentGroupEnd:I

    .line 1841
    return v0
.end method

.method private final saveCurrentGroupEnd()V
    .locals 3

    .line 1832
    iget-object v0, p0, Landroidx/compose/runtime/SlotWriter;->endStack:Landroidx/compose/runtime/IntStack;

    invoke-direct {p0}, Landroidx/compose/runtime/SlotWriter;->getCapacity()I

    move-result v1

    iget v2, p0, Landroidx/compose/runtime/SlotWriter;->groupGapLen:I

    sub-int/2addr v1, v2

    iget v2, p0, Landroidx/compose/runtime/SlotWriter;->currentGroupEnd:I

    sub-int/2addr v1, v2

    invoke-virtual {v0, v1}, Landroidx/compose/runtime/IntStack;->push(I)V

    .line 1833
    return-void
.end method

.method private final slotIndex([II)I
    .locals 3
    .param p1, "$this$slotIndex"    # [I
    .param p2, "address"    # I

    .line 2367
    invoke-direct {p0}, Landroidx/compose/runtime/SlotWriter;->getCapacity()I

    move-result v0

    if-lt p2, v0, :cond_0

    iget-object v0, p0, Landroidx/compose/runtime/SlotWriter;->slots:[Ljava/lang/Object;

    array-length v0, v0

    iget v1, p0, Landroidx/compose/runtime/SlotWriter;->slotsGapLen:I

    sub-int/2addr v0, v1

    goto :goto_0

    .line 2368
    :cond_0
    invoke-static {p1, p2}, Landroidx/compose/runtime/SlotTableKt;->access$slotAnchor([II)I

    move-result v0

    iget v1, p0, Landroidx/compose/runtime/SlotWriter;->slotsGapLen:I

    iget-object v2, p0, Landroidx/compose/runtime/SlotWriter;->slots:[Ljava/lang/Object;

    array-length v2, v2

    invoke-direct {p0, v0, v1, v2}, Landroidx/compose/runtime/SlotWriter;->dataAnchorToDataIndex(III)I

    move-result v0

    :goto_0
    return v0
.end method

.method private final startGroup(ILjava/lang/Object;ZLjava/lang/Object;)V
    .locals 18
    .param p1, "key"    # I
    .param p2, "objectKey"    # Ljava/lang/Object;
    .param p3, "isNode"    # Z
    .param p4, "aux"    # Ljava/lang/Object;

    .line 1319
    move-object/from16 v0, p0

    move-object/from16 v1, p2

    move-object/from16 v10, p4

    iget v2, v0, Landroidx/compose/runtime/SlotWriter;->insertCount:I

    const/4 v11, 0x0

    const/4 v12, 0x1

    if-lez v2, :cond_0

    move v2, v12

    goto :goto_0

    :cond_0
    move v2, v11

    :goto_0
    move v13, v2

    .line 1320
    .local v13, "inserting":Z
    iget-object v2, v0, Landroidx/compose/runtime/SlotWriter;->nodeCountStack:Landroidx/compose/runtime/IntStack;

    iget v3, v0, Landroidx/compose/runtime/SlotWriter;->nodeCount:I

    invoke-virtual {v2, v3}, Landroidx/compose/runtime/IntStack;->push(I)V

    .line 1322
    if-eqz v13, :cond_9

    .line 1323
    invoke-direct {v0, v12}, Landroidx/compose/runtime/SlotWriter;->insertGroups(I)V

    .line 1324
    iget v14, v0, Landroidx/compose/runtime/SlotWriter;->currentGroup:I

    .line 1325
    .local v14, "current":I
    invoke-direct {v0, v14}, Landroidx/compose/runtime/SlotWriter;->groupIndexToAddress(I)I

    move-result v15

    .line 1326
    .local v15, "currentAddress":I
    sget-object v2, Landroidx/compose/runtime/Composer;->Companion:Landroidx/compose/runtime/Composer$Companion;

    invoke-virtual {v2}, Landroidx/compose/runtime/Composer$Companion;->getEmpty()Ljava/lang/Object;

    move-result-object v2

    if-eq v1, v2, :cond_1

    move v2, v12

    goto :goto_1

    :cond_1
    move v2, v11

    :goto_1
    move/from16 v16, v2

    .line 1327
    .local v16, "hasObjectKey":Z
    if-nez p3, :cond_2

    sget-object v2, Landroidx/compose/runtime/Composer;->Companion:Landroidx/compose/runtime/Composer$Companion;

    invoke-virtual {v2}, Landroidx/compose/runtime/Composer$Companion;->getEmpty()Ljava/lang/Object;

    move-result-object v2

    if-eq v10, v2, :cond_2

    move v2, v12

    goto :goto_2

    :cond_2
    move v2, v11

    :goto_2
    move/from16 v17, v2

    .line 1328
    .local v17, "hasAux":Z
    iget-object v2, v0, Landroidx/compose/runtime/SlotWriter;->groups:[I

    .line 1329
    nop

    .line 1330
    nop

    .line 1331
    nop

    .line 1332
    nop

    .line 1333
    nop

    .line 1334
    iget v8, v0, Landroidx/compose/runtime/SlotWriter;->parent:I

    .line 1335
    iget v9, v0, Landroidx/compose/runtime/SlotWriter;->currentSlot:I

    .line 1328
    move v3, v15

    move/from16 v4, p1

    move/from16 v5, p3

    move/from16 v6, v16

    move/from16 v7, v17

    invoke-static/range {v2 .. v9}, Landroidx/compose/runtime/SlotTableKt;->access$initGroup([IIIZZZII)V

    .line 1337
    iget v2, v0, Landroidx/compose/runtime/SlotWriter;->currentSlot:I

    iput v2, v0, Landroidx/compose/runtime/SlotWriter;->currentSlotEnd:I

    .line 1339
    nop

    .line 1340
    if-eqz v16, :cond_3

    move v2, v12

    goto :goto_3

    :cond_3
    move v2, v11

    .line 1339
    :goto_3
    add-int v2, p3, v2

    .line 1341
    if-eqz v17, :cond_4

    goto :goto_4

    :cond_4
    move v12, v11

    .line 1339
    :goto_4
    add-int/2addr v2, v12

    .line 1342
    .local v2, "dataSlotsNeeded":I
    if-lez v2, :cond_8

    .line 1343
    invoke-direct {v0, v2, v14}, Landroidx/compose/runtime/SlotWriter;->insertSlots(II)V

    .line 1344
    iget-object v3, v0, Landroidx/compose/runtime/SlotWriter;->slots:[Ljava/lang/Object;

    .line 1345
    .local v3, "slots":[Ljava/lang/Object;
    iget v4, v0, Landroidx/compose/runtime/SlotWriter;->currentSlot:I

    .line 1346
    .local v4, "currentSlot":I
    if-eqz p3, :cond_5

    add-int/lit8 v5, v4, 0x1

    .end local v4    # "currentSlot":I
    .local v5, "currentSlot":I
    aput-object v10, v3, v4

    move v4, v5

    .line 1347
    .end local v5    # "currentSlot":I
    .restart local v4    # "currentSlot":I
    :cond_5
    if-eqz v16, :cond_6

    add-int/lit8 v5, v4, 0x1

    .end local v4    # "currentSlot":I
    .restart local v5    # "currentSlot":I
    aput-object v1, v3, v4

    move v4, v5

    .line 1348
    .end local v5    # "currentSlot":I
    .restart local v4    # "currentSlot":I
    :cond_6
    if-eqz v17, :cond_7

    add-int/lit8 v5, v4, 0x1

    .end local v4    # "currentSlot":I
    .restart local v5    # "currentSlot":I
    aput-object v10, v3, v4

    move v4, v5

    .line 1349
    .end local v5    # "currentSlot":I
    .restart local v4    # "currentSlot":I
    :cond_7
    iput v4, v0, Landroidx/compose/runtime/SlotWriter;->currentSlot:I

    .line 1351
    .end local v3    # "slots":[Ljava/lang/Object;
    .end local v4    # "currentSlot":I
    :cond_8
    iput v11, v0, Landroidx/compose/runtime/SlotWriter;->nodeCount:I

    .line 1352
    add-int/lit8 v3, v14, 0x1

    .line 1353
    .local v3, "newCurrent":I
    iput v14, v0, Landroidx/compose/runtime/SlotWriter;->parent:I

    .line 1354
    iput v3, v0, Landroidx/compose/runtime/SlotWriter;->currentGroup:I

    .line 1355
    nop

    .end local v2    # "dataSlotsNeeded":I
    .end local v3    # "newCurrent":I
    .end local v14    # "current":I
    .end local v15    # "currentAddress":I
    .end local v16    # "hasObjectKey":Z
    .end local v17    # "hasAux":Z
    goto :goto_6

    .line 1357
    :cond_9
    iget v2, v0, Landroidx/compose/runtime/SlotWriter;->parent:I

    .line 1358
    .local v2, "previousParent":I
    iget-object v3, v0, Landroidx/compose/runtime/SlotWriter;->startStack:Landroidx/compose/runtime/IntStack;

    invoke-virtual {v3, v2}, Landroidx/compose/runtime/IntStack;->push(I)V

    .line 1359
    invoke-direct/range {p0 .. p0}, Landroidx/compose/runtime/SlotWriter;->saveCurrentGroupEnd()V

    .line 1360
    iget v3, v0, Landroidx/compose/runtime/SlotWriter;->currentGroup:I

    .line 1361
    .local v3, "currentGroup":I
    invoke-direct {v0, v3}, Landroidx/compose/runtime/SlotWriter;->groupIndexToAddress(I)I

    move-result v4

    .line 1362
    .local v4, "currentGroupAddress":I
    sget-object v5, Landroidx/compose/runtime/Composer;->Companion:Landroidx/compose/runtime/Composer$Companion;

    invoke-virtual {v5}, Landroidx/compose/runtime/Composer$Companion;->getEmpty()Ljava/lang/Object;

    move-result-object v5

    invoke-static {v10, v5}, Lkotlin/jvm/internal/Intrinsics;->areEqual(Ljava/lang/Object;Ljava/lang/Object;)Z

    move-result v5

    if-nez v5, :cond_b

    .line 1363
    if-eqz p3, :cond_a

    .line 1364
    invoke-virtual {v0, v10}, Landroidx/compose/runtime/SlotWriter;->updateNode(Ljava/lang/Object;)V

    goto :goto_5

    .line 1366
    :cond_a
    invoke-virtual {v0, v10}, Landroidx/compose/runtime/SlotWriter;->updateAux(Ljava/lang/Object;)V

    .line 1368
    :cond_b
    :goto_5
    iget-object v5, v0, Landroidx/compose/runtime/SlotWriter;->groups:[I

    invoke-direct {v0, v5, v4}, Landroidx/compose/runtime/SlotWriter;->slotIndex([II)I

    move-result v5

    iput v5, v0, Landroidx/compose/runtime/SlotWriter;->currentSlot:I

    .line 1369
    iget-object v5, v0, Landroidx/compose/runtime/SlotWriter;->groups:[I

    .line 1370
    iget v6, v0, Landroidx/compose/runtime/SlotWriter;->currentGroup:I

    add-int/2addr v6, v12

    invoke-direct {v0, v6}, Landroidx/compose/runtime/SlotWriter;->groupIndexToAddress(I)I

    move-result v6

    .line 1369
    invoke-direct {v0, v5, v6}, Landroidx/compose/runtime/SlotWriter;->dataIndex([II)I

    move-result v5

    iput v5, v0, Landroidx/compose/runtime/SlotWriter;->currentSlotEnd:I

    .line 1372
    iget-object v5, v0, Landroidx/compose/runtime/SlotWriter;->groups:[I

    invoke-static {v5, v4}, Landroidx/compose/runtime/SlotTableKt;->access$nodeCount([II)I

    move-result v5

    iput v5, v0, Landroidx/compose/runtime/SlotWriter;->nodeCount:I

    .line 1374
    iput v3, v0, Landroidx/compose/runtime/SlotWriter;->parent:I

    .line 1375
    add-int/lit8 v5, v3, 0x1

    iput v5, v0, Landroidx/compose/runtime/SlotWriter;->currentGroup:I

    .line 1376
    iget-object v5, v0, Landroidx/compose/runtime/SlotWriter;->groups:[I

    invoke-static {v5, v4}, Landroidx/compose/runtime/SlotTableKt;->access$groupSize([II)I

    move-result v5

    add-int/2addr v5, v3

    move v3, v5

    .line 1322
    .end local v2    # "previousParent":I
    .end local v3    # "currentGroup":I
    .end local v4    # "currentGroupAddress":I
    :goto_6
    iput v3, v0, Landroidx/compose/runtime/SlotWriter;->currentGroupEnd:I

    .line 1378
    return-void
.end method

.method private final updateAnchors(II)V
    .locals 8
    .param p1, "previousGapStart"    # I
    .param p2, "newGapStart"    # I

    .line 2161
    iget v0, p0, Landroidx/compose/runtime/SlotWriter;->groupGapLen:I

    .line 2162
    .local v0, "gapLen":I
    invoke-direct {p0}, Landroidx/compose/runtime/SlotWriter;->getCapacity()I

    move-result v1

    sub-int/2addr v1, v0

    .line 2163
    .local v1, "size":I
    const-string v2, "anchors[index]"

    if-ge p1, p2, :cond_2

    .line 2167
    iget-object v3, p0, Landroidx/compose/runtime/SlotWriter;->anchors:Ljava/util/ArrayList;

    invoke-static {v3, p1, v1}, Landroidx/compose/runtime/SlotTableKt;->access$locationOf(Ljava/util/ArrayList;II)I

    move-result v3

    .line 2168
    .local v3, "index":I
    :goto_0
    iget-object v4, p0, Landroidx/compose/runtime/SlotWriter;->anchors:Ljava/util/ArrayList;

    invoke-virtual {v4}, Ljava/util/ArrayList;->size()I

    move-result v4

    if-ge v3, v4, :cond_3

    .line 2169
    iget-object v4, p0, Landroidx/compose/runtime/SlotWriter;->anchors:Ljava/util/ArrayList;

    invoke-virtual {v4, v3}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    move-result-object v4

    invoke-static {v4, v2}, Lkotlin/jvm/internal/Intrinsics;->checkNotNullExpressionValue(Ljava/lang/Object;Ljava/lang/String;)V

    check-cast v4, Landroidx/compose/runtime/Anchor;

    .line 2170
    .local v4, "anchor":Landroidx/compose/runtime/Anchor;
    invoke-virtual {v4}, Landroidx/compose/runtime/Anchor;->getLocation$runtime_release()I

    move-result v5

    .line 2171
    .local v5, "location":I
    if-gez v5, :cond_1

    .line 2172
    add-int v6, v1, v5

    .line 2173
    .local v6, "newLocation":I
    if-ge v6, p2, :cond_0

    .line 2174
    add-int v7, v1, v5

    invoke-virtual {v4, v7}, Landroidx/compose/runtime/Anchor;->setLocation$runtime_release(I)V

    .line 2175
    add-int/lit8 v3, v3, 0x1

    goto :goto_0

    .line 2176
    :cond_0
    goto :goto_2

    .line 2177
    .end local v6    # "newLocation":I
    :cond_1
    goto :goto_2

    .line 2182
    .end local v3    # "index":I
    .end local v4    # "anchor":Landroidx/compose/runtime/Anchor;
    .end local v5    # "location":I
    :cond_2
    iget-object v3, p0, Landroidx/compose/runtime/SlotWriter;->anchors:Ljava/util/ArrayList;

    invoke-static {v3, p2, v1}, Landroidx/compose/runtime/SlotTableKt;->access$locationOf(Ljava/util/ArrayList;II)I

    move-result v3

    .line 2183
    .restart local v3    # "index":I
    :goto_1
    iget-object v4, p0, Landroidx/compose/runtime/SlotWriter;->anchors:Ljava/util/ArrayList;

    invoke-virtual {v4}, Ljava/util/ArrayList;->size()I

    move-result v4

    if-ge v3, v4, :cond_3

    .line 2184
    iget-object v4, p0, Landroidx/compose/runtime/SlotWriter;->anchors:Ljava/util/ArrayList;

    invoke-virtual {v4, v3}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    move-result-object v4

    invoke-static {v4, v2}, Lkotlin/jvm/internal/Intrinsics;->checkNotNullExpressionValue(Ljava/lang/Object;Ljava/lang/String;)V

    check-cast v4, Landroidx/compose/runtime/Anchor;

    .line 2185
    .restart local v4    # "anchor":Landroidx/compose/runtime/Anchor;
    invoke-virtual {v4}, Landroidx/compose/runtime/Anchor;->getLocation$runtime_release()I

    move-result v5

    .line 2186
    .restart local v5    # "location":I
    if-ltz v5, :cond_3

    .line 2187
    sub-int v6, v1, v5

    neg-int v6, v6

    invoke-virtual {v4, v6}, Landroidx/compose/runtime/Anchor;->setLocation$runtime_release(I)V

    .line 2188
    add-int/lit8 v3, v3, 0x1

    goto :goto_1

    .line 2192
    .end local v3    # "index":I
    .end local v4    # "anchor":Landroidx/compose/runtime/Anchor;
    .end local v5    # "location":I
    :cond_3
    :goto_2
    return-void
.end method

.method private final updateDataIndex([III)V
    .locals 3
    .param p1, "$this$updateDataIndex"    # [I
    .param p2, "address"    # I
    .param p3, "dataIndex"    # I

    .line 2371
    nop

    .line 2372
    nop

    .line 2373
    iget v0, p0, Landroidx/compose/runtime/SlotWriter;->slotsGapStart:I

    iget v1, p0, Landroidx/compose/runtime/SlotWriter;->slotsGapLen:I

    iget-object v2, p0, Landroidx/compose/runtime/SlotWriter;->slots:[Ljava/lang/Object;

    array-length v2, v2

    invoke-direct {p0, p3, v0, v1, v2}, Landroidx/compose/runtime/SlotWriter;->dataIndexToDataAnchor(IIII)I

    move-result v0

    .line 2371
    invoke-static {p1, p2, v0}, Landroidx/compose/runtime/SlotTableKt;->access$updateDataAnchor([III)V

    .line 2375
    return-void
.end method

.method private final updateNodeOfGroup(ILjava/lang/Object;)V
    .locals 6
    .param p1, "index"    # I
    .param p2, "value"    # Ljava/lang/Object;

    .line 2150
    invoke-direct {p0, p1}, Landroidx/compose/runtime/SlotWriter;->groupIndexToAddress(I)I

    move-result v0

    .line 2151
    .local v0, "address":I
    iget-object v1, p0, Landroidx/compose/runtime/SlotWriter;->groups:[I

    array-length v2, v1

    if-ge v0, v2, :cond_0

    invoke-static {v1, v0}, Landroidx/compose/runtime/SlotTableKt;->access$isNode([II)Z

    move-result v1

    if-eqz v1, :cond_0

    const/4 v1, 0x1

    goto :goto_0

    :cond_0
    const/4 v1, 0x0

    .local v1, "value$iv":Z
    :goto_0
    const/4 v2, 0x0

    .line 2757
    .local v2, "$i$f$runtimeCheck":I
    if-eqz v1, :cond_1

    .line 2761
    nop

    .line 2154
    .end local v1    # "value$iv":Z
    .end local v2    # "$i$f$runtimeCheck":I
    iget-object v1, p0, Landroidx/compose/runtime/SlotWriter;->slots:[Ljava/lang/Object;

    iget-object v2, p0, Landroidx/compose/runtime/SlotWriter;->groups:[I

    invoke-direct {p0, v2, v0}, Landroidx/compose/runtime/SlotWriter;->nodeIndex([II)I

    move-result v2

    invoke-direct {p0, v2}, Landroidx/compose/runtime/SlotWriter;->dataIndexToDataAddress(I)I

    move-result v2

    aput-object p2, v1, v2

    .line 2155
    return-void

    .line 2758
    .restart local v1    # "value$iv":Z
    .restart local v2    # "$i$f$runtimeCheck":I
    :cond_1
    const/4 v3, 0x0

    .line 2152
    .local v3, "$i$a$-runtimeCheck-SlotWriter$updateNodeOfGroup$1":I
    new-instance v4, Ljava/lang/StringBuilder;

    invoke-direct {v4}, Ljava/lang/StringBuilder;-><init>()V

    const-string v5, "Updating the node of a group at "

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v4

    invoke-virtual {v4, p1}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v4

    const-string v5, " that was not created with as a node group"

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v4

    invoke-virtual {v4}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v3

    .line 2759
    .local v3, "message$iv":Ljava/lang/Object;
    invoke-virtual {v3}, Ljava/lang/Object;->toString()Ljava/lang/String;

    move-result-object v4

    invoke-static {v4}, Landroidx/compose/runtime/ComposerKt;->composeRuntimeError(Ljava/lang/String;)Ljava/lang/Void;

    new-instance v4, Lkotlin/KotlinNothingValueException;

    invoke-direct {v4}, Lkotlin/KotlinNothingValueException;-><init>()V

    throw v4
.end method


# virtual methods
.method public final advanceBy(I)V
    .locals 6
    .param p1, "amount"    # I

    .line 1219
    const/4 v0, 0x1

    const/4 v1, 0x0

    if-ltz p1, :cond_0

    move v2, v0

    goto :goto_0

    :cond_0
    move v2, v1

    :goto_0
    if-eqz v2, :cond_5

    .line 1220
    iget v2, p0, Landroidx/compose/runtime/SlotWriter;->insertCount:I

    if-gtz v2, :cond_1

    move v2, v0

    goto :goto_1

    :cond_1
    move v2, v1

    :goto_1
    if-eqz v2, :cond_4

    .line 1221
    iget v2, p0, Landroidx/compose/runtime/SlotWriter;->currentGroup:I

    add-int/2addr v2, p1

    .line 1223
    .local v2, "index":I
    iget v3, p0, Landroidx/compose/runtime/SlotWriter;->parent:I

    if-lt v2, v3, :cond_2

    iget v3, p0, Landroidx/compose/runtime/SlotWriter;->currentGroupEnd:I

    if-gt v2, v3, :cond_2

    goto :goto_2

    :cond_2
    move v0, v1

    .local v0, "value$iv":Z
    :goto_2
    const/4 v1, 0x0

    .line 2714
    .local v1, "$i$f$runtimeCheck":I
    if-eqz v0, :cond_3

    .line 2718
    nop

    .line 1226
    .end local v0    # "value$iv":Z
    .end local v1    # "$i$f$runtimeCheck":I
    iput v2, p0, Landroidx/compose/runtime/SlotWriter;->currentGroup:I

    .line 1227
    iget-object v0, p0, Landroidx/compose/runtime/SlotWriter;->groups:[I

    invoke-direct {p0, v2}, Landroidx/compose/runtime/SlotWriter;->groupIndexToAddress(I)I

    move-result v1

    invoke-direct {p0, v0, v1}, Landroidx/compose/runtime/SlotWriter;->dataIndex([II)I

    move-result v0

    .line 1228
    .local v0, "newSlot":I
    iput v0, p0, Landroidx/compose/runtime/SlotWriter;->currentSlot:I

    .line 1229
    iput v0, p0, Landroidx/compose/runtime/SlotWriter;->currentSlotEnd:I

    .line 1230
    return-void

    .line 2715
    .local v0, "value$iv":Z
    .restart local v1    # "$i$f$runtimeCheck":I
    :cond_3
    const/4 v3, 0x0

    .line 1224
    .local v3, "$i$a$-runtimeCheck-SlotWriter$advanceBy$3":I
    new-instance v4, Ljava/lang/StringBuilder;

    invoke-direct {v4}, Ljava/lang/StringBuilder;-><init>()V

    const-string v5, "Cannot seek outside the current group ("

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v4

    invoke-virtual {p0}, Landroidx/compose/runtime/SlotWriter;->getParent()I

    move-result v5

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v4

    const/16 v5, 0x2d

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(C)Ljava/lang/StringBuilder;

    move-result-object v4

    iget v5, p0, Landroidx/compose/runtime/SlotWriter;->currentGroupEnd:I

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v4

    const/16 v5, 0x29

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(C)Ljava/lang/StringBuilder;

    move-result-object v4

    invoke-virtual {v4}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v3

    .line 2716
    .local v3, "message$iv":Ljava/lang/Object;
    invoke-virtual {v3}, Ljava/lang/Object;->toString()Ljava/lang/String;

    move-result-object v4

    invoke-static {v4}, Landroidx/compose/runtime/ComposerKt;->composeRuntimeError(Ljava/lang/String;)Ljava/lang/Void;

    new-instance v4, Lkotlin/KotlinNothingValueException;

    invoke-direct {v4}, Lkotlin/KotlinNothingValueException;-><init>()V

    throw v4

    .line 2703
    .end local v0    # "value$iv":Z
    .end local v1    # "$i$f$runtimeCheck":I
    .end local v2    # "index":I
    .end local v3    # "message$iv":Ljava/lang/Object;
    :cond_4
    const/4 v0, 0x0

    .line 1220
    .local v0, "$i$a$-check-SlotWriter$advanceBy$2":I
    nop

    .end local v0    # "$i$a$-check-SlotWriter$advanceBy$2":I
    new-instance v0, Ljava/lang/IllegalStateException;

    const-string v1, "Cannot call seek() while inserting"

    invoke-virtual {v1}, Ljava/lang/Object;->toString()Ljava/lang/String;

    move-result-object v1

    invoke-direct {v0, v1}, Ljava/lang/IllegalStateException;-><init>(Ljava/lang/String;)V

    check-cast v0, Ljava/lang/Throwable;

    throw v0

    .line 2703
    :cond_5
    const/4 v0, 0x0

    .line 1219
    .local v0, "$i$a$-require-SlotWriter$advanceBy$1":I
    nop

    .end local v0    # "$i$a$-require-SlotWriter$advanceBy$1":I
    new-instance v0, Ljava/lang/IllegalArgumentException;

    const-string v1, "Cannot seek backwards"

    invoke-virtual {v1}, Ljava/lang/Object;->toString()Ljava/lang/String;

    move-result-object v1

    invoke-direct {v0, v1}, Ljava/lang/IllegalArgumentException;-><init>(Ljava/lang/String;)V

    check-cast v0, Ljava/lang/Throwable;

    throw v0
.end method

.method public final anchor(I)Landroidx/compose/runtime/Anchor;
    .locals 7
    .param p1, "index"    # I

    .line 1811
    iget-object v0, p0, Landroidx/compose/runtime/SlotWriter;->anchors:Ljava/util/ArrayList;

    .local v0, "$this$getOrAdd$iv":Ljava/util/ArrayList;
    invoke-virtual {p0}, Landroidx/compose/runtime/SlotWriter;->getSize$runtime_release()I

    move-result v1

    .local v1, "effectiveSize$iv":I
    const/4 v2, 0x0

    .line 2741
    .local v2, "$i$f$getOrAdd":I
    invoke-static {v0, p1, v1}, Landroidx/compose/runtime/SlotTableKt;->access$search(Ljava/util/ArrayList;II)I

    move-result v3

    .line 2742
    .local v3, "location$iv":I
    if-gez v3, :cond_1

    .line 2743
    const/4 v4, 0x0

    .line 1812
    .local v4, "$i$a$-getOrAdd-SlotWriter$anchor$1":I
    new-instance v5, Landroidx/compose/runtime/Anchor;

    iget v6, p0, Landroidx/compose/runtime/SlotWriter;->groupGapStart:I

    if-gt p1, v6, :cond_0

    move v6, p1

    goto :goto_0

    :cond_0
    invoke-virtual {p0}, Landroidx/compose/runtime/SlotWriter;->getSize$runtime_release()I

    move-result v6

    sub-int/2addr v6, p1

    neg-int v6, v6

    :goto_0
    invoke-direct {v5, v6}, Landroidx/compose/runtime/Anchor;-><init>(I)V

    .end local v4    # "$i$a$-getOrAdd-SlotWriter$anchor$1":I
    move-object v4, v5

    .line 2744
    .local v4, "anchor$iv":Landroidx/compose/runtime/Anchor;
    add-int/lit8 v5, v3, 0x1

    neg-int v5, v5

    invoke-virtual {v0, v5, v4}, Ljava/util/ArrayList;->add(ILjava/lang/Object;)V

    .line 2745
    nop

    .end local v4    # "anchor$iv":Landroidx/compose/runtime/Anchor;
    goto :goto_1

    .line 2746
    :cond_1
    invoke-virtual {v0, v3}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    move-result-object v4

    const-string v5, "get(location)"

    invoke-static {v4, v5}, Lkotlin/jvm/internal/Intrinsics;->checkNotNullExpressionValue(Ljava/lang/Object;Ljava/lang/String;)V

    check-cast v4, Landroidx/compose/runtime/Anchor;

    .line 2742
    :goto_1
    nop

    .line 1813
    .end local v0    # "$this$getOrAdd$iv":Ljava/util/ArrayList;
    .end local v1    # "effectiveSize$iv":I
    .end local v2    # "$i$f$getOrAdd":I
    .end local v3    # "location$iv":I
    return-object v4
.end method

.method public final anchorIndex(Landroidx/compose/runtime/Anchor;)I
    .locals 3
    .param p1, "anchor"    # Landroidx/compose/runtime/Anchor;

    const-string v0, "anchor"

    invoke-static {p1, v0}, Lkotlin/jvm/internal/Intrinsics;->checkNotNullParameter(Ljava/lang/Object;Ljava/lang/String;)V

    .line 1818
    invoke-virtual {p1}, Landroidx/compose/runtime/Anchor;->getLocation$runtime_release()I

    move-result v0

    .line 2703
    .local v0, "it":I
    const/4 v1, 0x0

    .line 1818
    .local v1, "$i$a$-let-SlotWriter$anchorIndex$1":I
    if-gez v0, :cond_0

    invoke-virtual {p0}, Landroidx/compose/runtime/SlotWriter;->getSize$runtime_release()I

    move-result v2

    add-int/2addr v2, v0

    move v0, v2

    .end local v0    # "it":I
    .end local v1    # "$i$a$-let-SlotWriter$anchorIndex$1":I
    :cond_0
    return v0
.end method

.method public final beginInsert()V
    .locals 2

    .line 1252
    iget v0, p0, Landroidx/compose/runtime/SlotWriter;->insertCount:I

    add-int/lit8 v1, v0, 0x1

    iput v1, p0, Landroidx/compose/runtime/SlotWriter;->insertCount:I

    if-nez v0, :cond_0

    .line 1253
    invoke-direct {p0}, Landroidx/compose/runtime/SlotWriter;->saveCurrentGroupEnd()V

    .line 1255
    :cond_0
    return-void
.end method

.method public final close()V
    .locals 9

    .line 1094
    const/4 v0, 0x1

    iput-boolean v0, p0, Landroidx/compose/runtime/SlotWriter;->closed:Z

    .line 1096
    invoke-virtual {p0}, Landroidx/compose/runtime/SlotWriter;->getSize$runtime_release()I

    move-result v0

    invoke-direct {p0, v0}, Landroidx/compose/runtime/SlotWriter;->moveGroupGapTo(I)V

    .line 1097
    iget-object v0, p0, Landroidx/compose/runtime/SlotWriter;->slots:[Ljava/lang/Object;

    array-length v0, v0

    iget v1, p0, Landroidx/compose/runtime/SlotWriter;->slotsGapLen:I

    sub-int/2addr v0, v1

    iget v1, p0, Landroidx/compose/runtime/SlotWriter;->groupGapStart:I

    invoke-direct {p0, v0, v1}, Landroidx/compose/runtime/SlotWriter;->moveSlotGapTo(II)V

    .line 1098
    iget-object v2, p0, Landroidx/compose/runtime/SlotWriter;->table:Landroidx/compose/runtime/SlotTable;

    .line 1099
    nop

    .line 1100
    iget-object v4, p0, Landroidx/compose/runtime/SlotWriter;->groups:[I

    .line 1101
    iget v5, p0, Landroidx/compose/runtime/SlotWriter;->groupGapStart:I

    .line 1102
    iget-object v6, p0, Landroidx/compose/runtime/SlotWriter;->slots:[Ljava/lang/Object;

    .line 1103
    iget v7, p0, Landroidx/compose/runtime/SlotWriter;->slotsGapStart:I

    .line 1104
    iget-object v8, p0, Landroidx/compose/runtime/SlotWriter;->anchors:Ljava/util/ArrayList;

    .line 1098
    move-object v3, p0

    invoke-virtual/range {v2 .. v8}, Landroidx/compose/runtime/SlotTable;->close$runtime_release(Landroidx/compose/runtime/SlotWriter;[II[Ljava/lang/Object;ILjava/util/ArrayList;)V

    .line 1106
    return-void
.end method

.method public final endGroup()I
    .locals 19

    .line 1384
    move-object/from16 v0, p0

    iget v1, v0, Landroidx/compose/runtime/SlotWriter;->insertCount:I

    const/4 v2, 0x1

    const/4 v3, 0x0

    if-lez v1, :cond_0

    move v1, v2

    goto :goto_0

    :cond_0
    move v1, v3

    .line 1385
    .local v1, "inserting":Z
    :goto_0
    iget v4, v0, Landroidx/compose/runtime/SlotWriter;->currentGroup:I

    .line 1386
    .local v4, "currentGroup":I
    iget v5, v0, Landroidx/compose/runtime/SlotWriter;->currentGroupEnd:I

    .line 1388
    .local v5, "currentGroupEnd":I
    iget v6, v0, Landroidx/compose/runtime/SlotWriter;->parent:I

    .line 1389
    .local v6, "groupIndex":I
    invoke-direct {v0, v6}, Landroidx/compose/runtime/SlotWriter;->groupIndexToAddress(I)I

    move-result v7

    .line 1390
    .local v7, "groupAddress":I
    iget v8, v0, Landroidx/compose/runtime/SlotWriter;->nodeCount:I

    .line 1391
    .local v8, "newNodes":I
    sub-int v9, v4, v6

    .line 1392
    .local v9, "newGroupSize":I
    iget-object v10, v0, Landroidx/compose/runtime/SlotWriter;->groups:[I

    invoke-static {v10, v7}, Landroidx/compose/runtime/SlotTableKt;->access$isNode([II)Z

    move-result v10

    .line 1393
    .local v10, "isNode":Z
    if-eqz v1, :cond_2

    .line 1394
    iget-object v3, v0, Landroidx/compose/runtime/SlotWriter;->groups:[I

    invoke-static {v3, v7, v9}, Landroidx/compose/runtime/SlotTableKt;->access$updateGroupSize([III)V

    .line 1395
    iget-object v3, v0, Landroidx/compose/runtime/SlotWriter;->groups:[I

    invoke-static {v3, v7, v8}, Landroidx/compose/runtime/SlotTableKt;->access$updateNodeCount([III)V

    .line 1396
    iget-object v3, v0, Landroidx/compose/runtime/SlotWriter;->nodeCountStack:Landroidx/compose/runtime/IntStack;

    invoke-virtual {v3}, Landroidx/compose/runtime/IntStack;->pop()I

    move-result v3

    if-eqz v10, :cond_1

    goto :goto_1

    :cond_1
    move v2, v8

    :goto_1
    add-int/2addr v3, v2

    iput v3, v0, Landroidx/compose/runtime/SlotWriter;->nodeCount:I

    .line 1397
    iget-object v2, v0, Landroidx/compose/runtime/SlotWriter;->groups:[I

    invoke-direct {v0, v2, v6}, Landroidx/compose/runtime/SlotWriter;->parent([II)I

    move-result v2

    iput v2, v0, Landroidx/compose/runtime/SlotWriter;->parent:I

    move/from16 v16, v1

    move/from16 v18, v4

    goto/16 :goto_a

    .line 1399
    :cond_2
    if-ne v4, v5, :cond_3

    goto :goto_2

    :cond_3
    move v2, v3

    :goto_2
    if-eqz v2, :cond_10

    .line 1403
    iget-object v2, v0, Landroidx/compose/runtime/SlotWriter;->groups:[I

    invoke-static {v2, v7}, Landroidx/compose/runtime/SlotTableKt;->access$groupSize([II)I

    move-result v2

    .line 1404
    .local v2, "oldGroupSize":I
    iget-object v11, v0, Landroidx/compose/runtime/SlotWriter;->groups:[I

    invoke-static {v11, v7}, Landroidx/compose/runtime/SlotTableKt;->access$nodeCount([II)I

    move-result v11

    .line 1405
    .local v11, "oldNodes":I
    iget-object v12, v0, Landroidx/compose/runtime/SlotWriter;->groups:[I

    invoke-static {v12, v7, v9}, Landroidx/compose/runtime/SlotTableKt;->access$updateGroupSize([III)V

    .line 1406
    iget-object v12, v0, Landroidx/compose/runtime/SlotWriter;->groups:[I

    invoke-static {v12, v7, v8}, Landroidx/compose/runtime/SlotTableKt;->access$updateNodeCount([III)V

    .line 1407
    iget-object v12, v0, Landroidx/compose/runtime/SlotWriter;->startStack:Landroidx/compose/runtime/IntStack;

    invoke-virtual {v12}, Landroidx/compose/runtime/IntStack;->pop()I

    move-result v12

    .line 1408
    .local v12, "newParent":I
    invoke-direct/range {p0 .. p0}, Landroidx/compose/runtime/SlotWriter;->restoreCurrentGroupEnd()I

    .line 1409
    iput v12, v0, Landroidx/compose/runtime/SlotWriter;->parent:I

    .line 1410
    iget-object v13, v0, Landroidx/compose/runtime/SlotWriter;->groups:[I

    invoke-direct {v0, v13, v6}, Landroidx/compose/runtime/SlotWriter;->parent([II)I

    move-result v13

    .line 1411
    .local v13, "groupParent":I
    iget-object v14, v0, Landroidx/compose/runtime/SlotWriter;->nodeCountStack:Landroidx/compose/runtime/IntStack;

    invoke-virtual {v14}, Landroidx/compose/runtime/IntStack;->pop()I

    move-result v14

    iput v14, v0, Landroidx/compose/runtime/SlotWriter;->nodeCount:I

    .line 1412
    if-ne v13, v12, :cond_5

    .line 1414
    if-eqz v10, :cond_4

    goto :goto_3

    :cond_4
    sub-int v3, v8, v11

    :goto_3
    add-int/2addr v14, v3

    iput v14, v0, Landroidx/compose/runtime/SlotWriter;->nodeCount:I

    move/from16 v16, v1

    move/from16 v18, v4

    goto/16 :goto_a

    .line 1422
    :cond_5
    sub-int v14, v9, v2

    .line 1423
    .local v14, "groupSizeDelta":I
    if-eqz v10, :cond_6

    goto :goto_4

    :cond_6
    sub-int v3, v8, v11

    .line 1424
    .local v3, "nodesDelta":I
    :goto_4
    if-nez v14, :cond_8

    if-eqz v3, :cond_7

    goto :goto_5

    :cond_7
    move/from16 v16, v1

    move/from16 v17, v2

    move/from16 v18, v4

    goto/16 :goto_9

    .line 1425
    :cond_8
    :goto_5
    move v15, v13

    .line 1427
    .local v15, "current":I
    :goto_6
    if-eqz v15, :cond_f

    .line 1428
    if-eq v15, v12, :cond_e

    .line 1429
    if-nez v3, :cond_a

    if-eqz v14, :cond_9

    goto :goto_7

    :cond_9
    move/from16 v16, v1

    move/from16 v17, v2

    move/from16 v18, v4

    goto :goto_9

    .line 1431
    :cond_a
    :goto_7
    move/from16 v16, v1

    .end local v1    # "inserting":Z
    .local v16, "inserting":Z
    invoke-direct {v0, v15}, Landroidx/compose/runtime/SlotWriter;->groupIndexToAddress(I)I

    move-result v1

    .line 1432
    .local v1, "currentAddress":I
    if-eqz v14, :cond_b

    .line 1433
    move/from16 v17, v2

    .end local v2    # "oldGroupSize":I
    .local v17, "oldGroupSize":I
    iget-object v2, v0, Landroidx/compose/runtime/SlotWriter;->groups:[I

    invoke-static {v2, v1}, Landroidx/compose/runtime/SlotTableKt;->access$groupSize([II)I

    move-result v2

    add-int/2addr v2, v14

    .line 1434
    .local v2, "newSize":I
    move/from16 v18, v4

    .end local v4    # "currentGroup":I
    .local v18, "currentGroup":I
    iget-object v4, v0, Landroidx/compose/runtime/SlotWriter;->groups:[I

    invoke-static {v4, v1, v2}, Landroidx/compose/runtime/SlotTableKt;->access$updateGroupSize([III)V

    goto :goto_8

    .line 1432
    .end local v17    # "oldGroupSize":I
    .end local v18    # "currentGroup":I
    .local v2, "oldGroupSize":I
    .restart local v4    # "currentGroup":I
    :cond_b
    move/from16 v17, v2

    move/from16 v18, v4

    .line 1436
    .end local v2    # "oldGroupSize":I
    .end local v4    # "currentGroup":I
    .restart local v17    # "oldGroupSize":I
    .restart local v18    # "currentGroup":I
    :goto_8
    if-eqz v3, :cond_c

    .line 1437
    iget-object v2, v0, Landroidx/compose/runtime/SlotWriter;->groups:[I

    .line 1438
    nop

    .line 1439
    invoke-static {v2, v1}, Landroidx/compose/runtime/SlotTableKt;->access$nodeCount([II)I

    move-result v4

    add-int/2addr v4, v3

    .line 1437
    invoke-static {v2, v1, v4}, Landroidx/compose/runtime/SlotTableKt;->access$updateNodeCount([III)V

    .line 1442
    :cond_c
    iget-object v2, v0, Landroidx/compose/runtime/SlotWriter;->groups:[I

    invoke-static {v2, v1}, Landroidx/compose/runtime/SlotTableKt;->access$isNode([II)Z

    move-result v2

    if-eqz v2, :cond_d

    const/4 v3, 0x0

    .line 1443
    :cond_d
    iget-object v2, v0, Landroidx/compose/runtime/SlotWriter;->groups:[I

    invoke-direct {v0, v2, v15}, Landroidx/compose/runtime/SlotWriter;->parent([II)I

    move-result v15

    move/from16 v1, v16

    move/from16 v2, v17

    move/from16 v4, v18

    .end local v1    # "currentAddress":I
    goto :goto_6

    .line 1428
    .end local v16    # "inserting":Z
    .end local v17    # "oldGroupSize":I
    .end local v18    # "currentGroup":I
    .local v1, "inserting":Z
    .restart local v2    # "oldGroupSize":I
    .restart local v4    # "currentGroup":I
    :cond_e
    move/from16 v16, v1

    move/from16 v17, v2

    move/from16 v18, v4

    .end local v1    # "inserting":Z
    .end local v2    # "oldGroupSize":I
    .end local v4    # "currentGroup":I
    .restart local v16    # "inserting":Z
    .restart local v17    # "oldGroupSize":I
    .restart local v18    # "currentGroup":I
    goto :goto_9

    .line 1427
    .end local v16    # "inserting":Z
    .end local v17    # "oldGroupSize":I
    .end local v18    # "currentGroup":I
    .restart local v1    # "inserting":Z
    .restart local v2    # "oldGroupSize":I
    .restart local v4    # "currentGroup":I
    :cond_f
    move/from16 v16, v1

    move/from16 v17, v2

    move/from16 v18, v4

    .line 1446
    .end local v1    # "inserting":Z
    .end local v2    # "oldGroupSize":I
    .end local v4    # "currentGroup":I
    .end local v15    # "current":I
    .restart local v16    # "inserting":Z
    .restart local v17    # "oldGroupSize":I
    .restart local v18    # "currentGroup":I
    :goto_9
    iget v1, v0, Landroidx/compose/runtime/SlotWriter;->nodeCount:I

    add-int/2addr v1, v3

    iput v1, v0, Landroidx/compose/runtime/SlotWriter;->nodeCount:I

    .line 1449
    .end local v3    # "nodesDelta":I
    .end local v11    # "oldNodes":I
    .end local v12    # "newParent":I
    .end local v13    # "groupParent":I
    .end local v14    # "groupSizeDelta":I
    .end local v17    # "oldGroupSize":I
    :goto_a
    return v8

    .line 1399
    .end local v16    # "inserting":Z
    .end local v18    # "currentGroup":I
    .restart local v1    # "inserting":Z
    .restart local v4    # "currentGroup":I
    :cond_10
    move/from16 v16, v1

    .end local v1    # "inserting":Z
    .restart local v16    # "inserting":Z
    const/4 v1, 0x0

    .line 1400
    .local v1, "$i$a$-require-SlotWriter$endGroup$1":I
    nop

    .line 1399
    .end local v1    # "$i$a$-require-SlotWriter$endGroup$1":I
    new-instance v1, Ljava/lang/IllegalArgumentException;

    const-string v2, "Expected to be at the end of a group"

    invoke-virtual {v2}, Ljava/lang/Object;->toString()Ljava/lang/String;

    move-result-object v2

    invoke-direct {v1, v2}, Ljava/lang/IllegalArgumentException;-><init>(Ljava/lang/String;)V

    check-cast v1, Ljava/lang/Throwable;

    throw v1
.end method

.method public final endInsert()V
    .locals 4

    .line 1261
    iget v0, p0, Landroidx/compose/runtime/SlotWriter;->insertCount:I

    const/4 v1, 0x1

    const/4 v2, 0x0

    if-lez v0, :cond_0

    move v3, v1

    goto :goto_0

    :cond_0
    move v3, v2

    :goto_0
    if-eqz v3, :cond_4

    .line 1262
    add-int/lit8 v0, v0, -0x1

    iput v0, p0, Landroidx/compose/runtime/SlotWriter;->insertCount:I

    if-nez v0, :cond_3

    .line 1263
    iget-object v0, p0, Landroidx/compose/runtime/SlotWriter;->nodeCountStack:Landroidx/compose/runtime/IntStack;

    invoke-virtual {v0}, Landroidx/compose/runtime/IntStack;->getSize()I

    move-result v0

    iget-object v3, p0, Landroidx/compose/runtime/SlotWriter;->startStack:Landroidx/compose/runtime/IntStack;

    invoke-virtual {v3}, Landroidx/compose/runtime/IntStack;->getSize()I

    move-result v3

    if-ne v0, v3, :cond_1

    goto :goto_1

    :cond_1
    move v1, v2

    :goto_1
    move v0, v1

    .local v0, "value$iv":Z
    const/4 v1, 0x0

    .line 2719
    .local v1, "$i$f$runtimeCheck":I
    if-eqz v0, :cond_2

    .line 2723
    nop

    .line 1266
    .end local v0    # "value$iv":Z
    .end local v1    # "$i$f$runtimeCheck":I
    invoke-direct {p0}, Landroidx/compose/runtime/SlotWriter;->restoreCurrentGroupEnd()I

    goto :goto_2

    .line 2720
    .restart local v0    # "value$iv":Z
    .restart local v1    # "$i$f$runtimeCheck":I
    :cond_2
    const/4 v2, 0x0

    .line 1264
    .local v2, "$i$a$-runtimeCheck-SlotWriter$endInsert$2":I
    const-string/jumbo v2, "startGroup/endGroup mismatch while inserting"

    .line 2721
    .local v2, "message$iv":Ljava/lang/Object;
    invoke-virtual {v2}, Ljava/lang/Object;->toString()Ljava/lang/String;

    move-result-object v3

    invoke-static {v3}, Landroidx/compose/runtime/ComposerKt;->composeRuntimeError(Ljava/lang/String;)Ljava/lang/Void;

    new-instance v3, Lkotlin/KotlinNothingValueException;

    invoke-direct {v3}, Lkotlin/KotlinNothingValueException;-><init>()V

    throw v3

    .line 1268
    .end local v0    # "value$iv":Z
    .end local v1    # "$i$f$runtimeCheck":I
    .end local v2    # "message$iv":Ljava/lang/Object;
    :cond_3
    :goto_2
    return-void

    .line 2703
    :cond_4
    const/4 v0, 0x0

    .line 1261
    .local v0, "$i$a$-check-SlotWriter$endInsert$1":I
    nop

    .end local v0    # "$i$a$-check-SlotWriter$endInsert$1":I
    new-instance v0, Ljava/lang/IllegalStateException;

    const-string v1, "Unbalanced begin/end insert"

    invoke-virtual {v1}, Ljava/lang/Object;->toString()Ljava/lang/String;

    move-result-object v1

    invoke-direct {v0, v1}, Ljava/lang/IllegalStateException;-><init>(Ljava/lang/String;)V

    check-cast v0, Ljava/lang/Throwable;

    throw v0
.end method

.method public final ensureStarted(I)V
    .locals 4
    .param p1, "index"    # I

    .line 1463
    iget v0, p0, Landroidx/compose/runtime/SlotWriter;->insertCount:I

    const/4 v1, 0x1

    const/4 v2, 0x0

    if-gtz v0, :cond_0

    move v0, v1

    goto :goto_0

    :cond_0
    move v0, v2

    :goto_0
    if-eqz v0, :cond_4

    .line 1464
    iget v0, p0, Landroidx/compose/runtime/SlotWriter;->parent:I

    .line 1465
    .local v0, "parent":I
    if-eq v0, p1, :cond_3

    .line 1468
    if-lt p1, v0, :cond_1

    iget v3, p0, Landroidx/compose/runtime/SlotWriter;->currentGroupEnd:I

    if-ge p1, v3, :cond_1

    goto :goto_1

    :cond_1
    move v1, v2

    :goto_1
    if-eqz v1, :cond_2

    .line 1472
    iget v1, p0, Landroidx/compose/runtime/SlotWriter;->currentGroup:I

    .line 1473
    .local v1, "oldCurrent":I
    iget v2, p0, Landroidx/compose/runtime/SlotWriter;->currentSlot:I

    .line 1474
    .local v2, "oldCurrentSlot":I
    iget v3, p0, Landroidx/compose/runtime/SlotWriter;->currentSlotEnd:I

    .line 1475
    .local v3, "oldCurrentSlotEnd":I
    iput p1, p0, Landroidx/compose/runtime/SlotWriter;->currentGroup:I

    .line 1476
    invoke-virtual {p0}, Landroidx/compose/runtime/SlotWriter;->startGroup()V

    .line 1477
    iput v1, p0, Landroidx/compose/runtime/SlotWriter;->currentGroup:I

    .line 1478
    iput v2, p0, Landroidx/compose/runtime/SlotWriter;->currentSlot:I

    .line 1479
    iput v3, p0, Landroidx/compose/runtime/SlotWriter;->currentSlotEnd:I

    goto :goto_2

    .line 1468
    .end local v1    # "oldCurrent":I
    .end local v2    # "oldCurrentSlot":I
    .end local v3    # "oldCurrentSlotEnd":I
    :cond_2
    const/4 v1, 0x0

    .line 1469
    .local v1, "$i$a$-require-SlotWriter$ensureStarted$2":I
    invoke-static {v0}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;

    move-result-object v2

    const-string v3, "Started group must be a subgroup of the group at "

    invoke-static {v3, v2}, Lkotlin/jvm/internal/Intrinsics;->stringPlus(Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/String;

    move-result-object v1

    .line 1468
    .end local v1    # "$i$a$-require-SlotWriter$ensureStarted$2":I
    new-instance v2, Ljava/lang/IllegalArgumentException;

    invoke-virtual {v1}, Ljava/lang/Object;->toString()Ljava/lang/String;

    move-result-object v1

    invoke-direct {v2, v1}, Ljava/lang/IllegalArgumentException;-><init>(Ljava/lang/String;)V

    check-cast v2, Ljava/lang/Throwable;

    throw v2

    .line 1481
    :cond_3
    :goto_2
    return-void

    .line 2703
    .end local v0    # "parent":I
    :cond_4
    const/4 v0, 0x0

    .line 1463
    .local v0, "$i$a$-require-SlotWriter$ensureStarted$1":I
    nop

    .end local v0    # "$i$a$-require-SlotWriter$ensureStarted$1":I
    new-instance v0, Ljava/lang/IllegalArgumentException;

    const-string v1, "Cannot call ensureStarted() while inserting"

    invoke-virtual {v1}, Ljava/lang/Object;->toString()Ljava/lang/String;

    move-result-object v1

    invoke-direct {v0, v1}, Ljava/lang/IllegalArgumentException;-><init>(Ljava/lang/String;)V

    check-cast v0, Ljava/lang/Throwable;

    throw v0
.end method

.method public final ensureStarted(Landroidx/compose/runtime/Anchor;)V
    .locals 1
    .param p1, "anchor"    # Landroidx/compose/runtime/Anchor;

    const-string v0, "anchor"

    invoke-static {p1, v0}, Lkotlin/jvm/internal/Intrinsics;->checkNotNullParameter(Ljava/lang/Object;Ljava/lang/String;)V

    .line 1483
    invoke-virtual {p1, p0}, Landroidx/compose/runtime/Anchor;->toIndexFor(Landroidx/compose/runtime/SlotWriter;)I

    move-result v0

    invoke-virtual {p0, v0}, Landroidx/compose/runtime/SlotWriter;->ensureStarted(I)V

    return-void
.end method

.method public final getClosed()Z
    .locals 1

    .line 1087
    iget-boolean v0, p0, Landroidx/compose/runtime/SlotWriter;->closed:Z

    return v0
.end method

.method public final getCurrentGroup()I
    .locals 1

    .line 1011
    iget v0, p0, Landroidx/compose/runtime/SlotWriter;->currentGroup:I

    return v0
.end method

.method public final getParent()I
    .locals 1

    .line 1070
    iget v0, p0, Landroidx/compose/runtime/SlotWriter;->parent:I

    return v0
.end method

.method public final getSize$runtime_release()I
    .locals 2

    .line 2348
    invoke-direct {p0}, Landroidx/compose/runtime/SlotWriter;->getCapacity()I

    move-result v0

    iget v1, p0, Landroidx/compose/runtime/SlotWriter;->groupGapLen:I

    sub-int/2addr v0, v1

    return v0
.end method

.method public final getTable$runtime_release()Landroidx/compose/runtime/SlotTable;
    .locals 1

    .line 912
    iget-object v0, p0, Landroidx/compose/runtime/SlotWriter;->table:Landroidx/compose/runtime/SlotTable;

    return-object v0
.end method

.method public final groupAux(I)Ljava/lang/Object;
    .locals 3
    .param p1, "index"    # I

    .line 1048
    invoke-direct {p0, p1}, Landroidx/compose/runtime/SlotWriter;->groupIndexToAddress(I)I

    move-result v0

    .line 1049
    .local v0, "address":I
    iget-object v1, p0, Landroidx/compose/runtime/SlotWriter;->groups:[I

    invoke-static {v1, v0}, Landroidx/compose/runtime/SlotTableKt;->access$hasAux([II)Z

    move-result v1

    if-eqz v1, :cond_0

    iget-object v1, p0, Landroidx/compose/runtime/SlotWriter;->slots:[Ljava/lang/Object;

    iget-object v2, p0, Landroidx/compose/runtime/SlotWriter;->groups:[I

    invoke-direct {p0, v2, v0}, Landroidx/compose/runtime/SlotWriter;->auxIndex([II)I

    move-result v2

    aget-object v1, v1, v2

    goto :goto_0

    :cond_0
    sget-object v1, Landroidx/compose/runtime/Composer;->Companion:Landroidx/compose/runtime/Composer$Companion;

    invoke-virtual {v1}, Landroidx/compose/runtime/Composer$Companion;->getEmpty()Ljava/lang/Object;

    move-result-object v1

    :goto_0
    return-object v1
.end method

.method public final groupKey(I)I
    .locals 2
    .param p1, "index"    # I

    .line 1029
    iget-object v0, p0, Landroidx/compose/runtime/SlotWriter;->groups:[I

    invoke-direct {p0, p1}, Landroidx/compose/runtime/SlotWriter;->groupIndexToAddress(I)I

    move-result v1

    invoke-static {v0, v1}, Landroidx/compose/runtime/SlotTableKt;->access$key([II)I

    move-result v0

    return v0
.end method

.method public final groupObjectKey(I)Ljava/lang/Object;
    .locals 3
    .param p1, "index"    # I

    .line 1035
    invoke-direct {p0, p1}, Landroidx/compose/runtime/SlotWriter;->groupIndexToAddress(I)I

    move-result v0

    .line 1036
    .local v0, "address":I
    iget-object v1, p0, Landroidx/compose/runtime/SlotWriter;->groups:[I

    invoke-static {v1, v0}, Landroidx/compose/runtime/SlotTableKt;->access$hasObjectKey([II)Z

    move-result v1

    if-eqz v1, :cond_0

    iget-object v1, p0, Landroidx/compose/runtime/SlotWriter;->slots:[Ljava/lang/Object;

    iget-object v2, p0, Landroidx/compose/runtime/SlotWriter;->groups:[I

    invoke-static {v2, v0}, Landroidx/compose/runtime/SlotTableKt;->access$objectKeyIndex([II)I

    move-result v2

    aget-object v1, v1, v2

    goto :goto_0

    :cond_0
    const/4 v1, 0x0

    :goto_0
    return-object v1
.end method

.method public final groupSize(I)I
    .locals 2
    .param p1, "index"    # I

    .line 1042
    iget-object v0, p0, Landroidx/compose/runtime/SlotWriter;->groups:[I

    invoke-direct {p0, p1}, Landroidx/compose/runtime/SlotWriter;->groupIndexToAddress(I)I

    move-result v1

    invoke-static {v0, v1}, Landroidx/compose/runtime/SlotTableKt;->access$groupSize([II)I

    move-result v0

    return v0
.end method

.method public final groupSlots()Ljava/util/Iterator;
    .locals 4
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "()",
            "Ljava/util/Iterator<",
            "Ljava/lang/Object;",
            ">;"
        }
    .end annotation

    .line 1516
    iget-object v0, p0, Landroidx/compose/runtime/SlotWriter;->groups:[I

    iget v1, p0, Landroidx/compose/runtime/SlotWriter;->currentGroup:I

    invoke-direct {p0, v1}, Landroidx/compose/runtime/SlotWriter;->groupIndexToAddress(I)I

    move-result v1

    invoke-direct {p0, v0, v1}, Landroidx/compose/runtime/SlotWriter;->dataIndex([II)I

    move-result v0

    .line 1517
    .local v0, "start":I
    iget-object v1, p0, Landroidx/compose/runtime/SlotWriter;->groups:[I

    .line 1518
    iget v2, p0, Landroidx/compose/runtime/SlotWriter;->currentGroup:I

    invoke-virtual {p0, v2}, Landroidx/compose/runtime/SlotWriter;->groupSize(I)I

    move-result v3

    add-int/2addr v2, v3

    invoke-direct {p0, v2}, Landroidx/compose/runtime/SlotWriter;->groupIndexToAddress(I)I

    move-result v2

    .line 1517
    invoke-direct {p0, v1, v2}, Landroidx/compose/runtime/SlotWriter;->dataIndex([II)I

    move-result v1

    .line 1520
    .local v1, "end":I
    new-instance v2, Landroidx/compose/runtime/SlotWriter$groupSlots$1;

    invoke-direct {v2, v0, v1, p0}, Landroidx/compose/runtime/SlotWriter$groupSlots$1;-><init>(IILandroidx/compose/runtime/SlotWriter;)V

    check-cast v2, Ljava/util/Iterator;

    return-object v2
.end method

.method public final groupsAsString()Ljava/lang/String;
    .locals 7

    .line 2264
    new-instance v0, Ljava/lang/StringBuilder;

    invoke-direct {v0}, Ljava/lang/StringBuilder;-><init>()V

    move-object v1, v0

    .local v1, "$this$groupsAsString_u24lambda_u2d30":Ljava/lang/StringBuilder;
    const/4 v2, 0x0

    .line 2265
    .local v2, "$i$a$-buildString-SlotWriter$groupsAsString$1":I
    invoke-virtual {p0}, Landroidx/compose/runtime/SlotWriter;->getSize$runtime_release()I

    move-result v3

    if-lez v3, :cond_1

    const/4 v4, 0x0

    :cond_0
    move v5, v4

    .local v5, "index":I
    add-int/lit8 v4, v4, 0x1

    .line 2266
    invoke-direct {p0, v1, v5}, Landroidx/compose/runtime/SlotWriter;->groupAsString(Ljava/lang/StringBuilder;I)V

    .line 2267
    const/16 v6, 0xa

    invoke-virtual {v1, v6}, Ljava/lang/StringBuilder;->append(C)Ljava/lang/StringBuilder;

    .line 2265
    if-lt v4, v3, :cond_0

    .line 2269
    .end local v5    # "index":I
    :cond_1
    nop

    .line 2264
    .end local v1    # "$this$groupsAsString_u24lambda_u2d30":Ljava/lang/StringBuilder;
    .end local v2    # "$i$a$-buildString-SlotWriter$groupsAsString$1":I
    invoke-virtual {v0}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v0

    const-string v1, "StringBuilder().apply(builderAction).toString()"

    invoke-static {v0, v1}, Lkotlin/jvm/internal/Intrinsics;->checkNotNullExpressionValue(Ljava/lang/Object;Ljava/lang/String;)V

    .line 2269
    return-object v0
.end method

.method public final insertAux(Ljava/lang/Object;)V
    .locals 9
    .param p1, "value"    # Ljava/lang/Object;

    .line 1136
    iget v0, p0, Landroidx/compose/runtime/SlotWriter;->insertCount:I

    const/4 v1, 0x0

    const/4 v2, 0x1

    if-ltz v0, :cond_0

    move v0, v2

    goto :goto_0

    :cond_0
    move v0, v1

    .local v0, "value$iv":Z
    :goto_0
    const/4 v3, 0x0

    .line 2693
    .local v3, "$i$f$runtimeCheck":I
    if-eqz v0, :cond_6

    .line 2697
    nop

    .line 1137
    .end local v0    # "value$iv":Z
    .end local v3    # "$i$f$runtimeCheck":I
    iget v0, p0, Landroidx/compose/runtime/SlotWriter;->parent:I

    .line 1138
    .local v0, "parent":I
    invoke-direct {p0, v0}, Landroidx/compose/runtime/SlotWriter;->groupIndexToAddress(I)I

    move-result v3

    .line 1139
    .local v3, "parentGroupAddress":I
    iget-object v4, p0, Landroidx/compose/runtime/SlotWriter;->groups:[I

    invoke-static {v4, v3}, Landroidx/compose/runtime/SlotTableKt;->access$hasAux([II)Z

    move-result v4

    xor-int/2addr v4, v2

    .local v4, "value$iv":Z
    const/4 v5, 0x0

    .line 2698
    .local v5, "$i$f$runtimeCheck":I
    if-eqz v4, :cond_5

    .line 2702
    nop

    .line 1140
    .end local v4    # "value$iv":Z
    .end local v5    # "$i$f$runtimeCheck":I
    invoke-direct {p0, v2, v0}, Landroidx/compose/runtime/SlotWriter;->insertSlots(II)V

    .line 1141
    iget-object v4, p0, Landroidx/compose/runtime/SlotWriter;->groups:[I

    invoke-direct {p0, v4, v3}, Landroidx/compose/runtime/SlotWriter;->auxIndex([II)I

    move-result v4

    .line 1142
    .local v4, "auxIndex":I
    invoke-direct {p0, v4}, Landroidx/compose/runtime/SlotWriter;->dataIndexToDataAddress(I)I

    move-result v5

    .line 1143
    .local v5, "auxAddress":I
    iget v6, p0, Landroidx/compose/runtime/SlotWriter;->currentSlot:I

    if-le v6, v4, :cond_4

    .line 1148
    sub-int/2addr v6, v4

    .line 1149
    .local v6, "slotsToMove":I
    const/4 v7, 0x3

    if-ge v6, v7, :cond_1

    move v1, v2

    :cond_1
    if-eqz v1, :cond_3

    .line 1150
    if-le v6, v2, :cond_2

    .line 1151
    iget-object v1, p0, Landroidx/compose/runtime/SlotWriter;->slots:[Ljava/lang/Object;

    add-int/lit8 v7, v5, 0x2

    add-int/lit8 v8, v5, 0x1

    aget-object v8, v1, v8

    aput-object v8, v1, v7

    .line 1153
    :cond_2
    iget-object v1, p0, Landroidx/compose/runtime/SlotWriter;->slots:[Ljava/lang/Object;

    add-int/lit8 v7, v5, 0x1

    aget-object v8, v1, v5

    aput-object v8, v1, v7

    goto :goto_1

    .line 2703
    :cond_3
    const/4 v1, 0x0

    .line 1149
    .local v1, "$i$a$-check-SlotWriter$insertAux$3":I
    nop

    .end local v1    # "$i$a$-check-SlotWriter$insertAux$3":I
    new-instance v1, Ljava/lang/IllegalStateException;

    const-string v2, "Moving more than two slot not supported"

    invoke-virtual {v2}, Ljava/lang/Object;->toString()Ljava/lang/String;

    move-result-object v2

    invoke-direct {v1, v2}, Ljava/lang/IllegalStateException;-><init>(Ljava/lang/String;)V

    check-cast v1, Ljava/lang/Throwable;

    throw v1

    .line 1155
    .end local v6    # "slotsToMove":I
    :cond_4
    :goto_1
    iget-object v1, p0, Landroidx/compose/runtime/SlotWriter;->groups:[I

    invoke-static {v1, v3}, Landroidx/compose/runtime/SlotTableKt;->access$addAux([II)V

    .line 1156
    iget-object v1, p0, Landroidx/compose/runtime/SlotWriter;->slots:[Ljava/lang/Object;

    aput-object p1, v1, v5

    .line 1157
    iget v1, p0, Landroidx/compose/runtime/SlotWriter;->currentSlot:I

    add-int/2addr v1, v2

    iput v1, p0, Landroidx/compose/runtime/SlotWriter;->currentSlot:I

    .line 1158
    return-void

    .line 2699
    .local v4, "value$iv":Z
    .local v5, "$i$f$runtimeCheck":I
    :cond_5
    const/4 v1, 0x0

    .line 1139
    .local v1, "$i$a$-runtimeCheck-SlotWriter$insertAux$2":I
    const-string v1, "Group already has auxiliary data"

    .line 2700
    .local v1, "message$iv":Ljava/lang/Object;
    invoke-virtual {v1}, Ljava/lang/Object;->toString()Ljava/lang/String;

    move-result-object v2

    invoke-static {v2}, Landroidx/compose/runtime/ComposerKt;->composeRuntimeError(Ljava/lang/String;)Ljava/lang/Void;

    new-instance v2, Lkotlin/KotlinNothingValueException;

    invoke-direct {v2}, Lkotlin/KotlinNothingValueException;-><init>()V

    throw v2

    .line 2694
    .end local v1    # "message$iv":Ljava/lang/Object;
    .end local v4    # "value$iv":Z
    .end local v5    # "$i$f$runtimeCheck":I
    .local v0, "value$iv":Z
    .local v3, "$i$f$runtimeCheck":I
    :cond_6
    const/4 v1, 0x0

    .line 1136
    .local v1, "$i$a$-runtimeCheck-SlotWriter$insertAux$1":I
    const-string v1, "Cannot insert auxiliary data when not inserting"

    .line 2695
    .local v1, "message$iv":Ljava/lang/Object;
    invoke-virtual {v1}, Ljava/lang/Object;->toString()Ljava/lang/String;

    move-result-object v2

    invoke-static {v2}, Landroidx/compose/runtime/ComposerKt;->composeRuntimeError(Ljava/lang/String;)Ljava/lang/Void;

    new-instance v2, Lkotlin/KotlinNothingValueException;

    invoke-direct {v2}, Lkotlin/KotlinNothingValueException;-><init>()V

    throw v2
.end method

.method public final isGroupEnd()Z
    .locals 2

    .line 1017
    iget v0, p0, Landroidx/compose/runtime/SlotWriter;->currentGroup:I

    iget v1, p0, Landroidx/compose/runtime/SlotWriter;->currentGroupEnd:I

    if-ne v0, v1, :cond_0

    const/4 v0, 0x1

    goto :goto_0

    :cond_0
    const/4 v0, 0x0

    :goto_0
    return v0
.end method

.method public final isNode()Z
    .locals 2

    .line 1024
    iget v0, p0, Landroidx/compose/runtime/SlotWriter;->currentGroup:I

    iget v1, p0, Landroidx/compose/runtime/SlotWriter;->currentGroupEnd:I

    if-ge v0, v1, :cond_0

    iget-object v1, p0, Landroidx/compose/runtime/SlotWriter;->groups:[I

    invoke-direct {p0, v0}, Landroidx/compose/runtime/SlotWriter;->groupIndexToAddress(I)I

    move-result v0

    invoke-static {v1, v0}, Landroidx/compose/runtime/SlotTableKt;->access$isNode([II)Z

    move-result v0

    if-eqz v0, :cond_0

    const/4 v0, 0x1

    goto :goto_0

    :cond_0
    const/4 v0, 0x0

    :goto_0
    return v0
.end method

.method public final moveFrom(Landroidx/compose/runtime/SlotTable;I)Ljava/util/List;
    .locals 34
    .param p1, "table"    # Landroidx/compose/runtime/SlotTable;
    .param p2, "index"    # I
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "(",
            "Landroidx/compose/runtime/SlotTable;",
            "I)",
            "Ljava/util/List<",
            "Landroidx/compose/runtime/Anchor;",
            ">;"
        }
    .end annotation

    move-object/from16 v1, p0

    move/from16 v2, p2

    const-string/jumbo v0, "table"

    move-object/from16 v9, p1

    invoke-static {v9, v0}, Lkotlin/jvm/internal/Intrinsics;->checkNotNullParameter(Ljava/lang/Object;Ljava/lang/String;)V

    .line 1662
    iget v0, v1, Landroidx/compose/runtime/SlotWriter;->insertCount:I

    if-lez v0, :cond_0

    const/4 v0, 0x1

    goto :goto_0

    :cond_0
    const/4 v0, 0x0

    :goto_0
    if-eqz v0, :cond_f

    .line 1664
    if-nez v2, :cond_1

    iget v0, v1, Landroidx/compose/runtime/SlotWriter;->currentGroup:I

    if-nez v0, :cond_1

    iget-object v0, v1, Landroidx/compose/runtime/SlotWriter;->table:Landroidx/compose/runtime/SlotTable;

    invoke-virtual {v0}, Landroidx/compose/runtime/SlotTable;->getGroupsSize()I

    move-result v0

    if-nez v0, :cond_1

    .line 1667
    iget-object v0, v1, Landroidx/compose/runtime/SlotWriter;->groups:[I

    .line 1668
    .local v0, "myGroups":[I
    iget-object v10, v1, Landroidx/compose/runtime/SlotWriter;->slots:[Ljava/lang/Object;

    .line 1669
    .local v10, "mySlots":[Ljava/lang/Object;
    iget-object v11, v1, Landroidx/compose/runtime/SlotWriter;->anchors:Ljava/util/ArrayList;

    .line 1670
    .local v11, "myAnchors":Ljava/util/ArrayList;
    invoke-virtual/range {p1 .. p1}, Landroidx/compose/runtime/SlotTable;->getGroups()[I

    move-result-object v12

    .line 1671
    .local v12, "groups":[I
    invoke-virtual/range {p1 .. p1}, Landroidx/compose/runtime/SlotTable;->getGroupsSize()I

    move-result v13

    .line 1672
    .local v13, "groupsSize":I
    invoke-virtual/range {p1 .. p1}, Landroidx/compose/runtime/SlotTable;->getSlots()[Ljava/lang/Object;

    move-result-object v14

    .line 1673
    .local v14, "slots":[Ljava/lang/Object;
    invoke-virtual/range {p1 .. p1}, Landroidx/compose/runtime/SlotTable;->getSlotsSize()I

    move-result v15

    .line 1674
    .local v15, "slotsSize":I
    iput-object v12, v1, Landroidx/compose/runtime/SlotWriter;->groups:[I

    .line 1675
    iput-object v14, v1, Landroidx/compose/runtime/SlotWriter;->slots:[Ljava/lang/Object;

    .line 1676
    invoke-virtual/range {p1 .. p1}, Landroidx/compose/runtime/SlotTable;->getAnchors$runtime_release()Ljava/util/ArrayList;

    move-result-object v3

    iput-object v3, v1, Landroidx/compose/runtime/SlotWriter;->anchors:Ljava/util/ArrayList;

    .line 1677
    iput v13, v1, Landroidx/compose/runtime/SlotWriter;->groupGapStart:I

    .line 1678
    array-length v3, v12

    div-int/lit8 v3, v3, 0x5

    sub-int/2addr v3, v13

    iput v3, v1, Landroidx/compose/runtime/SlotWriter;->groupGapLen:I

    .line 1679
    iput v15, v1, Landroidx/compose/runtime/SlotWriter;->slotsGapStart:I

    .line 1680
    array-length v3, v14

    sub-int/2addr v3, v15

    iput v3, v1, Landroidx/compose/runtime/SlotWriter;->slotsGapLen:I

    .line 1681
    iput v13, v1, Landroidx/compose/runtime/SlotWriter;->slotsGapOwner:I

    .line 1683
    const/4 v5, 0x0

    const/4 v7, 0x0

    move-object/from16 v3, p1

    move-object v4, v0

    move-object v6, v10

    move-object v8, v11

    invoke-virtual/range {v3 .. v8}, Landroidx/compose/runtime/SlotTable;->setTo$runtime_release([II[Ljava/lang/Object;ILjava/util/ArrayList;)V

    .line 1684
    iget-object v3, v1, Landroidx/compose/runtime/SlotWriter;->anchors:Ljava/util/ArrayList;

    check-cast v3, Ljava/util/List;

    return-object v3

    .line 1687
    .end local v0    # "myGroups":[I
    .end local v10    # "mySlots":[Ljava/lang/Object;
    .end local v11    # "myAnchors":Ljava/util/ArrayList;
    .end local v12    # "groups":[I
    .end local v13    # "groupsSize":I
    .end local v14    # "slots":[Ljava/lang/Object;
    .end local v15    # "slotsSize":I
    :cond_1
    move-object/from16 v5, p1

    .local v5, "this_$iv":Landroidx/compose/runtime/SlotTable;
    const/4 v6, 0x0

    .line 2729
    .local v6, "$i$f$write":I
    invoke-virtual {v5}, Landroidx/compose/runtime/SlotTable;->openWriter()Landroidx/compose/runtime/SlotWriter;

    move-result-object v0

    .line 2730
    move-object v7, v0

    .local v7, "writer$iv":Landroidx/compose/runtime/SlotWriter;
    const/4 v8, 0x0

    .line 2731
    .local v8, "$i$a$-let-SlotTable$write$1$iv":I
    nop

    .line 2732
    move-object v0, v7

    .local v0, "tableWriter":Landroidx/compose/runtime/SlotWriter;
    const/4 v10, 0x0

    .line 1688
    .local v10, "$i$a$-write-SlotWriter$moveFrom$1":I
    :try_start_0
    invoke-virtual {v0, v2}, Landroidx/compose/runtime/SlotWriter;->groupSize(I)I

    move-result v11

    .line 1689
    .local v11, "groupsToMove":I
    add-int v12, v2, v11

    .line 1690
    .local v12, "sourceGroupsEnd":I
    invoke-direct {v0, v2}, Landroidx/compose/runtime/SlotWriter;->dataIndex(I)I

    move-result v13

    .line 1691
    .local v13, "sourceSlotsStart":I
    invoke-direct {v0, v12}, Landroidx/compose/runtime/SlotWriter;->dataIndex(I)I

    move-result v14

    .line 1692
    .local v14, "sourceSlotsEnd":I
    sub-int v15, v14, v13

    .line 1695
    .local v15, "slotsToMove":I
    invoke-direct {v1, v11}, Landroidx/compose/runtime/SlotWriter;->insertGroups(I)V

    .line 1696
    invoke-virtual/range {p0 .. p0}, Landroidx/compose/runtime/SlotWriter;->getCurrentGroup()I

    move-result v3

    invoke-direct {v1, v15, v3}, Landroidx/compose/runtime/SlotWriter;->insertSlots(II)V

    .line 1699
    iget-object v3, v1, Landroidx/compose/runtime/SlotWriter;->groups:[I

    .line 1700
    .local v3, "groups":[I
    invoke-virtual/range {p0 .. p0}, Landroidx/compose/runtime/SlotWriter;->getCurrentGroup()I

    move-result v17

    move/from16 v18, v17

    .line 1701
    .local v18, "currentGroup":I
    iget-object v4, v0, Landroidx/compose/runtime/SlotWriter;->groups:[I
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_2

    .line 1702
    nop

    .line 1703
    move-object/from16 v19, v5

    move/from16 v5, v18

    move/from16 v18, v6

    .end local v6    # "$i$f$write":I
    .local v5, "currentGroup":I
    .local v18, "$i$f$write":I
    .local v19, "this_$iv":Landroidx/compose/runtime/SlotTable;
    mul-int/lit8 v6, v5, 0x5

    .line 1704
    move/from16 v20, v8

    .end local v8    # "$i$a$-let-SlotTable$write$1$iv":I
    .local v20, "$i$a$-let-SlotTable$write$1$iv":I
    mul-int/lit8 v8, v2, 0x5

    .line 1705
    mul-int/lit8 v9, v12, 0x5

    .line 1701
    :try_start_1
    invoke-static {v4, v3, v6, v8, v9}, Lkotlin/collections/ArraysKt;->copyInto([I[IIII)[I

    .line 1707
    iget-object v4, v1, Landroidx/compose/runtime/SlotWriter;->slots:[Ljava/lang/Object;

    .line 1708
    .local v4, "slots":[Ljava/lang/Object;
    iget v6, v1, Landroidx/compose/runtime/SlotWriter;->currentSlot:I

    .line 1709
    .local v6, "currentSlot":I
    iget-object v8, v0, Landroidx/compose/runtime/SlotWriter;->slots:[Ljava/lang/Object;

    .line 1710
    nop

    .line 1711
    nop

    .line 1712
    nop

    .line 1713
    nop

    .line 1709
    invoke-static {v8, v4, v6, v13, v14}, Lkotlin/collections/ArraysKt;->copyInto([Ljava/lang/Object;[Ljava/lang/Object;III)[Ljava/lang/Object;

    .line 1718
    invoke-virtual/range {p0 .. p0}, Landroidx/compose/runtime/SlotWriter;->getParent()I

    move-result v8

    invoke-static {v3, v5, v8}, Landroidx/compose/runtime/SlotTableKt;->access$updateParentAnchor([III)V

    .line 1719
    sub-int v8, v5, v2

    .line 1720
    .local v8, "parentDelta":I
    add-int v9, v5, v11

    .line 1721
    .local v9, "moveEnd":I
    invoke-direct {v1, v3, v5}, Landroidx/compose/runtime/SlotWriter;->dataIndex([II)I

    move-result v21

    sub-int v21, v6, v21

    .line 1722
    .local v21, "dataIndexDelta":I
    move/from16 v22, v10

    .end local v10    # "$i$a$-write-SlotWriter$moveFrom$1":I
    .local v22, "$i$a$-write-SlotWriter$moveFrom$1":I
    iget v10, v1, Landroidx/compose/runtime/SlotWriter;->slotsGapOwner:I

    .line 1723
    .local v10, "slotsGapOwner":I
    move/from16 v23, v10

    .end local v10    # "slotsGapOwner":I
    .local v23, "slotsGapOwner":I
    iget v10, v1, Landroidx/compose/runtime/SlotWriter;->slotsGapLen:I

    .line 1724
    .local v10, "slotsGapLen":I
    move/from16 v24, v13

    .end local v13    # "sourceSlotsStart":I
    .local v24, "sourceSlotsStart":I
    array-length v13, v4
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_1

    .line 1725
    .local v13, "slotsCapacity":I
    if-ge v5, v9, :cond_6

    move-object/from16 v25, v4

    move/from16 v4, v23

    move/from16 v23, v5

    .end local v23    # "slotsGapOwner":I
    .local v4, "slotsGapOwner":I
    .local v25, "slots":[Ljava/lang/Object;
    :goto_1
    move/from16 v26, v23

    move/from16 v27, v14

    const/16 v17, 0x1

    .end local v14    # "sourceSlotsEnd":I
    .local v26, "groupAddress":I
    .local v27, "sourceSlotsEnd":I
    add-int/lit8 v14, v23, 0x1

    .line 1727
    move-object/from16 v28, v7

    move/from16 v7, v26

    .end local v26    # "groupAddress":I
    .local v7, "groupAddress":I
    .local v28, "writer$iv":Landroidx/compose/runtime/SlotWriter;
    if-eq v7, v5, :cond_2

    .line 1728
    :try_start_2
    invoke-static {v3, v7}, Landroidx/compose/runtime/SlotTableKt;->access$parentAnchor([II)I

    move-result v23

    .line 1729
    .local v23, "previousParent":I
    move/from16 v26, v6

    .end local v6    # "currentSlot":I
    .local v26, "currentSlot":I
    add-int v6, v23, v8

    invoke-static {v3, v7, v6}, Landroidx/compose/runtime/SlotTableKt;->access$updateParentAnchor([III)V

    goto :goto_2

    .line 1727
    .end local v23    # "previousParent":I
    .end local v26    # "currentSlot":I
    .restart local v6    # "currentSlot":I
    :cond_2
    move/from16 v26, v6

    .line 1732
    .end local v6    # "currentSlot":I
    .restart local v26    # "currentSlot":I
    :goto_2
    invoke-direct {v1, v3, v7}, Landroidx/compose/runtime/SlotWriter;->dataIndex([II)I

    move-result v6

    add-int v6, v6, v21

    .line 1733
    .local v6, "newDataIndex":I
    nop

    .line 1734
    nop

    .line 1737
    if-ge v4, v7, :cond_3

    move/from16 v29, v8

    const/4 v8, 0x0

    goto :goto_3

    :cond_3
    move/from16 v29, v8

    .end local v8    # "parentDelta":I
    .local v29, "parentDelta":I
    iget v8, v1, Landroidx/compose/runtime/SlotWriter;->slotsGapStart:I

    .line 1738
    :goto_3
    nop

    .line 1739
    nop

    .line 1733
    invoke-direct {v1, v6, v8, v10, v13}, Landroidx/compose/runtime/SlotWriter;->dataIndexToDataAnchor(IIII)I

    move-result v8

    .line 1743
    .local v8, "newDataAnchor":I
    invoke-static {v3, v7, v8}, Landroidx/compose/runtime/SlotTableKt;->access$updateDataAnchor([III)V

    .line 1746
    if-ne v7, v4, :cond_4

    add-int/lit8 v4, v4, 0x1

    .line 1725
    .end local v6    # "newDataIndex":I
    .end local v8    # "newDataAnchor":I
    :cond_4
    if-lt v14, v9, :cond_5

    goto :goto_4

    :cond_5
    move/from16 v23, v14

    move/from16 v6, v26

    move/from16 v14, v27

    move-object/from16 v7, v28

    move/from16 v8, v29

    goto :goto_1

    .end local v25    # "slots":[Ljava/lang/Object;
    .end local v26    # "currentSlot":I
    .end local v27    # "sourceSlotsEnd":I
    .end local v28    # "writer$iv":Landroidx/compose/runtime/SlotWriter;
    .end local v29    # "parentDelta":I
    .local v4, "slots":[Ljava/lang/Object;
    .local v6, "currentSlot":I
    .local v7, "writer$iv":Landroidx/compose/runtime/SlotWriter;
    .local v8, "parentDelta":I
    .restart local v14    # "sourceSlotsEnd":I
    .local v23, "slotsGapOwner":I
    :cond_6
    move-object/from16 v25, v4

    move/from16 v26, v6

    move-object/from16 v28, v7

    move/from16 v29, v8

    move/from16 v27, v14

    .end local v4    # "slots":[Ljava/lang/Object;
    .end local v6    # "currentSlot":I
    .end local v7    # "writer$iv":Landroidx/compose/runtime/SlotWriter;
    .end local v8    # "parentDelta":I
    .end local v14    # "sourceSlotsEnd":I
    .restart local v25    # "slots":[Ljava/lang/Object;
    .restart local v26    # "currentSlot":I
    .restart local v27    # "sourceSlotsEnd":I
    .restart local v28    # "writer$iv":Landroidx/compose/runtime/SlotWriter;
    .restart local v29    # "parentDelta":I
    move/from16 v4, v23

    .line 1748
    .end local v23    # "slotsGapOwner":I
    .local v4, "slotsGapOwner":I
    :goto_4
    iput v4, v1, Landroidx/compose/runtime/SlotWriter;->slotsGapOwner:I

    .line 1751
    invoke-virtual/range {p1 .. p1}, Landroidx/compose/runtime/SlotTable;->getAnchors$runtime_release()Ljava/util/ArrayList;

    move-result-object v6

    invoke-virtual/range {p1 .. p1}, Landroidx/compose/runtime/SlotTable;->getGroupsSize()I

    move-result v7

    invoke-static {v6, v2, v7}, Landroidx/compose/runtime/SlotTableKt;->access$locationOf(Ljava/util/ArrayList;II)I

    move-result v6

    .line 1752
    .local v6, "startAnchors":I
    invoke-virtual/range {p1 .. p1}, Landroidx/compose/runtime/SlotTable;->getAnchors$runtime_release()Ljava/util/ArrayList;

    move-result-object v7

    invoke-virtual/range {p1 .. p1}, Landroidx/compose/runtime/SlotTable;->getGroupsSize()I

    move-result v8

    invoke-static {v7, v12, v8}, Landroidx/compose/runtime/SlotTableKt;->access$locationOf(Ljava/util/ArrayList;II)I

    move-result v7

    .line 1753
    .local v7, "endAnchors":I
    if-ge v6, v7, :cond_9

    .line 1754
    invoke-virtual/range {p1 .. p1}, Landroidx/compose/runtime/SlotTable;->getAnchors$runtime_release()Ljava/util/ArrayList;

    move-result-object v8

    .line 1755
    .local v8, "sourceAnchors":Ljava/util/ArrayList;
    new-instance v14, Ljava/util/ArrayList;

    move/from16 v23, v4

    .end local v4    # "slotsGapOwner":I
    .restart local v23    # "slotsGapOwner":I
    sub-int v4, v7, v6

    invoke-direct {v14, v4}, Ljava/util/ArrayList;-><init>(I)V

    move-object v4, v14

    .line 1758
    .local v4, "anchors":Ljava/util/ArrayList;
    sub-int v14, v5, v2

    .line 1759
    .local v14, "anchorDelta":I
    if-ge v6, v7, :cond_8

    move/from16 v30, v6

    :goto_5
    move/from16 v31, v30

    move/from16 v32, v9

    const/16 v17, 0x1

    .end local v9    # "moveEnd":I
    .local v31, "anchorIndex":I
    .local v32, "moveEnd":I
    add-int/lit8 v9, v30, 0x1

    .line 1760
    move/from16 v30, v10

    move/from16 v10, v31

    move/from16 v31, v12

    .end local v12    # "sourceGroupsEnd":I
    .local v10, "anchorIndex":I
    .local v30, "slotsGapLen":I
    .local v31, "sourceGroupsEnd":I
    invoke-virtual {v8, v10}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    move-result-object v12

    move/from16 v33, v10

    .end local v10    # "anchorIndex":I
    .local v33, "anchorIndex":I
    const-string/jumbo v10, "sourceAnchors[anchorIndex]"

    invoke-static {v12, v10}, Lkotlin/jvm/internal/Intrinsics;->checkNotNullExpressionValue(Ljava/lang/Object;Ljava/lang/String;)V

    check-cast v12, Landroidx/compose/runtime/Anchor;

    move-object v10, v12

    .line 1761
    .local v10, "sourceAnchor":Landroidx/compose/runtime/Anchor;
    invoke-virtual {v10}, Landroidx/compose/runtime/Anchor;->getLocation$runtime_release()I

    move-result v12

    add-int/2addr v12, v14

    invoke-virtual {v10, v12}, Landroidx/compose/runtime/Anchor;->setLocation$runtime_release(I)V

    .line 1762
    invoke-virtual {v4, v10}, Ljava/util/ArrayList;->add(Ljava/lang/Object;)Z

    .line 1759
    nop

    .end local v10    # "sourceAnchor":Landroidx/compose/runtime/Anchor;
    if-lt v9, v7, :cond_7

    goto :goto_6

    :cond_7
    move/from16 v10, v30

    move/from16 v12, v31

    move/from16 v30, v9

    move/from16 v9, v32

    goto :goto_5

    .end local v30    # "slotsGapLen":I
    .end local v31    # "sourceGroupsEnd":I
    .end local v32    # "moveEnd":I
    .end local v33    # "anchorIndex":I
    .restart local v9    # "moveEnd":I
    .local v10, "slotsGapLen":I
    .restart local v12    # "sourceGroupsEnd":I
    :cond_8
    move/from16 v32, v9

    move/from16 v30, v10

    move/from16 v31, v12

    const/16 v17, 0x1

    .line 1766
    .end local v9    # "moveEnd":I
    .end local v10    # "slotsGapLen":I
    .end local v12    # "sourceGroupsEnd":I
    .restart local v30    # "slotsGapLen":I
    .restart local v31    # "sourceGroupsEnd":I
    .restart local v32    # "moveEnd":I
    :goto_6
    iget-object v9, v1, Landroidx/compose/runtime/SlotWriter;->anchors:Ljava/util/ArrayList;

    invoke-virtual/range {p0 .. p0}, Landroidx/compose/runtime/SlotWriter;->getCurrentGroup()I

    move-result v10

    invoke-virtual/range {p0 .. p0}, Landroidx/compose/runtime/SlotWriter;->getSize$runtime_release()I

    move-result v12

    invoke-static {v9, v10, v12}, Landroidx/compose/runtime/SlotTableKt;->access$locationOf(Ljava/util/ArrayList;II)I

    move-result v9

    .line 1767
    .local v9, "insertLocation":I
    invoke-virtual/range {p0 .. p0}, Landroidx/compose/runtime/SlotWriter;->getTable$runtime_release()Landroidx/compose/runtime/SlotTable;

    move-result-object v10

    invoke-virtual {v10}, Landroidx/compose/runtime/SlotTable;->getAnchors$runtime_release()Ljava/util/ArrayList;

    move-result-object v10

    move-object v12, v4

    check-cast v12, Ljava/util/Collection;

    invoke-virtual {v10, v9, v12}, Ljava/util/ArrayList;->addAll(ILjava/util/Collection;)Z

    .line 1770
    invoke-virtual {v8, v6, v7}, Ljava/util/ArrayList;->subList(II)Ljava/util/List;

    move-result-object v10

    invoke-interface {v10}, Ljava/util/List;->clear()V

    .line 1772
    nop

    .end local v4    # "anchors":Ljava/util/ArrayList;
    .end local v8    # "sourceAnchors":Ljava/util/ArrayList;
    .end local v9    # "insertLocation":I
    .end local v14    # "anchorDelta":I
    check-cast v4, Ljava/util/List;

    goto :goto_7

    .line 1773
    .end local v23    # "slotsGapOwner":I
    .end local v30    # "slotsGapLen":I
    .end local v31    # "sourceGroupsEnd":I
    .end local v32    # "moveEnd":I
    .local v4, "slotsGapOwner":I
    .local v9, "moveEnd":I
    .restart local v10    # "slotsGapLen":I
    .restart local v12    # "sourceGroupsEnd":I
    :cond_9
    move/from16 v23, v4

    move/from16 v32, v9

    move/from16 v30, v10

    move/from16 v31, v12

    const/16 v17, 0x1

    .end local v4    # "slotsGapOwner":I
    .end local v9    # "moveEnd":I
    .end local v10    # "slotsGapLen":I
    .end local v12    # "sourceGroupsEnd":I
    .restart local v23    # "slotsGapOwner":I
    .restart local v30    # "slotsGapLen":I
    .restart local v31    # "sourceGroupsEnd":I
    .restart local v32    # "moveEnd":I
    invoke-static {}, Lkotlin/collections/CollectionsKt;->emptyList()Ljava/util/List;

    move-result-object v4

    .line 1753
    :goto_7
    nop

    .line 1778
    .local v4, "anchors":Ljava/util/List;
    invoke-virtual {v0, v2}, Landroidx/compose/runtime/SlotWriter;->parent(I)I

    move-result v8

    .line 1779
    .local v8, "parentGroup":I
    if-ltz v8, :cond_a

    .line 1782
    invoke-virtual {v0}, Landroidx/compose/runtime/SlotWriter;->startGroup()V

    .line 1783
    invoke-virtual {v0}, Landroidx/compose/runtime/SlotWriter;->getCurrentGroup()I

    move-result v9

    sub-int v9, v8, v9

    invoke-virtual {v0, v9}, Landroidx/compose/runtime/SlotWriter;->advanceBy(I)V

    .line 1784
    invoke-virtual {v0}, Landroidx/compose/runtime/SlotWriter;->startGroup()V

    .line 1786
    :cond_a
    invoke-virtual {v0}, Landroidx/compose/runtime/SlotWriter;->getCurrentGroup()I

    move-result v9

    sub-int v9, v2, v9

    invoke-virtual {v0, v9}, Landroidx/compose/runtime/SlotWriter;->advanceBy(I)V

    .line 1787
    invoke-virtual {v0}, Landroidx/compose/runtime/SlotWriter;->removeGroup()Z

    move-result v9

    .line 1788
    .local v9, "anchorsRemoved":Z
    if-ltz v8, :cond_b

    .line 1789
    invoke-virtual {v0}, Landroidx/compose/runtime/SlotWriter;->skipToGroupEnd()V

    .line 1790
    invoke-virtual {v0}, Landroidx/compose/runtime/SlotWriter;->endGroup()I

    .line 1791
    invoke-virtual {v0}, Landroidx/compose/runtime/SlotWriter;->skipToGroupEnd()V

    .line 1792
    invoke-virtual {v0}, Landroidx/compose/runtime/SlotWriter;->endGroup()I

    .line 1796
    :cond_b
    if-nez v9, :cond_c

    move/from16 v16, v17

    goto :goto_8

    :cond_c
    const/16 v16, 0x0

    :goto_8
    move/from16 v10, v16

    .local v10, "value$iv":Z
    const/4 v12, 0x0

    .line 2733
    .local v12, "$i$f$runtimeCheck":I
    if-eqz v10, :cond_e

    .line 2737
    nop

    .line 1799
    .end local v10    # "value$iv":Z
    .end local v12    # "$i$f$runtimeCheck":I
    iget v10, v1, Landroidx/compose/runtime/SlotWriter;->nodeCount:I

    invoke-static {v3, v5}, Landroidx/compose/runtime/SlotTableKt;->access$isNode([II)Z

    move-result v12

    if-eqz v12, :cond_d

    goto :goto_9

    :cond_d
    invoke-static {v3, v5}, Landroidx/compose/runtime/SlotTableKt;->access$nodeCount([II)I

    move-result v12

    move/from16 v17, v12

    :goto_9
    add-int v10, v10, v17

    iput v10, v1, Landroidx/compose/runtime/SlotWriter;->nodeCount:I

    .line 1802
    add-int v10, v5, v11

    iput v10, v1, Landroidx/compose/runtime/SlotWriter;->currentGroup:I

    .line 1803
    add-int v10, v26, v15

    iput v10, v1, Landroidx/compose/runtime/SlotWriter;->currentSlot:I
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_0

    .line 1804
    nop

    .line 2738
    .end local v0    # "tableWriter":Landroidx/compose/runtime/SlotWriter;
    .end local v3    # "groups":[I
    .end local v4    # "anchors":Ljava/util/List;
    .end local v5    # "currentGroup":I
    .end local v6    # "startAnchors":I
    .end local v7    # "endAnchors":I
    .end local v8    # "parentGroup":I
    .end local v9    # "anchorsRemoved":Z
    .end local v11    # "groupsToMove":I
    .end local v13    # "slotsCapacity":I
    .end local v15    # "slotsToMove":I
    .end local v21    # "dataIndexDelta":I
    .end local v22    # "$i$a$-write-SlotWriter$moveFrom$1":I
    .end local v23    # "slotsGapOwner":I
    .end local v24    # "sourceSlotsStart":I
    .end local v25    # "slots":[Ljava/lang/Object;
    .end local v26    # "currentSlot":I
    .end local v27    # "sourceSlotsEnd":I
    .end local v29    # "parentDelta":I
    .end local v30    # "slotsGapLen":I
    .end local v31    # "sourceGroupsEnd":I
    .end local v32    # "moveEnd":I
    invoke-virtual/range {v28 .. v28}, Landroidx/compose/runtime/SlotWriter;->close()V

    .line 2739
    nop

    .line 2731
    nop

    .line 2730
    .end local v20    # "$i$a$-let-SlotTable$write$1$iv":I
    .end local v28    # "writer$iv":Landroidx/compose/runtime/SlotWriter;
    nop

    .line 2740
    nop

    .line 1687
    .end local v18    # "$i$f$write":I
    .end local v19    # "this_$iv":Landroidx/compose/runtime/SlotTable;
    return-object v4

    .line 2734
    .restart local v0    # "tableWriter":Landroidx/compose/runtime/SlotWriter;
    .restart local v3    # "groups":[I
    .restart local v4    # "anchors":Ljava/util/List;
    .restart local v5    # "currentGroup":I
    .restart local v6    # "startAnchors":I
    .restart local v7    # "endAnchors":I
    .restart local v8    # "parentGroup":I
    .restart local v9    # "anchorsRemoved":Z
    .restart local v10    # "value$iv":Z
    .restart local v11    # "groupsToMove":I
    .restart local v12    # "$i$f$runtimeCheck":I
    .restart local v13    # "slotsCapacity":I
    .restart local v15    # "slotsToMove":I
    .restart local v18    # "$i$f$write":I
    .restart local v19    # "this_$iv":Landroidx/compose/runtime/SlotTable;
    .restart local v20    # "$i$a$-let-SlotTable$write$1$iv":I
    .restart local v21    # "dataIndexDelta":I
    .restart local v22    # "$i$a$-write-SlotWriter$moveFrom$1":I
    .restart local v23    # "slotsGapOwner":I
    .restart local v24    # "sourceSlotsStart":I
    .restart local v25    # "slots":[Ljava/lang/Object;
    .restart local v26    # "currentSlot":I
    .restart local v27    # "sourceSlotsEnd":I
    .restart local v28    # "writer$iv":Landroidx/compose/runtime/SlotWriter;
    .restart local v29    # "parentDelta":I
    .restart local v30    # "slotsGapLen":I
    .restart local v31    # "sourceGroupsEnd":I
    .restart local v32    # "moveEnd":I
    :cond_e
    const/4 v14, 0x0

    .line 1796
    .local v14, "$i$a$-runtimeCheck-SlotWriter$moveFrom$1$1":I
    :try_start_3
    const-string v16, "Unexpectedly removed anchors"

    .end local v14    # "$i$a$-runtimeCheck-SlotWriter$moveFrom$1$1":I
    move-object/from16 v14, v16

    .line 2735
    .local v14, "message$iv":Ljava/lang/Object;
    invoke-virtual {v14}, Ljava/lang/Object;->toString()Ljava/lang/String;

    move-result-object v16

    invoke-static/range {v16 .. v16}, Landroidx/compose/runtime/ComposerKt;->composeRuntimeError(Ljava/lang/String;)Ljava/lang/Void;

    new-instance v16, Lkotlin/KotlinNothingValueException;

    invoke-direct/range {v16 .. v16}, Lkotlin/KotlinNothingValueException;-><init>()V

    .end local v18    # "$i$f$write":I
    .end local v19    # "this_$iv":Landroidx/compose/runtime/SlotTable;
    .end local v20    # "$i$a$-let-SlotTable$write$1$iv":I
    .end local v28    # "writer$iv":Landroidx/compose/runtime/SlotWriter;
    .end local p1    # "table":Landroidx/compose/runtime/SlotTable;
    .end local p2    # "index":I
    throw v16
    :try_end_3
    .catchall {:try_start_3 .. :try_end_3} :catchall_0

    .line 2739
    .end local v0    # "tableWriter":Landroidx/compose/runtime/SlotWriter;
    .end local v3    # "groups":[I
    .end local v4    # "anchors":Ljava/util/List;
    .end local v5    # "currentGroup":I
    .end local v6    # "startAnchors":I
    .end local v7    # "endAnchors":I
    .end local v8    # "parentGroup":I
    .end local v9    # "anchorsRemoved":Z
    .end local v10    # "value$iv":Z
    .end local v11    # "groupsToMove":I
    .end local v12    # "$i$f$runtimeCheck":I
    .end local v13    # "slotsCapacity":I
    .end local v14    # "message$iv":Ljava/lang/Object;
    .end local v15    # "slotsToMove":I
    .end local v21    # "dataIndexDelta":I
    .end local v22    # "$i$a$-write-SlotWriter$moveFrom$1":I
    .end local v23    # "slotsGapOwner":I
    .end local v24    # "sourceSlotsStart":I
    .end local v25    # "slots":[Ljava/lang/Object;
    .end local v26    # "currentSlot":I
    .end local v27    # "sourceSlotsEnd":I
    .end local v29    # "parentDelta":I
    .end local v30    # "slotsGapLen":I
    .end local v31    # "sourceGroupsEnd":I
    .end local v32    # "moveEnd":I
    .restart local v18    # "$i$f$write":I
    .restart local v19    # "this_$iv":Landroidx/compose/runtime/SlotTable;
    .restart local v20    # "$i$a$-let-SlotTable$write$1$iv":I
    .restart local v28    # "writer$iv":Landroidx/compose/runtime/SlotWriter;
    .restart local p1    # "table":Landroidx/compose/runtime/SlotTable;
    .restart local p2    # "index":I
    :catchall_0
    move-exception v0

    goto :goto_a

    .end local v28    # "writer$iv":Landroidx/compose/runtime/SlotWriter;
    .local v7, "writer$iv":Landroidx/compose/runtime/SlotWriter;
    :catchall_1
    move-exception v0

    move-object/from16 v28, v7

    .end local v7    # "writer$iv":Landroidx/compose/runtime/SlotWriter;
    .restart local v28    # "writer$iv":Landroidx/compose/runtime/SlotWriter;
    goto :goto_a

    .end local v18    # "$i$f$write":I
    .end local v19    # "this_$iv":Landroidx/compose/runtime/SlotTable;
    .end local v20    # "$i$a$-let-SlotTable$write$1$iv":I
    .end local v28    # "writer$iv":Landroidx/compose/runtime/SlotWriter;
    .local v5, "this_$iv":Landroidx/compose/runtime/SlotTable;
    .local v6, "$i$f$write":I
    .restart local v7    # "writer$iv":Landroidx/compose/runtime/SlotWriter;
    .local v8, "$i$a$-let-SlotTable$write$1$iv":I
    :catchall_2
    move-exception v0

    move-object/from16 v19, v5

    move/from16 v18, v6

    move-object/from16 v28, v7

    move/from16 v20, v8

    .line 2738
    .end local v5    # "this_$iv":Landroidx/compose/runtime/SlotTable;
    .end local v6    # "$i$f$write":I
    .end local v7    # "writer$iv":Landroidx/compose/runtime/SlotWriter;
    .end local v8    # "$i$a$-let-SlotTable$write$1$iv":I
    .restart local v18    # "$i$f$write":I
    .restart local v19    # "this_$iv":Landroidx/compose/runtime/SlotTable;
    .restart local v20    # "$i$a$-let-SlotTable$write$1$iv":I
    .restart local v28    # "writer$iv":Landroidx/compose/runtime/SlotWriter;
    :goto_a
    invoke-virtual/range {v28 .. v28}, Landroidx/compose/runtime/SlotWriter;->close()V

    throw v0

    .line 1662
    .end local v18    # "$i$f$write":I
    .end local v19    # "this_$iv":Landroidx/compose/runtime/SlotTable;
    .end local v20    # "$i$a$-let-SlotTable$write$1$iv":I
    .end local v28    # "writer$iv":Landroidx/compose/runtime/SlotWriter;
    :cond_f
    new-instance v0, Ljava/lang/IllegalArgumentException;

    const-string v3, "Failed requirement."

    invoke-virtual {v3}, Ljava/lang/Object;->toString()Ljava/lang/String;

    move-result-object v3

    invoke-direct {v0, v3}, Ljava/lang/IllegalArgumentException;-><init>(Ljava/lang/String;)V

    check-cast v0, Ljava/lang/Throwable;

    throw v0
.end method

.method public final moveGroup(I)V
    .locals 28
    .param p1, "offset"    # I

    .line 1534
    move-object/from16 v0, p0

    iget v1, v0, Landroidx/compose/runtime/SlotWriter;->insertCount:I

    const/4 v2, 0x0

    const/4 v3, 0x1

    if-nez v1, :cond_0

    move v1, v3

    goto :goto_0

    :cond_0
    move v1, v2

    :goto_0
    if-eqz v1, :cond_d

    .line 1535
    if-ltz p1, :cond_1

    move v1, v3

    goto :goto_1

    :cond_1
    move v1, v2

    :goto_1
    const-string v4, "Parameter offset is out of bounds"

    if-eqz v1, :cond_c

    .line 1536
    if-nez p1, :cond_2

    return-void

    .line 1537
    :cond_2
    iget v1, v0, Landroidx/compose/runtime/SlotWriter;->currentGroup:I

    .line 1538
    .local v1, "current":I
    iget v5, v0, Landroidx/compose/runtime/SlotWriter;->parent:I

    .line 1539
    .local v5, "parent":I
    iget v6, v0, Landroidx/compose/runtime/SlotWriter;->currentGroupEnd:I

    .line 1542
    .local v6, "parentEnd":I
    move/from16 v7, p1

    .line 1543
    .local v7, "count":I
    move v8, v1

    .line 1544
    .local v8, "groupToMove":I
    :goto_2
    if-lez v7, :cond_5

    .line 1545
    iget-object v9, v0, Landroidx/compose/runtime/SlotWriter;->groups:[I

    .line 1546
    invoke-direct {v0, v8}, Landroidx/compose/runtime/SlotWriter;->groupIndexToAddress(I)I

    move-result v10

    .line 1545
    invoke-static {v9, v10}, Landroidx/compose/runtime/SlotTableKt;->access$groupSize([II)I

    move-result v9

    add-int/2addr v8, v9

    .line 1548
    if-gt v8, v6, :cond_3

    move v9, v3

    goto :goto_3

    :cond_3
    move v9, v2

    :goto_3
    if-eqz v9, :cond_4

    .line 1549
    add-int/lit8 v7, v7, -0x1

    goto :goto_2

    .line 2703
    :cond_4
    const/4 v2, 0x0

    .line 1548
    .local v2, "$i$a$-require-SlotWriter$moveGroup$3":I
    nop

    .end local v2    # "$i$a$-require-SlotWriter$moveGroup$3":I
    new-instance v2, Ljava/lang/IllegalArgumentException;

    invoke-virtual {v4}, Ljava/lang/Object;->toString()Ljava/lang/String;

    move-result-object v3

    invoke-direct {v2, v3}, Ljava/lang/IllegalArgumentException;-><init>(Ljava/lang/String;)V

    check-cast v2, Ljava/lang/Throwable;

    throw v2

    .line 1552
    :cond_5
    iget-object v4, v0, Landroidx/compose/runtime/SlotWriter;->groups:[I

    .line 1553
    invoke-direct {v0, v8}, Landroidx/compose/runtime/SlotWriter;->groupIndexToAddress(I)I

    move-result v9

    .line 1552
    invoke-static {v4, v9}, Landroidx/compose/runtime/SlotTableKt;->access$groupSize([II)I

    move-result v4

    .line 1555
    .local v4, "moveLen":I
    iget v9, v0, Landroidx/compose/runtime/SlotWriter;->currentSlot:I

    .line 1556
    .local v9, "currentSlot":I
    iget-object v10, v0, Landroidx/compose/runtime/SlotWriter;->groups:[I

    invoke-direct {v0, v8}, Landroidx/compose/runtime/SlotWriter;->groupIndexToAddress(I)I

    move-result v11

    invoke-direct {v0, v10, v11}, Landroidx/compose/runtime/SlotWriter;->dataIndex([II)I

    move-result v10

    .line 1557
    .local v10, "dataStart":I
    iget-object v11, v0, Landroidx/compose/runtime/SlotWriter;->groups:[I

    .line 1558
    nop

    .line 1559
    add-int v12, v8, v4

    .line 1558
    invoke-direct {v0, v12}, Landroidx/compose/runtime/SlotWriter;->groupIndexToAddress(I)I

    move-result v12

    .line 1557
    invoke-direct {v0, v11, v12}, Landroidx/compose/runtime/SlotWriter;->dataIndex([II)I

    move-result v11

    .line 1562
    .local v11, "dataEnd":I
    sub-int v12, v11, v10

    .line 1591
    .local v12, "moveDataLen":I
    iget v13, v0, Landroidx/compose/runtime/SlotWriter;->currentGroup:I

    sub-int/2addr v13, v3

    invoke-static {v13, v2}, Ljava/lang/Math;->max(II)I

    move-result v13

    invoke-direct {v0, v12, v13}, Landroidx/compose/runtime/SlotWriter;->insertSlots(II)V

    .line 1594
    invoke-direct {v0, v4}, Landroidx/compose/runtime/SlotWriter;->insertGroups(I)V

    .line 1597
    iget-object v13, v0, Landroidx/compose/runtime/SlotWriter;->groups:[I

    .line 1598
    .local v13, "groups":[I
    add-int v14, v8, v4

    invoke-direct {v0, v14}, Landroidx/compose/runtime/SlotWriter;->groupIndexToAddress(I)I

    move-result v14

    .line 1599
    .local v14, "moveLocationAddress":I
    mul-int/lit8 v15, v14, 0x5

    .line 1600
    .local v15, "moveLocationOffset":I
    invoke-direct {v0, v1}, Landroidx/compose/runtime/SlotWriter;->groupIndexToAddress(I)I

    move-result v16

    .line 1601
    .local v16, "currentAddress":I
    nop

    .line 1602
    nop

    .line 1603
    mul-int/lit8 v2, v16, 0x5

    .line 1604
    nop

    .line 1605
    mul-int/lit8 v17, v4, 0x5

    add-int v3, v15, v17

    .line 1601
    invoke-static {v13, v13, v2, v15, v3}, Lkotlin/collections/ArraysKt;->copyInto([I[IIII)[I

    .line 1609
    if-lez v12, :cond_6

    .line 1610
    iget-object v2, v0, Landroidx/compose/runtime/SlotWriter;->slots:[Ljava/lang/Object;

    .line 1611
    .local v2, "slots":[Ljava/lang/Object;
    nop

    .line 1612
    nop

    .line 1613
    nop

    .line 1614
    add-int v3, v10, v12

    invoke-direct {v0, v3}, Landroidx/compose/runtime/SlotWriter;->dataIndexToDataAddress(I)I

    move-result v3

    .line 1615
    move/from16 v17, v6

    .end local v6    # "parentEnd":I
    .local v17, "parentEnd":I
    add-int v6, v11, v12

    invoke-direct {v0, v6}, Landroidx/compose/runtime/SlotWriter;->dataIndexToDataAddress(I)I

    move-result v6

    .line 1611
    invoke-static {v2, v2, v9, v3, v6}, Lkotlin/collections/ArraysKt;->copyInto([Ljava/lang/Object;[Ljava/lang/Object;III)[Ljava/lang/Object;

    goto :goto_4

    .line 1609
    .end local v2    # "slots":[Ljava/lang/Object;
    .end local v17    # "parentEnd":I
    .restart local v6    # "parentEnd":I
    :cond_6
    move/from16 v17, v6

    .line 1619
    .end local v6    # "parentEnd":I
    .restart local v17    # "parentEnd":I
    :goto_4
    add-int v2, v10, v12

    sub-int/2addr v2, v9

    .line 1620
    .local v2, "dataMoveDistance":I
    iget v3, v0, Landroidx/compose/runtime/SlotWriter;->slotsGapStart:I

    .line 1621
    .local v3, "slotsGapStart":I
    iget v6, v0, Landroidx/compose/runtime/SlotWriter;->slotsGapLen:I

    .line 1622
    .local v6, "slotsGapLen":I
    move/from16 v19, v3

    .end local v3    # "slotsGapStart":I
    .local v19, "slotsGapStart":I
    iget-object v3, v0, Landroidx/compose/runtime/SlotWriter;->slots:[Ljava/lang/Object;

    array-length v3, v3

    .line 1623
    .local v3, "slotsCapacity":I
    move/from16 v20, v7

    .end local v7    # "count":I
    .local v20, "count":I
    iget v7, v0, Landroidx/compose/runtime/SlotWriter;->slotsGapOwner:I

    .line 1624
    .local v7, "slotsGapOwner":I
    move/from16 v21, v9

    .end local v9    # "currentSlot":I
    .local v21, "currentSlot":I
    add-int v9, v1, v4

    if-ge v1, v9, :cond_9

    move/from16 v22, v1

    :goto_5
    move/from16 v23, v22

    move/from16 v24, v11

    const/16 v18, 0x1

    .end local v11    # "dataEnd":I
    .local v23, "group":I
    .local v24, "dataEnd":I
    add-int/lit8 v11, v22, 0x1

    .line 1625
    move/from16 v22, v14

    move/from16 v14, v23

    move/from16 v23, v15

    .end local v15    # "moveLocationOffset":I
    .local v14, "group":I
    .local v22, "moveLocationAddress":I
    .local v23, "moveLocationOffset":I
    invoke-direct {v0, v14}, Landroidx/compose/runtime/SlotWriter;->groupIndexToAddress(I)I

    move-result v15

    .line 1626
    .local v15, "groupAddress":I
    invoke-direct {v0, v13, v15}, Landroidx/compose/runtime/SlotWriter;->dataIndex([II)I

    move-result v25

    .line 1627
    .local v25, "oldIndex":I
    move/from16 v26, v14

    .end local v14    # "group":I
    .local v26, "group":I
    sub-int v14, v25, v2

    .line 1628
    .local v14, "newIndex":I
    nop

    .line 1629
    nop

    .line 1630
    move/from16 v27, v2

    if-ge v7, v15, :cond_7

    const/4 v2, 0x0

    goto :goto_6

    :cond_7
    move/from16 v2, v19

    .line 1631
    .end local v2    # "dataMoveDistance":I
    .local v27, "dataMoveDistance":I
    :goto_6
    nop

    .line 1632
    nop

    .line 1628
    invoke-direct {v0, v14, v2, v6, v3}, Landroidx/compose/runtime/SlotWriter;->dataIndexToDataAnchor(IIII)I

    move-result v2

    .line 1634
    .local v2, "newAnchor":I
    invoke-direct {v0, v13, v15, v2}, Landroidx/compose/runtime/SlotWriter;->updateDataIndex([III)V

    .line 1624
    .end local v2    # "newAnchor":I
    .end local v14    # "newIndex":I
    .end local v15    # "groupAddress":I
    .end local v25    # "oldIndex":I
    if-lt v11, v9, :cond_8

    goto :goto_7

    :cond_8
    move/from16 v14, v22

    move/from16 v15, v23

    move/from16 v2, v27

    move/from16 v22, v11

    move/from16 v11, v24

    goto :goto_5

    .end local v22    # "moveLocationAddress":I
    .end local v23    # "moveLocationOffset":I
    .end local v24    # "dataEnd":I
    .end local v26    # "group":I
    .end local v27    # "dataMoveDistance":I
    .local v2, "dataMoveDistance":I
    .restart local v11    # "dataEnd":I
    .local v14, "moveLocationAddress":I
    .local v15, "moveLocationOffset":I
    :cond_9
    move/from16 v27, v2

    move/from16 v24, v11

    move/from16 v22, v14

    move/from16 v23, v15

    .line 1638
    .end local v2    # "dataMoveDistance":I
    .end local v11    # "dataEnd":I
    .end local v14    # "moveLocationAddress":I
    .end local v15    # "moveLocationOffset":I
    .restart local v22    # "moveLocationAddress":I
    .restart local v23    # "moveLocationOffset":I
    .restart local v24    # "dataEnd":I
    .restart local v27    # "dataMoveDistance":I
    :goto_7
    add-int v2, v8, v4

    invoke-direct {v0, v2, v1, v4}, Landroidx/compose/runtime/SlotWriter;->moveAnchors(III)V

    .line 1641
    add-int v2, v8, v4

    invoke-direct {v0, v2, v4}, Landroidx/compose/runtime/SlotWriter;->removeGroups(II)Z

    move-result v2

    .line 1642
    .local v2, "anchorsRemoved":Z
    xor-int/lit8 v9, v2, 0x1

    .local v9, "value$iv":Z
    const/4 v11, 0x0

    .line 2724
    .local v11, "$i$f$runtimeCheck":I
    if-eqz v9, :cond_b

    .line 2728
    nop

    .line 1645
    .end local v9    # "value$iv":Z
    .end local v11    # "$i$f$runtimeCheck":I
    iget v9, v0, Landroidx/compose/runtime/SlotWriter;->currentGroupEnd:I

    invoke-direct {v0, v5, v9, v1}, Landroidx/compose/runtime/SlotWriter;->fixParentAnchorsFor(III)V

    .line 1648
    if-lez v12, :cond_a

    .line 1649
    add-int v9, v10, v12

    add-int v11, v8, v4

    const/4 v14, 0x1

    sub-int/2addr v11, v14

    invoke-direct {v0, v9, v12, v11}, Landroidx/compose/runtime/SlotWriter;->removeSlots(III)V

    .line 1651
    :cond_a
    return-void

    .line 2725
    .restart local v9    # "value$iv":Z
    .restart local v11    # "$i$f$runtimeCheck":I
    :cond_b
    const/4 v14, 0x0

    .line 1642
    .local v14, "$i$a$-runtimeCheck-SlotWriter$moveGroup$4":I
    const-string v14, "Unexpectedly removed anchors"

    .line 2726
    .local v14, "message$iv":Ljava/lang/Object;
    invoke-virtual {v14}, Ljava/lang/Object;->toString()Ljava/lang/String;

    move-result-object v15

    invoke-static {v15}, Landroidx/compose/runtime/ComposerKt;->composeRuntimeError(Ljava/lang/String;)Ljava/lang/Void;

    new-instance v15, Lkotlin/KotlinNothingValueException;

    invoke-direct {v15}, Lkotlin/KotlinNothingValueException;-><init>()V

    throw v15

    .line 2703
    .end local v1    # "current":I
    .end local v2    # "anchorsRemoved":Z
    .end local v3    # "slotsCapacity":I
    .end local v4    # "moveLen":I
    .end local v5    # "parent":I
    .end local v6    # "slotsGapLen":I
    .end local v7    # "slotsGapOwner":I
    .end local v8    # "groupToMove":I
    .end local v9    # "value$iv":Z
    .end local v10    # "dataStart":I
    .end local v11    # "$i$f$runtimeCheck":I
    .end local v12    # "moveDataLen":I
    .end local v13    # "groups":[I
    .end local v14    # "message$iv":Ljava/lang/Object;
    .end local v16    # "currentAddress":I
    .end local v17    # "parentEnd":I
    .end local v19    # "slotsGapStart":I
    .end local v20    # "count":I
    .end local v21    # "currentSlot":I
    .end local v22    # "moveLocationAddress":I
    .end local v23    # "moveLocationOffset":I
    .end local v24    # "dataEnd":I
    .end local v27    # "dataMoveDistance":I
    :cond_c
    const/4 v1, 0x0

    .line 1535
    .local v1, "$i$a$-require-SlotWriter$moveGroup$2":I
    nop

    .end local v1    # "$i$a$-require-SlotWriter$moveGroup$2":I
    new-instance v1, Ljava/lang/IllegalArgumentException;

    invoke-virtual {v4}, Ljava/lang/Object;->toString()Ljava/lang/String;

    move-result-object v2

    invoke-direct {v1, v2}, Ljava/lang/IllegalArgumentException;-><init>(Ljava/lang/String;)V

    check-cast v1, Ljava/lang/Throwable;

    throw v1

    .line 2703
    :cond_d
    const/4 v1, 0x0

    .line 1534
    .local v1, "$i$a$-require-SlotWriter$moveGroup$1":I
    nop

    .end local v1    # "$i$a$-require-SlotWriter$moveGroup$1":I
    new-instance v1, Ljava/lang/IllegalArgumentException;

    const-string v2, "Cannot move a group while inserting"

    invoke-virtual {v2}, Ljava/lang/Object;->toString()Ljava/lang/String;

    move-result-object v2

    invoke-direct {v1, v2}, Ljava/lang/IllegalArgumentException;-><init>(Ljava/lang/String;)V

    check-cast v1, Ljava/lang/Throwable;

    throw v1
.end method

.method public final node(I)Ljava/lang/Object;
    .locals 3
    .param p1, "index"    # I

    .line 1056
    invoke-direct {p0, p1}, Landroidx/compose/runtime/SlotWriter;->groupIndexToAddress(I)I

    move-result v0

    .line 1057
    .local v0, "address":I
    iget-object v1, p0, Landroidx/compose/runtime/SlotWriter;->groups:[I

    invoke-static {v1, v0}, Landroidx/compose/runtime/SlotTableKt;->access$isNode([II)Z

    move-result v1

    if-eqz v1, :cond_0

    .line 1058
    iget-object v1, p0, Landroidx/compose/runtime/SlotWriter;->slots:[Ljava/lang/Object;

    iget-object v2, p0, Landroidx/compose/runtime/SlotWriter;->groups:[I

    invoke-direct {p0, v2, v0}, Landroidx/compose/runtime/SlotWriter;->nodeIndex([II)I

    move-result v2

    invoke-direct {p0, v2}, Landroidx/compose/runtime/SlotWriter;->dataIndexToDataAddress(I)I

    move-result v2

    aget-object v1, v1, v2

    goto :goto_0

    .line 1059
    :cond_0
    const/4 v1, 0x0

    .line 1057
    :goto_0
    return-object v1
.end method

.method public final node(Landroidx/compose/runtime/Anchor;)Ljava/lang/Object;
    .locals 1
    .param p1, "anchor"    # Landroidx/compose/runtime/Anchor;

    const-string v0, "anchor"

    invoke-static {p1, v0}, Lkotlin/jvm/internal/Intrinsics;->checkNotNullParameter(Ljava/lang/Object;Ljava/lang/String;)V

    .line 1065
    invoke-virtual {p1, p0}, Landroidx/compose/runtime/Anchor;->toIndexFor(Landroidx/compose/runtime/SlotWriter;)I

    move-result v0

    invoke-virtual {p0, v0}, Landroidx/compose/runtime/SlotWriter;->node(I)Ljava/lang/Object;

    move-result-object v0

    return-object v0
.end method

.method public final parent(I)I
    .locals 1
    .param p1, "index"    # I

    .line 1076
    iget-object v0, p0, Landroidx/compose/runtime/SlotWriter;->groups:[I

    invoke-direct {p0, v0, p1}, Landroidx/compose/runtime/SlotWriter;->parent([II)I

    move-result v0

    return v0
.end method

.method public final parent(Landroidx/compose/runtime/Anchor;)I
    .locals 2
    .param p1, "anchor"    # Landroidx/compose/runtime/Anchor;

    const-string v0, "anchor"

    invoke-static {p1, v0}, Lkotlin/jvm/internal/Intrinsics;->checkNotNullParameter(Ljava/lang/Object;Ljava/lang/String;)V

    .line 1082
    invoke-virtual {p1}, Landroidx/compose/runtime/Anchor;->getValid()Z

    move-result v0

    if-eqz v0, :cond_0

    iget-object v0, p0, Landroidx/compose/runtime/SlotWriter;->groups:[I

    invoke-virtual {p0, p1}, Landroidx/compose/runtime/SlotWriter;->anchorIndex(Landroidx/compose/runtime/Anchor;)I

    move-result v1

    invoke-direct {p0, v0, v1}, Landroidx/compose/runtime/SlotWriter;->parent([II)I

    move-result v0

    goto :goto_0

    :cond_0
    const/4 v0, -0x1

    :goto_0
    return v0
.end method

.method public final removeGroup()Z
    .locals 6

    .line 1500
    iget v0, p0, Landroidx/compose/runtime/SlotWriter;->insertCount:I

    if-nez v0, :cond_0

    const/4 v0, 0x1

    goto :goto_0

    :cond_0
    const/4 v0, 0x0

    :goto_0
    if-eqz v0, :cond_1

    .line 1501
    iget v0, p0, Landroidx/compose/runtime/SlotWriter;->currentGroup:I

    .line 1502
    .local v0, "oldGroup":I
    iget v1, p0, Landroidx/compose/runtime/SlotWriter;->currentSlot:I

    .line 1503
    .local v1, "oldSlot":I
    invoke-virtual {p0}, Landroidx/compose/runtime/SlotWriter;->skipGroup()I

    move-result v2

    .line 1504
    .local v2, "count":I
    iget v3, p0, Landroidx/compose/runtime/SlotWriter;->currentGroup:I

    sub-int/2addr v3, v0

    invoke-direct {p0, v0, v3}, Landroidx/compose/runtime/SlotWriter;->removeGroups(II)Z

    move-result v3

    .line 1505
    .local v3, "anchorsRemoved":Z
    iget v4, p0, Landroidx/compose/runtime/SlotWriter;->currentSlot:I

    sub-int/2addr v4, v1

    add-int/lit8 v5, v0, -0x1

    invoke-direct {p0, v1, v4, v5}, Landroidx/compose/runtime/SlotWriter;->removeSlots(III)V

    .line 1506
    iput v0, p0, Landroidx/compose/runtime/SlotWriter;->currentGroup:I

    .line 1507
    iput v1, p0, Landroidx/compose/runtime/SlotWriter;->currentSlot:I

    .line 1508
    iget v4, p0, Landroidx/compose/runtime/SlotWriter;->nodeCount:I

    sub-int/2addr v4, v2

    iput v4, p0, Landroidx/compose/runtime/SlotWriter;->nodeCount:I

    .line 1509
    return v3

    .line 2703
    .end local v0    # "oldGroup":I
    .end local v1    # "oldSlot":I
    .end local v2    # "count":I
    .end local v3    # "anchorsRemoved":Z
    :cond_1
    const/4 v0, 0x0

    .line 1500
    .local v0, "$i$a$-require-SlotWriter$removeGroup$1":I
    nop

    .end local v0    # "$i$a$-require-SlotWriter$removeGroup$1":I
    new-instance v0, Ljava/lang/IllegalArgumentException;

    const-string v1, "Cannot remove group while inserting"

    invoke-virtual {v1}, Ljava/lang/Object;->toString()Ljava/lang/String;

    move-result-object v1

    invoke-direct {v0, v1}, Ljava/lang/IllegalArgumentException;-><init>(Ljava/lang/String;)V

    check-cast v0, Ljava/lang/Throwable;

    throw v0
.end method

.method public final seek(Landroidx/compose/runtime/Anchor;)V
    .locals 2
    .param p1, "anchor"    # Landroidx/compose/runtime/Anchor;

    const-string v0, "anchor"

    invoke-static {p1, v0}, Lkotlin/jvm/internal/Intrinsics;->checkNotNullParameter(Ljava/lang/Object;Ljava/lang/String;)V

    .line 1236
    invoke-virtual {p1, p0}, Landroidx/compose/runtime/Anchor;->toIndexFor(Landroidx/compose/runtime/SlotWriter;)I

    move-result v0

    iget v1, p0, Landroidx/compose/runtime/SlotWriter;->currentGroup:I

    sub-int/2addr v0, v1

    invoke-virtual {p0, v0}, Landroidx/compose/runtime/SlotWriter;->advanceBy(I)V

    return-void
.end method

.method public final set(ILjava/lang/Object;)Ljava/lang/Object;
    .locals 9
    .param p1, "index"    # I
    .param p2, "value"    # Ljava/lang/Object;

    .line 1189
    iget v0, p0, Landroidx/compose/runtime/SlotWriter;->currentGroup:I

    invoke-direct {p0, v0}, Landroidx/compose/runtime/SlotWriter;->groupIndexToAddress(I)I

    move-result v0

    .line 1190
    .local v0, "address":I
    iget-object v1, p0, Landroidx/compose/runtime/SlotWriter;->groups:[I

    invoke-direct {p0, v1, v0}, Landroidx/compose/runtime/SlotWriter;->slotIndex([II)I

    move-result v1

    .line 1191
    .local v1, "slotsStart":I
    iget-object v2, p0, Landroidx/compose/runtime/SlotWriter;->groups:[I

    iget v3, p0, Landroidx/compose/runtime/SlotWriter;->currentGroup:I

    const/4 v4, 0x1

    add-int/2addr v3, v4

    invoke-direct {p0, v3}, Landroidx/compose/runtime/SlotWriter;->groupIndexToAddress(I)I

    move-result v3

    invoke-direct {p0, v2, v3}, Landroidx/compose/runtime/SlotWriter;->dataIndex([II)I

    move-result v2

    .line 1192
    .local v2, "slotsEnd":I
    add-int v3, v1, p1

    .line 1194
    .local v3, "slotsIndex":I
    if-lt v3, v1, :cond_0

    if-ge v3, v2, :cond_0

    goto :goto_0

    :cond_0
    const/4 v4, 0x0

    .local v4, "value$iv":Z
    :goto_0
    const/4 v5, 0x0

    .line 2709
    .local v5, "$i$f$runtimeCheck":I
    if-eqz v4, :cond_1

    .line 2713
    nop

    .line 1197
    .end local v4    # "value$iv":Z
    .end local v5    # "$i$f$runtimeCheck":I
    invoke-direct {p0, v3}, Landroidx/compose/runtime/SlotWriter;->dataIndexToDataAddress(I)I

    move-result v4

    .line 1198
    .local v4, "slotAddress":I
    iget-object v5, p0, Landroidx/compose/runtime/SlotWriter;->slots:[Ljava/lang/Object;

    aget-object v6, v5, v4

    .line 1199
    .local v6, "result":Ljava/lang/Object;
    aput-object p2, v5, v4

    .line 1200
    return-object v6

    .line 2710
    .end local v6    # "result":Ljava/lang/Object;
    .local v4, "value$iv":Z
    .restart local v5    # "$i$f$runtimeCheck":I
    :cond_1
    const/4 v6, 0x0

    .line 1195
    .local v6, "$i$a$-runtimeCheck-SlotWriter$set$2":I
    new-instance v7, Ljava/lang/StringBuilder;

    invoke-direct {v7}, Ljava/lang/StringBuilder;-><init>()V

    const-string v8, "Write to an invalid slot index "

    invoke-virtual {v7, v8}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v7

    invoke-virtual {v7, p1}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v7

    const-string v8, " for group "

    invoke-virtual {v7, v8}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v7

    invoke-virtual {p0}, Landroidx/compose/runtime/SlotWriter;->getCurrentGroup()I

    move-result v8

    invoke-virtual {v7, v8}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v7

    invoke-virtual {v7}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v6

    .line 2711
    .local v6, "message$iv":Ljava/lang/Object;
    invoke-virtual {v6}, Ljava/lang/Object;->toString()Ljava/lang/String;

    move-result-object v7

    invoke-static {v7}, Landroidx/compose/runtime/ComposerKt;->composeRuntimeError(Ljava/lang/String;)Ljava/lang/Void;

    new-instance v7, Lkotlin/KotlinNothingValueException;

    invoke-direct {v7}, Lkotlin/KotlinNothingValueException;-><init>()V

    throw v7
.end method

.method public final set(Ljava/lang/Object;)V
    .locals 4
    .param p1, "value"    # Ljava/lang/Object;

    .line 1179
    iget v0, p0, Landroidx/compose/runtime/SlotWriter;->currentSlot:I

    iget v1, p0, Landroidx/compose/runtime/SlotWriter;->currentSlotEnd:I

    const/4 v2, 0x1

    if-gt v0, v1, :cond_0

    move v1, v2

    goto :goto_0

    :cond_0
    const/4 v1, 0x0

    .local v1, "value$iv":Z
    :goto_0
    const/4 v3, 0x0

    .line 2704
    .local v3, "$i$f$runtimeCheck":I
    if-eqz v1, :cond_1

    .line 2708
    nop

    .line 1182
    .end local v1    # "value$iv":Z
    .end local v3    # "$i$f$runtimeCheck":I
    iget-object v1, p0, Landroidx/compose/runtime/SlotWriter;->slots:[Ljava/lang/Object;

    sub-int/2addr v0, v2

    invoke-direct {p0, v0}, Landroidx/compose/runtime/SlotWriter;->dataIndexToDataAddress(I)I

    move-result v0

    aput-object p1, v1, v0

    .line 1183
    return-void

    .line 2705
    .restart local v1    # "value$iv":Z
    .restart local v3    # "$i$f$runtimeCheck":I
    :cond_1
    const/4 v0, 0x0

    .line 1180
    .local v0, "$i$a$-runtimeCheck-SlotWriter$set$1":I
    const-string v0, "Writing to an invalid slot"

    .line 2706
    .local v0, "message$iv":Ljava/lang/Object;
    invoke-virtual {v0}, Ljava/lang/Object;->toString()Ljava/lang/String;

    move-result-object v2

    invoke-static {v2}, Landroidx/compose/runtime/ComposerKt;->composeRuntimeError(Ljava/lang/String;)Ljava/lang/Void;

    new-instance v2, Lkotlin/KotlinNothingValueException;

    invoke-direct {v2}, Lkotlin/KotlinNothingValueException;-><init>()V

    throw v2
.end method

.method public final skip()Ljava/lang/Object;
    .locals 3

    .line 1208
    iget v0, p0, Landroidx/compose/runtime/SlotWriter;->insertCount:I

    if-lez v0, :cond_0

    .line 1209
    iget v0, p0, Landroidx/compose/runtime/SlotWriter;->parent:I

    const/4 v1, 0x1

    invoke-direct {p0, v1, v0}, Landroidx/compose/runtime/SlotWriter;->insertSlots(II)V

    .line 1211
    :cond_0
    iget-object v0, p0, Landroidx/compose/runtime/SlotWriter;->slots:[Ljava/lang/Object;

    iget v1, p0, Landroidx/compose/runtime/SlotWriter;->currentSlot:I

    add-int/lit8 v2, v1, 0x1

    iput v2, p0, Landroidx/compose/runtime/SlotWriter;->currentSlot:I

    invoke-direct {p0, v1}, Landroidx/compose/runtime/SlotWriter;->dataIndexToDataAddress(I)I

    move-result v1

    aget-object v0, v0, v1

    return-object v0
.end method

.method public final skipGroup()I
    .locals 4

    .line 1489
    iget v0, p0, Landroidx/compose/runtime/SlotWriter;->currentGroup:I

    invoke-direct {p0, v0}, Landroidx/compose/runtime/SlotWriter;->groupIndexToAddress(I)I

    move-result v0

    .line 1490
    .local v0, "groupAddress":I
    iget v1, p0, Landroidx/compose/runtime/SlotWriter;->currentGroup:I

    iget-object v2, p0, Landroidx/compose/runtime/SlotWriter;->groups:[I

    invoke-static {v2, v0}, Landroidx/compose/runtime/SlotTableKt;->access$groupSize([II)I

    move-result v2

    add-int/2addr v1, v2

    .line 1491
    .local v1, "newGroup":I
    iput v1, p0, Landroidx/compose/runtime/SlotWriter;->currentGroup:I

    .line 1492
    iget-object v2, p0, Landroidx/compose/runtime/SlotWriter;->groups:[I

    invoke-direct {p0, v1}, Landroidx/compose/runtime/SlotWriter;->groupIndexToAddress(I)I

    move-result v3

    invoke-direct {p0, v2, v3}, Landroidx/compose/runtime/SlotWriter;->dataIndex([II)I

    move-result v2

    iput v2, p0, Landroidx/compose/runtime/SlotWriter;->currentSlot:I

    .line 1493
    iget-object v2, p0, Landroidx/compose/runtime/SlotWriter;->groups:[I

    invoke-static {v2, v0}, Landroidx/compose/runtime/SlotTableKt;->access$isNode([II)Z

    move-result v2

    if-eqz v2, :cond_0

    const/4 v2, 0x1

    goto :goto_0

    :cond_0
    iget-object v2, p0, Landroidx/compose/runtime/SlotWriter;->groups:[I

    invoke-static {v2, v0}, Landroidx/compose/runtime/SlotTableKt;->access$nodeCount([II)I

    move-result v2

    :goto_0
    return v2
.end method

.method public final skipToGroupEnd()V
    .locals 3

    .line 1242
    iget v0, p0, Landroidx/compose/runtime/SlotWriter;->currentGroupEnd:I

    .line 1243
    .local v0, "newGroup":I
    iput v0, p0, Landroidx/compose/runtime/SlotWriter;->currentGroup:I

    .line 1244
    iget-object v1, p0, Landroidx/compose/runtime/SlotWriter;->groups:[I

    invoke-direct {p0, v0}, Landroidx/compose/runtime/SlotWriter;->groupIndexToAddress(I)I

    move-result v2

    invoke-direct {p0, v1, v2}, Landroidx/compose/runtime/SlotWriter;->dataIndex([II)I

    move-result v1

    iput v1, p0, Landroidx/compose/runtime/SlotWriter;->currentSlot:I

    .line 1245
    return-void
.end method

.method public final startData(ILjava/lang/Object;)V
    .locals 2
    .param p1, "key"    # I
    .param p2, "aux"    # Ljava/lang/Object;

    .line 1316
    sget-object v0, Landroidx/compose/runtime/Composer;->Companion:Landroidx/compose/runtime/Composer$Companion;

    invoke-virtual {v0}, Landroidx/compose/runtime/Composer$Companion;->getEmpty()Ljava/lang/Object;

    move-result-object v0

    const/4 v1, 0x0

    invoke-direct {p0, p1, v0, v1, p2}, Landroidx/compose/runtime/SlotWriter;->startGroup(ILjava/lang/Object;ZLjava/lang/Object;)V

    return-void
.end method

.method public final startData(ILjava/lang/Object;Ljava/lang/Object;)V
    .locals 1
    .param p1, "key"    # I
    .param p2, "objectKey"    # Ljava/lang/Object;
    .param p3, "aux"    # Ljava/lang/Object;

    .line 1306
    nop

    .line 1307
    nop

    .line 1308
    nop

    .line 1309
    nop

    .line 1310
    nop

    .line 1306
    const/4 v0, 0x0

    invoke-direct {p0, p1, p2, v0, p3}, Landroidx/compose/runtime/SlotWriter;->startGroup(ILjava/lang/Object;ZLjava/lang/Object;)V

    .line 1311
    return-void
.end method

.method public final startGroup()V
    .locals 3

    .line 1274
    iget v0, p0, Landroidx/compose/runtime/SlotWriter;->insertCount:I

    const/4 v1, 0x0

    if-nez v0, :cond_0

    const/4 v0, 0x1

    goto :goto_0

    :cond_0
    move v0, v1

    :goto_0
    if-eqz v0, :cond_1

    .line 1275
    sget-object v0, Landroidx/compose/runtime/Composer;->Companion:Landroidx/compose/runtime/Composer$Companion;

    invoke-virtual {v0}, Landroidx/compose/runtime/Composer$Companion;->getEmpty()Ljava/lang/Object;

    move-result-object v0

    sget-object v2, Landroidx/compose/runtime/Composer;->Companion:Landroidx/compose/runtime/Composer$Companion;

    invoke-virtual {v2}, Landroidx/compose/runtime/Composer$Companion;->getEmpty()Ljava/lang/Object;

    move-result-object v2

    invoke-direct {p0, v1, v0, v1, v2}, Landroidx/compose/runtime/SlotWriter;->startGroup(ILjava/lang/Object;ZLjava/lang/Object;)V

    .line 1276
    return-void

    .line 2703
    :cond_1
    const/4 v0, 0x0

    .line 1274
    .local v0, "$i$a$-require-SlotWriter$startGroup$1":I
    nop

    .end local v0    # "$i$a$-require-SlotWriter$startGroup$1":I
    new-instance v0, Ljava/lang/IllegalArgumentException;

    const-string v1, "Key must be supplied when inserting"

    invoke-virtual {v1}, Ljava/lang/Object;->toString()Ljava/lang/String;

    move-result-object v1

    invoke-direct {v0, v1}, Ljava/lang/IllegalArgumentException;-><init>(Ljava/lang/String;)V

    check-cast v0, Ljava/lang/Throwable;

    throw v0
.end method

.method public final startGroup(I)V
    .locals 3
    .param p1, "key"    # I

    .line 1281
    sget-object v0, Landroidx/compose/runtime/Composer;->Companion:Landroidx/compose/runtime/Composer$Companion;

    invoke-virtual {v0}, Landroidx/compose/runtime/Composer$Companion;->getEmpty()Ljava/lang/Object;

    move-result-object v0

    sget-object v1, Landroidx/compose/runtime/Composer;->Companion:Landroidx/compose/runtime/Composer$Companion;

    invoke-virtual {v1}, Landroidx/compose/runtime/Composer$Companion;->getEmpty()Ljava/lang/Object;

    move-result-object v1

    const/4 v2, 0x0

    invoke-direct {p0, p1, v0, v2, v1}, Landroidx/compose/runtime/SlotWriter;->startGroup(ILjava/lang/Object;ZLjava/lang/Object;)V

    return-void
.end method

.method public final startGroup(ILjava/lang/Object;)V
    .locals 2
    .param p1, "key"    # I
    .param p2, "dataKey"    # Ljava/lang/Object;

    .line 1286
    nop

    .line 1287
    nop

    .line 1288
    nop

    .line 1289
    nop

    .line 1290
    sget-object v0, Landroidx/compose/runtime/Composer;->Companion:Landroidx/compose/runtime/Composer$Companion;

    invoke-virtual {v0}, Landroidx/compose/runtime/Composer$Companion;->getEmpty()Ljava/lang/Object;

    move-result-object v0

    .line 1286
    const/4 v1, 0x0

    invoke-direct {p0, p1, p2, v1, v0}, Landroidx/compose/runtime/SlotWriter;->startGroup(ILjava/lang/Object;ZLjava/lang/Object;)V

    .line 1291
    return-void
.end method

.method public final startNode(Ljava/lang/Object;)V
    .locals 3
    .param p1, "key"    # Ljava/lang/Object;

    .line 1296
    sget-object v0, Landroidx/compose/runtime/Composer;->Companion:Landroidx/compose/runtime/Composer$Companion;

    invoke-virtual {v0}, Landroidx/compose/runtime/Composer$Companion;->getEmpty()Ljava/lang/Object;

    move-result-object v0

    const/16 v1, 0x7d

    const/4 v2, 0x1

    invoke-direct {p0, v1, p1, v2, v0}, Landroidx/compose/runtime/SlotWriter;->startGroup(ILjava/lang/Object;ZLjava/lang/Object;)V

    return-void
.end method

.method public final startNode(Ljava/lang/Object;Ljava/lang/Object;)V
    .locals 2
    .param p1, "key"    # Ljava/lang/Object;
    .param p2, "node"    # Ljava/lang/Object;

    .line 1301
    const/16 v0, 0x7d

    const/4 v1, 0x1

    invoke-direct {p0, v0, p1, v1, p2}, Landroidx/compose/runtime/SlotWriter;->startGroup(ILjava/lang/Object;ZLjava/lang/Object;)V

    return-void
.end method

.method public toString()Ljava/lang/String;
    .locals 3

    .line 1821
    new-instance v0, Ljava/lang/StringBuilder;

    invoke-direct {v0}, Ljava/lang/StringBuilder;-><init>()V

    const-string v1, "SlotWriter(current = "

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v0

    iget v1, p0, Landroidx/compose/runtime/SlotWriter;->currentGroup:I

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v0

    const-string v1, " end="

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v0

    iget v1, p0, Landroidx/compose/runtime/SlotWriter;->currentGroupEnd:I

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v0

    const-string v1, " size = "

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v0

    invoke-virtual {p0}, Landroidx/compose/runtime/SlotWriter;->getSize$runtime_release()I

    move-result v1

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v0

    const-string v1, " gap="

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v0

    .line 1822
    iget v1, p0, Landroidx/compose/runtime/SlotWriter;->groupGapStart:I

    .line 1821
    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v0

    const/16 v1, 0x2d

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(C)Ljava/lang/StringBuilder;

    move-result-object v0

    .line 1822
    iget v1, p0, Landroidx/compose/runtime/SlotWriter;->groupGapStart:I

    iget v2, p0, Landroidx/compose/runtime/SlotWriter;->groupGapLen:I

    add-int/2addr v1, v2

    .line 1821
    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v0

    const/16 v1, 0x29

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(C)Ljava/lang/StringBuilder;

    move-result-object v0

    invoke-virtual {v0}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v0

    return-object v0
.end method

.method public final update(Ljava/lang/Object;)Ljava/lang/Object;
    .locals 1
    .param p1, "value"    # Ljava/lang/Object;

    .line 1113
    invoke-virtual {p0}, Landroidx/compose/runtime/SlotWriter;->skip()Ljava/lang/Object;

    move-result-object v0

    .line 1114
    .local v0, "result":Ljava/lang/Object;
    invoke-virtual {p0, p1}, Landroidx/compose/runtime/SlotWriter;->set(Ljava/lang/Object;)V

    .line 1115
    return-object v0
.end method

.method public final updateAux(Ljava/lang/Object;)V
    .locals 5
    .param p1, "value"    # Ljava/lang/Object;

    .line 1122
    iget v0, p0, Landroidx/compose/runtime/SlotWriter;->currentGroup:I

    invoke-direct {p0, v0}, Landroidx/compose/runtime/SlotWriter;->groupIndexToAddress(I)I

    move-result v0

    .line 1123
    .local v0, "address":I
    iget-object v1, p0, Landroidx/compose/runtime/SlotWriter;->groups:[I

    invoke-static {v1, v0}, Landroidx/compose/runtime/SlotTableKt;->access$hasAux([II)Z

    move-result v1

    .local v1, "value$iv":Z
    const/4 v2, 0x0

    .line 2688
    .local v2, "$i$f$runtimeCheck":I
    if-eqz v1, :cond_0

    .line 2692
    nop

    .line 1126
    .end local v1    # "value$iv":Z
    .end local v2    # "$i$f$runtimeCheck":I
    iget-object v1, p0, Landroidx/compose/runtime/SlotWriter;->slots:[Ljava/lang/Object;

    iget-object v2, p0, Landroidx/compose/runtime/SlotWriter;->groups:[I

    invoke-direct {p0, v2, v0}, Landroidx/compose/runtime/SlotWriter;->auxIndex([II)I

    move-result v2

    invoke-direct {p0, v2}, Landroidx/compose/runtime/SlotWriter;->dataIndexToDataAddress(I)I

    move-result v2

    aput-object p1, v1, v2

    .line 1127
    return-void

    .line 2689
    .restart local v1    # "value$iv":Z
    .restart local v2    # "$i$f$runtimeCheck":I
    :cond_0
    const/4 v3, 0x0

    .line 1124
    .local v3, "$i$a$-runtimeCheck-SlotWriter$updateAux$1":I
    const-string v3, "Updating the data of a group that was not created with a data slot"

    .line 2690
    .local v3, "message$iv":Ljava/lang/Object;
    invoke-virtual {v3}, Ljava/lang/Object;->toString()Ljava/lang/String;

    move-result-object v4

    invoke-static {v4}, Landroidx/compose/runtime/ComposerKt;->composeRuntimeError(Ljava/lang/String;)Ljava/lang/Void;

    new-instance v4, Lkotlin/KotlinNothingValueException;

    invoke-direct {v4}, Lkotlin/KotlinNothingValueException;-><init>()V

    throw v4
.end method

.method public final updateNode(Landroidx/compose/runtime/Anchor;Ljava/lang/Object;)V
    .locals 1
    .param p1, "anchor"    # Landroidx/compose/runtime/Anchor;
    .param p2, "value"    # Ljava/lang/Object;

    const-string v0, "anchor"

    invoke-static {p1, v0}, Lkotlin/jvm/internal/Intrinsics;->checkNotNullParameter(Ljava/lang/Object;Ljava/lang/String;)V

    .line 1168
    invoke-virtual {p1, p0}, Landroidx/compose/runtime/Anchor;->toIndexFor(Landroidx/compose/runtime/SlotWriter;)I

    move-result v0

    invoke-direct {p0, v0, p2}, Landroidx/compose/runtime/SlotWriter;->updateNodeOfGroup(ILjava/lang/Object;)V

    return-void
.end method

.method public final updateNode(Ljava/lang/Object;)V
    .locals 1
    .param p1, "value"    # Ljava/lang/Object;

    .line 1163
    iget v0, p0, Landroidx/compose/runtime/SlotWriter;->currentGroup:I

    invoke-direct {p0, v0, p1}, Landroidx/compose/runtime/SlotWriter;->updateNodeOfGroup(ILjava/lang/Object;)V

    return-void
.end method

.method public final updateParentNode(Ljava/lang/Object;)V
    .locals 1
    .param p1, "value"    # Ljava/lang/Object;

    .line 1173
    iget v0, p0, Landroidx/compose/runtime/SlotWriter;->parent:I

    invoke-direct {p0, v0, p1}, Landroidx/compose/runtime/SlotWriter;->updateNodeOfGroup(ILjava/lang/Object;)V

    return-void
.end method

.method public final verifyDataAnchors$runtime_release()V
    .locals 13

    .line 2297
    const/4 v0, 0x0

    .line 2298
    .local v0, "previousDataIndex":I
    iget v1, p0, Landroidx/compose/runtime/SlotWriter;->slotsGapOwner:I

    .line 2299
    .local v1, "owner":I
    const/4 v2, 0x0

    .line 2300
    .local v2, "ownerFound":Z
    iget-object v3, p0, Landroidx/compose/runtime/SlotWriter;->slots:[Ljava/lang/Object;

    array-length v3, v3

    iget v4, p0, Landroidx/compose/runtime/SlotWriter;->slotsGapLen:I

    sub-int/2addr v3, v4

    .line 2301
    .local v3, "slotsSize":I
    invoke-virtual {p0}, Landroidx/compose/runtime/SlotWriter;->getSize$runtime_release()I

    move-result v4

    if-lez v4, :cond_8

    const/4 v5, 0x0

    move v6, v5

    :cond_0
    move v7, v6

    .local v7, "index":I
    const/4 v8, 0x1

    add-int/2addr v6, v8

    .line 2302
    invoke-direct {p0, v7}, Landroidx/compose/runtime/SlotWriter;->groupIndexToAddress(I)I

    move-result v9

    .line 2303
    .local v9, "address":I
    iget-object v10, p0, Landroidx/compose/runtime/SlotWriter;->groups:[I

    invoke-static {v10, v9}, Landroidx/compose/runtime/SlotTableKt;->access$dataAnchor([II)I

    move-result v10

    .line 2304
    .local v10, "dataAnchor":I
    iget-object v11, p0, Landroidx/compose/runtime/SlotWriter;->groups:[I

    invoke-direct {p0, v11, v9}, Landroidx/compose/runtime/SlotWriter;->dataIndex([II)I

    move-result v11

    .line 2305
    .local v11, "dataIndex":I
    if-lt v11, v0, :cond_1

    move v12, v8

    goto :goto_0

    :cond_1
    move v12, v5

    :goto_0
    if-eqz v12, :cond_7

    .line 2309
    if-gt v11, v3, :cond_2

    move v12, v8

    goto :goto_1

    :cond_2
    move v12, v5

    :goto_1
    if-eqz v12, :cond_6

    .line 2312
    if-gez v10, :cond_5

    if-nez v2, :cond_5

    .line 2313
    if-ne v1, v7, :cond_3

    goto :goto_2

    :cond_3
    move v8, v5

    :goto_2
    if-eqz v8, :cond_4

    .line 2316
    const/4 v2, 0x1

    goto :goto_3

    .line 2313
    :cond_4
    const/4 v4, 0x0

    .line 2314
    .local v4, "$i$a$-check-SlotWriter$verifyDataAnchors$3":I
    new-instance v5, Ljava/lang/StringBuilder;

    invoke-direct {v5}, Ljava/lang/StringBuilder;-><init>()V

    const-string v6, "Expected the slot gap owner to be "

    invoke-virtual {v5, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v5

    invoke-virtual {v5, v1}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v5

    const-string v6, " found gap at "

    invoke-virtual {v5, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v5

    invoke-virtual {v5, v7}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v5

    invoke-virtual {v5}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v4

    .line 2313
    .end local v4    # "$i$a$-check-SlotWriter$verifyDataAnchors$3":I
    new-instance v5, Ljava/lang/IllegalStateException;

    invoke-virtual {v4}, Ljava/lang/Object;->toString()Ljava/lang/String;

    move-result-object v4

    invoke-direct {v5, v4}, Ljava/lang/IllegalStateException;-><init>(Ljava/lang/String;)V

    check-cast v5, Ljava/lang/Throwable;

    throw v5

    .line 2318
    :cond_5
    :goto_3
    move v0, v11

    .line 2301
    .end local v9    # "address":I
    .end local v10    # "dataAnchor":I
    .end local v11    # "dataIndex":I
    if-lt v6, v4, :cond_0

    goto :goto_4

    .line 2309
    .restart local v9    # "address":I
    .restart local v10    # "dataAnchor":I
    .restart local v11    # "dataIndex":I
    :cond_6
    const/4 v4, 0x0

    .line 2310
    .local v4, "$i$a$-check-SlotWriter$verifyDataAnchors$2":I
    new-instance v5, Ljava/lang/StringBuilder;

    invoke-direct {v5}, Ljava/lang/StringBuilder;-><init>()V

    const-string v6, "Data index, "

    invoke-virtual {v5, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v5

    invoke-virtual {v5, v11}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v5

    const-string v6, ", out of bound at "

    invoke-virtual {v5, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v5

    invoke-virtual {v5, v7}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v5

    invoke-virtual {v5}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v4

    .line 2309
    .end local v4    # "$i$a$-check-SlotWriter$verifyDataAnchors$2":I
    new-instance v5, Ljava/lang/IllegalStateException;

    invoke-virtual {v4}, Ljava/lang/Object;->toString()Ljava/lang/String;

    move-result-object v4

    invoke-direct {v5, v4}, Ljava/lang/IllegalStateException;-><init>(Ljava/lang/String;)V

    check-cast v5, Ljava/lang/Throwable;

    throw v5

    .line 2305
    :cond_7
    const/4 v4, 0x0

    .line 2306
    .local v4, "$i$a$-check-SlotWriter$verifyDataAnchors$1":I
    new-instance v5, Ljava/lang/StringBuilder;

    invoke-direct {v5}, Ljava/lang/StringBuilder;-><init>()V

    const-string v6, "Data index out of order at "

    invoke-virtual {v5, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v5

    invoke-virtual {v5, v7}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v5

    const-string v6, ", previous = "

    invoke-virtual {v5, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v5

    invoke-virtual {v5, v0}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v5

    const-string v6, ", current = "

    invoke-virtual {v5, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v5

    .line 2307
    nop

    .line 2306
    invoke-virtual {v5, v11}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v5

    invoke-virtual {v5}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v4

    .line 2305
    .end local v4    # "$i$a$-check-SlotWriter$verifyDataAnchors$1":I
    new-instance v5, Ljava/lang/IllegalStateException;

    invoke-virtual {v4}, Ljava/lang/Object;->toString()Ljava/lang/String;

    move-result-object v4

    invoke-direct {v5, v4}, Ljava/lang/IllegalStateException;-><init>(Ljava/lang/String;)V

    check-cast v5, Ljava/lang/Throwable;

    throw v5

    .line 2320
    .end local v7    # "index":I
    .end local v9    # "address":I
    .end local v10    # "dataAnchor":I
    .end local v11    # "dataIndex":I
    :cond_8
    :goto_4
    return-void
.end method

.method public final verifyParentAnchors$runtime_release()V
    .locals 12

    .line 2324
    iget v0, p0, Landroidx/compose/runtime/SlotWriter;->groupGapStart:I

    .line 2325
    .local v0, "gapStart":I
    iget v1, p0, Landroidx/compose/runtime/SlotWriter;->groupGapLen:I

    .line 2326
    .local v1, "gapLen":I
    invoke-direct {p0}, Landroidx/compose/runtime/SlotWriter;->getCapacity()I

    move-result v2

    .line 2327
    .local v2, "capacity":I
    const-string v3, "Expected a start relative anchor at "

    const/4 v4, -0x2

    const/4 v5, 0x0

    const/4 v6, 0x1

    if-lez v0, :cond_3

    move v7, v5

    :cond_0
    move v8, v7

    .local v8, "groupAddress":I
    add-int/2addr v7, v6

    .line 2328
    iget-object v9, p0, Landroidx/compose/runtime/SlotWriter;->groups:[I

    invoke-static {v9, v8}, Landroidx/compose/runtime/SlotTableKt;->access$parentAnchor([II)I

    move-result v9

    .line 2329
    .local v9, "parentAnchor":I
    if-le v9, v4, :cond_1

    move v10, v6

    goto :goto_0

    :cond_1
    move v10, v5

    :goto_0
    if-eqz v10, :cond_2

    .line 2327
    .end local v9    # "parentAnchor":I
    if-lt v7, v0, :cond_0

    goto :goto_1

    .line 2329
    .restart local v9    # "parentAnchor":I
    :cond_2
    const/4 v4, 0x0

    .line 2330
    .local v4, "$i$a$-check-SlotWriter$verifyParentAnchors$1":I
    invoke-static {v8}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;

    move-result-object v5

    invoke-static {v3, v5}, Lkotlin/jvm/internal/Intrinsics;->stringPlus(Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/String;

    move-result-object v3

    .line 2329
    .end local v4    # "$i$a$-check-SlotWriter$verifyParentAnchors$1":I
    new-instance v4, Ljava/lang/IllegalStateException;

    invoke-virtual {v3}, Ljava/lang/Object;->toString()Ljava/lang/String;

    move-result-object v3

    invoke-direct {v4, v3}, Ljava/lang/IllegalStateException;-><init>(Ljava/lang/String;)V

    check-cast v4, Ljava/lang/Throwable;

    throw v4

    .line 2333
    .end local v8    # "groupAddress":I
    .end local v9    # "parentAnchor":I
    :cond_3
    :goto_1
    add-int v7, v0, v1

    if-ge v7, v2, :cond_a

    :cond_4
    move v8, v7

    .restart local v8    # "groupAddress":I
    add-int/2addr v7, v6

    .line 2334
    iget-object v9, p0, Landroidx/compose/runtime/SlotWriter;->groups:[I

    invoke-static {v9, v8}, Landroidx/compose/runtime/SlotTableKt;->access$parentAnchor([II)I

    move-result v9

    .line 2335
    .restart local v9    # "parentAnchor":I
    invoke-direct {p0, v9}, Landroidx/compose/runtime/SlotWriter;->parentAnchorToIndex(I)I

    move-result v10

    .line 2336
    .local v10, "parentIndex":I
    if-ge v10, v0, :cond_7

    .line 2337
    if-le v9, v4, :cond_5

    move v11, v6

    goto :goto_2

    :cond_5
    move v11, v5

    :goto_2
    if-eqz v11, :cond_6

    goto :goto_4

    :cond_6
    const/4 v4, 0x0

    .line 2338
    .local v4, "$i$a$-check-SlotWriter$verifyParentAnchors$2":I
    invoke-static {v8}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;

    move-result-object v5

    invoke-static {v3, v5}, Lkotlin/jvm/internal/Intrinsics;->stringPlus(Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/String;

    move-result-object v3

    .line 2337
    .end local v4    # "$i$a$-check-SlotWriter$verifyParentAnchors$2":I
    new-instance v4, Ljava/lang/IllegalStateException;

    invoke-virtual {v3}, Ljava/lang/Object;->toString()Ljava/lang/String;

    move-result-object v3

    invoke-direct {v4, v3}, Ljava/lang/IllegalStateException;-><init>(Ljava/lang/String;)V

    check-cast v4, Ljava/lang/Throwable;

    throw v4

    .line 2341
    :cond_7
    if-gt v9, v4, :cond_8

    move v11, v6

    goto :goto_3

    :cond_8
    move v11, v5

    :goto_3
    if-eqz v11, :cond_9

    .line 2333
    .end local v9    # "parentAnchor":I
    .end local v10    # "parentIndex":I
    :goto_4
    if-lt v7, v2, :cond_4

    goto :goto_5

    .line 2341
    .restart local v9    # "parentAnchor":I
    .restart local v10    # "parentIndex":I
    :cond_9
    const/4 v3, 0x0

    .line 2342
    .local v3, "$i$a$-check-SlotWriter$verifyParentAnchors$3":I
    invoke-static {v8}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;

    move-result-object v4

    const-string v5, "Expected an end relative anchor at "

    invoke-static {v5, v4}, Lkotlin/jvm/internal/Intrinsics;->stringPlus(Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/String;

    move-result-object v3

    .line 2341
    .end local v3    # "$i$a$-check-SlotWriter$verifyParentAnchors$3":I
    new-instance v4, Ljava/lang/IllegalStateException;

    invoke-virtual {v3}, Ljava/lang/Object;->toString()Ljava/lang/String;

    move-result-object v3

    invoke-direct {v4, v3}, Ljava/lang/IllegalStateException;-><init>(Ljava/lang/String;)V

    check-cast v4, Ljava/lang/Throwable;

    throw v4

    .line 2346
    .end local v8    # "groupAddress":I
    .end local v9    # "parentAnchor":I
    .end local v10    # "parentIndex":I
    :cond_a
    :goto_5
    return-void
.end method
