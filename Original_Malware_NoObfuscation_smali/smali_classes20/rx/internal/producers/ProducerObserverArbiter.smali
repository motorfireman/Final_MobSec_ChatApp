.class public final Lrx/internal/producers/ProducerObserverArbiter;
.super Ljava/lang/Object;
.source "ProducerObserverArbiter.java"

# interfaces
.implements Lrx/Producer;
.implements Lrx/Observer;


# annotations
.annotation system Ldalvik/annotation/Signature;
    value = {
        "<T:",
        "Ljava/lang/Object;",
        ">",
        "Ljava/lang/Object;",
        "Lrx/Producer;",
        "Lrx/Observer<",
        "TT;>;"
    }
.end annotation


# static fields
.field static final NULL_PRODUCER:Lrx/Producer;


# instance fields
.field final child:Lrx/Subscriber;
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "Lrx/Subscriber<",
            "-TT;>;"
        }
    .end annotation
.end field

.field currentProducer:Lrx/Producer;

.field emitting:Z

.field volatile hasError:Z

.field missedProducer:Lrx/Producer;

.field missedRequested:J

.field missedTerminal:Ljava/lang/Object;

.field queue:Ljava/util/List;
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "Ljava/util/List<",
            "TT;>;"
        }
    .end annotation
.end field

.field requested:J


# direct methods
.method static constructor <clinit>()V
    .locals 1

    .line 49
    new-instance v0, Lrx/internal/producers/ProducerObserverArbiter$1;

    invoke-direct {v0}, Lrx/internal/producers/ProducerObserverArbiter$1;-><init>()V

    sput-object v0, Lrx/internal/producers/ProducerObserverArbiter;->NULL_PRODUCER:Lrx/Producer;

    return-void
.end method

.method public constructor <init>(Lrx/Subscriber;)V
    .locals 0
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "(",
            "Lrx/Subscriber<",
            "-TT;>;)V"
        }
    .end annotation

    .line 56
    .local p0, "this":Lrx/internal/producers/ProducerObserverArbiter;, "Lrx/internal/producers/ProducerObserverArbiter<TT;>;"
    .local p1, "child":Lrx/Subscriber;, "Lrx/Subscriber<-TT;>;"
    invoke-direct {p0}, Ljava/lang/Object;-><init>()V

    .line 57
    iput-object p1, p0, Lrx/internal/producers/ProducerObserverArbiter;->child:Lrx/Subscriber;

    .line 58
    return-void
.end method


# virtual methods
.method emitLoop()V
    .locals 26

    .line 191
    .local p0, "this":Lrx/internal/producers/ProducerObserverArbiter;, "Lrx/internal/producers/ProducerObserverArbiter<TT;>;"
    move-object/from16 v1, p0

    iget-object v2, v1, Lrx/internal/producers/ProducerObserverArbiter;->child:Lrx/Subscriber;

    .line 193
    .local v2, "c":Lrx/Subscriber;, "Lrx/Subscriber<-TT;>;"
    const-wide/16 v3, 0x0

    .line 194
    .local v3, "toRequest":J
    const/4 v0, 0x0

    .local v0, "requestFrom":Lrx/Producer;
    const/4 v5, 0x0

    const-wide/16 v6, 0x0

    move-wide v8, v3

    move-object v4, v5

    move-object v10, v4

    move-object v11, v10

    move-wide v12, v6

    move-object v3, v0

    .line 202
    .end local v0    # "requestFrom":Lrx/Producer;
    .local v3, "requestFrom":Lrx/Producer;
    .local v8, "toRequest":J
    :goto_0
    const/4 v14, 0x0

    .line 203
    .local v14, "quit":Z
    monitor-enter p0

    .line 204
    :try_start_0
    iget-wide v12, v1, Lrx/internal/producers/ProducerObserverArbiter;->missedRequested:J
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_5

    .line 205
    .local v12, "localRequested":J
    :try_start_1
    iget-object v0, v1, Lrx/internal/producers/ProducerObserverArbiter;->missedProducer:Lrx/Producer;
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_4

    move-object v11, v0

    .line 206
    .local v11, "localProducer":Lrx/Producer;
    :try_start_2
    iget-object v0, v1, Lrx/internal/producers/ProducerObserverArbiter;->missedTerminal:Ljava/lang/Object;
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_3

    move-object v4, v0

    .line 207
    .local v4, "localTerminal":Ljava/lang/Object;
    :try_start_3
    iget-object v0, v1, Lrx/internal/producers/ProducerObserverArbiter;->queue:Ljava/util/List;
    :try_end_3
    .catchall {:try_start_3 .. :try_end_3} :catchall_2

    move-object v10, v0

    .line 208
    .local v10, "q":Ljava/util/List;, "Ljava/util/List<TT;>;"
    cmp-long v0, v12, v6

    const/4 v15, 0x0

    if-nez v0, :cond_0

    if-nez v11, :cond_0

    if-nez v10, :cond_0

    if-nez v4, :cond_0

    .line 210
    :try_start_4
    iput-boolean v15, v1, Lrx/internal/producers/ProducerObserverArbiter;->emitting:Z
    :try_end_4
    .catchall {:try_start_4 .. :try_end_4} :catchall_6

    .line 211
    const/4 v14, 0x1

    goto :goto_1

    .line 213
    :cond_0
    :try_start_5
    iput-wide v6, v1, Lrx/internal/producers/ProducerObserverArbiter;->missedRequested:J

    .line 214
    iput-object v5, v1, Lrx/internal/producers/ProducerObserverArbiter;->missedProducer:Lrx/Producer;

    .line 215
    iput-object v5, v1, Lrx/internal/producers/ProducerObserverArbiter;->queue:Ljava/util/List;

    .line 216
    iput-object v5, v1, Lrx/internal/producers/ProducerObserverArbiter;->missedTerminal:Ljava/lang/Object;

    .line 218
    :goto_1
    monitor-exit p0
    :try_end_5
    .catchall {:try_start_5 .. :try_end_5} :catchall_1

    .line 219
    if-eqz v14, :cond_2

    .line 220
    cmp-long v0, v8, v6

    if-eqz v0, :cond_1

    if-eqz v3, :cond_1

    .line 221
    invoke-interface {v3, v8, v9}, Lrx/Producer;->request(J)V

    .line 223
    :cond_1
    return-void

    .line 226
    :cond_2
    if-eqz v10, :cond_3

    invoke-interface {v10}, Ljava/util/List;->isEmpty()Z

    move-result v0

    if-eqz v0, :cond_4

    :cond_3
    const/4 v15, 0x1

    .line 227
    .local v15, "empty":Z
    :cond_4
    if-eqz v4, :cond_6

    .line 228
    sget-object v0, Ljava/lang/Boolean;->TRUE:Ljava/lang/Boolean;

    if-eq v4, v0, :cond_5

    .line 229
    move-object v0, v4

    check-cast v0, Ljava/lang/Throwable;

    invoke-virtual {v2, v0}, Lrx/Subscriber;->onError(Ljava/lang/Throwable;)V

    .line 230
    return-void

    .line 232
    :cond_5
    if-eqz v15, :cond_6

    .line 233
    invoke-virtual {v2}, Lrx/Subscriber;->onCompleted()V

    .line 234
    return-void

    .line 237
    :cond_6
    const-wide/16 v16, 0x0

    .line 238
    .local v16, "e":J
    if-eqz v10, :cond_a

    .line 239
    invoke-interface {v10}, Ljava/util/List;->iterator()Ljava/util/Iterator;

    move-result-object v18

    .local v18, "i$":Ljava/util/Iterator;
    :goto_2
    invoke-interface/range {v18 .. v18}, Ljava/util/Iterator;->hasNext()Z

    move-result v0

    if-eqz v0, :cond_9

    invoke-interface/range {v18 .. v18}, Ljava/util/Iterator;->next()Ljava/lang/Object;

    move-result-object v5

    .line 240
    .local v5, "v":Ljava/lang/Object;, "TT;"
    invoke-virtual {v2}, Lrx/Subscriber;->isUnsubscribed()Z

    move-result v19

    if-eqz v19, :cond_7

    .line 241
    return-void

    .line 243
    :cond_7
    iget-boolean v0, v1, Lrx/internal/producers/ProducerObserverArbiter;->hasError:Z

    if-eqz v0, :cond_8

    .line 244
    const/4 v5, 0x0

    goto :goto_0

    .line 247
    :cond_8
    :try_start_6
    invoke-virtual {v2, v5}, Lrx/Subscriber;->onNext(Ljava/lang/Object;)V
    :try_end_6
    .catchall {:try_start_6 .. :try_end_6} :catchall_0

    .line 251
    nop

    .line 252
    .end local v5    # "v":Ljava/lang/Object;, "TT;"
    const/4 v5, 0x0

    goto :goto_2

    .line 248
    .restart local v5    # "v":Ljava/lang/Object;, "TT;"
    :catchall_0
    move-exception v0

    move-object v6, v0

    move-object v0, v6

    .line 249
    .local v0, "ex":Ljava/lang/Throwable;
    invoke-static {v0, v2, v5}, Lrx/exceptions/Exceptions;->throwOrReport(Ljava/lang/Throwable;Lrx/Observer;Ljava/lang/Object;)V

    .line 250
    return-void

    .line 253
    .end local v0    # "ex":Ljava/lang/Throwable;
    .end local v5    # "v":Ljava/lang/Object;, "TT;"
    .end local v18    # "i$":Ljava/util/Iterator;
    :cond_9
    invoke-interface {v10}, Ljava/util/List;->size()I

    move-result v0

    int-to-long v6, v0

    add-long v16, v16, v6

    .line 255
    :cond_a
    iget-wide v5, v1, Lrx/internal/producers/ProducerObserverArbiter;->requested:J

    .line 257
    .local v5, "r":J
    const-wide v22, 0x7fffffffffffffffL

    cmp-long v0, v5, v22

    if-eqz v0, :cond_f

    .line 259
    const-wide/16 v20, 0x0

    cmp-long v0, v12, v20

    if-eqz v0, :cond_c

    .line 260
    add-long v24, v5, v12

    .line 261
    .local v24, "u":J
    cmp-long v0, v24, v20

    if-gez v0, :cond_b

    .line 262
    const-wide v24, 0x7fffffffffffffffL

    .line 264
    :cond_b
    move-wide/from16 v5, v24

    .line 267
    .end local v24    # "u":J
    :cond_c
    const-wide/16 v20, 0x0

    cmp-long v0, v16, v20

    if-eqz v0, :cond_e

    cmp-long v0, v5, v22

    if-eqz v0, :cond_e

    .line 268
    sub-long v22, v5, v16

    .line 269
    .local v22, "u":J
    cmp-long v0, v22, v20

    if-ltz v0, :cond_d

    .line 272
    move-wide/from16 v5, v22

    goto :goto_3

    .line 270
    :cond_d
    new-instance v0, Ljava/lang/IllegalStateException;

    const-string v7, "More produced than requested"

    invoke-direct {v0, v7}, Ljava/lang/IllegalStateException;-><init>(Ljava/lang/String;)V

    throw v0

    .line 274
    .end local v22    # "u":J
    :cond_e
    :goto_3
    iput-wide v5, v1, Lrx/internal/producers/ProducerObserverArbiter;->requested:J

    .line 276
    :cond_f
    if-eqz v11, :cond_12

    .line 277
    sget-object v0, Lrx/internal/producers/ProducerObserverArbiter;->NULL_PRODUCER:Lrx/Producer;

    if-ne v11, v0, :cond_10

    .line 278
    const/4 v0, 0x0

    iput-object v0, v1, Lrx/internal/producers/ProducerObserverArbiter;->currentProducer:Lrx/Producer;

    const-wide/16 v18, 0x0

    goto :goto_4

    .line 280
    :cond_10
    const/4 v0, 0x0

    iput-object v11, v1, Lrx/internal/producers/ProducerObserverArbiter;->currentProducer:Lrx/Producer;

    .line 281
    const-wide/16 v18, 0x0

    cmp-long v7, v5, v18

    if-eqz v7, :cond_11

    .line 282
    invoke-static {v8, v9, v5, v6}, Lrx/internal/operators/BackpressureUtils;->addCap(JJ)J

    move-result-wide v7

    .line 283
    .end local v8    # "toRequest":J
    .local v7, "toRequest":J
    move-object v3, v11

    move-wide v8, v7

    const-wide/16 v18, 0x0

    goto :goto_4

    .line 281
    .end local v7    # "toRequest":J
    .restart local v8    # "toRequest":J
    :cond_11
    const-wide/16 v18, 0x0

    goto :goto_4

    .line 287
    :cond_12
    const/4 v0, 0x0

    iget-object v7, v1, Lrx/internal/producers/ProducerObserverArbiter;->currentProducer:Lrx/Producer;

    .line 288
    .local v7, "p":Lrx/Producer;
    if-eqz v7, :cond_13

    const-wide/16 v18, 0x0

    cmp-long v20, v12, v18

    if-eqz v20, :cond_14

    .line 289
    invoke-static {v8, v9, v12, v13}, Lrx/internal/operators/BackpressureUtils;->addCap(JJ)J

    move-result-wide v8

    .line 290
    move-object v3, v7

    goto :goto_4

    .line 288
    :cond_13
    const-wide/16 v18, 0x0

    .line 293
    .end local v4    # "localTerminal":Ljava/lang/Object;
    .end local v5    # "r":J
    .end local v7    # "p":Lrx/Producer;
    .end local v10    # "q":Ljava/util/List;, "Ljava/util/List<TT;>;"
    .end local v11    # "localProducer":Lrx/Producer;
    .end local v12    # "localRequested":J
    .end local v14    # "quit":Z
    .end local v15    # "empty":Z
    .end local v16    # "e":J
    :cond_14
    :goto_4
    move-object v5, v0

    move-wide/from16 v6, v18

    goto/16 :goto_0

    .line 218
    .restart local v14    # "quit":Z
    :catchall_1
    move-exception v0

    goto :goto_5

    :catchall_2
    move-exception v0

    .restart local v10    # "q":Ljava/util/List;, "Ljava/util/List<TT;>;"
    goto :goto_5

    .end local v10    # "q":Ljava/util/List;, "Ljava/util/List<TT;>;"
    :catchall_3
    move-exception v0

    .restart local v4    # "localTerminal":Ljava/lang/Object;
    .restart local v10    # "q":Ljava/util/List;, "Ljava/util/List<TT;>;"
    goto :goto_5

    .end local v4    # "localTerminal":Ljava/lang/Object;
    .end local v10    # "q":Ljava/util/List;, "Ljava/util/List<TT;>;"
    :catchall_4
    move-exception v0

    .restart local v4    # "localTerminal":Ljava/lang/Object;
    .restart local v10    # "q":Ljava/util/List;, "Ljava/util/List<TT;>;"
    .restart local v11    # "localProducer":Lrx/Producer;
    goto :goto_5

    .end local v4    # "localTerminal":Ljava/lang/Object;
    .end local v10    # "q":Ljava/util/List;, "Ljava/util/List<TT;>;"
    .end local v11    # "localProducer":Lrx/Producer;
    :catchall_5
    move-exception v0

    .restart local v4    # "localTerminal":Ljava/lang/Object;
    .restart local v10    # "q":Ljava/util/List;, "Ljava/util/List<TT;>;"
    .restart local v11    # "localProducer":Lrx/Producer;
    .restart local v12    # "localRequested":J
    :goto_5
    :try_start_7
    monitor-exit p0
    :try_end_7
    .catchall {:try_start_7 .. :try_end_7} :catchall_6

    throw v0

    :catchall_6
    move-exception v0

    goto :goto_5
.end method

.method public onCompleted()V
    .locals 2

    .line 115
    .local p0, "this":Lrx/internal/producers/ProducerObserverArbiter;, "Lrx/internal/producers/ProducerObserverArbiter<TT;>;"
    monitor-enter p0

    .line 116
    :try_start_0
    iget-boolean v0, p0, Lrx/internal/producers/ProducerObserverArbiter;->emitting:Z

    const/4 v1, 0x1

    if-eqz v0, :cond_0

    .line 117
    invoke-static {v1}, Ljava/lang/Boolean;->valueOf(Z)Ljava/lang/Boolean;

    move-result-object v0

    iput-object v0, p0, Lrx/internal/producers/ProducerObserverArbiter;->missedTerminal:Ljava/lang/Object;

    .line 118
    monitor-exit p0

    return-void

    .line 120
    :cond_0
    iput-boolean v1, p0, Lrx/internal/producers/ProducerObserverArbiter;->emitting:Z

    .line 121
    monitor-exit p0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    .line 122
    iget-object v0, p0, Lrx/internal/producers/ProducerObserverArbiter;->child:Lrx/Subscriber;

    invoke-virtual {v0}, Lrx/Subscriber;->onCompleted()V

    .line 123
    return-void

    .line 121
    :catchall_0
    move-exception v0

    :try_start_1
    monitor-exit p0
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    throw v0
.end method

.method public onError(Ljava/lang/Throwable;)V
    .locals 3
    .param p1, "e"    # Ljava/lang/Throwable;

    .line 97
    .local p0, "this":Lrx/internal/producers/ProducerObserverArbiter;, "Lrx/internal/producers/ProducerObserverArbiter<TT;>;"
    monitor-enter p0

    .line 98
    const/4 v0, 0x0

    :try_start_0
    iget-boolean v1, p0, Lrx/internal/producers/ProducerObserverArbiter;->emitting:Z

    const/4 v2, 0x1

    if-eqz v1, :cond_0

    .line 99
    iput-object p1, p0, Lrx/internal/producers/ProducerObserverArbiter;->missedTerminal:Ljava/lang/Object;

    .line 100
    const/4 v0, 0x0

    .local v0, "emit":Z
    goto :goto_0

    .line 102
    .end local v0    # "emit":Z
    :cond_0
    iput-boolean v2, p0, Lrx/internal/producers/ProducerObserverArbiter;->emitting:Z
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    .line 103
    const/4 v0, 0x1

    .line 105
    .restart local v0    # "emit":Z
    :goto_0
    :try_start_1
    monitor-exit p0
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_1

    .line 106
    if-eqz v0, :cond_1

    .line 107
    iget-object v1, p0, Lrx/internal/producers/ProducerObserverArbiter;->child:Lrx/Subscriber;

    invoke-virtual {v1, p1}, Lrx/Subscriber;->onError(Ljava/lang/Throwable;)V

    goto :goto_1

    .line 109
    :cond_1
    iput-boolean v2, p0, Lrx/internal/producers/ProducerObserverArbiter;->hasError:Z

    .line 111
    :goto_1
    return-void

    .line 105
    .end local v0    # "emit":Z
    :catchall_0
    move-exception v1

    .restart local v0    # "emit":Z
    :goto_2
    :try_start_2
    monitor-exit p0
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_1

    throw v1

    :catchall_1
    move-exception v1

    goto :goto_2
.end method

.method public onNext(Ljava/lang/Object;)V
    .locals 6
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "(TT;)V"
        }
    .end annotation

    .line 62
    .local p0, "this":Lrx/internal/producers/ProducerObserverArbiter;, "Lrx/internal/producers/ProducerObserverArbiter<TT;>;"
    .local p1, "t":Ljava/lang/Object;, "TT;"
    monitor-enter p0

    .line 63
    :try_start_0
    iget-boolean v0, p0, Lrx/internal/producers/ProducerObserverArbiter;->emitting:Z

    if-eqz v0, :cond_1

    .line 64
    iget-object v0, p0, Lrx/internal/producers/ProducerObserverArbiter;->queue:Ljava/util/List;

    .line 65
    .local v0, "q":Ljava/util/List;, "Ljava/util/List<TT;>;"
    if-nez v0, :cond_0

    .line 66
    new-instance v1, Ljava/util/ArrayList;

    const/4 v2, 0x4

    invoke-direct {v1, v2}, Ljava/util/ArrayList;-><init>(I)V

    move-object v0, v1

    .line 67
    iput-object v0, p0, Lrx/internal/producers/ProducerObserverArbiter;->queue:Ljava/util/List;

    .line 69
    :cond_0
    invoke-interface {v0, p1}, Ljava/util/List;->add(Ljava/lang/Object;)Z

    .line 70
    monitor-exit p0

    return-void

    .line 72
    .end local v0    # "q":Ljava/util/List;, "Ljava/util/List<TT;>;"
    :cond_1
    const/4 v0, 0x1

    iput-boolean v0, p0, Lrx/internal/producers/ProducerObserverArbiter;->emitting:Z

    .line 73
    monitor-exit p0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_3

    .line 74
    const/4 v0, 0x0

    .line 76
    .local v0, "skipFinal":Z
    const/4 v1, 0x0

    :try_start_1
    iget-object v2, p0, Lrx/internal/producers/ProducerObserverArbiter;->child:Lrx/Subscriber;

    invoke-virtual {v2, p1}, Lrx/Subscriber;->onNext(Ljava/lang/Object;)V

    .line 78
    iget-wide v2, p0, Lrx/internal/producers/ProducerObserverArbiter;->requested:J

    .line 79
    .local v2, "r":J
    const-wide v4, 0x7fffffffffffffffL

    cmp-long v4, v2, v4

    if-eqz v4, :cond_2

    .line 80
    const-wide/16 v4, 0x1

    sub-long v4, v2, v4

    iput-wide v4, p0, Lrx/internal/producers/ProducerObserverArbiter;->requested:J

    .line 83
    :cond_2
    invoke-virtual {p0}, Lrx/internal/producers/ProducerObserverArbiter;->emitLoop()V
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_1

    .line 84
    const/4 v0, 0x1

    .line 86
    .end local v2    # "r":J
    if-nez v0, :cond_3

    .line 87
    monitor-enter p0

    .line 88
    :try_start_2
    iput-boolean v1, p0, Lrx/internal/producers/ProducerObserverArbiter;->emitting:Z

    .line 89
    monitor-exit p0

    goto :goto_0

    :catchall_0
    move-exception v1

    monitor-exit p0
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_0

    throw v1

    .line 92
    :cond_3
    :goto_0
    return-void

    .line 86
    :catchall_1
    move-exception v2

    if-nez v0, :cond_4

    .line 87
    monitor-enter p0

    .line 88
    :try_start_3
    iput-boolean v1, p0, Lrx/internal/producers/ProducerObserverArbiter;->emitting:Z

    .line 89
    monitor-exit p0

    goto :goto_1

    :catchall_2
    move-exception v1

    monitor-exit p0
    :try_end_3
    .catchall {:try_start_3 .. :try_end_3} :catchall_2

    throw v1

    :cond_4
    :goto_1
    throw v2

    .line 73
    .end local v0    # "skipFinal":Z
    :catchall_3
    move-exception v0

    :try_start_4
    monitor-exit p0
    :try_end_4
    .catchall {:try_start_4 .. :try_end_4} :catchall_3

    throw v0
.end method

.method public request(J)V
    .locals 9
    .param p1, "n"    # J

    .line 127
    .local p0, "this":Lrx/internal/producers/ProducerObserverArbiter;, "Lrx/internal/producers/ProducerObserverArbiter<TT;>;"
    const-wide/16 v0, 0x0

    cmp-long v2, p1, v0

    if-ltz v2, :cond_6

    .line 130
    cmp-long v2, p1, v0

    if-nez v2, :cond_0

    .line 131
    return-void

    .line 133
    :cond_0
    monitor-enter p0

    .line 134
    :try_start_0
    iget-boolean v2, p0, Lrx/internal/producers/ProducerObserverArbiter;->emitting:Z

    if-eqz v2, :cond_1

    .line 135
    iget-wide v0, p0, Lrx/internal/producers/ProducerObserverArbiter;->missedRequested:J

    add-long/2addr v0, p1

    iput-wide v0, p0, Lrx/internal/producers/ProducerObserverArbiter;->missedRequested:J

    .line 136
    monitor-exit p0

    return-void

    .line 138
    :cond_1
    const/4 v2, 0x1

    iput-boolean v2, p0, Lrx/internal/producers/ProducerObserverArbiter;->emitting:Z

    .line 139
    monitor-exit p0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_3

    .line 140
    iget-object v2, p0, Lrx/internal/producers/ProducerObserverArbiter;->currentProducer:Lrx/Producer;

    .line 141
    .local v2, "p":Lrx/Producer;
    const/4 v3, 0x0

    .line 143
    .local v3, "skipFinal":Z
    const/4 v4, 0x0

    :try_start_1
    iget-wide v5, p0, Lrx/internal/producers/ProducerObserverArbiter;->requested:J

    .line 144
    .local v5, "r":J
    add-long v7, v5, p1

    .line 145
    .local v7, "u":J
    cmp-long v0, v7, v0

    if-gez v0, :cond_2

    .line 146
    const-wide v7, 0x7fffffffffffffffL

    .line 148
    :cond_2
    iput-wide v7, p0, Lrx/internal/producers/ProducerObserverArbiter;->requested:J

    .line 150
    invoke-virtual {p0}, Lrx/internal/producers/ProducerObserverArbiter;->emitLoop()V
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_1

    .line 151
    const/4 v0, 0x1

    .line 153
    .end local v3    # "skipFinal":Z
    .end local v5    # "r":J
    .end local v7    # "u":J
    .local v0, "skipFinal":Z
    if-nez v0, :cond_3

    .line 154
    monitor-enter p0

    .line 155
    :try_start_2
    iput-boolean v4, p0, Lrx/internal/producers/ProducerObserverArbiter;->emitting:Z

    .line 156
    monitor-exit p0

    goto :goto_0

    :catchall_0
    move-exception v1

    monitor-exit p0
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_0

    throw v1

    .line 159
    :cond_3
    :goto_0
    if-eqz v2, :cond_4

    .line 160
    invoke-interface {v2, p1, p2}, Lrx/Producer;->request(J)V

    .line 162
    :cond_4
    return-void

    .line 153
    .end local v0    # "skipFinal":Z
    .restart local v3    # "skipFinal":Z
    :catchall_1
    move-exception v0

    if-nez v3, :cond_5

    .line 154
    monitor-enter p0

    .line 155
    :try_start_3
    iput-boolean v4, p0, Lrx/internal/producers/ProducerObserverArbiter;->emitting:Z

    .line 156
    monitor-exit p0

    goto :goto_1

    :catchall_2
    move-exception v0

    monitor-exit p0
    :try_end_3
    .catchall {:try_start_3 .. :try_end_3} :catchall_2

    throw v0

    :cond_5
    :goto_1
    throw v0

    .line 139
    .end local v2    # "p":Lrx/Producer;
    .end local v3    # "skipFinal":Z
    :catchall_3
    move-exception v0

    :try_start_4
    monitor-exit p0
    :try_end_4
    .catchall {:try_start_4 .. :try_end_4} :catchall_3

    throw v0

    .line 128
    :cond_6
    new-instance v0, Ljava/lang/IllegalArgumentException;

    const-string v1, "n >= 0 required"

    invoke-direct {v0, v1}, Ljava/lang/IllegalArgumentException;-><init>(Ljava/lang/String;)V

    throw v0
.end method

.method public setProducer(Lrx/Producer;)V
    .locals 5
    .param p1, "p"    # Lrx/Producer;

    .line 165
    .local p0, "this":Lrx/internal/producers/ProducerObserverArbiter;, "Lrx/internal/producers/ProducerObserverArbiter<TT;>;"
    monitor-enter p0

    .line 166
    :try_start_0
    iget-boolean v0, p0, Lrx/internal/producers/ProducerObserverArbiter;->emitting:Z

    if-eqz v0, :cond_1

    .line 167
    if-eqz p1, :cond_0

    move-object v0, p1

    goto :goto_0

    :cond_0
    sget-object v0, Lrx/internal/producers/ProducerObserverArbiter;->NULL_PRODUCER:Lrx/Producer;

    :goto_0
    iput-object v0, p0, Lrx/internal/producers/ProducerObserverArbiter;->missedProducer:Lrx/Producer;

    .line 168
    monitor-exit p0

    return-void

    .line 170
    :cond_1
    const/4 v0, 0x1

    iput-boolean v0, p0, Lrx/internal/producers/ProducerObserverArbiter;->emitting:Z

    .line 171
    monitor-exit p0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_3

    .line 172
    const/4 v0, 0x0

    .line 173
    .local v0, "skipFinal":Z
    iput-object p1, p0, Lrx/internal/producers/ProducerObserverArbiter;->currentProducer:Lrx/Producer;

    .line 174
    iget-wide v1, p0, Lrx/internal/producers/ProducerObserverArbiter;->requested:J

    .line 176
    .local v1, "r":J
    const/4 v3, 0x0

    :try_start_1
    invoke-virtual {p0}, Lrx/internal/producers/ProducerObserverArbiter;->emitLoop()V
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_1

    .line 177
    const/4 v0, 0x1

    .line 179
    if-nez v0, :cond_2

    .line 180
    monitor-enter p0

    .line 181
    :try_start_2
    iput-boolean v3, p0, Lrx/internal/producers/ProducerObserverArbiter;->emitting:Z

    .line 182
    monitor-exit p0

    goto :goto_1

    :catchall_0
    move-exception v3

    monitor-exit p0
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_0

    throw v3

    .line 185
    :cond_2
    :goto_1
    if-eqz p1, :cond_3

    const-wide/16 v3, 0x0

    cmp-long v3, v1, v3

    if-eqz v3, :cond_3

    .line 186
    invoke-interface {p1, v1, v2}, Lrx/Producer;->request(J)V

    .line 188
    :cond_3
    return-void

    .line 179
    :catchall_1
    move-exception v4

    if-nez v0, :cond_4

    .line 180
    monitor-enter p0

    .line 181
    :try_start_3
    iput-boolean v3, p0, Lrx/internal/producers/ProducerObserverArbiter;->emitting:Z

    .line 182
    monitor-exit p0

    goto :goto_2

    :catchall_2
    move-exception v3

    monitor-exit p0
    :try_end_3
    .catchall {:try_start_3 .. :try_end_3} :catchall_2

    throw v3

    :cond_4
    :goto_2
    throw v4

    .line 171
    .end local v0    # "skipFinal":Z
    .end local v1    # "r":J
    :catchall_3
    move-exception v0

    :try_start_4
    monitor-exit p0
    :try_end_4
    .catchall {:try_start_4 .. :try_end_4} :catchall_3

    throw v0
.end method
