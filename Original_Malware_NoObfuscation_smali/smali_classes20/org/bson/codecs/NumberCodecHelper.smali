.class final Lorg/bson/codecs/NumberCodecHelper;
.super Ljava/lang/Object;
.source "NumberCodecHelper.java"


# direct methods
.method private constructor <init>()V
    .locals 0

    .line 132
    invoke-direct {p0}, Ljava/lang/Object;-><init>()V

    .line 133
    return-void
.end method

.method static decodeDouble(Lorg/bson/BsonReader;)D
    .locals 7
    .param p0, "reader"    # Lorg/bson/BsonReader;

    .line 96
    invoke-interface {p0}, Lorg/bson/BsonReader;->getCurrentBsonType()Lorg/bson/BsonType;

    move-result-object v0

    .line 97
    .local v0, "bsonType":Lorg/bson/BsonType;
    sget-object v1, Lorg/bson/codecs/NumberCodecHelper$1;->$SwitchMap$org$bson$BsonType:[I

    invoke-virtual {v0}, Lorg/bson/BsonType;->ordinal()I

    move-result v2

    aget v1, v1, v2

    packed-switch v1, :pswitch_data_0

    .line 123
    new-instance v1, Lorg/bson/BsonInvalidOperationException;

    const/4 v2, 0x1

    new-array v2, v2, [Ljava/lang/Object;

    const/4 v3, 0x0

    aput-object v0, v2, v3

    const-string v3, "Invalid numeric type, found: %s"

    invoke-static {v3, v2}, Ljava/lang/String;->format(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;

    move-result-object v2

    invoke-direct {v1, v2}, Lorg/bson/BsonInvalidOperationException;-><init>(Ljava/lang/String;)V

    throw v1

    .line 112
    :pswitch_0
    invoke-interface {p0}, Lorg/bson/BsonReader;->readDecimal128()Lorg/bson/types/Decimal128;

    move-result-object v1

    .line 114
    .local v1, "decimal128":Lorg/bson/types/Decimal128;
    :try_start_0
    invoke-virtual {v1}, Lorg/bson/types/Decimal128;->doubleValue()D

    move-result-wide v2

    .line 115
    .local v2, "doubleValue":D
    new-instance v4, Lorg/bson/types/Decimal128;

    new-instance v5, Ljava/math/BigDecimal;

    invoke-direct {v5, v2, v3}, Ljava/math/BigDecimal;-><init>(D)V

    invoke-direct {v4, v5}, Lorg/bson/types/Decimal128;-><init>(Ljava/math/BigDecimal;)V

    invoke-virtual {v1, v4}, Lorg/bson/types/Decimal128;->equals(Ljava/lang/Object;)Z

    move-result v4

    if-eqz v4, :cond_0

    .line 120
    goto :goto_0

    .line 116
    :cond_0
    const-class v4, Ljava/lang/Double;

    invoke-static {v4, v1}, Lorg/bson/codecs/NumberCodecHelper;->invalidConversion(Ljava/lang/Class;Ljava/lang/Number;)Lorg/bson/BsonInvalidOperationException;

    move-result-object v4

    .end local v0    # "bsonType":Lorg/bson/BsonType;
    .end local v1    # "decimal128":Lorg/bson/types/Decimal128;
    .end local p0    # "reader":Lorg/bson/BsonReader;
    throw v4
    :try_end_0
    .catch Ljava/lang/NumberFormatException; {:try_start_0 .. :try_end_0} :catch_0

    .line 118
    .end local v2    # "doubleValue":D
    .restart local v0    # "bsonType":Lorg/bson/BsonType;
    .restart local v1    # "decimal128":Lorg/bson/types/Decimal128;
    .restart local p0    # "reader":Lorg/bson/BsonReader;
    :catch_0
    move-exception v2

    .line 119
    .local v2, "e":Ljava/lang/NumberFormatException;
    const-class v3, Ljava/lang/Double;

    invoke-static {v3, v1}, Lorg/bson/codecs/NumberCodecHelper;->invalidConversion(Ljava/lang/Class;Ljava/lang/Number;)Lorg/bson/BsonInvalidOperationException;

    move-result-object v3

    throw v3

    .line 109
    .end local v1    # "decimal128":Lorg/bson/types/Decimal128;
    .end local v2    # "e":Ljava/lang/NumberFormatException;
    :pswitch_1
    invoke-interface {p0}, Lorg/bson/BsonReader;->readDouble()D

    move-result-wide v2

    .line 110
    .local v2, "doubleValue":D
    goto :goto_0

    .line 102
    .end local v2    # "doubleValue":D
    :pswitch_2
    invoke-interface {p0}, Lorg/bson/BsonReader;->readInt64()J

    move-result-wide v1

    .line 103
    .local v1, "longValue":J
    long-to-double v3, v1

    .line 104
    .local v3, "doubleValue":D
    double-to-long v5, v3

    cmp-long v5, v1, v5

    if-nez v5, :cond_1

    move-wide v2, v3

    goto :goto_0

    .line 105
    :cond_1
    const-class v5, Ljava/lang/Double;

    invoke-static {v1, v2}, Ljava/lang/Long;->valueOf(J)Ljava/lang/Long;

    move-result-object v6

    invoke-static {v5, v6}, Lorg/bson/codecs/NumberCodecHelper;->invalidConversion(Ljava/lang/Class;Ljava/lang/Number;)Lorg/bson/BsonInvalidOperationException;

    move-result-object v5

    throw v5

    .line 99
    .end local v1    # "longValue":J
    .end local v3    # "doubleValue":D
    :pswitch_3
    invoke-interface {p0}, Lorg/bson/BsonReader;->readInt32()I

    move-result v1

    int-to-double v2, v1

    .line 100
    .restart local v2    # "doubleValue":D
    nop

    .line 125
    :goto_0
    return-wide v2

    :pswitch_data_0
    .packed-switch 0x1
        :pswitch_3
        :pswitch_2
        :pswitch_1
        :pswitch_0
    .end packed-switch
.end method

.method static decodeInt(Lorg/bson/BsonReader;)I
    .locals 6
    .param p0, "reader"    # Lorg/bson/BsonReader;

    .line 32
    invoke-interface {p0}, Lorg/bson/BsonReader;->getCurrentBsonType()Lorg/bson/BsonType;

    move-result-object v0

    .line 33
    .local v0, "bsonType":Lorg/bson/BsonType;
    sget-object v1, Lorg/bson/codecs/NumberCodecHelper$1;->$SwitchMap$org$bson$BsonType:[I

    invoke-virtual {v0}, Lorg/bson/BsonType;->ordinal()I

    move-result v2

    aget v1, v1, v2

    packed-switch v1, :pswitch_data_0

    .line 59
    new-instance v1, Lorg/bson/BsonInvalidOperationException;

    const/4 v2, 0x1

    new-array v2, v2, [Ljava/lang/Object;

    const/4 v3, 0x0

    aput-object v0, v2, v3

    const-string v3, "Invalid numeric type, found: %s"

    invoke-static {v3, v2}, Ljava/lang/String;->format(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;

    move-result-object v2

    invoke-direct {v1, v2}, Lorg/bson/BsonInvalidOperationException;-><init>(Ljava/lang/String;)V

    throw v1

    .line 52
    :pswitch_0
    invoke-interface {p0}, Lorg/bson/BsonReader;->readDecimal128()Lorg/bson/types/Decimal128;

    move-result-object v1

    .line 53
    .local v1, "decimal128":Lorg/bson/types/Decimal128;
    invoke-virtual {v1}, Lorg/bson/types/Decimal128;->intValue()I

    move-result v2

    .line 54
    .local v2, "intValue":I
    new-instance v3, Lorg/bson/types/Decimal128;

    int-to-long v4, v2

    invoke-direct {v3, v4, v5}, Lorg/bson/types/Decimal128;-><init>(J)V

    invoke-virtual {v1, v3}, Lorg/bson/types/Decimal128;->equals(Ljava/lang/Object;)Z

    move-result v3

    if-eqz v3, :cond_0

    goto :goto_0

    .line 55
    :cond_0
    const-class v3, Ljava/lang/Integer;

    invoke-static {v3, v1}, Lorg/bson/codecs/NumberCodecHelper;->invalidConversion(Ljava/lang/Class;Ljava/lang/Number;)Lorg/bson/BsonInvalidOperationException;

    move-result-object v3

    throw v3

    .line 45
    .end local v1    # "decimal128":Lorg/bson/types/Decimal128;
    .end local v2    # "intValue":I
    :pswitch_1
    invoke-interface {p0}, Lorg/bson/BsonReader;->readDouble()D

    move-result-wide v1

    .line 46
    .local v1, "doubleValue":D
    double-to-int v3, v1

    .line 47
    .local v3, "intValue":I
    int-to-double v4, v3

    cmpl-double v4, v1, v4

    if-nez v4, :cond_1

    move v2, v3

    goto :goto_0

    .line 48
    :cond_1
    const-class v4, Ljava/lang/Integer;

    invoke-static {v1, v2}, Ljava/lang/Double;->valueOf(D)Ljava/lang/Double;

    move-result-object v5

    invoke-static {v4, v5}, Lorg/bson/codecs/NumberCodecHelper;->invalidConversion(Ljava/lang/Class;Ljava/lang/Number;)Lorg/bson/BsonInvalidOperationException;

    move-result-object v4

    throw v4

    .line 38
    .end local v1    # "doubleValue":D
    .end local v3    # "intValue":I
    :pswitch_2
    invoke-interface {p0}, Lorg/bson/BsonReader;->readInt64()J

    move-result-wide v1

    .line 39
    .local v1, "longValue":J
    long-to-int v3, v1

    .line 40
    .restart local v3    # "intValue":I
    int-to-long v4, v3

    cmp-long v4, v1, v4

    if-nez v4, :cond_2

    move v2, v3

    goto :goto_0

    .line 41
    :cond_2
    const-class v4, Ljava/lang/Integer;

    invoke-static {v1, v2}, Ljava/lang/Long;->valueOf(J)Ljava/lang/Long;

    move-result-object v5

    invoke-static {v4, v5}, Lorg/bson/codecs/NumberCodecHelper;->invalidConversion(Ljava/lang/Class;Ljava/lang/Number;)Lorg/bson/BsonInvalidOperationException;

    move-result-object v4

    throw v4

    .line 35
    .end local v1    # "longValue":J
    .end local v3    # "intValue":I
    :pswitch_3
    invoke-interface {p0}, Lorg/bson/BsonReader;->readInt32()I

    move-result v2

    .line 36
    .restart local v2    # "intValue":I
    nop

    .line 61
    :goto_0
    return v2

    nop

    :pswitch_data_0
    .packed-switch 0x1
        :pswitch_3
        :pswitch_2
        :pswitch_1
        :pswitch_0
    .end packed-switch
.end method

.method static decodeLong(Lorg/bson/BsonReader;)J
    .locals 7
    .param p0, "reader"    # Lorg/bson/BsonReader;

    .line 66
    invoke-interface {p0}, Lorg/bson/BsonReader;->getCurrentBsonType()Lorg/bson/BsonType;

    move-result-object v0

    .line 67
    .local v0, "bsonType":Lorg/bson/BsonType;
    sget-object v1, Lorg/bson/codecs/NumberCodecHelper$1;->$SwitchMap$org$bson$BsonType:[I

    invoke-virtual {v0}, Lorg/bson/BsonType;->ordinal()I

    move-result v2

    aget v1, v1, v2

    packed-switch v1, :pswitch_data_0

    .line 89
    new-instance v1, Lorg/bson/BsonInvalidOperationException;

    const/4 v2, 0x1

    new-array v2, v2, [Ljava/lang/Object;

    const/4 v3, 0x0

    aput-object v0, v2, v3

    const-string v3, "Invalid numeric type, found: %s"

    invoke-static {v3, v2}, Ljava/lang/String;->format(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;

    move-result-object v2

    invoke-direct {v1, v2}, Lorg/bson/BsonInvalidOperationException;-><init>(Ljava/lang/String;)V

    throw v1

    .line 82
    :pswitch_0
    invoke-interface {p0}, Lorg/bson/BsonReader;->readDecimal128()Lorg/bson/types/Decimal128;

    move-result-object v1

    .line 83
    .local v1, "decimal128":Lorg/bson/types/Decimal128;
    invoke-virtual {v1}, Lorg/bson/types/Decimal128;->longValue()J

    move-result-wide v2

    .line 84
    .local v2, "longValue":J
    new-instance v4, Lorg/bson/types/Decimal128;

    invoke-direct {v4, v2, v3}, Lorg/bson/types/Decimal128;-><init>(J)V

    invoke-virtual {v1, v4}, Lorg/bson/types/Decimal128;->equals(Ljava/lang/Object;)Z

    move-result v4

    if-eqz v4, :cond_0

    goto :goto_0

    .line 85
    :cond_0
    const-class v4, Ljava/lang/Long;

    invoke-static {v4, v1}, Lorg/bson/codecs/NumberCodecHelper;->invalidConversion(Ljava/lang/Class;Ljava/lang/Number;)Lorg/bson/BsonInvalidOperationException;

    move-result-object v4

    throw v4

    .line 75
    .end local v1    # "decimal128":Lorg/bson/types/Decimal128;
    .end local v2    # "longValue":J
    :pswitch_1
    invoke-interface {p0}, Lorg/bson/BsonReader;->readDouble()D

    move-result-wide v1

    .line 76
    .local v1, "doubleValue":D
    double-to-long v3, v1

    .line 77
    .local v3, "longValue":J
    long-to-double v5, v3

    cmpl-double v5, v1, v5

    if-nez v5, :cond_1

    move-wide v2, v3

    goto :goto_0

    .line 78
    :cond_1
    const-class v5, Ljava/lang/Long;

    invoke-static {v1, v2}, Ljava/lang/Double;->valueOf(D)Ljava/lang/Double;

    move-result-object v6

    invoke-static {v5, v6}, Lorg/bson/codecs/NumberCodecHelper;->invalidConversion(Ljava/lang/Class;Ljava/lang/Number;)Lorg/bson/BsonInvalidOperationException;

    move-result-object v5

    throw v5

    .line 72
    .end local v1    # "doubleValue":D
    .end local v3    # "longValue":J
    :pswitch_2
    invoke-interface {p0}, Lorg/bson/BsonReader;->readInt64()J

    move-result-wide v2

    .line 73
    .restart local v2    # "longValue":J
    goto :goto_0

    .line 69
    .end local v2    # "longValue":J
    :pswitch_3
    invoke-interface {p0}, Lorg/bson/BsonReader;->readInt32()I

    move-result v1

    int-to-long v2, v1

    .line 70
    .restart local v2    # "longValue":J
    nop

    .line 91
    :goto_0
    return-wide v2

    nop

    :pswitch_data_0
    .packed-switch 0x1
        :pswitch_3
        :pswitch_2
        :pswitch_1
        :pswitch_0
    .end packed-switch
.end method

.method private static invalidConversion(Ljava/lang/Class;Ljava/lang/Number;)Lorg/bson/BsonInvalidOperationException;
    .locals 3
    .param p1, "value"    # Ljava/lang/Number;
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "<T:",
            "Ljava/lang/Number;",
            ">(",
            "Ljava/lang/Class<",
            "TT;>;",
            "Ljava/lang/Number;",
            ")",
            "Lorg/bson/BsonInvalidOperationException;"
        }
    .end annotation

    .line 129
    .local p0, "clazz":Ljava/lang/Class;, "Ljava/lang/Class<TT;>;"
    new-instance v0, Lorg/bson/BsonInvalidOperationException;

    const/4 v1, 0x2

    new-array v1, v1, [Ljava/lang/Object;

    const/4 v2, 0x0

    aput-object p1, v1, v2

    const/4 v2, 0x1

    aput-object p0, v1, v2

    const-string v2, "Could not convert `%s` to a %s without losing precision"

    invoke-static {v2, v1}, Ljava/lang/String;->format(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;

    move-result-object v1

    invoke-direct {v0, v1}, Lorg/bson/BsonInvalidOperationException;-><init>(Ljava/lang/String;)V

    return-object v0
.end method
