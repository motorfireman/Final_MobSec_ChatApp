.class public final Lomrecorder/PullTransport$Noise;
.super Lomrecorder/PullTransport$AbstractPullTransport;
.source "PullTransport.java"


# annotations
.annotation system Ldalvik/annotation/EnclosingClass;
    value = Lomrecorder/PullTransport;
.end annotation

.annotation system Ldalvik/annotation/InnerClass;
    accessFlags = 0x19
    name = "Noise"
.end annotation


# instance fields
.field private firstSilenceMoment:J

.field private noiseRecordedAfterFirstSilenceThreshold:I

.field private final silenceListener:Lomrecorder/Recorder$OnSilenceListener;

.field private final silenceTimeThreshold:J

.field private final writeAction:Lomrecorder/WriteAction;


# direct methods
.method public constructor <init>(Lomrecorder/PullableSource;)V
    .locals 7
    .param p1, "pullableSource"    # Lomrecorder/PullableSource;

    .line 182
    new-instance v3, Lomrecorder/WriteAction$Default;

    invoke-direct {v3}, Lomrecorder/WriteAction$Default;-><init>()V

    const/4 v2, 0x0

    const/4 v4, 0x0

    const-wide/16 v5, 0xc8

    move-object v0, p0

    move-object v1, p1

    invoke-direct/range {v0 .. v6}, Lomrecorder/PullTransport$Noise;-><init>(Lomrecorder/PullableSource;Lomrecorder/PullTransport$OnAudioChunkPulledListener;Lomrecorder/WriteAction;Lomrecorder/Recorder$OnSilenceListener;J)V

    .line 183
    return-void
.end method

.method public constructor <init>(Lomrecorder/PullableSource;Lomrecorder/PullTransport$OnAudioChunkPulledListener;Lomrecorder/Recorder$OnSilenceListener;J)V
    .locals 7
    .param p1, "pullableSource"    # Lomrecorder/PullableSource;
    .param p2, "onAudioChunkPulledListener"    # Lomrecorder/PullTransport$OnAudioChunkPulledListener;
    .param p3, "silenceListener"    # Lomrecorder/Recorder$OnSilenceListener;
    .param p4, "silenceTimeThreshold"    # J

    .line 153
    new-instance v3, Lomrecorder/WriteAction$Default;

    invoke-direct {v3}, Lomrecorder/WriteAction$Default;-><init>()V

    move-object v0, p0

    move-object v1, p1

    move-object v2, p2

    move-object v4, p3

    move-wide v5, p4

    invoke-direct/range {v0 .. v6}, Lomrecorder/PullTransport$Noise;-><init>(Lomrecorder/PullableSource;Lomrecorder/PullTransport$OnAudioChunkPulledListener;Lomrecorder/WriteAction;Lomrecorder/Recorder$OnSilenceListener;J)V

    .line 155
    return-void
.end method

.method public constructor <init>(Lomrecorder/PullableSource;Lomrecorder/PullTransport$OnAudioChunkPulledListener;Lomrecorder/WriteAction;Lomrecorder/Recorder$OnSilenceListener;J)V
    .locals 2
    .param p1, "pullableSource"    # Lomrecorder/PullableSource;
    .param p2, "onAudioChunkPulledListener"    # Lomrecorder/PullTransport$OnAudioChunkPulledListener;
    .param p3, "writeAction"    # Lomrecorder/WriteAction;
    .param p4, "silenceListener"    # Lomrecorder/Recorder$OnSilenceListener;
    .param p5, "silenceTimeThreshold"    # J

    .line 160
    invoke-direct {p0, p1, p2}, Lomrecorder/PullTransport$AbstractPullTransport;-><init>(Lomrecorder/PullableSource;Lomrecorder/PullTransport$OnAudioChunkPulledListener;)V

    .line 147
    const-wide/16 v0, 0x0

    iput-wide v0, p0, Lomrecorder/PullTransport$Noise;->firstSilenceMoment:J

    .line 148
    const/4 v0, 0x0

    iput v0, p0, Lomrecorder/PullTransport$Noise;->noiseRecordedAfterFirstSilenceThreshold:I

    .line 161
    iput-object p3, p0, Lomrecorder/PullTransport$Noise;->writeAction:Lomrecorder/WriteAction;

    .line 162
    iput-object p4, p0, Lomrecorder/PullTransport$Noise;->silenceListener:Lomrecorder/Recorder$OnSilenceListener;

    .line 163
    iput-wide p5, p0, Lomrecorder/PullTransport$Noise;->silenceTimeThreshold:J

    .line 164
    return-void
.end method

.method public constructor <init>(Lomrecorder/PullableSource;Lomrecorder/Recorder$OnSilenceListener;)V
    .locals 7
    .param p1, "pullableSource"    # Lomrecorder/PullableSource;
    .param p2, "silenceListener"    # Lomrecorder/Recorder$OnSilenceListener;

    .line 178
    new-instance v3, Lomrecorder/WriteAction$Default;

    invoke-direct {v3}, Lomrecorder/WriteAction$Default;-><init>()V

    const/4 v2, 0x0

    const-wide/16 v5, 0xc8

    move-object v0, p0

    move-object v1, p1

    move-object v4, p2

    invoke-direct/range {v0 .. v6}, Lomrecorder/PullTransport$Noise;-><init>(Lomrecorder/PullableSource;Lomrecorder/PullTransport$OnAudioChunkPulledListener;Lomrecorder/WriteAction;Lomrecorder/Recorder$OnSilenceListener;J)V

    .line 179
    return-void
.end method

.method public constructor <init>(Lomrecorder/PullableSource;Lomrecorder/Recorder$OnSilenceListener;J)V
    .locals 7
    .param p1, "pullableSource"    # Lomrecorder/PullableSource;
    .param p2, "silenceListener"    # Lomrecorder/Recorder$OnSilenceListener;
    .param p3, "silenceTimeThreshold"    # J

    .line 173
    new-instance v3, Lomrecorder/WriteAction$Default;

    invoke-direct {v3}, Lomrecorder/WriteAction$Default;-><init>()V

    const/4 v2, 0x0

    move-object v0, p0

    move-object v1, p1

    move-object v4, p2

    move-wide v5, p3

    invoke-direct/range {v0 .. v6}, Lomrecorder/PullTransport$Noise;-><init>(Lomrecorder/PullableSource;Lomrecorder/PullTransport$OnAudioChunkPulledListener;Lomrecorder/WriteAction;Lomrecorder/Recorder$OnSilenceListener;J)V

    .line 175
    return-void
.end method

.method public constructor <init>(Lomrecorder/PullableSource;Lomrecorder/WriteAction;Lomrecorder/Recorder$OnSilenceListener;J)V
    .locals 7
    .param p1, "pullableSource"    # Lomrecorder/PullableSource;
    .param p2, "writeAction"    # Lomrecorder/WriteAction;
    .param p3, "silenceListener"    # Lomrecorder/Recorder$OnSilenceListener;
    .param p4, "silenceTimeThreshold"    # J

    .line 168
    const/4 v2, 0x0

    move-object v0, p0

    move-object v1, p1

    move-object v3, p2

    move-object v4, p3

    move-wide v5, p4

    invoke-direct/range {v0 .. v6}, Lomrecorder/PullTransport$Noise;-><init>(Lomrecorder/PullableSource;Lomrecorder/PullTransport$OnAudioChunkPulledListener;Lomrecorder/WriteAction;Lomrecorder/Recorder$OnSilenceListener;J)V

    .line 169
    return-void
.end method


# virtual methods
.method startPoolingAndWriting(Landroid/media/AudioRecord;ILjava/io/OutputStream;)V
    .locals 11
    .param p1, "audioRecord"    # Landroid/media/AudioRecord;
    .param p2, "pullSizeInBytes"    # I
    .param p3, "outputStream"    # Ljava/io/OutputStream;
    .annotation system Ldalvik/annotation/Throws;
        value = {
            Ljava/io/IOException;
        }
    .end annotation

    .line 187
    new-instance v0, Lomrecorder/AudioChunk$Shorts;

    new-array v1, p2, [S

    invoke-direct {v0, v1}, Lomrecorder/AudioChunk$Shorts;-><init>([S)V

    .line 188
    .local v0, "audioChunk":Lomrecorder/AudioChunk$Shorts;
    :goto_0
    iget-object v1, p0, Lomrecorder/PullTransport$Noise;->pullableSource:Lomrecorder/PullableSource;

    invoke-interface {v1}, Lomrecorder/PullableSource;->isEnableToBePulled()Z

    move-result v1

    if-eqz v1, :cond_5

    .line 189
    invoke-virtual {v0}, Lomrecorder/AudioChunk$Shorts;->toShorts()[S

    move-result-object v1

    .line 190
    .local v1, "shorts":[S
    array-length v2, v1

    const/4 v3, 0x0

    invoke-virtual {p1, v1, v3, v2}, Landroid/media/AudioRecord;->read([SII)I

    move-result v2

    invoke-virtual {v0, v2}, Lomrecorder/AudioChunk$Shorts;->readCount(I)V

    .line 191
    const/4 v2, -0x3

    invoke-virtual {v0}, Lomrecorder/AudioChunk$Shorts;->readCount()I

    move-result v4

    if-eq v2, v4, :cond_4

    const/4 v2, -0x2

    .line 192
    invoke-virtual {v0}, Lomrecorder/AudioChunk$Shorts;->readCount()I

    move-result v4

    if-eq v2, v4, :cond_4

    .line 193
    iget-object v2, p0, Lomrecorder/PullTransport$Noise;->onAudioChunkPulledListener:Lomrecorder/PullTransport$OnAudioChunkPulledListener;

    if-eqz v2, :cond_0

    .line 194
    invoke-virtual {p0, v0}, Lomrecorder/PullTransport$Noise;->postPullEvent(Lomrecorder/AudioChunk;)V

    .line 196
    :cond_0
    invoke-virtual {v0}, Lomrecorder/AudioChunk$Shorts;->peakIndex()I

    move-result v2

    const/4 v4, -0x1

    const-wide/16 v5, 0x0

    if-le v2, v4, :cond_1

    .line 197
    iget-object v2, p0, Lomrecorder/PullTransport$Noise;->writeAction:Lomrecorder/WriteAction;

    invoke-interface {v2, v0, p3}, Lomrecorder/WriteAction;->execute(Lomrecorder/AudioChunk;Ljava/io/OutputStream;)V

    .line 198
    iput-wide v5, p0, Lomrecorder/PullTransport$Noise;->firstSilenceMoment:J

    .line 199
    iget v2, p0, Lomrecorder/PullTransport$Noise;->noiseRecordedAfterFirstSilenceThreshold:I

    add-int/lit8 v2, v2, 0x1

    iput v2, p0, Lomrecorder/PullTransport$Noise;->noiseRecordedAfterFirstSilenceThreshold:I

    goto :goto_1

    .line 201
    :cond_1
    iget-wide v7, p0, Lomrecorder/PullTransport$Noise;->firstSilenceMoment:J

    cmp-long v2, v7, v5

    if-nez v2, :cond_2

    .line 202
    invoke-static {}, Ljava/lang/System;->currentTimeMillis()J

    move-result-wide v7

    iput-wide v7, p0, Lomrecorder/PullTransport$Noise;->firstSilenceMoment:J

    .line 204
    :cond_2
    invoke-static {}, Ljava/lang/System;->currentTimeMillis()J

    move-result-wide v7

    iget-wide v9, p0, Lomrecorder/PullTransport$Noise;->firstSilenceMoment:J

    sub-long/2addr v7, v9

    .line 205
    .local v7, "silenceTime":J
    cmp-long v2, v9, v5

    if-eqz v2, :cond_3

    iget-wide v4, p0, Lomrecorder/PullTransport$Noise;->silenceTimeThreshold:J

    cmp-long v2, v7, v4

    if-lez v2, :cond_3

    .line 206
    const-wide/16 v4, 0x3e8

    cmp-long v2, v7, v4

    if-lez v2, :cond_4

    .line 207
    iget v2, p0, Lomrecorder/PullTransport$Noise;->noiseRecordedAfterFirstSilenceThreshold:I

    const/4 v4, 0x3

    if-lt v2, v4, :cond_4

    .line 208
    iput v3, p0, Lomrecorder/PullTransport$Noise;->noiseRecordedAfterFirstSilenceThreshold:I

    .line 209
    iget-object v2, p0, Lomrecorder/PullTransport$Noise;->silenceListener:Lomrecorder/Recorder$OnSilenceListener;

    if-eqz v2, :cond_4

    .line 210
    invoke-virtual {p0, v2, v7, v8}, Lomrecorder/PullTransport$Noise;->postSilenceEvent(Lomrecorder/Recorder$OnSilenceListener;J)V

    goto :goto_1

    .line 215
    :cond_3
    iget-object v2, p0, Lomrecorder/PullTransport$Noise;->writeAction:Lomrecorder/WriteAction;

    invoke-interface {v2, v0, p3}, Lomrecorder/WriteAction;->execute(Lomrecorder/AudioChunk;Ljava/io/OutputStream;)V

    .line 219
    .end local v1    # "shorts":[S
    .end local v7    # "silenceTime":J
    :cond_4
    :goto_1
    goto :goto_0

    .line 220
    :cond_5
    return-void
.end method
