.class public final Lomrecorder/PullTransport$Default;
.super Lomrecorder/PullTransport$AbstractPullTransport;
.source "PullTransport.java"


# annotations
.annotation system Ldalvik/annotation/EnclosingClass;
    value = Lomrecorder/PullTransport;
.end annotation

.annotation system Ldalvik/annotation/InnerClass;
    accessFlags = 0x19
    name = "Default"
.end annotation


# instance fields
.field private final writeAction:Lomrecorder/WriteAction;


# direct methods
.method public constructor <init>(Lomrecorder/PullableSource;)V
    .locals 2
    .param p1, "audioRecordSource"    # Lomrecorder/PullableSource;

    .line 124
    new-instance v0, Lomrecorder/WriteAction$Default;

    invoke-direct {v0}, Lomrecorder/WriteAction$Default;-><init>()V

    const/4 v1, 0x0

    invoke-direct {p0, p1, v1, v0}, Lomrecorder/PullTransport$Default;-><init>(Lomrecorder/PullableSource;Lomrecorder/PullTransport$OnAudioChunkPulledListener;Lomrecorder/WriteAction;)V

    .line 125
    return-void
.end method

.method public constructor <init>(Lomrecorder/PullableSource;Lomrecorder/PullTransport$OnAudioChunkPulledListener;)V
    .locals 1
    .param p1, "pullableSource"    # Lomrecorder/PullableSource;
    .param p2, "onAudioChunkPulledListener"    # Lomrecorder/PullTransport$OnAudioChunkPulledListener;

    .line 120
    new-instance v0, Lomrecorder/WriteAction$Default;

    invoke-direct {v0}, Lomrecorder/WriteAction$Default;-><init>()V

    invoke-direct {p0, p1, p2, v0}, Lomrecorder/PullTransport$Default;-><init>(Lomrecorder/PullableSource;Lomrecorder/PullTransport$OnAudioChunkPulledListener;Lomrecorder/WriteAction;)V

    .line 121
    return-void
.end method

.method public constructor <init>(Lomrecorder/PullableSource;Lomrecorder/PullTransport$OnAudioChunkPulledListener;Lomrecorder/WriteAction;)V
    .locals 0
    .param p1, "pullableSource"    # Lomrecorder/PullableSource;
    .param p2, "onAudioChunkPulledListener"    # Lomrecorder/PullTransport$OnAudioChunkPulledListener;
    .param p3, "writeAction"    # Lomrecorder/WriteAction;

    .line 114
    invoke-direct {p0, p1, p2}, Lomrecorder/PullTransport$AbstractPullTransport;-><init>(Lomrecorder/PullableSource;Lomrecorder/PullTransport$OnAudioChunkPulledListener;)V

    .line 115
    iput-object p3, p0, Lomrecorder/PullTransport$Default;->writeAction:Lomrecorder/WriteAction;

    .line 116
    return-void
.end method

.method public constructor <init>(Lomrecorder/PullableSource;Lomrecorder/WriteAction;)V
    .locals 1
    .param p1, "pullableSource"    # Lomrecorder/PullableSource;
    .param p2, "writeAction"    # Lomrecorder/WriteAction;

    .line 109
    const/4 v0, 0x0

    invoke-direct {p0, p1, v0, p2}, Lomrecorder/PullTransport$Default;-><init>(Lomrecorder/PullableSource;Lomrecorder/PullTransport$OnAudioChunkPulledListener;Lomrecorder/WriteAction;)V

    .line 110
    return-void
.end method


# virtual methods
.method startPoolingAndWriting(Landroid/media/AudioRecord;ILjava/io/OutputStream;)V
    .locals 3
    .param p1, "audioRecord"    # Landroid/media/AudioRecord;
    .param p2, "pullSizeInBytes"    # I
    .param p3, "outputStream"    # Ljava/io/OutputStream;
    .annotation system Ldalvik/annotation/Throws;
        value = {
            Ljava/io/IOException;
        }
    .end annotation

    .line 129
    new-instance v0, Lomrecorder/AudioChunk$Bytes;

    new-array v1, p2, [B

    invoke-direct {v0, v1}, Lomrecorder/AudioChunk$Bytes;-><init>([B)V

    .line 130
    .local v0, "audioChunk":Lomrecorder/AudioChunk;
    :cond_0
    :goto_0
    iget-object v1, p0, Lomrecorder/PullTransport$Default;->pullableSource:Lomrecorder/PullableSource;

    invoke-interface {v1}, Lomrecorder/PullableSource;->isEnableToBePulled()Z

    move-result v1

    if-eqz v1, :cond_2

    .line 131
    invoke-interface {v0}, Lomrecorder/AudioChunk;->toBytes()[B

    move-result-object v1

    const/4 v2, 0x0

    invoke-virtual {p1, v1, v2, p2}, Landroid/media/AudioRecord;->read([BII)I

    move-result v1

    invoke-interface {v0, v1}, Lomrecorder/AudioChunk;->readCount(I)V

    .line 132
    const/4 v1, -0x3

    invoke-interface {v0}, Lomrecorder/AudioChunk;->readCount()I

    move-result v2

    if-eq v1, v2, :cond_0

    const/4 v1, -0x2

    .line 133
    invoke-interface {v0}, Lomrecorder/AudioChunk;->readCount()I

    move-result v2

    if-eq v1, v2, :cond_0

    .line 134
    iget-object v1, p0, Lomrecorder/PullTransport$Default;->onAudioChunkPulledListener:Lomrecorder/PullTransport$OnAudioChunkPulledListener;

    if-eqz v1, :cond_1

    .line 135
    invoke-virtual {p0, v0}, Lomrecorder/PullTransport$Default;->postPullEvent(Lomrecorder/AudioChunk;)V

    .line 137
    :cond_1
    iget-object v1, p0, Lomrecorder/PullTransport$Default;->writeAction:Lomrecorder/WriteAction;

    invoke-interface {v1, v0, p3}, Lomrecorder/WriteAction;->execute(Lomrecorder/AudioChunk;Ljava/io/OutputStream;)V

    goto :goto_0

    .line 140
    :cond_2
    return-void
.end method
