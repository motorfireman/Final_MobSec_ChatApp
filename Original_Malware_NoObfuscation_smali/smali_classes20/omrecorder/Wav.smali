.class final Lomrecorder/Wav;
.super Lomrecorder/AbstractRecorder;
.source "Wav.java"


# direct methods
.method public constructor <init>(Lomrecorder/PullTransport;Ljava/io/File;)V
    .locals 0
    .param p1, "pullTransport"    # Lomrecorder/PullTransport;
    .param p2, "file"    # Ljava/io/File;

    .line 31
    invoke-direct {p0, p1, p2}, Lomrecorder/AbstractRecorder;-><init>(Lomrecorder/PullTransport;Ljava/io/File;)V

    .line 32
    return-void
.end method

.method private randomAccessFile(Ljava/io/File;)Ljava/io/RandomAccessFile;
    .locals 2
    .param p1, "file"    # Ljava/io/File;

    .line 53
    :try_start_0
    new-instance v0, Ljava/io/RandomAccessFile;

    const-string v1, "rw"

    invoke-direct {v0, p1, v1}, Ljava/io/RandomAccessFile;-><init>(Ljava/io/File;Ljava/lang/String;)V
    :try_end_0
    .catch Ljava/io/FileNotFoundException; {:try_start_0 .. :try_end_0} :catch_0

    .line 56
    .local v0, "randomAccessFile":Ljava/io/RandomAccessFile;
    nop

    .line 57
    return-object v0

    .line 54
    .end local v0    # "randomAccessFile":Ljava/io/RandomAccessFile;
    :catch_0
    move-exception v0

    .line 55
    .local v0, "e":Ljava/io/FileNotFoundException;
    new-instance v1, Ljava/lang/RuntimeException;

    invoke-direct {v1, v0}, Ljava/lang/RuntimeException;-><init>(Ljava/lang/Throwable;)V

    throw v1
.end method

.method private writeWavHeader()V
    .locals 5
    .annotation system Ldalvik/annotation/Throws;
        value = {
            Ljava/io/IOException;
        }
    .end annotation

    .line 44
    iget-object v0, p0, Lomrecorder/Wav;->file:Ljava/io/File;

    invoke-direct {p0, v0}, Lomrecorder/Wav;->randomAccessFile(Ljava/io/File;)Ljava/io/RandomAccessFile;

    move-result-object v0

    .line 45
    .local v0, "wavFile":Ljava/io/RandomAccessFile;
    const-wide/16 v1, 0x0

    invoke-virtual {v0, v1, v2}, Ljava/io/RandomAccessFile;->seek(J)V

    .line 46
    new-instance v1, Lomrecorder/WavHeader;

    iget-object v2, p0, Lomrecorder/Wav;->pullTransport:Lomrecorder/PullTransport;

    invoke-interface {v2}, Lomrecorder/PullTransport;->pullableSource()Lomrecorder/PullableSource;

    move-result-object v2

    iget-object v3, p0, Lomrecorder/Wav;->file:Ljava/io/File;

    invoke-virtual {v3}, Ljava/io/File;->length()J

    move-result-wide v3

    invoke-direct {v1, v2, v3, v4}, Lomrecorder/WavHeader;-><init>(Lomrecorder/PullableSource;J)V

    invoke-virtual {v1}, Lomrecorder/WavHeader;->toBytes()[B

    move-result-object v1

    invoke-virtual {v0, v1}, Ljava/io/RandomAccessFile;->write([B)V

    .line 47
    invoke-virtual {v0}, Ljava/io/RandomAccessFile;->close()V

    .line 48
    return-void
.end method


# virtual methods
.method public stopRecording()V
    .locals 3

    .line 36
    :try_start_0
    invoke-super {p0}, Lomrecorder/AbstractRecorder;->stopRecording()V

    .line 37
    invoke-direct {p0}, Lomrecorder/Wav;->writeWavHeader()V
    :try_end_0
    .catch Ljava/io/IOException; {:try_start_0 .. :try_end_0} :catch_0

    .line 40
    nop

    .line 41
    return-void

    .line 38
    :catch_0
    move-exception v0

    .line 39
    .local v0, "e":Ljava/io/IOException;
    new-instance v1, Ljava/lang/RuntimeException;

    const-string v2, "Error in applying wav header"

    invoke-direct {v1, v2, v0}, Ljava/lang/RuntimeException;-><init>(Ljava/lang/String;Ljava/lang/Throwable;)V

    throw v1
.end method
