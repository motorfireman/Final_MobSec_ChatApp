.class public Lcom/luck/picture/lib/immersive/RomUtils;
.super Ljava/lang/Object;
.source "RomUtils.java"


# annotations
.annotation system Ldalvik/annotation/MemberClasses;
    value = {
        Lcom/luck/picture/lib/immersive/RomUtils$AvailableRomType;
    }
.end annotation


# static fields
.field private static final ROM_SAMSUNG:[Ljava/lang/String;

.field private static final UNKNOWN:Ljava/lang/String; = "unknown"

.field private static romType:Ljava/lang/Integer;


# direct methods
.method static constructor <clinit>()V
    .locals 1

    .line 21
    const-string v0, "samsung"

    filled-new-array {v0}, [Ljava/lang/String;

    move-result-object v0

    sput-object v0, Lcom/luck/picture/lib/immersive/RomUtils;->ROM_SAMSUNG:[Ljava/lang/String;

    return-void
.end method

.method public constructor <init>()V
    .locals 0

    .line 19
    invoke-direct {p0}, Ljava/lang/Object;-><init>()V

    return-void
.end method

.method private static getBrand()Ljava/lang/String;
    .locals 2

    .line 175
    :try_start_0
    sget-object v0, Landroid/os/Build;->BRAND:Ljava/lang/String;

    .line 176
    .local v0, "brand":Ljava/lang/String;
    invoke-static {v0}, Landroid/text/TextUtils;->isEmpty(Ljava/lang/CharSequence;)Z

    move-result v1

    if-nez v1, :cond_0

    .line 177
    invoke-virtual {v0}, Ljava/lang/String;->toLowerCase()Ljava/lang/String;

    move-result-object v1
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    return-object v1

    .line 176
    .end local v0    # "brand":Ljava/lang/String;
    :cond_0
    goto :goto_0

    .line 179
    :catchall_0
    move-exception v0

    :goto_0
    nop

    .line 180
    const-string v0, "unknown"

    return-object v0
.end method

.method public static getFlymeVersion()I
    .locals 4

    .line 68
    sget-object v0, Landroid/os/Build;->DISPLAY:Ljava/lang/String;

    .line 69
    .local v0, "displayId":Ljava/lang/String;
    invoke-static {v0}, Landroid/text/TextUtils;->isEmpty(Ljava/lang/CharSequence;)Z

    move-result v1

    const/4 v2, 0x0

    if-nez v1, :cond_0

    const-string v1, "Flyme"

    invoke-virtual {v0, v1}, Ljava/lang/String;->contains(Ljava/lang/CharSequence;)Z

    move-result v3

    if-eqz v3, :cond_0

    .line 70
    const-string v3, ""

    invoke-virtual {v0, v1, v3}, Ljava/lang/String;->replaceAll(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;

    move-result-object v0

    .line 71
    const-string v1, "OS"

    invoke-virtual {v0, v1, v3}, Ljava/lang/String;->replaceAll(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;

    move-result-object v0

    .line 72
    const-string v1, " "

    invoke-virtual {v0, v1, v3}, Ljava/lang/String;->replaceAll(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;

    move-result-object v0

    .line 75
    const/4 v1, 0x1

    invoke-virtual {v0, v2, v1}, Ljava/lang/String;->substring(II)Ljava/lang/String;

    move-result-object v1

    .line 77
    .local v1, "version":Ljava/lang/String;
    invoke-static {v1}, Lcom/luck/picture/lib/immersive/RomUtils;->stringToInt(Ljava/lang/String;)I

    move-result v2

    return v2

    .line 79
    .end local v1    # "version":Ljava/lang/String;
    :cond_0
    return v2
.end method

.method public static getLightStatausBarAvailableRomType()I
    .locals 1

    .line 35
    sget-object v0, Lcom/luck/picture/lib/immersive/RomUtils;->romType:Ljava/lang/Integer;

    if-eqz v0, :cond_0

    .line 36
    invoke-virtual {v0}, Ljava/lang/Integer;->intValue()I

    move-result v0

    return v0

    .line 39
    :cond_0
    invoke-static {}, Lcom/luck/picture/lib/immersive/RomUtils;->isMIUIV6OrAbove()Z

    move-result v0

    if-eqz v0, :cond_1

    .line 40
    const/4 v0, 0x1

    invoke-static {v0}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;

    move-result-object v0

    sput-object v0, Lcom/luck/picture/lib/immersive/RomUtils;->romType:Ljava/lang/Integer;

    .line 41
    invoke-virtual {v0}, Ljava/lang/Integer;->intValue()I

    move-result v0

    return v0

    .line 44
    :cond_1
    invoke-static {}, Lcom/luck/picture/lib/immersive/RomUtils;->isFlymeV4OrAbove()Z

    move-result v0

    if-eqz v0, :cond_2

    .line 45
    const/4 v0, 0x2

    invoke-static {v0}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;

    move-result-object v0

    sput-object v0, Lcom/luck/picture/lib/immersive/RomUtils;->romType:Ljava/lang/Integer;

    .line 46
    invoke-virtual {v0}, Ljava/lang/Integer;->intValue()I

    move-result v0

    return v0

    .line 49
    :cond_2
    invoke-static {}, Lcom/luck/picture/lib/immersive/RomUtils;->isAndroid5OrAbove()Z

    move-result v0

    if-eqz v0, :cond_3

    .line 50
    const/4 v0, 0x3

    invoke-static {v0}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;

    move-result-object v0

    sput-object v0, Lcom/luck/picture/lib/immersive/RomUtils;->romType:Ljava/lang/Integer;

    .line 51
    invoke-virtual {v0}, Ljava/lang/Integer;->intValue()I

    move-result v0

    return v0

    .line 54
    :cond_3
    const/4 v0, 0x4

    invoke-static {v0}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;

    move-result-object v0

    sput-object v0, Lcom/luck/picture/lib/immersive/RomUtils;->romType:Ljava/lang/Integer;

    .line 55
    invoke-virtual {v0}, Ljava/lang/Integer;->intValue()I

    move-result v0

    return v0
.end method

.method public static getMIUIVersionCode()I
    .locals 3

    .line 101
    invoke-static {}, Lcom/luck/picture/lib/immersive/RomUtils;->getSystemProperty()Ljava/lang/String;

    move-result-object v0

    .line 102
    .local v0, "miuiVersionCodeStr":Ljava/lang/String;
    const/4 v1, 0x0

    .line 103
    .local v1, "miuiVersionCode":I
    invoke-static {v0}, Landroid/text/TextUtils;->isEmpty(Ljava/lang/CharSequence;)Z

    move-result v2

    if-nez v2, :cond_0

    .line 105
    :try_start_0
    invoke-static {v0}, Lcom/luck/picture/lib/utils/ValueOf;->toInt(Ljava/lang/Object;)I

    move-result v2
    :try_end_0
    .catch Ljava/lang/Exception; {:try_start_0 .. :try_end_0} :catch_0

    move v1, v2

    .line 106
    return v1

    .line 107
    :catch_0
    move-exception v2

    .line 108
    .local v2, "e":Ljava/lang/Exception;
    invoke-virtual {v2}, Ljava/lang/Exception;->printStackTrace()V

    .line 111
    .end local v2    # "e":Ljava/lang/Exception;
    :cond_0
    return v1
.end method

.method private static getManufacturer()Ljava/lang/String;
    .locals 2

    .line 165
    :try_start_0
    sget-object v0, Landroid/os/Build;->MANUFACTURER:Ljava/lang/String;

    .line 166
    .local v0, "manufacturer":Ljava/lang/String;
    invoke-static {v0}, Landroid/text/TextUtils;->isEmpty(Ljava/lang/CharSequence;)Z

    move-result v1

    if-nez v1, :cond_0

    .line 167
    invoke-virtual {v0}, Ljava/lang/String;->toLowerCase()Ljava/lang/String;

    move-result-object v1
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    return-object v1

    .line 166
    .end local v0    # "manufacturer":Ljava/lang/String;
    :cond_0
    goto :goto_0

    .line 169
    :catchall_0
    move-exception v0

    :goto_0
    nop

    .line 170
    const-string v0, "unknown"

    return-object v0
.end method

.method private static getSystemProperty()Ljava/lang/String;
    .locals 5

    .line 123
    const/4 v0, 0x0

    .line 125
    .local v0, "input":Ljava/io/BufferedReader;
    :try_start_0
    invoke-static {}, Ljava/lang/Runtime;->getRuntime()Ljava/lang/Runtime;

    move-result-object v1

    const-string v2, "getprop ro.miui.ui.version.code"

    invoke-virtual {v1, v2}, Ljava/lang/Runtime;->exec(Ljava/lang/String;)Ljava/lang/Process;

    move-result-object v1

    .line 126
    .local v1, "p":Ljava/lang/Process;
    new-instance v2, Ljava/io/BufferedReader;

    new-instance v3, Ljava/io/InputStreamReader;

    invoke-virtual {v1}, Ljava/lang/Process;->getInputStream()Ljava/io/InputStream;

    move-result-object v4

    invoke-direct {v3, v4}, Ljava/io/InputStreamReader;-><init>(Ljava/io/InputStream;)V

    const/16 v4, 0x400

    invoke-direct {v2, v3, v4}, Ljava/io/BufferedReader;-><init>(Ljava/io/Reader;I)V

    move-object v0, v2

    .line 127
    invoke-virtual {v0}, Ljava/io/BufferedReader;->readLine()Ljava/lang/String;

    move-result-object v2

    .line 128
    .local v2, "line":Ljava/lang/String;
    invoke-virtual {v0}, Ljava/io/BufferedReader;->close()V
    :try_end_0
    .catch Ljava/io/IOException; {:try_start_0 .. :try_end_0} :catch_2
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    .line 132
    .end local v1    # "p":Ljava/lang/Process;
    nop

    .line 134
    :try_start_1
    invoke-virtual {v0}, Ljava/io/BufferedReader;->close()V
    :try_end_1
    .catch Ljava/io/IOException; {:try_start_1 .. :try_end_1} :catch_0

    .line 137
    :goto_0
    goto :goto_1

    .line 135
    :catch_0
    move-exception v1

    .line 136
    .local v1, "e":Ljava/io/IOException;
    invoke-virtual {v1}, Ljava/io/IOException;->printStackTrace()V

    .end local v1    # "e":Ljava/io/IOException;
    goto :goto_0

    .line 140
    :goto_1
    return-object v2

    .line 132
    .end local v2    # "line":Ljava/lang/String;
    :catchall_0
    move-exception v1

    if-eqz v0, :cond_0

    .line 134
    :try_start_2
    invoke-virtual {v0}, Ljava/io/BufferedReader;->close()V
    :try_end_2
    .catch Ljava/io/IOException; {:try_start_2 .. :try_end_2} :catch_1

    .line 137
    goto :goto_2

    .line 135
    :catch_1
    move-exception v2

    .line 136
    .local v2, "e":Ljava/io/IOException;
    invoke-virtual {v2}, Ljava/io/IOException;->printStackTrace()V

    .line 139
    .end local v2    # "e":Ljava/io/IOException;
    :cond_0
    :goto_2
    throw v1

    .line 129
    :catch_2
    move-exception v1

    .line 130
    .local v1, "ex":Ljava/io/IOException;
    const/4 v2, 0x0

    .line 132
    if-eqz v0, :cond_1

    .line 134
    :try_start_3
    invoke-virtual {v0}, Ljava/io/BufferedReader;->close()V
    :try_end_3
    .catch Ljava/io/IOException; {:try_start_3 .. :try_end_3} :catch_3

    .line 137
    goto :goto_3

    .line 135
    :catch_3
    move-exception v3

    .line 136
    .local v3, "e":Ljava/io/IOException;
    invoke-virtual {v3}, Ljava/io/IOException;->printStackTrace()V

    .line 130
    .end local v3    # "e":Ljava/io/IOException;
    :cond_1
    :goto_3
    return-object v2
.end method

.method private static isAndroid5OrAbove()Z
    .locals 2

    .line 117
    sget v0, Landroid/os/Build$VERSION;->SDK_INT:I

    const/16 v1, 0x15

    if-lt v0, v1, :cond_0

    const/4 v0, 0x1

    goto :goto_0

    :cond_0
    const/4 v0, 0x0

    :goto_0
    return v0
.end method

.method private static isFlymeV4OrAbove()Z
    .locals 2

    .line 61
    invoke-static {}, Lcom/luck/picture/lib/immersive/RomUtils;->getFlymeVersion()I

    move-result v0

    const/4 v1, 0x4

    if-lt v0, v1, :cond_0

    const/4 v0, 0x1

    goto :goto_0

    :cond_0
    const/4 v0, 0x0

    :goto_0
    return v0
.end method

.method private static isMIUIV6OrAbove()Z
    .locals 3

    .line 85
    invoke-static {}, Lcom/luck/picture/lib/immersive/RomUtils;->getSystemProperty()Ljava/lang/String;

    move-result-object v0

    .line 86
    .local v0, "miuiVersionCodeStr":Ljava/lang/String;
    invoke-static {v0}, Landroid/text/TextUtils;->isEmpty(Ljava/lang/CharSequence;)Z

    move-result v1

    if-nez v1, :cond_1

    .line 88
    :try_start_0
    invoke-static {v0}, Lcom/luck/picture/lib/utils/ValueOf;->toInt(Ljava/lang/Object;)I

    move-result v1
    :try_end_0
    .catch Ljava/lang/Exception; {:try_start_0 .. :try_end_0} :catch_0

    .line 89
    .local v1, "miuiVersionCode":I
    const/4 v2, 0x4

    if-lt v1, v2, :cond_0

    .line 90
    const/4 v2, 0x1

    return v2

    .line 94
    .end local v1    # "miuiVersionCode":I
    :cond_0
    goto :goto_0

    .line 92
    :catch_0
    move-exception v1

    .line 93
    .local v1, "e":Ljava/lang/Exception;
    invoke-virtual {v1}, Ljava/lang/Exception;->printStackTrace()V

    .line 96
    .end local v1    # "e":Ljava/lang/Exception;
    :cond_1
    :goto_0
    const/4 v1, 0x0

    return v1
.end method

.method private static varargs isRightRom(Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;)Z
    .locals 5
    .param p0, "brand"    # Ljava/lang/String;
    .param p1, "manufacturer"    # Ljava/lang/String;
    .param p2, "names"    # [Ljava/lang/String;

    .line 155
    array-length v0, p2

    const/4 v1, 0x0

    move v2, v1

    :goto_0
    if-ge v2, v0, :cond_2

    aget-object v3, p2, v2

    .line 156
    .local v3, "name":Ljava/lang/String;
    invoke-virtual {p0, v3}, Ljava/lang/String;->contains(Ljava/lang/CharSequence;)Z

    move-result v4

    if-nez v4, :cond_1

    invoke-virtual {p1, v3}, Ljava/lang/String;->contains(Ljava/lang/CharSequence;)Z

    move-result v4

    if-eqz v4, :cond_0

    goto :goto_1

    .line 155
    .end local v3    # "name":Ljava/lang/String;
    :cond_0
    add-int/lit8 v2, v2, 0x1

    goto :goto_0

    .line 157
    .restart local v3    # "name":Ljava/lang/String;
    :cond_1
    :goto_1
    const/4 v0, 0x1

    return v0

    .line 160
    .end local v3    # "name":Ljava/lang/String;
    :cond_2
    return v1
.end method

.method public static isSamsung()Z
    .locals 3

    .line 149
    invoke-static {}, Lcom/luck/picture/lib/immersive/RomUtils;->getBrand()Ljava/lang/String;

    move-result-object v0

    .line 150
    .local v0, "brand":Ljava/lang/String;
    invoke-static {}, Lcom/luck/picture/lib/immersive/RomUtils;->getManufacturer()Ljava/lang/String;

    move-result-object v1

    .line 151
    .local v1, "manufacturer":Ljava/lang/String;
    sget-object v2, Lcom/luck/picture/lib/immersive/RomUtils;->ROM_SAMSUNG:[Ljava/lang/String;

    invoke-static {v0, v1, v2}, Lcom/luck/picture/lib/immersive/RomUtils;->isRightRom(Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;)Z

    move-result v2

    return v2
.end method

.method public static stringToInt(Ljava/lang/String;)I
    .locals 2
    .param p0, "str"    # Ljava/lang/String;

    .line 190
    const-string v0, "^[-\\+]?[\\d]+$"

    invoke-static {v0}, Ljava/util/regex/Pattern;->compile(Ljava/lang/String;)Ljava/util/regex/Pattern;

    move-result-object v0

    .line 191
    .local v0, "pattern":Ljava/util/regex/Pattern;
    invoke-virtual {v0, p0}, Ljava/util/regex/Pattern;->matcher(Ljava/lang/CharSequence;)Ljava/util/regex/Matcher;

    move-result-object v1

    invoke-virtual {v1}, Ljava/util/regex/Matcher;->matches()Z

    move-result v1

    if-eqz v1, :cond_0

    invoke-static {p0}, Lcom/luck/picture/lib/utils/ValueOf;->toInt(Ljava/lang/Object;)I

    move-result v1

    goto :goto_0

    :cond_0
    const/4 v1, 0x0

    :goto_0
    return v1
.end method
