.class public Lcom/luck/picture/lib/utils/BitmapUtils;
.super Ljava/lang/Object;
.source "BitmapUtils.java"


# static fields
.field private static final ARGB_8888_MEMORY_BYTE:I = 0x4

.field private static final MAX_BITMAP_SIZE:I = 0x6400000


# direct methods
.method public constructor <init>()V
    .locals 0

    .line 24
    invoke-direct {p0}, Ljava/lang/Object;-><init>()V

    return-void
.end method

.method public static computeSize(II)I
    .locals 10
    .param p0, "srcWidth"    # I
    .param p1, "srcHeight"    # I

    .line 196
    rem-int/lit8 v0, p0, 0x2

    const/4 v1, 0x1

    if-ne v0, v1, :cond_0

    add-int/lit8 v0, p0, 0x1

    goto :goto_0

    :cond_0
    move v0, p0

    :goto_0
    move p0, v0

    .line 197
    rem-int/lit8 v0, p1, 0x2

    if-ne v0, v1, :cond_1

    add-int/lit8 v0, p1, 0x1

    goto :goto_1

    :cond_1
    move v0, p1

    :goto_1
    move p1, v0

    .line 199
    invoke-static {p0, p1}, Ljava/lang/Math;->max(II)I

    move-result v0

    .line 200
    .local v0, "longSide":I
    invoke-static {p0, p1}, Ljava/lang/Math;->min(II)I

    move-result v2

    .line 202
    .local v2, "shortSide":I
    int-to-float v3, v2

    int-to-float v4, v0

    div-float/2addr v3, v4

    .line 203
    .local v3, "scale":F
    const/high16 v4, 0x3f800000    # 1.0f

    cmpg-float v4, v3, v4

    const-wide/high16 v5, 0x3fe2000000000000L    # 0.5625

    if-gtz v4, :cond_5

    float-to-double v7, v3

    cmpl-double v4, v7, v5

    if-lez v4, :cond_5

    .line 204
    const/16 v4, 0x680

    if-ge v0, v4, :cond_2

    .line 205
    return v1

    .line 206
    :cond_2
    const/16 v1, 0x137e

    if-ge v0, v1, :cond_3

    .line 207
    const/4 v1, 0x2

    return v1

    .line 208
    :cond_3
    if-le v0, v1, :cond_4

    const/16 v1, 0x2800

    if-ge v0, v1, :cond_4

    .line 209
    const/4 v1, 0x4

    return v1

    .line 211
    :cond_4
    div-int/lit16 v1, v0, 0x500

    return v1

    .line 213
    :cond_5
    float-to-double v7, v3

    cmpg-double v4, v7, v5

    if-gtz v4, :cond_7

    float-to-double v4, v3

    const-wide/high16 v6, 0x3fe0000000000000L    # 0.5

    cmpl-double v4, v4, v6

    if-lez v4, :cond_7

    .line 214
    div-int/lit16 v4, v0, 0x500

    if-nez v4, :cond_6

    goto :goto_2

    :cond_6
    div-int/lit16 v1, v0, 0x500

    :goto_2
    return v1

    .line 216
    :cond_7
    int-to-double v4, v0

    const-wide/high16 v6, 0x4094000000000000L    # 1280.0

    float-to-double v8, v3

    div-double/2addr v6, v8

    div-double/2addr v4, v6

    invoke-static {v4, v5}, Ljava/lang/Math;->ceil(D)D

    move-result-wide v4

    double-to-int v1, v4

    return v1
.end method

.method public static getMaxImageSize(II)[I
    .locals 12
    .param p0, "imageWidth"    # I
    .param p1, "imageHeight"    # I

    .line 158
    const/4 v0, -0x1

    .local v0, "maxWidth":I
    const/4 v1, -0x1

    .line 159
    .local v1, "maxHeight":I
    const/4 v2, 0x1

    const/4 v3, 0x0

    const/4 v4, 0x2

    if-nez p0, :cond_0

    if-nez p1, :cond_0

    .line 160
    new-array v4, v4, [I

    aput v0, v4, v3

    aput v1, v4, v2

    return-object v4

    .line 162
    :cond_0
    invoke-static {p0, p1}, Lcom/luck/picture/lib/utils/BitmapUtils;->computeSize(II)I

    move-result v5

    .line 163
    .local v5, "inSampleSize":I
    invoke-static {}, Lcom/luck/picture/lib/utils/BitmapUtils;->getTotalMemory()J

    move-result-wide v6

    .line 164
    .local v6, "totalMemory":J
    const/4 v8, 0x0

    .line 165
    .local v8, "decodeAttemptSuccess":Z
    :goto_0
    if-nez v8, :cond_2

    .line 166
    div-int v0, p0, v5

    .line 167
    div-int v1, p1, v5

    .line 168
    mul-int v9, v0, v1

    mul-int/lit8 v9, v9, 0x4

    .line 169
    .local v9, "bitmapSize":I
    int-to-long v10, v9

    cmp-long v10, v10, v6

    if-lez v10, :cond_1

    .line 170
    mul-int/lit8 v5, v5, 0x2

    .line 171
    goto :goto_0

    .line 173
    :cond_1
    const/4 v8, 0x1

    .line 174
    .end local v9    # "bitmapSize":I
    goto :goto_0

    .line 175
    :cond_2
    new-array v4, v4, [I

    aput v0, v4, v3

    aput v1, v4, v2

    return-object v4
.end method

.method public static getTotalMemory()J
    .locals 5

    .line 184
    invoke-static {}, Ljava/lang/Runtime;->getRuntime()Ljava/lang/Runtime;

    move-result-object v0

    invoke-virtual {v0}, Ljava/lang/Runtime;->totalMemory()J

    move-result-wide v0

    .line 185
    .local v0, "totalMemory":J
    const-wide/32 v2, 0x6400000

    cmp-long v4, v0, v2

    if-lez v4, :cond_0

    goto :goto_0

    :cond_0
    move-wide v2, v0

    :goto_0
    return-wide v2
.end method

.method public static readPictureDegree(Landroid/content/Context;Ljava/lang/String;)I
    .locals 5
    .param p0, "context"    # Landroid/content/Context;
    .param p1, "filePath"    # Ljava/lang/String;

    .line 123
    const/4 v0, 0x0

    .line 125
    .local v0, "inputStream":Ljava/io/InputStream;
    const/4 v1, 0x0

    :try_start_0
    invoke-static {p1}, Lcom/luck/picture/lib/config/PictureMimeType;->isContent(Ljava/lang/String;)Z

    move-result v2

    if-eqz v2, :cond_0

    .line 126
    invoke-static {p1}, Landroid/net/Uri;->parse(Ljava/lang/String;)Landroid/net/Uri;

    move-result-object v2

    invoke-static {p0, v2}, Lcom/luck/picture/lib/basic/PictureContentResolver;->getContentResolverOpenInputStream(Landroid/content/Context;Landroid/net/Uri;)Ljava/io/InputStream;

    move-result-object v2

    move-object v0, v2

    .line 127
    new-instance v2, Landroidx/exifinterface/media/ExifInterface;

    invoke-direct {v2, v0}, Landroidx/exifinterface/media/ExifInterface;-><init>(Ljava/io/InputStream;)V

    .local v2, "exifInterface":Landroidx/exifinterface/media/ExifInterface;
    goto :goto_0

    .line 129
    .end local v2    # "exifInterface":Landroidx/exifinterface/media/ExifInterface;
    :cond_0
    new-instance v2, Landroidx/exifinterface/media/ExifInterface;

    invoke-direct {v2, p1}, Landroidx/exifinterface/media/ExifInterface;-><init>(Ljava/lang/String;)V

    .line 131
    .restart local v2    # "exifInterface":Landroidx/exifinterface/media/ExifInterface;
    :goto_0
    const-string v3, "Orientation"

    const/4 v4, 0x1

    invoke-virtual {v2, v3, v4}, Landroidx/exifinterface/media/ExifInterface;->getAttributeInt(Ljava/lang/String;I)I

    move-result v3
    :try_end_0
    .catch Ljava/lang/Exception; {:try_start_0 .. :try_end_0} :catch_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    .line 132
    .local v3, "orientation":I
    sparse-switch v3, :sswitch_data_0

    .line 140
    nop

    .line 146
    invoke-static {v0}, Lcom/luck/picture/lib/utils/PictureFileUtils;->close(Ljava/io/Closeable;)V

    .line 140
    return v1

    .line 138
    :sswitch_0
    const/16 v1, 0x10e

    .line 146
    invoke-static {v0}, Lcom/luck/picture/lib/utils/PictureFileUtils;->close(Ljava/io/Closeable;)V

    .line 138
    return v1

    .line 134
    :sswitch_1
    const/16 v1, 0x5a

    .line 146
    invoke-static {v0}, Lcom/luck/picture/lib/utils/PictureFileUtils;->close(Ljava/io/Closeable;)V

    .line 134
    return v1

    .line 136
    :sswitch_2
    const/16 v1, 0xb4

    .line 146
    invoke-static {v0}, Lcom/luck/picture/lib/utils/PictureFileUtils;->close(Ljava/io/Closeable;)V

    .line 136
    return v1

    .line 146
    .end local v2    # "exifInterface":Landroidx/exifinterface/media/ExifInterface;
    .end local v3    # "orientation":I
    :catchall_0
    move-exception v1

    goto :goto_1

    .line 142
    :catch_0
    move-exception v2

    .line 143
    .local v2, "e":Ljava/lang/Exception;
    :try_start_1
    invoke-virtual {v2}, Ljava/lang/Exception;->printStackTrace()V
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    .line 144
    nop

    .line 146
    invoke-static {v0}, Lcom/luck/picture/lib/utils/PictureFileUtils;->close(Ljava/io/Closeable;)V

    .line 144
    return v1

    .line 146
    .end local v2    # "e":Ljava/lang/Exception;
    :goto_1
    invoke-static {v0}, Lcom/luck/picture/lib/utils/PictureFileUtils;->close(Ljava/io/Closeable;)V

    .line 147
    throw v1

    :sswitch_data_0
    .sparse-switch
        0x3 -> :sswitch_2
        0x6 -> :sswitch_1
        0x8 -> :sswitch_0
    .end sparse-switch
.end method

.method public static rotateImage(Landroid/content/Context;Ljava/lang/String;)V
    .locals 8
    .param p0, "context"    # Landroid/content/Context;
    .param p1, "path"    # Ljava/lang/String;

    .line 35
    const/4 v0, 0x0

    .line 36
    .local v0, "inputStream":Ljava/io/InputStream;
    const/4 v1, 0x0

    .line 37
    .local v1, "outputStream":Ljava/io/FileOutputStream;
    const/4 v2, 0x0

    .line 39
    .local v2, "bitmap":Landroid/graphics/Bitmap;
    :try_start_0
    invoke-static {p0, p1}, Lcom/luck/picture/lib/utils/BitmapUtils;->readPictureDegree(Landroid/content/Context;Ljava/lang/String;)I

    move-result v3

    .line 40
    .local v3, "degree":I
    if-lez v3, :cond_3

    .line 41
    new-instance v4, Landroid/graphics/BitmapFactory$Options;

    invoke-direct {v4}, Landroid/graphics/BitmapFactory$Options;-><init>()V

    .line 42
    .local v4, "options":Landroid/graphics/BitmapFactory$Options;
    const/4 v5, 0x1

    iput-boolean v5, v4, Landroid/graphics/BitmapFactory$Options;->inJustDecodeBounds:Z

    .line 43
    invoke-static {p1}, Lcom/luck/picture/lib/config/PictureMimeType;->isContent(Ljava/lang/String;)Z

    move-result v5

    const/4 v6, 0x0

    if-eqz v5, :cond_0

    .line 44
    invoke-static {p1}, Landroid/net/Uri;->parse(Ljava/lang/String;)Landroid/net/Uri;

    move-result-object v5

    invoke-static {p0, v5}, Lcom/luck/picture/lib/basic/PictureContentResolver;->getContentResolverOpenInputStream(Landroid/content/Context;Landroid/net/Uri;)Ljava/io/InputStream;

    move-result-object v5

    move-object v0, v5

    .line 45
    invoke-static {v0, v6, v4}, Landroid/graphics/BitmapFactory;->decodeStream(Ljava/io/InputStream;Landroid/graphics/Rect;Landroid/graphics/BitmapFactory$Options;)Landroid/graphics/Bitmap;

    goto :goto_0

    .line 47
    :cond_0
    invoke-static {p1, v4}, Landroid/graphics/BitmapFactory;->decodeFile(Ljava/lang/String;Landroid/graphics/BitmapFactory$Options;)Landroid/graphics/Bitmap;

    .line 49
    :goto_0
    iget v5, v4, Landroid/graphics/BitmapFactory$Options;->outWidth:I

    iget v7, v4, Landroid/graphics/BitmapFactory$Options;->outHeight:I

    invoke-static {v5, v7}, Lcom/luck/picture/lib/utils/BitmapUtils;->computeSize(II)I

    move-result v5

    iput v5, v4, Landroid/graphics/BitmapFactory$Options;->inSampleSize:I

    .line 50
    const/4 v5, 0x0

    iput-boolean v5, v4, Landroid/graphics/BitmapFactory$Options;->inJustDecodeBounds:Z

    .line 51
    invoke-static {p1}, Lcom/luck/picture/lib/config/PictureMimeType;->isContent(Ljava/lang/String;)Z

    move-result v5

    if-eqz v5, :cond_1

    .line 52
    invoke-static {p1}, Landroid/net/Uri;->parse(Ljava/lang/String;)Landroid/net/Uri;

    move-result-object v5

    invoke-static {p0, v5}, Lcom/luck/picture/lib/basic/PictureContentResolver;->getContentResolverOpenInputStream(Landroid/content/Context;Landroid/net/Uri;)Ljava/io/InputStream;

    move-result-object v5

    move-object v0, v5

    .line 53
    invoke-static {v0, v6, v4}, Landroid/graphics/BitmapFactory;->decodeStream(Ljava/io/InputStream;Landroid/graphics/Rect;Landroid/graphics/BitmapFactory$Options;)Landroid/graphics/Bitmap;

    move-result-object v5

    move-object v2, v5

    goto :goto_1

    .line 55
    :cond_1
    invoke-static {p1, v4}, Landroid/graphics/BitmapFactory;->decodeFile(Ljava/lang/String;Landroid/graphics/BitmapFactory$Options;)Landroid/graphics/Bitmap;

    move-result-object v5

    move-object v2, v5

    .line 57
    :goto_1
    if-eqz v2, :cond_3

    .line 58
    invoke-static {v2, v3}, Lcom/luck/picture/lib/utils/BitmapUtils;->rotatingImage(Landroid/graphics/Bitmap;I)Landroid/graphics/Bitmap;

    move-result-object v5

    move-object v2, v5

    .line 59
    invoke-static {p1}, Lcom/luck/picture/lib/config/PictureMimeType;->isContent(Ljava/lang/String;)Z

    move-result v5

    if-eqz v5, :cond_2

    .line 60
    invoke-static {p1}, Landroid/net/Uri;->parse(Ljava/lang/String;)Landroid/net/Uri;

    move-result-object v5

    invoke-static {p0, v5}, Lcom/luck/picture/lib/basic/PictureContentResolver;->getContentResolverOpenOutputStream(Landroid/content/Context;Landroid/net/Uri;)Ljava/io/OutputStream;

    move-result-object v5

    check-cast v5, Ljava/io/FileOutputStream;

    move-object v1, v5

    goto :goto_2

    .line 62
    :cond_2
    new-instance v5, Ljava/io/FileOutputStream;

    invoke-direct {v5, p1}, Ljava/io/FileOutputStream;-><init>(Ljava/lang/String;)V

    move-object v1, v5

    .line 64
    :goto_2
    invoke-static {v2, v1}, Lcom/luck/picture/lib/utils/BitmapUtils;->saveBitmapFile(Landroid/graphics/Bitmap;Ljava/io/FileOutputStream;)V
    :try_end_0
    .catch Ljava/lang/Exception; {:try_start_0 .. :try_end_0} :catch_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    .line 70
    .end local v3    # "degree":I
    .end local v4    # "options":Landroid/graphics/BitmapFactory$Options;
    :cond_3
    invoke-static {v0}, Lcom/luck/picture/lib/utils/PictureFileUtils;->close(Ljava/io/Closeable;)V

    .line 71
    invoke-static {v1}, Lcom/luck/picture/lib/utils/PictureFileUtils;->close(Ljava/io/Closeable;)V

    .line 72
    if-eqz v2, :cond_4

    invoke-virtual {v2}, Landroid/graphics/Bitmap;->isRecycled()Z

    move-result v3

    if-nez v3, :cond_4

    .line 73
    :goto_3
    invoke-virtual {v2}, Landroid/graphics/Bitmap;->recycle()V

    goto :goto_4

    .line 70
    :catchall_0
    move-exception v3

    goto :goto_5

    .line 67
    :catch_0
    move-exception v3

    .line 68
    .local v3, "e":Ljava/lang/Exception;
    :try_start_1
    invoke-virtual {v3}, Ljava/lang/Exception;->printStackTrace()V
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    .line 70
    .end local v3    # "e":Ljava/lang/Exception;
    invoke-static {v0}, Lcom/luck/picture/lib/utils/PictureFileUtils;->close(Ljava/io/Closeable;)V

    .line 71
    invoke-static {v1}, Lcom/luck/picture/lib/utils/PictureFileUtils;->close(Ljava/io/Closeable;)V

    .line 72
    if-eqz v2, :cond_4

    invoke-virtual {v2}, Landroid/graphics/Bitmap;->isRecycled()Z

    move-result v3

    if-nez v3, :cond_4

    .line 73
    goto :goto_3

    .line 76
    :cond_4
    :goto_4
    return-void

    .line 70
    :goto_5
    invoke-static {v0}, Lcom/luck/picture/lib/utils/PictureFileUtils;->close(Ljava/io/Closeable;)V

    .line 71
    invoke-static {v1}, Lcom/luck/picture/lib/utils/PictureFileUtils;->close(Ljava/io/Closeable;)V

    .line 72
    if-eqz v2, :cond_5

    invoke-virtual {v2}, Landroid/graphics/Bitmap;->isRecycled()Z

    move-result v4

    if-nez v4, :cond_5

    .line 73
    invoke-virtual {v2}, Landroid/graphics/Bitmap;->recycle()V

    .line 75
    :cond_5
    throw v3
.end method

.method public static rotatingImage(Landroid/graphics/Bitmap;I)Landroid/graphics/Bitmap;
    .locals 8
    .param p0, "bitmap"    # Landroid/graphics/Bitmap;
    .param p1, "angle"    # I

    .line 86
    new-instance v0, Landroid/graphics/Matrix;

    invoke-direct {v0}, Landroid/graphics/Matrix;-><init>()V

    .line 87
    .local v0, "matrix":Landroid/graphics/Matrix;
    int-to-float v1, p1

    invoke-virtual {v0, v1}, Landroid/graphics/Matrix;->postRotate(F)Z

    .line 88
    invoke-virtual {p0}, Landroid/graphics/Bitmap;->getWidth()I

    move-result v4

    invoke-virtual {p0}, Landroid/graphics/Bitmap;->getHeight()I

    move-result v5

    const/4 v2, 0x0

    const/4 v3, 0x0

    const/4 v7, 0x1

    move-object v1, p0

    move-object v6, v0

    invoke-static/range {v1 .. v7}, Landroid/graphics/Bitmap;->createBitmap(Landroid/graphics/Bitmap;IIIILandroid/graphics/Matrix;Z)Landroid/graphics/Bitmap;

    move-result-object v1

    return-object v1
.end method

.method private static saveBitmapFile(Landroid/graphics/Bitmap;Ljava/io/FileOutputStream;)V
    .locals 3
    .param p0, "bitmap"    # Landroid/graphics/Bitmap;
    .param p1, "fos"    # Ljava/io/FileOutputStream;

    .line 98
    const/4 v0, 0x0

    .line 100
    .local v0, "stream":Ljava/io/ByteArrayOutputStream;
    :try_start_0
    new-instance v1, Ljava/io/ByteArrayOutputStream;

    invoke-direct {v1}, Ljava/io/ByteArrayOutputStream;-><init>()V

    move-object v0, v1

    .line 101
    sget-object v1, Landroid/graphics/Bitmap$CompressFormat;->JPEG:Landroid/graphics/Bitmap$CompressFormat;

    const/16 v2, 0x3c

    invoke-virtual {p0, v1, v2, p1}, Landroid/graphics/Bitmap;->compress(Landroid/graphics/Bitmap$CompressFormat;ILjava/io/OutputStream;)Z

    .line 102
    invoke-virtual {v0}, Ljava/io/ByteArrayOutputStream;->toByteArray()[B

    move-result-object v1

    invoke-virtual {p1, v1}, Ljava/io/FileOutputStream;->write([B)V

    .line 103
    invoke-virtual {p1}, Ljava/io/FileOutputStream;->flush()V

    .line 104
    invoke-virtual {p1}, Ljava/io/FileOutputStream;->close()V
    :try_end_0
    .catch Ljava/lang/Exception; {:try_start_0 .. :try_end_0} :catch_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    goto :goto_0

    .line 108
    :catchall_0
    move-exception v1

    goto :goto_1

    .line 105
    :catch_0
    move-exception v1

    .line 106
    .local v1, "e":Ljava/lang/Exception;
    :try_start_1
    invoke-virtual {v1}, Ljava/lang/Exception;->printStackTrace()V
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    .line 108
    .end local v1    # "e":Ljava/lang/Exception;
    :goto_0
    invoke-static {p1}, Lcom/luck/picture/lib/utils/PictureFileUtils;->close(Ljava/io/Closeable;)V

    .line 109
    invoke-static {v0}, Lcom/luck/picture/lib/utils/PictureFileUtils;->close(Ljava/io/Closeable;)V

    .line 110
    nop

    .line 111
    return-void

    .line 108
    :goto_1
    invoke-static {p1}, Lcom/luck/picture/lib/utils/PictureFileUtils;->close(Ljava/io/Closeable;)V

    .line 109
    invoke-static {v0}, Lcom/luck/picture/lib/utils/PictureFileUtils;->close(Ljava/io/Closeable;)V

    .line 110
    throw v1
.end method
