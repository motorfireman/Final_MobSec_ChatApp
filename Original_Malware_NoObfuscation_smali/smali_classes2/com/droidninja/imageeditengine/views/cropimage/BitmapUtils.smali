.class final Lcom/droidninja/imageeditengine/views/cropimage/BitmapUtils;
.super Ljava/lang/Object;
.source "BitmapUtils.java"


# annotations
.annotation system Ldalvik/annotation/MemberClasses;
    value = {
        Lcom/droidninja/imageeditengine/views/cropimage/BitmapUtils$RotateBitmapResult;,
        Lcom/droidninja/imageeditengine/views/cropimage/BitmapUtils$BitmapSampled;
    }
.end annotation


# static fields
.field static final EMPTY_RECT:Landroid/graphics/Rect;

.field static final EMPTY_RECT_F:Landroid/graphics/RectF;

.field static final POINTS:[F

.field static final POINTS2:[F

.field static final RECT:Landroid/graphics/RectF;

.field private static mMaxTextureSize:I

.field static mStateBitmap:Landroid/util/Pair;
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "Landroid/util/Pair<",
            "Ljava/lang/String;",
            "Ljava/lang/ref/WeakReference<",
            "Landroid/graphics/Bitmap;",
            ">;>;"
        }
    .end annotation
.end field


# direct methods
.method static constructor <clinit>()V
    .locals 2

    .line 51
    new-instance v0, Landroid/graphics/Rect;

    invoke-direct {v0}, Landroid/graphics/Rect;-><init>()V

    sput-object v0, Lcom/droidninja/imageeditengine/views/cropimage/BitmapUtils;->EMPTY_RECT:Landroid/graphics/Rect;

    .line 53
    new-instance v0, Landroid/graphics/RectF;

    invoke-direct {v0}, Landroid/graphics/RectF;-><init>()V

    sput-object v0, Lcom/droidninja/imageeditengine/views/cropimage/BitmapUtils;->EMPTY_RECT_F:Landroid/graphics/RectF;

    .line 56
    new-instance v0, Landroid/graphics/RectF;

    invoke-direct {v0}, Landroid/graphics/RectF;-><init>()V

    sput-object v0, Lcom/droidninja/imageeditengine/views/cropimage/BitmapUtils;->RECT:Landroid/graphics/RectF;

    .line 59
    const/4 v0, 0x6

    new-array v1, v0, [F

    sput-object v1, Lcom/droidninja/imageeditengine/views/cropimage/BitmapUtils;->POINTS:[F

    .line 62
    new-array v0, v0, [F

    sput-object v0, Lcom/droidninja/imageeditengine/views/cropimage/BitmapUtils;->POINTS2:[F

    return-void
.end method

.method constructor <init>()V
    .locals 0

    .line 49
    invoke-direct {p0}, Ljava/lang/Object;-><init>()V

    return-void
.end method

.method private static calculateInSampleSizeByMaxTextureSize(II)I
    .locals 3
    .param p0, "width"    # I
    .param p1, "height"    # I

    .line 745
    const/4 v0, 0x1

    .line 746
    .local v0, "inSampleSize":I
    sget v1, Lcom/droidninja/imageeditengine/views/cropimage/BitmapUtils;->mMaxTextureSize:I

    if-nez v1, :cond_0

    .line 747
    invoke-static {}, Lcom/droidninja/imageeditengine/views/cropimage/BitmapUtils;->getMaxTextureSize()I

    move-result v1

    sput v1, Lcom/droidninja/imageeditengine/views/cropimage/BitmapUtils;->mMaxTextureSize:I

    .line 749
    :cond_0
    sget v1, Lcom/droidninja/imageeditengine/views/cropimage/BitmapUtils;->mMaxTextureSize:I

    if-lez v1, :cond_2

    .line 750
    :goto_0
    div-int v1, p1, v0

    sget v2, Lcom/droidninja/imageeditengine/views/cropimage/BitmapUtils;->mMaxTextureSize:I

    if-gt v1, v2, :cond_1

    div-int v1, p0, v0

    if-le v1, v2, :cond_2

    .line 752
    :cond_1
    mul-int/lit8 v0, v0, 0x2

    goto :goto_0

    .line 755
    :cond_2
    return v0
.end method

.method private static calculateInSampleSizeByReqestedSize(IIII)I
    .locals 2
    .param p0, "width"    # I
    .param p1, "height"    # I
    .param p2, "reqWidth"    # I
    .param p3, "reqHeight"    # I

    .line 731
    const/4 v0, 0x1

    .line 732
    .local v0, "inSampleSize":I
    if-gt p1, p3, :cond_0

    if-le p0, p2, :cond_1

    .line 733
    :cond_0
    :goto_0
    div-int/lit8 v1, p1, 0x2

    div-int/2addr v1, v0

    if-le v1, p3, :cond_1

    div-int/lit8 v1, p0, 0x2

    div-int/2addr v1, v0

    if-le v1, p2, :cond_1

    .line 734
    mul-int/lit8 v0, v0, 0x2

    goto :goto_0

    .line 737
    :cond_1
    return v0
.end method

.method private static closeSafe(Ljava/io/Closeable;)V
    .locals 1
    .param p0, "closeable"    # Ljava/io/Closeable;

    .line 836
    if-eqz p0, :cond_0

    .line 838
    :try_start_0
    invoke-interface {p0}, Ljava/io/Closeable;->close()V
    :try_end_0
    .catch Ljava/io/IOException; {:try_start_0 .. :try_end_0} :catch_0

    .line 840
    goto :goto_0

    .line 839
    :catch_0
    move-exception v0

    .line 842
    :cond_0
    :goto_0
    return-void
.end method

.method static cropBitmap(Landroid/content/Context;Landroid/net/Uri;[FIIIZIIIIZZ)Lcom/droidninja/imageeditengine/views/cropimage/BitmapUtils$BitmapSampled;
    .locals 16
    .param p0, "context"    # Landroid/content/Context;
    .param p1, "loadedImageUri"    # Landroid/net/Uri;
    .param p2, "points"    # [F
    .param p3, "degreesRotated"    # I
    .param p4, "orgWidth"    # I
    .param p5, "orgHeight"    # I
    .param p6, "fixAspectRatio"    # Z
    .param p7, "aspectRatioX"    # I
    .param p8, "aspectRatioY"    # I
    .param p9, "reqWidth"    # I
    .param p10, "reqHeight"    # I
    .param p11, "flipHorizontally"    # Z
    .param p12, "flipVertically"    # Z

    .line 257
    const/4 v0, 0x1

    move v15, v0

    .line 261
    .local v15, "sampleMulti":I
    :goto_0
    move-object/from16 v1, p0

    move-object/from16 v2, p1

    move-object/from16 v3, p2

    move/from16 v4, p3

    move/from16 v5, p4

    move/from16 v6, p5

    move/from16 v7, p6

    move/from16 v8, p7

    move/from16 v9, p8

    move/from16 v10, p9

    move/from16 v11, p10

    move/from16 v12, p11

    move/from16 v13, p12

    move v14, v15

    :try_start_0
    invoke-static/range {v1 .. v14}, Lcom/droidninja/imageeditengine/views/cropimage/BitmapUtils;->cropBitmap(Landroid/content/Context;Landroid/net/Uri;[FIIIZIIIIZZI)Lcom/droidninja/imageeditengine/views/cropimage/BitmapUtils$BitmapSampled;

    move-result-object v0
    :try_end_0
    .catch Ljava/lang/OutOfMemoryError; {:try_start_0 .. :try_end_0} :catch_0

    return-object v0

    .line 276
    :catch_0
    move-exception v0

    move-object v1, v0

    move-object v0, v1

    .line 278
    .local v0, "e":Ljava/lang/OutOfMemoryError;
    mul-int/lit8 v15, v15, 0x2

    .line 279
    const/16 v1, 0x10

    if-gt v15, v1, :cond_0

    .line 289
    .end local v0    # "e":Ljava/lang/OutOfMemoryError;
    goto :goto_0

    .line 280
    .restart local v0    # "e":Ljava/lang/OutOfMemoryError;
    :cond_0
    new-instance v1, Ljava/lang/RuntimeException;

    new-instance v2, Ljava/lang/StringBuilder;

    invoke-direct {v2}, Ljava/lang/StringBuilder;-><init>()V

    const-string v3, "Failed to handle OOM by sampling ("

    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v2

    invoke-virtual {v2, v15}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v2

    const-string v3, "): "

    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v2

    move-object/from16 v3, p1

    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v2

    const-string v4, "\r\n"

    invoke-virtual {v2, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v2

    .line 286
    invoke-virtual {v0}, Ljava/lang/OutOfMemoryError;->getMessage()Ljava/lang/String;

    move-result-object v4

    invoke-virtual {v2, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v2

    invoke-virtual {v2}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v2

    invoke-direct {v1, v2, v0}, Ljava/lang/RuntimeException;-><init>(Ljava/lang/String;Ljava/lang/Throwable;)V

    throw v1
.end method

.method private static cropBitmap(Landroid/content/Context;Landroid/net/Uri;[FIIIZIIIIZZI)Lcom/droidninja/imageeditengine/views/cropimage/BitmapUtils$BitmapSampled;
    .locals 22
    .param p0, "context"    # Landroid/content/Context;
    .param p1, "loadedImageUri"    # Landroid/net/Uri;
    .param p2, "points"    # [F
    .param p3, "degreesRotated"    # I
    .param p4, "orgWidth"    # I
    .param p5, "orgHeight"    # I
    .param p6, "fixAspectRatio"    # Z
    .param p7, "aspectRatioX"    # I
    .param p8, "aspectRatioY"    # I
    .param p9, "reqWidth"    # I
    .param p10, "reqHeight"    # I
    .param p11, "flipHorizontally"    # Z
    .param p12, "flipVertically"    # Z
    .param p13, "sampleMulti"    # I

    .line 480
    move/from16 v14, p3

    .line 481
    move-object/from16 v1, p2

    move/from16 v2, p4

    move/from16 v3, p5

    move/from16 v4, p6

    move/from16 v5, p7

    move/from16 v6, p8

    invoke-static/range {v1 .. v6}, Lcom/droidninja/imageeditengine/views/cropimage/BitmapUtils;->getRectFromPoints([FIIZII)Landroid/graphics/Rect;

    move-result-object v21

    .line 483
    .local v21, "rect":Landroid/graphics/Rect;
    if-lez p9, :cond_0

    move/from16 v18, p9

    goto :goto_0

    :cond_0
    invoke-virtual/range {v21 .. v21}, Landroid/graphics/Rect;->width()I

    move-result v0

    move/from16 v18, v0

    .line 484
    .local v18, "width":I
    :goto_0
    if-lez p10, :cond_1

    move/from16 v19, p10

    goto :goto_1

    :cond_1
    invoke-virtual/range {v21 .. v21}, Landroid/graphics/Rect;->height()I

    move-result v0

    move/from16 v19, v0

    .line 486
    .local v19, "height":I
    :goto_1
    const/4 v1, 0x0

    .line 487
    .local v1, "result":Landroid/graphics/Bitmap;
    const/4 v2, 0x1

    .line 491
    .local v2, "sampleSize":I
    nop

    .line 492
    move-object/from16 v15, p0

    move-object/from16 v16, p1

    move-object/from16 v17, v21

    move/from16 v20, p13

    :try_start_0
    invoke-static/range {v15 .. v20}, Lcom/droidninja/imageeditengine/views/cropimage/BitmapUtils;->decodeSampledBitmapRegion(Landroid/content/Context;Landroid/net/Uri;Landroid/graphics/Rect;III)Lcom/droidninja/imageeditengine/views/cropimage/BitmapUtils$BitmapSampled;

    move-result-object v0

    .line 493
    .local v0, "bitmapSampled":Lcom/droidninja/imageeditengine/views/cropimage/BitmapUtils$BitmapSampled;
    iget-object v3, v0, Lcom/droidninja/imageeditengine/views/cropimage/BitmapUtils$BitmapSampled;->bitmap:Landroid/graphics/Bitmap;

    move-object v1, v3

    .line 494
    iget v3, v0, Lcom/droidninja/imageeditengine/views/cropimage/BitmapUtils$BitmapSampled;->sampleSize:I
    :try_end_0
    .catch Ljava/lang/Exception; {:try_start_0 .. :try_end_0} :catch_0

    move v2, v3

    .line 496
    .end local v0    # "bitmapSampled":Lcom/droidninja/imageeditengine/views/cropimage/BitmapUtils$BitmapSampled;
    move-object v15, v1

    move v13, v2

    goto :goto_2

    .line 495
    :catch_0
    move-exception v0

    move-object v15, v1

    move v13, v2

    .line 498
    .end local v1    # "result":Landroid/graphics/Bitmap;
    .end local v2    # "sampleSize":I
    .local v13, "sampleSize":I
    .local v15, "result":Landroid/graphics/Bitmap;
    :goto_2
    if-eqz v15, :cond_4

    .line 501
    move/from16 v12, p11

    move/from16 v11, p12

    :try_start_1
    invoke-static {v15, v14, v12, v11}, Lcom/droidninja/imageeditengine/views/cropimage/BitmapUtils;->rotateAndFlipBitmapInt(Landroid/graphics/Bitmap;IZZ)Landroid/graphics/Bitmap;

    move-result-object v1
    :try_end_1
    .catch Ljava/lang/OutOfMemoryError; {:try_start_1 .. :try_end_1} :catch_2

    .line 504
    .end local v15    # "result":Landroid/graphics/Bitmap;
    .restart local v1    # "result":Landroid/graphics/Bitmap;
    :try_start_2
    rem-int/lit8 v0, v14, 0x5a

    if-eqz v0, :cond_2

    .line 508
    nop

    .line 509
    move-object/from16 v2, p2

    move-object/from16 v3, v21

    move/from16 v4, p3

    move/from16 v5, p6

    move/from16 v6, p7

    move/from16 v7, p8

    invoke-static/range {v1 .. v7}, Lcom/droidninja/imageeditengine/views/cropimage/BitmapUtils;->cropForRotatedImage(Landroid/graphics/Bitmap;[FLandroid/graphics/Rect;IZII)Landroid/graphics/Bitmap;

    move-result-object v0
    :try_end_2
    .catch Ljava/lang/OutOfMemoryError; {:try_start_2 .. :try_end_2} :catch_1

    .end local v1    # "result":Landroid/graphics/Bitmap;
    .local v0, "result":Landroid/graphics/Bitmap;
    goto :goto_3

    .line 504
    .end local v0    # "result":Landroid/graphics/Bitmap;
    .restart local v1    # "result":Landroid/graphics/Bitmap;
    :cond_2
    move-object v0, v1

    .line 517
    .end local v1    # "result":Landroid/graphics/Bitmap;
    .restart local v0    # "result":Landroid/graphics/Bitmap;
    :goto_3
    nop

    .line 518
    new-instance v1, Lcom/droidninja/imageeditengine/views/cropimage/BitmapUtils$BitmapSampled;

    invoke-direct {v1, v0, v13}, Lcom/droidninja/imageeditengine/views/cropimage/BitmapUtils$BitmapSampled;-><init>(Landroid/graphics/Bitmap;I)V

    return-object v1

    .line 512
    .end local v0    # "result":Landroid/graphics/Bitmap;
    .restart local v1    # "result":Landroid/graphics/Bitmap;
    :catch_1
    move-exception v0

    move-object v15, v1

    goto :goto_4

    .end local v1    # "result":Landroid/graphics/Bitmap;
    .restart local v15    # "result":Landroid/graphics/Bitmap;
    :catch_2
    move-exception v0

    .line 513
    .local v0, "e":Ljava/lang/OutOfMemoryError;
    :goto_4
    if-eqz v15, :cond_3

    .line 514
    invoke-virtual {v15}, Landroid/graphics/Bitmap;->recycle()V

    .line 516
    :cond_3
    throw v0

    .line 521
    .end local v0    # "e":Ljava/lang/OutOfMemoryError;
    :cond_4
    move/from16 v12, p11

    move/from16 v11, p12

    move-object/from16 v1, p0

    move-object/from16 v2, p1

    move-object/from16 v3, p2

    move/from16 v4, p3

    move/from16 v5, p6

    move/from16 v6, p7

    move/from16 v7, p8

    move/from16 v8, p13

    move-object/from16 v9, v21

    move/from16 v10, v18

    move/from16 v11, v19

    move/from16 v16, v13

    .end local v13    # "sampleSize":I
    .local v16, "sampleSize":I
    move/from16 v13, p12

    invoke-static/range {v1 .. v13}, Lcom/droidninja/imageeditengine/views/cropimage/BitmapUtils;->cropBitmap(Landroid/content/Context;Landroid/net/Uri;[FIZIIILandroid/graphics/Rect;IIZZ)Lcom/droidninja/imageeditengine/views/cropimage/BitmapUtils$BitmapSampled;

    move-result-object v0

    return-object v0
.end method

.method private static cropBitmap(Landroid/content/Context;Landroid/net/Uri;[FIZIIILandroid/graphics/Rect;IIZZ)Lcom/droidninja/imageeditengine/views/cropimage/BitmapUtils$BitmapSampled;
    .locals 18
    .param p0, "context"    # Landroid/content/Context;
    .param p1, "loadedImageUri"    # Landroid/net/Uri;
    .param p2, "points"    # [F
    .param p3, "degreesRotated"    # I
    .param p4, "fixAspectRatio"    # Z
    .param p5, "aspectRatioX"    # I
    .param p6, "aspectRatioY"    # I
    .param p7, "sampleMulti"    # I
    .param p8, "rect"    # Landroid/graphics/Rect;
    .param p9, "width"    # I
    .param p10, "height"    # I
    .param p11, "flipHorizontally"    # Z
    .param p12, "flipVertically"    # Z

    .line 556
    move-object/from16 v1, p1

    move-object/from16 v2, p2

    const/4 v3, 0x0

    .line 559
    .local v3, "result":Landroid/graphics/Bitmap;
    :try_start_0
    new-instance v0, Landroid/graphics/BitmapFactory$Options;

    invoke-direct {v0}, Landroid/graphics/BitmapFactory$Options;-><init>()V

    move-object v4, v0

    .line 560
    .local v4, "options":Landroid/graphics/BitmapFactory$Options;
    nop

    .line 563
    invoke-virtual/range {p8 .. p8}, Landroid/graphics/Rect;->width()I

    move-result v0

    invoke-virtual/range {p8 .. p8}, Landroid/graphics/Rect;->height()I

    move-result v5
    :try_end_0
    .catch Ljava/lang/OutOfMemoryError; {:try_start_0 .. :try_end_0} :catch_3
    .catch Ljava/lang/Exception; {:try_start_0 .. :try_end_0} :catch_2

    move/from16 v6, p9

    move/from16 v7, p10

    :try_start_1
    invoke-static {v0, v5, v6, v7}, Lcom/droidninja/imageeditengine/views/cropimage/BitmapUtils;->calculateInSampleSizeByReqestedSize(IIII)I

    move-result v0

    mul-int v0, v0, p7

    move v5, v0

    .local v5, "sampleSize":I
    iput v0, v4, Landroid/graphics/BitmapFactory$Options;->inSampleSize:I

    .line 565
    invoke-virtual/range {p0 .. p0}, Landroid/content/Context;->getContentResolver()Landroid/content/ContentResolver;

    move-result-object v0

    invoke-static {v0, v1, v4}, Lcom/droidninja/imageeditengine/views/cropimage/BitmapUtils;->decodeImage(Landroid/content/ContentResolver;Landroid/net/Uri;Landroid/graphics/BitmapFactory$Options;)Landroid/graphics/Bitmap;

    move-result-object v0
    :try_end_1
    .catch Ljava/lang/OutOfMemoryError; {:try_start_1 .. :try_end_1} :catch_1
    .catch Ljava/lang/Exception; {:try_start_1 .. :try_end_1} :catch_0

    move-object v15, v0

    .line 566
    .local v15, "fullBitmap":Landroid/graphics/Bitmap;
    if-eqz v15, :cond_2

    .line 569
    :try_start_2
    array-length v0, v2

    new-array v0, v0, [F

    .line 570
    .local v0, "points2":[F
    array-length v8, v2

    const/4 v9, 0x0

    invoke-static {v2, v9, v0, v9, v8}, Ljava/lang/System;->arraycopy(Ljava/lang/Object;ILjava/lang/Object;II)V

    .line 571
    const/4 v8, 0x0

    .local v8, "i":I
    :goto_0
    array-length v9, v0
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_2

    if-ge v8, v9, :cond_0

    .line 572
    :try_start_3
    aget v9, v0, v8

    iget v10, v4, Landroid/graphics/BitmapFactory$Options;->inSampleSize:I

    int-to-float v10, v10

    div-float/2addr v9, v10

    aput v9, v0, v8
    :try_end_3
    .catchall {:try_start_3 .. :try_end_3} :catchall_0

    .line 571
    add-int/lit8 v8, v8, 0x1

    goto :goto_0

    .line 587
    .end local v0    # "points2":[F
    .end local v8    # "i":I
    :catchall_0
    move-exception v0

    move-object v8, v15

    goto :goto_1

    .line 575
    .restart local v0    # "points2":[F
    :cond_0
    const/high16 v14, 0x3f800000    # 1.0f

    .line 576
    move-object v8, v15

    move-object v9, v0

    move/from16 v10, p3

    move/from16 v11, p4

    move/from16 v12, p5

    move/from16 v13, p6

    move-object/from16 v17, v15

    .end local v15    # "fullBitmap":Landroid/graphics/Bitmap;
    .local v17, "fullBitmap":Landroid/graphics/Bitmap;
    move/from16 v15, p11

    move/from16 v16, p12

    :try_start_4
    invoke-static/range {v8 .. v16}, Lcom/droidninja/imageeditengine/views/cropimage/BitmapUtils;->cropBitmapObjectWithScale(Landroid/graphics/Bitmap;[FIZIIFZZ)Landroid/graphics/Bitmap;

    move-result-object v8
    :try_end_4
    .catchall {:try_start_4 .. :try_end_4} :catchall_1

    move-object v3, v8

    .line 587
    .end local v0    # "points2":[F
    move-object/from16 v8, v17

    .end local v17    # "fullBitmap":Landroid/graphics/Bitmap;
    .local v8, "fullBitmap":Landroid/graphics/Bitmap;
    if-eq v3, v8, :cond_3

    .line 588
    :try_start_5
    invoke-virtual {v8}, Landroid/graphics/Bitmap;->recycle()V

    goto :goto_2

    .line 587
    .end local v8    # "fullBitmap":Landroid/graphics/Bitmap;
    .restart local v17    # "fullBitmap":Landroid/graphics/Bitmap;
    :catchall_1
    move-exception v0

    move-object/from16 v8, v17

    .end local v17    # "fullBitmap":Landroid/graphics/Bitmap;
    .restart local v8    # "fullBitmap":Landroid/graphics/Bitmap;
    goto :goto_1

    .end local v8    # "fullBitmap":Landroid/graphics/Bitmap;
    .restart local v15    # "fullBitmap":Landroid/graphics/Bitmap;
    :catchall_2
    move-exception v0

    move-object v8, v15

    .end local v15    # "fullBitmap":Landroid/graphics/Bitmap;
    .restart local v8    # "fullBitmap":Landroid/graphics/Bitmap;
    :goto_1
    if-eq v3, v8, :cond_1

    .line 588
    invoke-virtual {v8}, Landroid/graphics/Bitmap;->recycle()V

    .line 590
    :cond_1
    nop

    .end local v3    # "result":Landroid/graphics/Bitmap;
    .end local p0    # "context":Landroid/content/Context;
    .end local p1    # "loadedImageUri":Landroid/net/Uri;
    .end local p2    # "points":[F
    .end local p3    # "degreesRotated":I
    .end local p4    # "fixAspectRatio":Z
    .end local p5    # "aspectRatioX":I
    .end local p6    # "aspectRatioY":I
    .end local p7    # "sampleMulti":I
    .end local p8    # "rect":Landroid/graphics/Rect;
    .end local p9    # "width":I
    .end local p10    # "height":I
    .end local p11    # "flipHorizontally":Z
    .end local p12    # "flipVertically":Z
    throw v0
    :try_end_5
    .catch Ljava/lang/OutOfMemoryError; {:try_start_5 .. :try_end_5} :catch_1
    .catch Ljava/lang/Exception; {:try_start_5 .. :try_end_5} :catch_0

    .line 566
    .end local v8    # "fullBitmap":Landroid/graphics/Bitmap;
    .restart local v3    # "result":Landroid/graphics/Bitmap;
    .restart local v15    # "fullBitmap":Landroid/graphics/Bitmap;
    .restart local p0    # "context":Landroid/content/Context;
    .restart local p1    # "loadedImageUri":Landroid/net/Uri;
    .restart local p2    # "points":[F
    .restart local p3    # "degreesRotated":I
    .restart local p4    # "fixAspectRatio":Z
    .restart local p5    # "aspectRatioX":I
    .restart local p6    # "aspectRatioY":I
    .restart local p7    # "sampleMulti":I
    .restart local p8    # "rect":Landroid/graphics/Rect;
    .restart local p9    # "width":I
    .restart local p10    # "height":I
    .restart local p11    # "flipHorizontally":Z
    .restart local p12    # "flipVertically":Z
    :cond_2
    move-object v8, v15

    .line 600
    .end local v4    # "options":Landroid/graphics/BitmapFactory$Options;
    .end local v15    # "fullBitmap":Landroid/graphics/Bitmap;
    :cond_3
    :goto_2
    nop

    .line 601
    new-instance v0, Lcom/droidninja/imageeditengine/views/cropimage/BitmapUtils$BitmapSampled;

    invoke-direct {v0, v3, v5}, Lcom/droidninja/imageeditengine/views/cropimage/BitmapUtils$BitmapSampled;-><init>(Landroid/graphics/Bitmap;I)V

    return-object v0

    .line 597
    .end local v5    # "sampleSize":I
    :catch_0
    move-exception v0

    goto :goto_3

    .line 592
    :catch_1
    move-exception v0

    goto :goto_4

    .line 597
    :catch_2
    move-exception v0

    move/from16 v6, p9

    move/from16 v7, p10

    .line 598
    .local v0, "e":Ljava/lang/Exception;
    :goto_3
    new-instance v4, Ljava/lang/RuntimeException;

    new-instance v5, Ljava/lang/StringBuilder;

    invoke-direct {v5}, Ljava/lang/StringBuilder;-><init>()V

    const-string v8, "Failed to load sampled bitmap: "

    invoke-virtual {v5, v8}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v5

    invoke-virtual {v5, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v5

    const-string v8, "\r\n"

    invoke-virtual {v5, v8}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v5

    .line 599
    invoke-virtual {v0}, Ljava/lang/Exception;->getMessage()Ljava/lang/String;

    move-result-object v8

    invoke-virtual {v5, v8}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v5

    invoke-virtual {v5}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v5

    invoke-direct {v4, v5, v0}, Ljava/lang/RuntimeException;-><init>(Ljava/lang/String;Ljava/lang/Throwable;)V

    throw v4

    .line 592
    .end local v0    # "e":Ljava/lang/Exception;
    :catch_3
    move-exception v0

    move/from16 v6, p9

    move/from16 v7, p10

    .line 593
    .local v0, "e":Ljava/lang/OutOfMemoryError;
    :goto_4
    if-eqz v3, :cond_4

    .line 594
    invoke-virtual {v3}, Landroid/graphics/Bitmap;->recycle()V

    .line 596
    :cond_4
    throw v0
.end method

.method static cropBitmapObjectHandleOOM(Landroid/graphics/Bitmap;[FIZIIZZ)Lcom/droidninja/imageeditengine/views/cropimage/BitmapUtils$BitmapSampled;
    .locals 12
    .param p0, "bitmap"    # Landroid/graphics/Bitmap;
    .param p1, "points"    # [F
    .param p2, "degreesRotated"    # I
    .param p3, "fixAspectRatio"    # Z
    .param p4, "aspectRatioX"    # I
    .param p5, "aspectRatioY"    # I
    .param p6, "flipHorizontally"    # Z
    .param p7, "flipVertically"    # Z

    .line 158
    const/4 v0, 0x1

    move v1, v0

    .line 161
    .local v1, "scale":I
    :goto_0
    const/high16 v0, 0x3f800000    # 1.0f

    int-to-float v2, v1

    div-float v9, v0, v2

    .line 162
    move-object v3, p0

    move-object v4, p1

    move v5, p2

    move v6, p3

    move/from16 v7, p4

    move/from16 v8, p5

    move/from16 v10, p6

    move/from16 v11, p7

    :try_start_0
    invoke-static/range {v3 .. v11}, Lcom/droidninja/imageeditengine/views/cropimage/BitmapUtils;->cropBitmapObjectWithScale(Landroid/graphics/Bitmap;[FIZIIFZZ)Landroid/graphics/Bitmap;

    move-result-object v0

    .line 172
    .local v0, "cropBitmap":Landroid/graphics/Bitmap;
    new-instance v2, Lcom/droidninja/imageeditengine/views/cropimage/BitmapUtils$BitmapSampled;

    invoke-direct {v2, v0, v1}, Lcom/droidninja/imageeditengine/views/cropimage/BitmapUtils$BitmapSampled;-><init>(Landroid/graphics/Bitmap;I)V
    :try_end_0
    .catch Ljava/lang/OutOfMemoryError; {:try_start_0 .. :try_end_0} :catch_0

    return-object v2

    .line 173
    .end local v0    # "cropBitmap":Landroid/graphics/Bitmap;
    :catch_0
    move-exception v0

    .line 174
    .local v0, "e":Ljava/lang/OutOfMemoryError;
    mul-int/lit8 v1, v1, 0x2

    .line 175
    const/16 v2, 0x8

    if-gt v1, v2, :cond_0

    .line 178
    .end local v0    # "e":Ljava/lang/OutOfMemoryError;
    goto :goto_0

    .line 176
    .restart local v0    # "e":Ljava/lang/OutOfMemoryError;
    :cond_0
    throw v0
.end method

.method private static cropBitmapObjectWithScale(Landroid/graphics/Bitmap;[FIZIIFZZ)Landroid/graphics/Bitmap;
    .locals 13
    .param p0, "bitmap"    # Landroid/graphics/Bitmap;
    .param p1, "points"    # [F
    .param p2, "degreesRotated"    # I
    .param p3, "fixAspectRatio"    # Z
    .param p4, "aspectRatioX"    # I
    .param p5, "aspectRatioY"    # I
    .param p6, "scale"    # F
    .param p7, "flipHorizontally"    # Z
    .param p8, "flipVertically"    # Z

    .line 204
    move-object v7, p0

    move v8, p2

    move/from16 v9, p6

    .line 207
    invoke-virtual {p0}, Landroid/graphics/Bitmap;->getWidth()I

    move-result v1

    .line 208
    invoke-virtual {p0}, Landroid/graphics/Bitmap;->getHeight()I

    move-result v2

    .line 205
    move-object v0, p1

    move/from16 v3, p3

    move/from16 v4, p4

    move/from16 v5, p5

    invoke-static/range {v0 .. v5}, Lcom/droidninja/imageeditengine/views/cropimage/BitmapUtils;->getRectFromPoints([FIIZII)Landroid/graphics/Rect;

    move-result-object v10

    .line 214
    .local v10, "rect":Landroid/graphics/Rect;
    new-instance v0, Landroid/graphics/Matrix;

    invoke-direct {v0}, Landroid/graphics/Matrix;-><init>()V

    move-object v11, v0

    .line 215
    .local v11, "matrix":Landroid/graphics/Matrix;
    int-to-float v0, v8

    invoke-virtual {p0}, Landroid/graphics/Bitmap;->getWidth()I

    move-result v1

    div-int/lit8 v1, v1, 0x2

    int-to-float v1, v1

    invoke-virtual {p0}, Landroid/graphics/Bitmap;->getHeight()I

    move-result v2

    div-int/lit8 v2, v2, 0x2

    int-to-float v2, v2

    invoke-virtual {v11, v0, v1, v2}, Landroid/graphics/Matrix;->setRotate(FFF)V

    .line 216
    if-eqz p7, :cond_0

    neg-float v0, v9

    goto :goto_0

    :cond_0
    move v0, v9

    :goto_0
    if-eqz p8, :cond_1

    neg-float v1, v9

    goto :goto_1

    :cond_1
    move v1, v9

    :goto_1
    invoke-virtual {v11, v0, v1}, Landroid/graphics/Matrix;->postScale(FF)Z

    .line 217
    iget v1, v10, Landroid/graphics/Rect;->left:I

    iget v2, v10, Landroid/graphics/Rect;->top:I

    .line 218
    invoke-virtual {v10}, Landroid/graphics/Rect;->width()I

    move-result v3

    invoke-virtual {v10}, Landroid/graphics/Rect;->height()I

    move-result v4

    const/4 v6, 0x1

    move-object v0, p0

    move-object v5, v11

    invoke-static/range {v0 .. v6}, Landroid/graphics/Bitmap;->createBitmap(Landroid/graphics/Bitmap;IIIILandroid/graphics/Matrix;Z)Landroid/graphics/Bitmap;

    move-result-object v0

    .line 220
    .local v0, "result":Landroid/graphics/Bitmap;
    if-ne v0, v7, :cond_2

    .line 222
    invoke-virtual {p0}, Landroid/graphics/Bitmap;->getConfig()Landroid/graphics/Bitmap$Config;

    move-result-object v1

    const/4 v2, 0x0

    invoke-virtual {p0, v1, v2}, Landroid/graphics/Bitmap;->copy(Landroid/graphics/Bitmap$Config;Z)Landroid/graphics/Bitmap;

    move-result-object v0

    move-object v12, v0

    goto :goto_2

    .line 220
    :cond_2
    move-object v12, v0

    .line 226
    .end local v0    # "result":Landroid/graphics/Bitmap;
    .local v12, "result":Landroid/graphics/Bitmap;
    :goto_2
    rem-int/lit8 v0, v8, 0x5a

    if-eqz v0, :cond_3

    .line 230
    nop

    .line 231
    move-object v0, v12

    move-object v1, p1

    move-object v2, v10

    move v3, p2

    move/from16 v4, p3

    move/from16 v5, p4

    move/from16 v6, p5

    invoke-static/range {v0 .. v6}, Lcom/droidninja/imageeditengine/views/cropimage/BitmapUtils;->cropForRotatedImage(Landroid/graphics/Bitmap;[FLandroid/graphics/Rect;IZII)Landroid/graphics/Bitmap;

    move-result-object v12

    .line 235
    :cond_3
    return-object v12
.end method

.method private static cropForRotatedImage(Landroid/graphics/Bitmap;[FLandroid/graphics/Rect;IZII)Landroid/graphics/Bitmap;
    .locals 16
    .param p0, "bitmap"    # Landroid/graphics/Bitmap;
    .param p1, "points"    # [F
    .param p2, "rect"    # Landroid/graphics/Rect;
    .param p3, "degreesRotated"    # I
    .param p4, "fixAspectRatio"    # Z
    .param p5, "aspectRatioX"    # I
    .param p6, "aspectRatioY"    # I

    .line 693
    move-object/from16 v0, p1

    move-object/from16 v1, p2

    move/from16 v2, p3

    rem-int/lit8 v3, v2, 0x5a

    if-eqz v3, :cond_5

    .line 695
    const/4 v3, 0x0

    .local v3, "adjLeft":I
    const/4 v4, 0x0

    .local v4, "adjTop":I
    const/4 v5, 0x0

    .local v5, "width":I
    const/4 v6, 0x0

    .line 696
    .local v6, "height":I
    int-to-double v7, v2

    invoke-static {v7, v8}, Ljava/lang/Math;->toRadians(D)D

    move-result-wide v7

    .line 698
    .local v7, "rads":D
    const/16 v9, 0x5a

    if-lt v2, v9, :cond_1

    const/16 v9, 0xb4

    if-le v2, v9, :cond_0

    const/16 v9, 0x10e

    if-ge v2, v9, :cond_0

    goto :goto_0

    .line 700
    :cond_0
    iget v9, v1, Landroid/graphics/Rect;->right:I

    goto :goto_1

    .line 699
    :cond_1
    :goto_0
    iget v9, v1, Landroid/graphics/Rect;->left:I

    .line 700
    :goto_1
    nop

    .line 701
    .local v9, "compareTo":I
    const/4 v10, 0x0

    .local v10, "i":I
    :goto_2
    array-length v11, v0

    if-ge v10, v11, :cond_3

    .line 702
    aget v11, v0, v10

    add-int/lit8 v12, v9, -0x1

    int-to-float v12, v12

    cmpl-float v11, v11, v12

    if-ltz v11, :cond_2

    aget v11, v0, v10

    add-int/lit8 v12, v9, 0x1

    int-to-float v12, v12

    cmpg-float v11, v11, v12

    if-gtz v11, :cond_2

    .line 703
    invoke-static {v7, v8}, Ljava/lang/Math;->sin(D)D

    move-result-wide v11

    iget v13, v1, Landroid/graphics/Rect;->bottom:I

    int-to-float v13, v13

    add-int/lit8 v14, v10, 0x1

    aget v14, v0, v14

    sub-float/2addr v13, v14

    float-to-double v13, v13

    mul-double/2addr v11, v13

    invoke-static {v11, v12}, Ljava/lang/Math;->abs(D)D

    move-result-wide v11

    double-to-int v3, v11

    .line 704
    invoke-static {v7, v8}, Ljava/lang/Math;->cos(D)D

    move-result-wide v11

    add-int/lit8 v13, v10, 0x1

    aget v13, v0, v13

    iget v14, v1, Landroid/graphics/Rect;->top:I

    int-to-float v14, v14

    sub-float/2addr v13, v14

    float-to-double v13, v13

    mul-double/2addr v11, v13

    invoke-static {v11, v12}, Ljava/lang/Math;->abs(D)D

    move-result-wide v11

    double-to-int v4, v11

    .line 705
    add-int/lit8 v11, v10, 0x1

    aget v11, v0, v11

    iget v12, v1, Landroid/graphics/Rect;->top:I

    int-to-float v12, v12

    sub-float/2addr v11, v12

    float-to-double v11, v11

    invoke-static {v7, v8}, Ljava/lang/Math;->sin(D)D

    move-result-wide v13

    div-double/2addr v11, v13

    invoke-static {v11, v12}, Ljava/lang/Math;->abs(D)D

    move-result-wide v11

    double-to-int v5, v11

    .line 706
    iget v11, v1, Landroid/graphics/Rect;->bottom:I

    int-to-float v11, v11

    add-int/lit8 v12, v10, 0x1

    aget v12, v0, v12

    sub-float/2addr v11, v12

    float-to-double v11, v11

    invoke-static {v7, v8}, Ljava/lang/Math;->cos(D)D

    move-result-wide v13

    div-double/2addr v11, v13

    invoke-static {v11, v12}, Ljava/lang/Math;->abs(D)D

    move-result-wide v11

    double-to-int v6, v11

    .line 707
    goto :goto_3

    .line 701
    :cond_2
    add-int/lit8 v10, v10, 0x2

    goto :goto_2

    .line 711
    .end local v10    # "i":I
    :cond_3
    :goto_3
    add-int v10, v3, v5

    add-int v11, v4, v6

    invoke-virtual {v1, v3, v4, v10, v11}, Landroid/graphics/Rect;->set(IIII)V

    .line 712
    if-eqz p4, :cond_4

    .line 713
    move/from16 v10, p5

    move/from16 v11, p6

    invoke-static {v1, v10, v11}, Lcom/droidninja/imageeditengine/views/cropimage/BitmapUtils;->fixRectForAspectRatio(Landroid/graphics/Rect;II)V

    goto :goto_4

    .line 712
    :cond_4
    move/from16 v10, p5

    move/from16 v11, p6

    .line 716
    :goto_4
    move-object/from16 v12, p0

    .line 717
    .local v12, "bitmapTmp":Landroid/graphics/Bitmap;
    iget v13, v1, Landroid/graphics/Rect;->left:I

    iget v14, v1, Landroid/graphics/Rect;->top:I

    invoke-virtual/range {p2 .. p2}, Landroid/graphics/Rect;->width()I

    move-result v15

    invoke-virtual/range {p2 .. p2}, Landroid/graphics/Rect;->height()I

    move-result v0

    move-object/from16 v1, p0

    invoke-static {v1, v13, v14, v15, v0}, Landroid/graphics/Bitmap;->createBitmap(Landroid/graphics/Bitmap;IIII)Landroid/graphics/Bitmap;

    move-result-object v0

    .line 718
    .end local p0    # "bitmap":Landroid/graphics/Bitmap;
    .local v0, "bitmap":Landroid/graphics/Bitmap;
    if-eq v12, v0, :cond_6

    .line 719
    invoke-virtual {v12}, Landroid/graphics/Bitmap;->recycle()V

    goto :goto_5

    .line 693
    .end local v0    # "bitmap":Landroid/graphics/Bitmap;
    .end local v3    # "adjLeft":I
    .end local v4    # "adjTop":I
    .end local v5    # "width":I
    .end local v6    # "height":I
    .end local v7    # "rads":D
    .end local v9    # "compareTo":I
    .end local v12    # "bitmapTmp":Landroid/graphics/Bitmap;
    .restart local p0    # "bitmap":Landroid/graphics/Bitmap;
    :cond_5
    move-object/from16 v1, p0

    move/from16 v10, p5

    move/from16 v11, p6

    move-object v0, v1

    .line 722
    .end local p0    # "bitmap":Landroid/graphics/Bitmap;
    .restart local v0    # "bitmap":Landroid/graphics/Bitmap;
    :cond_6
    :goto_5
    return-object v0
.end method

.method private static decodeImage(Landroid/content/ContentResolver;Landroid/net/Uri;Landroid/graphics/BitmapFactory$Options;)Landroid/graphics/Bitmap;
    .locals 3
    .param p0, "resolver"    # Landroid/content/ContentResolver;
    .param p1, "uri"    # Landroid/net/Uri;
    .param p2, "options"    # Landroid/graphics/BitmapFactory$Options;
    .annotation system Ldalvik/annotation/Throws;
        value = {
            Ljava/io/FileNotFoundException;
        }
    .end annotation

    .line 628
    :goto_0
    const/4 v0, 0x0

    .line 630
    .local v0, "stream":Ljava/io/InputStream;
    :try_start_0
    invoke-virtual {p0, p1}, Landroid/content/ContentResolver;->openInputStream(Landroid/net/Uri;)Ljava/io/InputStream;

    move-result-object v1

    move-object v0, v1

    .line 631
    sget-object v1, Lcom/droidninja/imageeditengine/views/cropimage/BitmapUtils;->EMPTY_RECT:Landroid/graphics/Rect;

    invoke-static {v0, v1, p2}, Landroid/graphics/BitmapFactory;->decodeStream(Ljava/io/InputStream;Landroid/graphics/Rect;Landroid/graphics/BitmapFactory$Options;)Landroid/graphics/Bitmap;

    move-result-object v1
    :try_end_0
    .catch Ljava/lang/OutOfMemoryError; {:try_start_0 .. :try_end_0} :catch_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    .line 635
    invoke-static {v0}, Lcom/droidninja/imageeditengine/views/cropimage/BitmapUtils;->closeSafe(Ljava/io/Closeable;)V

    .line 631
    return-object v1

    .line 635
    :catchall_0
    move-exception v1

    goto :goto_1

    .line 632
    :catch_0
    move-exception v1

    .line 633
    .local v1, "e":Ljava/lang/OutOfMemoryError;
    :try_start_1
    iget v2, p2, Landroid/graphics/BitmapFactory$Options;->inSampleSize:I

    mul-int/lit8 v2, v2, 0x2

    iput v2, p2, Landroid/graphics/BitmapFactory$Options;->inSampleSize:I
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    .line 635
    .end local v1    # "e":Ljava/lang/OutOfMemoryError;
    invoke-static {v0}, Lcom/droidninja/imageeditengine/views/cropimage/BitmapUtils;->closeSafe(Ljava/io/Closeable;)V

    .line 636
    nop

    .line 637
    .end local v0    # "stream":Ljava/io/InputStream;
    iget v0, p2, Landroid/graphics/BitmapFactory$Options;->inSampleSize:I

    const/16 v1, 0x200

    if-gt v0, v1, :cond_0

    goto :goto_0

    .line 638
    :cond_0
    new-instance v0, Ljava/lang/RuntimeException;

    new-instance v1, Ljava/lang/StringBuilder;

    invoke-direct {v1}, Ljava/lang/StringBuilder;-><init>()V

    const-string v2, "Failed to decode image: "

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v1

    invoke-virtual {v1, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v1

    invoke-virtual {v1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v1

    invoke-direct {v0, v1}, Ljava/lang/RuntimeException;-><init>(Ljava/lang/String;)V

    throw v0

    .line 635
    .restart local v0    # "stream":Ljava/io/InputStream;
    :goto_1
    invoke-static {v0}, Lcom/droidninja/imageeditengine/views/cropimage/BitmapUtils;->closeSafe(Ljava/io/Closeable;)V

    .line 636
    throw v1
.end method

.method private static decodeImageForOption(Landroid/content/ContentResolver;Landroid/net/Uri;)Landroid/graphics/BitmapFactory$Options;
    .locals 3
    .param p0, "resolver"    # Landroid/content/ContentResolver;
    .param p1, "uri"    # Landroid/net/Uri;
    .annotation system Ldalvik/annotation/Throws;
        value = {
            Ljava/io/FileNotFoundException;
        }
    .end annotation

    .line 607
    const/4 v0, 0x0

    .line 609
    .local v0, "stream":Ljava/io/InputStream;
    :try_start_0
    invoke-virtual {p0, p1}, Landroid/content/ContentResolver;->openInputStream(Landroid/net/Uri;)Ljava/io/InputStream;

    move-result-object v1

    move-object v0, v1

    .line 610
    new-instance v1, Landroid/graphics/BitmapFactory$Options;

    invoke-direct {v1}, Landroid/graphics/BitmapFactory$Options;-><init>()V

    .line 611
    .local v1, "options":Landroid/graphics/BitmapFactory$Options;
    const/4 v2, 0x1

    iput-boolean v2, v1, Landroid/graphics/BitmapFactory$Options;->inJustDecodeBounds:Z

    .line 612
    sget-object v2, Lcom/droidninja/imageeditengine/views/cropimage/BitmapUtils;->EMPTY_RECT:Landroid/graphics/Rect;

    invoke-static {v0, v2, v1}, Landroid/graphics/BitmapFactory;->decodeStream(Ljava/io/InputStream;Landroid/graphics/Rect;Landroid/graphics/BitmapFactory$Options;)Landroid/graphics/Bitmap;

    .line 613
    const/4 v2, 0x0

    iput-boolean v2, v1, Landroid/graphics/BitmapFactory$Options;->inJustDecodeBounds:Z
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    .line 614
    nop

    .line 616
    invoke-static {v0}, Lcom/droidninja/imageeditengine/views/cropimage/BitmapUtils;->closeSafe(Ljava/io/Closeable;)V

    .line 614
    return-object v1

    .line 616
    .end local v1    # "options":Landroid/graphics/BitmapFactory$Options;
    :catchall_0
    move-exception v1

    invoke-static {v0}, Lcom/droidninja/imageeditengine/views/cropimage/BitmapUtils;->closeSafe(Ljava/io/Closeable;)V

    .line 617
    throw v1
.end method

.method static decodeSampledBitmap(Landroid/content/Context;Landroid/net/Uri;II)Lcom/droidninja/imageeditengine/views/cropimage/BitmapUtils$BitmapSampled;
    .locals 5
    .param p0, "context"    # Landroid/content/Context;
    .param p1, "uri"    # Landroid/net/Uri;
    .param p2, "reqWidth"    # I
    .param p3, "reqHeight"    # I

    .line 118
    :try_start_0
    invoke-virtual {p0}, Landroid/content/Context;->getContentResolver()Landroid/content/ContentResolver;

    move-result-object v0

    .line 121
    .local v0, "resolver":Landroid/content/ContentResolver;
    invoke-static {v0, p1}, Lcom/droidninja/imageeditengine/views/cropimage/BitmapUtils;->decodeImageForOption(Landroid/content/ContentResolver;Landroid/net/Uri;)Landroid/graphics/BitmapFactory$Options;

    move-result-object v1

    .line 124
    .local v1, "options":Landroid/graphics/BitmapFactory$Options;
    iget v2, v1, Landroid/graphics/BitmapFactory$Options;->outWidth:I

    iget v3, v1, Landroid/graphics/BitmapFactory$Options;->outHeight:I

    .line 126
    invoke-static {v2, v3, p2, p3}, Lcom/droidninja/imageeditengine/views/cropimage/BitmapUtils;->calculateInSampleSizeByReqestedSize(IIII)I

    move-result v2

    iget v3, v1, Landroid/graphics/BitmapFactory$Options;->outWidth:I

    iget v4, v1, Landroid/graphics/BitmapFactory$Options;->outHeight:I

    .line 128
    invoke-static {v3, v4}, Lcom/droidninja/imageeditengine/views/cropimage/BitmapUtils;->calculateInSampleSizeByMaxTextureSize(II)I

    move-result v3

    .line 125
    invoke-static {v2, v3}, Ljava/lang/Math;->max(II)I

    move-result v2

    iput v2, v1, Landroid/graphics/BitmapFactory$Options;->inSampleSize:I

    .line 131
    invoke-static {v0, p1, v1}, Lcom/droidninja/imageeditengine/views/cropimage/BitmapUtils;->decodeImage(Landroid/content/ContentResolver;Landroid/net/Uri;Landroid/graphics/BitmapFactory$Options;)Landroid/graphics/Bitmap;

    move-result-object v2

    .line 133
    .local v2, "bitmap":Landroid/graphics/Bitmap;
    new-instance v3, Lcom/droidninja/imageeditengine/views/cropimage/BitmapUtils$BitmapSampled;

    iget v4, v1, Landroid/graphics/BitmapFactory$Options;->inSampleSize:I

    invoke-direct {v3, v2, v4}, Lcom/droidninja/imageeditengine/views/cropimage/BitmapUtils$BitmapSampled;-><init>(Landroid/graphics/Bitmap;I)V
    :try_end_0
    .catch Ljava/lang/Exception; {:try_start_0 .. :try_end_0} :catch_0

    return-object v3

    .line 135
    .end local v0    # "resolver":Landroid/content/ContentResolver;
    .end local v1    # "options":Landroid/graphics/BitmapFactory$Options;
    .end local v2    # "bitmap":Landroid/graphics/Bitmap;
    :catch_0
    move-exception v0

    .line 136
    .local v0, "e":Ljava/lang/Exception;
    new-instance v1, Ljava/lang/RuntimeException;

    new-instance v2, Ljava/lang/StringBuilder;

    invoke-direct {v2}, Ljava/lang/StringBuilder;-><init>()V

    const-string v3, "Failed to load sampled bitmap: "

    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v2

    invoke-virtual {v2, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v2

    const-string v3, "\r\n"

    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v2

    .line 137
    invoke-virtual {v0}, Ljava/lang/Exception;->getMessage()Ljava/lang/String;

    move-result-object v3

    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v2

    invoke-virtual {v2}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v2

    invoke-direct {v1, v2, v0}, Ljava/lang/RuntimeException;-><init>(Ljava/lang/String;Ljava/lang/Throwable;)V

    throw v1
.end method

.method private static decodeSampledBitmapRegion(Landroid/content/Context;Landroid/net/Uri;Landroid/graphics/Rect;III)Lcom/droidninja/imageeditengine/views/cropimage/BitmapUtils$BitmapSampled;
    .locals 6
    .param p0, "context"    # Landroid/content/Context;
    .param p1, "uri"    # Landroid/net/Uri;
    .param p2, "rect"    # Landroid/graphics/Rect;
    .param p3, "reqWidth"    # I
    .param p4, "reqHeight"    # I
    .param p5, "sampleMulti"    # I

    .line 649
    const/4 v0, 0x0

    .line 650
    .local v0, "stream":Ljava/io/InputStream;
    const/4 v1, 0x0

    .line 652
    .local v1, "decoder":Landroid/graphics/BitmapRegionDecoder;
    :try_start_0
    new-instance v2, Landroid/graphics/BitmapFactory$Options;

    invoke-direct {v2}, Landroid/graphics/BitmapFactory$Options;-><init>()V

    .line 653
    .local v2, "options":Landroid/graphics/BitmapFactory$Options;
    nop

    .line 656
    invoke-virtual {p2}, Landroid/graphics/Rect;->width()I

    move-result v3

    invoke-virtual {p2}, Landroid/graphics/Rect;->height()I

    move-result v4

    .line 655
    invoke-static {v3, v4, p3, p4}, Lcom/droidninja/imageeditengine/views/cropimage/BitmapUtils;->calculateInSampleSizeByReqestedSize(IIII)I

    move-result v3

    mul-int/2addr v3, p5

    iput v3, v2, Landroid/graphics/BitmapFactory$Options;->inSampleSize:I

    .line 658
    invoke-virtual {p0}, Landroid/content/Context;->getContentResolver()Landroid/content/ContentResolver;

    move-result-object v3

    invoke-virtual {v3, p1}, Landroid/content/ContentResolver;->openInputStream(Landroid/net/Uri;)Ljava/io/InputStream;

    move-result-object v3

    move-object v0, v3

    .line 659
    const/4 v3, 0x0

    invoke-static {v0, v3}, Landroid/graphics/BitmapRegionDecoder;->newInstance(Ljava/io/InputStream;Z)Landroid/graphics/BitmapRegionDecoder;

    move-result-object v3
    :try_end_0
    .catch Ljava/lang/Exception; {:try_start_0 .. :try_end_0} :catch_1
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    move-object v1, v3

    .line 662
    :cond_0
    :try_start_1
    new-instance v3, Lcom/droidninja/imageeditengine/views/cropimage/BitmapUtils$BitmapSampled;

    invoke-virtual {v1, p2, v2}, Landroid/graphics/BitmapRegionDecoder;->decodeRegion(Landroid/graphics/Rect;Landroid/graphics/BitmapFactory$Options;)Landroid/graphics/Bitmap;

    move-result-object v4

    iget v5, v2, Landroid/graphics/BitmapFactory$Options;->inSampleSize:I

    invoke-direct {v3, v4, v5}, Lcom/droidninja/imageeditengine/views/cropimage/BitmapUtils$BitmapSampled;-><init>(Landroid/graphics/Bitmap;I)V
    :try_end_1
    .catch Ljava/lang/OutOfMemoryError; {:try_start_1 .. :try_end_1} :catch_0
    .catch Ljava/lang/Exception; {:try_start_1 .. :try_end_1} :catch_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    .line 671
    invoke-static {v0}, Lcom/droidninja/imageeditengine/views/cropimage/BitmapUtils;->closeSafe(Ljava/io/Closeable;)V

    .line 672
    if-eqz v1, :cond_1

    .line 673
    invoke-virtual {v1}, Landroid/graphics/BitmapRegionDecoder;->recycle()V

    .line 662
    :cond_1
    return-object v3

    .line 663
    :catch_0
    move-exception v3

    .line 664
    .local v3, "e":Ljava/lang/OutOfMemoryError;
    :try_start_2
    iget v4, v2, Landroid/graphics/BitmapFactory$Options;->inSampleSize:I

    mul-int/lit8 v4, v4, 0x2

    iput v4, v2, Landroid/graphics/BitmapFactory$Options;->inSampleSize:I

    .line 666
    .end local v3    # "e":Ljava/lang/OutOfMemoryError;
    iget v3, v2, Landroid/graphics/BitmapFactory$Options;->inSampleSize:I
    :try_end_2
    .catch Ljava/lang/Exception; {:try_start_2 .. :try_end_2} :catch_1
    .catchall {:try_start_2 .. :try_end_2} :catchall_0

    const/16 v4, 0x200

    if-le v3, v4, :cond_0

    .line 671
    .end local v2    # "options":Landroid/graphics/BitmapFactory$Options;
    invoke-static {v0}, Lcom/droidninja/imageeditengine/views/cropimage/BitmapUtils;->closeSafe(Ljava/io/Closeable;)V

    .line 672
    if-eqz v1, :cond_2

    .line 673
    invoke-virtual {v1}, Landroid/graphics/BitmapRegionDecoder;->recycle()V

    .line 676
    :cond_2
    new-instance v2, Lcom/droidninja/imageeditengine/views/cropimage/BitmapUtils$BitmapSampled;

    const/4 v3, 0x0

    const/4 v4, 0x1

    invoke-direct {v2, v3, v4}, Lcom/droidninja/imageeditengine/views/cropimage/BitmapUtils$BitmapSampled;-><init>(Landroid/graphics/Bitmap;I)V

    return-object v2

    .line 671
    :catchall_0
    move-exception v2

    goto :goto_0

    .line 667
    :catch_1
    move-exception v2

    .line 668
    .local v2, "e":Ljava/lang/Exception;
    :try_start_3
    new-instance v3, Ljava/lang/RuntimeException;

    new-instance v4, Ljava/lang/StringBuilder;

    invoke-direct {v4}, Ljava/lang/StringBuilder;-><init>()V

    const-string v5, "Failed to load sampled bitmap: "

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v4

    invoke-virtual {v4, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v4

    const-string v5, "\r\n"

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v4

    .line 669
    invoke-virtual {v2}, Ljava/lang/Exception;->getMessage()Ljava/lang/String;

    move-result-object v5

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v4

    invoke-virtual {v4}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v4

    invoke-direct {v3, v4, v2}, Ljava/lang/RuntimeException;-><init>(Ljava/lang/String;Ljava/lang/Throwable;)V

    .end local v0    # "stream":Ljava/io/InputStream;
    .end local v1    # "decoder":Landroid/graphics/BitmapRegionDecoder;
    .end local p0    # "context":Landroid/content/Context;
    .end local p1    # "uri":Landroid/net/Uri;
    .end local p2    # "rect":Landroid/graphics/Rect;
    .end local p3    # "reqWidth":I
    .end local p4    # "reqHeight":I
    .end local p5    # "sampleMulti":I
    throw v3
    :try_end_3
    .catchall {:try_start_3 .. :try_end_3} :catchall_0

    .line 671
    .end local v2    # "e":Ljava/lang/Exception;
    .restart local v0    # "stream":Ljava/io/InputStream;
    .restart local v1    # "decoder":Landroid/graphics/BitmapRegionDecoder;
    .restart local p0    # "context":Landroid/content/Context;
    .restart local p1    # "uri":Landroid/net/Uri;
    .restart local p2    # "rect":Landroid/graphics/Rect;
    .restart local p3    # "reqWidth":I
    .restart local p4    # "reqHeight":I
    .restart local p5    # "sampleMulti":I
    :goto_0
    invoke-static {v0}, Lcom/droidninja/imageeditengine/views/cropimage/BitmapUtils;->closeSafe(Ljava/io/Closeable;)V

    .line 672
    if-eqz v1, :cond_3

    .line 673
    invoke-virtual {v1}, Landroid/graphics/BitmapRegionDecoder;->recycle()V

    .line 675
    :cond_3
    throw v2
.end method

.method private static fixRectForAspectRatio(Landroid/graphics/Rect;II)V
    .locals 3
    .param p0, "rect"    # Landroid/graphics/Rect;
    .param p1, "aspectRatioX"    # I
    .param p2, "aspectRatioY"    # I

    .line 362
    if-ne p1, p2, :cond_1

    invoke-virtual {p0}, Landroid/graphics/Rect;->width()I

    move-result v0

    invoke-virtual {p0}, Landroid/graphics/Rect;->height()I

    move-result v1

    if-eq v0, v1, :cond_1

    .line 363
    invoke-virtual {p0}, Landroid/graphics/Rect;->height()I

    move-result v0

    invoke-virtual {p0}, Landroid/graphics/Rect;->width()I

    move-result v1

    if-le v0, v1, :cond_0

    .line 364
    iget v0, p0, Landroid/graphics/Rect;->bottom:I

    invoke-virtual {p0}, Landroid/graphics/Rect;->height()I

    move-result v1

    invoke-virtual {p0}, Landroid/graphics/Rect;->width()I

    move-result v2

    sub-int/2addr v1, v2

    sub-int/2addr v0, v1

    iput v0, p0, Landroid/graphics/Rect;->bottom:I

    goto :goto_0

    .line 366
    :cond_0
    iget v0, p0, Landroid/graphics/Rect;->right:I

    invoke-virtual {p0}, Landroid/graphics/Rect;->width()I

    move-result v1

    invoke-virtual {p0}, Landroid/graphics/Rect;->height()I

    move-result v2

    sub-int/2addr v1, v2

    sub-int/2addr v0, v1

    iput v0, p0, Landroid/graphics/Rect;->right:I

    .line 369
    :cond_1
    :goto_0
    return-void
.end method

.method private static getMaxTextureSize()I
    .locals 13

    .line 785
    const/16 v0, 0x800

    .line 789
    .local v0, "IMAGE_MAX_BITMAP_DIMENSION":I
    const/16 v1, 0x800

    :try_start_0
    invoke-static {}, Ljavax/microedition/khronos/egl/EGLContext;->getEGL()Ljavax/microedition/khronos/egl/EGL;

    move-result-object v2

    check-cast v2, Ljavax/microedition/khronos/egl/EGL10;

    .line 790
    .local v2, "egl":Ljavax/microedition/khronos/egl/EGL10;
    sget-object v3, Ljavax/microedition/khronos/egl/EGL10;->EGL_DEFAULT_DISPLAY:Ljava/lang/Object;

    invoke-interface {v2, v3}, Ljavax/microedition/khronos/egl/EGL10;->eglGetDisplay(Ljava/lang/Object;)Ljavax/microedition/khronos/egl/EGLDisplay;

    move-result-object v3

    .line 793
    .local v3, "display":Ljavax/microedition/khronos/egl/EGLDisplay;
    const/4 v4, 0x2

    new-array v4, v4, [I

    .line 794
    .local v4, "version":[I
    invoke-interface {v2, v3, v4}, Ljavax/microedition/khronos/egl/EGL10;->eglInitialize(Ljavax/microedition/khronos/egl/EGLDisplay;[I)Z

    .line 797
    const/4 v5, 0x1

    new-array v6, v5, [I

    .line 798
    .local v6, "totalConfigurations":[I
    const/4 v7, 0x0

    const/4 v8, 0x0

    invoke-interface {v2, v3, v7, v8, v6}, Ljavax/microedition/khronos/egl/EGL10;->eglGetConfigs(Ljavax/microedition/khronos/egl/EGLDisplay;[Ljavax/microedition/khronos/egl/EGLConfig;I[I)Z

    .line 801
    aget v7, v6, v8

    new-array v7, v7, [Ljavax/microedition/khronos/egl/EGLConfig;

    .line 802
    .local v7, "configurationsList":[Ljavax/microedition/khronos/egl/EGLConfig;
    aget v9, v6, v8

    invoke-interface {v2, v3, v7, v9, v6}, Ljavax/microedition/khronos/egl/EGL10;->eglGetConfigs(Ljavax/microedition/khronos/egl/EGLDisplay;[Ljavax/microedition/khronos/egl/EGLConfig;I[I)Z

    .line 804
    new-array v5, v5, [I

    .line 805
    .local v5, "textureSize":[I
    const/4 v9, 0x0

    .line 808
    .local v9, "maximumTextureSize":I
    const/4 v10, 0x0

    .local v10, "i":I
    :goto_0
    aget v11, v6, v8

    if-ge v10, v11, :cond_1

    .line 810
    aget-object v11, v7, v10

    const/16 v12, 0x302c

    invoke-interface {v2, v3, v11, v12, v5}, Ljavax/microedition/khronos/egl/EGL10;->eglGetConfigAttrib(Ljavax/microedition/khronos/egl/EGLDisplay;Ljavax/microedition/khronos/egl/EGLConfig;I[I)Z

    .line 814
    aget v11, v5, v8

    if-ge v9, v11, :cond_0

    .line 815
    aget v11, v5, v8

    move v9, v11

    .line 808
    :cond_0
    add-int/lit8 v10, v10, 0x1

    goto :goto_0

    .line 820
    .end local v10    # "i":I
    :cond_1
    invoke-interface {v2, v3}, Ljavax/microedition/khronos/egl/EGL10;->eglTerminate(Ljavax/microedition/khronos/egl/EGLDisplay;)Z

    .line 823
    invoke-static {v9, v1}, Ljava/lang/Math;->max(II)I

    move-result v1
    :try_end_0
    .catch Ljava/lang/Exception; {:try_start_0 .. :try_end_0} :catch_0

    return v1

    .line 824
    .end local v2    # "egl":Ljavax/microedition/khronos/egl/EGL10;
    .end local v3    # "display":Ljavax/microedition/khronos/egl/EGLDisplay;
    .end local v4    # "version":[I
    .end local v5    # "textureSize":[I
    .end local v6    # "totalConfigurations":[I
    .end local v7    # "configurationsList":[Ljavax/microedition/khronos/egl/EGLConfig;
    .end local v9    # "maximumTextureSize":I
    :catch_0
    move-exception v2

    .line 825
    .local v2, "e":Ljava/lang/Exception;
    return v1
.end method

.method static getRectBottom([F)F
    .locals 2
    .param p0, "points"    # [F

    .line 310
    const/4 v0, 0x1

    aget v0, p0, v0

    const/4 v1, 0x3

    aget v1, p0, v1

    invoke-static {v0, v1}, Ljava/lang/Math;->max(FF)F

    move-result v0

    const/4 v1, 0x5

    aget v1, p0, v1

    invoke-static {v0, v1}, Ljava/lang/Math;->max(FF)F

    move-result v0

    const/4 v1, 0x7

    aget v1, p0, v1

    invoke-static {v0, v1}, Ljava/lang/Math;->max(FF)F

    move-result v0

    return v0
.end method

.method static getRectCenterX([F)F
    .locals 2
    .param p0, "points"    # [F

    .line 325
    invoke-static {p0}, Lcom/droidninja/imageeditengine/views/cropimage/BitmapUtils;->getRectRight([F)F

    move-result v0

    invoke-static {p0}, Lcom/droidninja/imageeditengine/views/cropimage/BitmapUtils;->getRectLeft([F)F

    move-result v1

    add-float/2addr v0, v1

    const/high16 v1, 0x40000000    # 2.0f

    div-float/2addr v0, v1

    return v0
.end method

.method static getRectCenterY([F)F
    .locals 2
    .param p0, "points"    # [F

    .line 330
    invoke-static {p0}, Lcom/droidninja/imageeditengine/views/cropimage/BitmapUtils;->getRectBottom([F)F

    move-result v0

    invoke-static {p0}, Lcom/droidninja/imageeditengine/views/cropimage/BitmapUtils;->getRectTop([F)F

    move-result v1

    add-float/2addr v0, v1

    const/high16 v1, 0x40000000    # 2.0f

    div-float/2addr v0, v1

    return v0
.end method

.method static getRectFromPoints([FIIZII)Landroid/graphics/Rect;
    .locals 5
    .param p0, "points"    # [F
    .param p1, "imageWidth"    # I
    .param p2, "imageHeight"    # I
    .param p3, "fixAspectRatio"    # Z
    .param p4, "aspectRatioX"    # I
    .param p5, "aspectRatioY"    # I

    .line 344
    invoke-static {p0}, Lcom/droidninja/imageeditengine/views/cropimage/BitmapUtils;->getRectLeft([F)F

    move-result v0

    const/4 v1, 0x0

    invoke-static {v1, v0}, Ljava/lang/Math;->max(FF)F

    move-result v0

    invoke-static {v0}, Ljava/lang/Math;->round(F)I

    move-result v0

    .line 345
    .local v0, "left":I
    invoke-static {p0}, Lcom/droidninja/imageeditengine/views/cropimage/BitmapUtils;->getRectTop([F)F

    move-result v2

    invoke-static {v1, v2}, Ljava/lang/Math;->max(FF)F

    move-result v1

    invoke-static {v1}, Ljava/lang/Math;->round(F)I

    move-result v1

    .line 346
    .local v1, "top":I
    int-to-float v2, p1

    invoke-static {p0}, Lcom/droidninja/imageeditengine/views/cropimage/BitmapUtils;->getRectRight([F)F

    move-result v3

    invoke-static {v2, v3}, Ljava/lang/Math;->min(FF)F

    move-result v2

    invoke-static {v2}, Ljava/lang/Math;->round(F)I

    move-result v2

    .line 347
    .local v2, "right":I
    int-to-float v3, p2

    invoke-static {p0}, Lcom/droidninja/imageeditengine/views/cropimage/BitmapUtils;->getRectBottom([F)F

    move-result v4

    invoke-static {v3, v4}, Ljava/lang/Math;->min(FF)F

    move-result v3

    invoke-static {v3}, Ljava/lang/Math;->round(F)I

    move-result v3

    .line 349
    .local v3, "bottom":I
    new-instance v4, Landroid/graphics/Rect;

    invoke-direct {v4, v0, v1, v2, v3}, Landroid/graphics/Rect;-><init>(IIII)V

    .line 350
    .local v4, "rect":Landroid/graphics/Rect;
    if-eqz p3, :cond_0

    .line 351
    invoke-static {v4, p4, p5}, Lcom/droidninja/imageeditengine/views/cropimage/BitmapUtils;->fixRectForAspectRatio(Landroid/graphics/Rect;II)V

    .line 354
    :cond_0
    return-object v4
.end method

.method static getRectHeight([F)F
    .locals 2
    .param p0, "points"    # [F

    .line 320
    invoke-static {p0}, Lcom/droidninja/imageeditengine/views/cropimage/BitmapUtils;->getRectBottom([F)F

    move-result v0

    invoke-static {p0}, Lcom/droidninja/imageeditengine/views/cropimage/BitmapUtils;->getRectTop([F)F

    move-result v1

    sub-float/2addr v0, v1

    return v0
.end method

.method static getRectLeft([F)F
    .locals 2
    .param p0, "points"    # [F

    .line 295
    const/4 v0, 0x0

    aget v0, p0, v0

    const/4 v1, 0x2

    aget v1, p0, v1

    invoke-static {v0, v1}, Ljava/lang/Math;->min(FF)F

    move-result v0

    const/4 v1, 0x4

    aget v1, p0, v1

    invoke-static {v0, v1}, Ljava/lang/Math;->min(FF)F

    move-result v0

    const/4 v1, 0x6

    aget v1, p0, v1

    invoke-static {v0, v1}, Ljava/lang/Math;->min(FF)F

    move-result v0

    return v0
.end method

.method static getRectRight([F)F
    .locals 2
    .param p0, "points"    # [F

    .line 305
    const/4 v0, 0x0

    aget v0, p0, v0

    const/4 v1, 0x2

    aget v1, p0, v1

    invoke-static {v0, v1}, Ljava/lang/Math;->max(FF)F

    move-result v0

    const/4 v1, 0x4

    aget v1, p0, v1

    invoke-static {v0, v1}, Ljava/lang/Math;->max(FF)F

    move-result v0

    const/4 v1, 0x6

    aget v1, p0, v1

    invoke-static {v0, v1}, Ljava/lang/Math;->max(FF)F

    move-result v0

    return v0
.end method

.method static getRectTop([F)F
    .locals 2
    .param p0, "points"    # [F

    .line 300
    const/4 v0, 0x1

    aget v0, p0, v0

    const/4 v1, 0x3

    aget v1, p0, v1

    invoke-static {v0, v1}, Ljava/lang/Math;->min(FF)F

    move-result v0

    const/4 v1, 0x5

    aget v1, p0, v1

    invoke-static {v0, v1}, Ljava/lang/Math;->min(FF)F

    move-result v0

    const/4 v1, 0x7

    aget v1, p0, v1

    invoke-static {v0, v1}, Ljava/lang/Math;->min(FF)F

    move-result v0

    return v0
.end method

.method static getRectWidth([F)F
    .locals 2
    .param p0, "points"    # [F

    .line 315
    invoke-static {p0}, Lcom/droidninja/imageeditengine/views/cropimage/BitmapUtils;->getRectRight([F)F

    move-result v0

    invoke-static {p0}, Lcom/droidninja/imageeditengine/views/cropimage/BitmapUtils;->getRectLeft([F)F

    move-result v1

    sub-float/2addr v0, v1

    return v0
.end method

.method static resizeBitmap(Landroid/graphics/Bitmap;IILcom/droidninja/imageeditengine/views/cropimage/IEECropImageView$RequestSizeOptions;)Landroid/graphics/Bitmap;
    .locals 7
    .param p0, "bitmap"    # Landroid/graphics/Bitmap;
    .param p1, "reqWidth"    # I
    .param p2, "reqHeight"    # I
    .param p3, "options"    # Lcom/droidninja/imageeditengine/views/cropimage/IEECropImageView$RequestSizeOptions;

    .line 420
    if-lez p1, :cond_5

    if-lez p2, :cond_5

    :try_start_0
    sget-object v0, Lcom/droidninja/imageeditengine/views/cropimage/IEECropImageView$RequestSizeOptions;->RESIZE_FIT:Lcom/droidninja/imageeditengine/views/cropimage/IEECropImageView$RequestSizeOptions;

    if-eq p3, v0, :cond_0

    sget-object v0, Lcom/droidninja/imageeditengine/views/cropimage/IEECropImageView$RequestSizeOptions;->RESIZE_INSIDE:Lcom/droidninja/imageeditengine/views/cropimage/IEECropImageView$RequestSizeOptions;

    if-eq p3, v0, :cond_0

    sget-object v0, Lcom/droidninja/imageeditengine/views/cropimage/IEECropImageView$RequestSizeOptions;->RESIZE_EXACT:Lcom/droidninja/imageeditengine/views/cropimage/IEECropImageView$RequestSizeOptions;

    if-ne p3, v0, :cond_5

    .line 426
    :cond_0
    const/4 v0, 0x0

    .line 427
    .local v0, "resized":Landroid/graphics/Bitmap;
    sget-object v1, Lcom/droidninja/imageeditengine/views/cropimage/IEECropImageView$RequestSizeOptions;->RESIZE_EXACT:Lcom/droidninja/imageeditengine/views/cropimage/IEECropImageView$RequestSizeOptions;

    const/4 v2, 0x0

    if-ne p3, v1, :cond_1

    .line 428
    invoke-static {p0, p1, p2, v2}, Landroid/graphics/Bitmap;->createScaledBitmap(Landroid/graphics/Bitmap;IIZ)Landroid/graphics/Bitmap;

    move-result-object v1

    move-object v0, v1

    goto :goto_0

    .line 430
    :cond_1
    invoke-virtual {p0}, Landroid/graphics/Bitmap;->getWidth()I

    move-result v1

    .line 431
    .local v1, "width":I
    invoke-virtual {p0}, Landroid/graphics/Bitmap;->getHeight()I

    move-result v3

    .line 432
    .local v3, "height":I
    int-to-float v4, v1

    int-to-float v5, p1

    div-float/2addr v4, v5

    int-to-float v5, v3

    int-to-float v6, p2

    div-float/2addr v5, v6

    invoke-static {v4, v5}, Ljava/lang/Math;->max(FF)F

    move-result v4

    .line 433
    .local v4, "scale":F
    const/high16 v5, 0x3f800000    # 1.0f

    cmpl-float v5, v4, v5

    if-gtz v5, :cond_2

    sget-object v5, Lcom/droidninja/imageeditengine/views/cropimage/IEECropImageView$RequestSizeOptions;->RESIZE_FIT:Lcom/droidninja/imageeditengine/views/cropimage/IEECropImageView$RequestSizeOptions;

    if-ne p3, v5, :cond_3

    .line 434
    :cond_2
    int-to-float v5, v1

    div-float/2addr v5, v4

    float-to-int v5, v5

    int-to-float v6, v3

    div-float/2addr v6, v4

    float-to-int v6, v6

    .line 435
    invoke-static {p0, v5, v6, v2}, Landroid/graphics/Bitmap;->createScaledBitmap(Landroid/graphics/Bitmap;IIZ)Landroid/graphics/Bitmap;

    move-result-object v2

    move-object v0, v2

    .line 439
    .end local v1    # "width":I
    .end local v3    # "height":I
    .end local v4    # "scale":F
    :cond_3
    :goto_0
    if-eqz v0, :cond_5

    .line 440
    if-eq v0, p0, :cond_4

    .line 441
    invoke-virtual {p0}, Landroid/graphics/Bitmap;->recycle()V
    :try_end_0
    .catch Ljava/lang/Exception; {:try_start_0 .. :try_end_0} :catch_0

    .line 443
    :cond_4
    return-object v0

    .line 446
    .end local v0    # "resized":Landroid/graphics/Bitmap;
    :catch_0
    move-exception v0

    .line 447
    .local v0, "e":Ljava/lang/Exception;
    const-string v1, "AIC"

    const-string v2, "Failed to resize cropped image, return bitmap before resize"

    invoke-static {v1, v2, v0}, Landroid/util/Log;->w(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)I

    goto :goto_1

    .line 448
    .end local v0    # "e":Ljava/lang/Exception;
    :cond_5
    nop

    .line 449
    :goto_1
    return-object p0
.end method

.method private static rotateAndFlipBitmapInt(Landroid/graphics/Bitmap;IZZ)Landroid/graphics/Bitmap;
    .locals 8
    .param p0, "bitmap"    # Landroid/graphics/Bitmap;
    .param p1, "degrees"    # I
    .param p2, "flipHorizontally"    # Z
    .param p3, "flipVertically"    # Z

    .line 764
    if-gtz p1, :cond_1

    if-nez p2, :cond_1

    if-eqz p3, :cond_0

    goto :goto_0

    .line 775
    :cond_0
    return-object p0

    .line 765
    :cond_1
    :goto_0
    new-instance v0, Landroid/graphics/Matrix;

    invoke-direct {v0}, Landroid/graphics/Matrix;-><init>()V

    .line 766
    .local v0, "matrix":Landroid/graphics/Matrix;
    int-to-float v1, p1

    invoke-virtual {v0, v1}, Landroid/graphics/Matrix;->setRotate(F)V

    .line 767
    const/high16 v1, -0x40800000    # -1.0f

    const/high16 v2, 0x3f800000    # 1.0f

    if-eqz p2, :cond_2

    move v3, v1

    goto :goto_1

    :cond_2
    move v3, v2

    :goto_1
    if-eqz p3, :cond_3

    goto :goto_2

    :cond_3
    move v1, v2

    :goto_2
    invoke-virtual {v0, v3, v1}, Landroid/graphics/Matrix;->postScale(FF)Z

    .line 768
    const/4 v2, 0x0

    const/4 v3, 0x0

    .line 769
    invoke-virtual {p0}, Landroid/graphics/Bitmap;->getWidth()I

    move-result v4

    invoke-virtual {p0}, Landroid/graphics/Bitmap;->getHeight()I

    move-result v5

    const/4 v7, 0x0

    move-object v1, p0

    move-object v6, v0

    invoke-static/range {v1 .. v7}, Landroid/graphics/Bitmap;->createBitmap(Landroid/graphics/Bitmap;IIIILandroid/graphics/Matrix;Z)Landroid/graphics/Bitmap;

    move-result-object v1

    .line 770
    .local v1, "newBitmap":Landroid/graphics/Bitmap;
    if-eq v1, p0, :cond_4

    .line 771
    invoke-virtual {p0}, Landroid/graphics/Bitmap;->recycle()V

    .line 773
    :cond_4
    return-object v1
.end method

.method static rotateBitmapByExif(Landroid/graphics/Bitmap;Landroid/content/Context;Landroid/net/Uri;)Lcom/droidninja/imageeditengine/views/cropimage/BitmapUtils$RotateBitmapResult;
    .locals 3
    .param p0, "bitmap"    # Landroid/graphics/Bitmap;
    .param p1, "context"    # Landroid/content/Context;
    .param p2, "uri"    # Landroid/net/Uri;

    .line 76
    const/4 v0, 0x0

    .line 78
    .local v0, "ei":Landroid/media/ExifInterface;
    :try_start_0
    invoke-virtual {p1}, Landroid/content/Context;->getContentResolver()Landroid/content/ContentResolver;

    move-result-object v1

    invoke-virtual {v1, p2}, Landroid/content/ContentResolver;->openInputStream(Landroid/net/Uri;)Ljava/io/InputStream;

    move-result-object v1

    .line 79
    .local v1, "is":Ljava/io/InputStream;
    if-eqz v1, :cond_0

    .line 80
    new-instance v2, Landroid/media/ExifInterface;

    invoke-direct {v2, v1}, Landroid/media/ExifInterface;-><init>(Ljava/io/InputStream;)V

    move-object v0, v2

    .line 81
    invoke-virtual {v1}, Ljava/io/InputStream;->close()V
    :try_end_0
    .catch Ljava/lang/Exception; {:try_start_0 .. :try_end_0} :catch_0

    .line 84
    .end local v1    # "is":Ljava/io/InputStream;
    :cond_0
    goto :goto_0

    .line 83
    :catch_0
    move-exception v1

    .line 85
    :goto_0
    if-eqz v0, :cond_1

    invoke-static {p0, v0}, Lcom/droidninja/imageeditengine/views/cropimage/BitmapUtils;->rotateBitmapByExif(Landroid/graphics/Bitmap;Landroid/media/ExifInterface;)Lcom/droidninja/imageeditengine/views/cropimage/BitmapUtils$RotateBitmapResult;

    move-result-object v1

    goto :goto_1

    :cond_1
    new-instance v1, Lcom/droidninja/imageeditengine/views/cropimage/BitmapUtils$RotateBitmapResult;

    const/4 v2, 0x0

    invoke-direct {v1, p0, v2}, Lcom/droidninja/imageeditengine/views/cropimage/BitmapUtils$RotateBitmapResult;-><init>(Landroid/graphics/Bitmap;I)V

    :goto_1
    return-object v1
.end method

.method static rotateBitmapByExif(Landroid/graphics/Bitmap;Landroid/media/ExifInterface;)Lcom/droidninja/imageeditengine/views/cropimage/BitmapUtils$RotateBitmapResult;
    .locals 3
    .param p0, "bitmap"    # Landroid/graphics/Bitmap;
    .param p1, "exif"    # Landroid/media/ExifInterface;

    .line 95
    nop

    .line 96
    const-string v0, "Orientation"

    const/4 v1, 0x1

    invoke-virtual {p1, v0, v1}, Landroid/media/ExifInterface;->getAttributeInt(Ljava/lang/String;I)I

    move-result v0

    .line 97
    .local v0, "orientation":I
    sparse-switch v0, :sswitch_data_0

    .line 108
    const/4 v1, 0x0

    .local v1, "degrees":I
    goto :goto_0

    .line 105
    .end local v1    # "degrees":I
    :sswitch_0
    const/16 v1, 0x10e

    .line 106
    .restart local v1    # "degrees":I
    goto :goto_0

    .line 99
    .end local v1    # "degrees":I
    :sswitch_1
    const/16 v1, 0x5a

    .line 100
    .restart local v1    # "degrees":I
    goto :goto_0

    .line 102
    .end local v1    # "degrees":I
    :sswitch_2
    const/16 v1, 0xb4

    .line 103
    .restart local v1    # "degrees":I
    nop

    .line 111
    :goto_0
    new-instance v2, Lcom/droidninja/imageeditengine/views/cropimage/BitmapUtils$RotateBitmapResult;

    invoke-direct {v2, p0, v1}, Lcom/droidninja/imageeditengine/views/cropimage/BitmapUtils$RotateBitmapResult;-><init>(Landroid/graphics/Bitmap;I)V

    return-object v2

    :sswitch_data_0
    .sparse-switch
        0x3 -> :sswitch_2
        0x6 -> :sswitch_1
        0x8 -> :sswitch_0
    .end sparse-switch
.end method

.method static writeBitmapToUri(Landroid/content/Context;Landroid/graphics/Bitmap;Landroid/net/Uri;Landroid/graphics/Bitmap$CompressFormat;I)V
    .locals 2
    .param p0, "context"    # Landroid/content/Context;
    .param p1, "bitmap"    # Landroid/graphics/Bitmap;
    .param p2, "uri"    # Landroid/net/Uri;
    .param p3, "compressFormat"    # Landroid/graphics/Bitmap$CompressFormat;
    .param p4, "compressQuality"    # I
    .annotation system Ldalvik/annotation/Throws;
        value = {
            Ljava/io/FileNotFoundException;
        }
    .end annotation

    .line 407
    const/4 v0, 0x0

    .line 409
    .local v0, "outputStream":Ljava/io/OutputStream;
    :try_start_0
    invoke-virtual {p0}, Landroid/content/Context;->getContentResolver()Landroid/content/ContentResolver;

    move-result-object v1

    invoke-virtual {v1, p2}, Landroid/content/ContentResolver;->openOutputStream(Landroid/net/Uri;)Ljava/io/OutputStream;

    move-result-object v1

    move-object v0, v1

    .line 410
    invoke-virtual {p1, p3, p4, v0}, Landroid/graphics/Bitmap;->compress(Landroid/graphics/Bitmap$CompressFormat;ILjava/io/OutputStream;)Z
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    .line 412
    invoke-static {v0}, Lcom/droidninja/imageeditengine/views/cropimage/BitmapUtils;->closeSafe(Ljava/io/Closeable;)V

    .line 413
    nop

    .line 414
    return-void

    .line 412
    :catchall_0
    move-exception v1

    invoke-static {v0}, Lcom/droidninja/imageeditengine/views/cropimage/BitmapUtils;->closeSafe(Ljava/io/Closeable;)V

    .line 413
    throw v1
.end method

.method static writeTempStateStoreBitmap(Landroid/content/Context;Landroid/graphics/Bitmap;Landroid/net/Uri;)Landroid/net/Uri;
    .locals 4
    .param p0, "context"    # Landroid/content/Context;
    .param p1, "bitmap"    # Landroid/graphics/Bitmap;
    .param p2, "uri"    # Landroid/net/Uri;

    .line 381
    const/4 v0, 0x1

    .line 382
    .local v0, "needSave":Z
    if-nez p2, :cond_0

    .line 383
    :try_start_0
    const-string v1, "aic_state_store_temp"

    const-string v2, ".jpg"

    .line 385
    invoke-virtual {p0}, Landroid/content/Context;->getCacheDir()Ljava/io/File;

    move-result-object v3

    invoke-static {v1, v2, v3}, Ljava/io/File;->createTempFile(Ljava/lang/String;Ljava/lang/String;Ljava/io/File;)Ljava/io/File;

    move-result-object v1

    .line 384
    invoke-static {v1}, Landroid/net/Uri;->fromFile(Ljava/io/File;)Landroid/net/Uri;

    move-result-object v1

    move-object p2, v1

    goto :goto_0

    .line 386
    :cond_0
    new-instance v1, Ljava/io/File;

    invoke-virtual {p2}, Landroid/net/Uri;->getPath()Ljava/lang/String;

    move-result-object v2

    invoke-direct {v1, v2}, Ljava/io/File;-><init>(Ljava/lang/String;)V

    invoke-virtual {v1}, Ljava/io/File;->exists()Z

    move-result v1

    if-eqz v1, :cond_1

    .line 387
    const/4 v0, 0x0

    .line 389
    :cond_1
    :goto_0
    if-eqz v0, :cond_2

    .line 390
    sget-object v1, Landroid/graphics/Bitmap$CompressFormat;->JPEG:Landroid/graphics/Bitmap$CompressFormat;

    const/16 v2, 0x5f

    invoke-static {p0, p1, p2, v1, v2}, Lcom/droidninja/imageeditengine/views/cropimage/BitmapUtils;->writeBitmapToUri(Landroid/content/Context;Landroid/graphics/Bitmap;Landroid/net/Uri;Landroid/graphics/Bitmap$CompressFormat;I)V
    :try_end_0
    .catch Ljava/lang/Exception; {:try_start_0 .. :try_end_0} :catch_0

    .line 392
    :cond_2
    return-object p2

    .line 393
    .end local v0    # "needSave":Z
    :catch_0
    move-exception v0

    .line 394
    .local v0, "e":Ljava/lang/Exception;
    const-string v1, "AIC"

    const-string v2, "Failed to write bitmap to temp file for image-cropper save instance state"

    invoke-static {v1, v2, v0}, Landroid/util/Log;->w(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)I

    .line 395
    const/4 v1, 0x0

    return-object v1
.end method
