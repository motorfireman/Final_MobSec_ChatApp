.class public Lcom/droidninja/imageeditengine/views/imagezoom/utils/DecodeUtils;
.super Ljava/lang/Object;
.source "DecodeUtils.java"


# direct methods
.method public constructor <init>()V
    .locals 0

    .line 23
    invoke-direct {p0}, Ljava/lang/Object;-><init>()V

    return-void
.end method

.method private static computeSampleSize(IIIII)I
    .locals 8
    .param p0, "bitmapW"    # I
    .param p1, "bitmapH"    # I
    .param p2, "maxW"    # I
    .param p3, "maxH"    # I
    .param p4, "orientation"    # I

    .line 145
    if-eqz p4, :cond_1

    const/16 v0, 0xb4

    if-ne p4, v0, :cond_0

    goto :goto_0

    .line 149
    :cond_0
    int-to-double v0, p1

    .line 150
    .local v0, "w":D
    int-to-double v2, p0

    .local v2, "h":D
    goto :goto_1

    .line 146
    .end local v0    # "w":D
    .end local v2    # "h":D
    :cond_1
    :goto_0
    int-to-double v0, p0

    .line 147
    .restart local v0    # "w":D
    int-to-double v2, p1

    .line 153
    .restart local v2    # "h":D
    :goto_1
    int-to-double v4, p2

    div-double v4, v0, v4

    int-to-double v6, p3

    div-double v6, v2, v6

    invoke-static {v4, v5, v6, v7}, Ljava/lang/Math;->max(DD)D

    move-result-wide v4

    invoke-static {v4, v5}, Ljava/lang/Math;->ceil(D)D

    move-result-wide v4

    double-to-int v4, v4

    .line 154
    .local v4, "sampleSize":I
    return v4
.end method

.method public static decode(Landroid/content/Context;Landroid/net/Uri;II)Landroid/graphics/Bitmap;
    .locals 16
    .param p0, "context"    # Landroid/content/Context;
    .param p1, "uri"    # Landroid/net/Uri;
    .param p2, "maxW"    # I
    .param p3, "maxH"    # I

    .line 35
    move/from16 v7, p2

    move/from16 v8, p3

    invoke-static/range {p0 .. p1}, Lcom/droidninja/imageeditengine/views/imagezoom/utils/DecodeUtils;->openInputStream(Landroid/content/Context;Landroid/net/Uri;)Ljava/io/InputStream;

    move-result-object v9

    .line 36
    .local v9, "stream":Ljava/io/InputStream;
    if-nez v9, :cond_0

    .line 37
    const/4 v0, 0x0

    return-object v0

    .line 40
    :cond_0
    invoke-static/range {p0 .. p1}, Lcom/droidninja/imageeditengine/views/imagezoom/utils/ExifUtils;->getExifOrientation(Landroid/content/Context;Landroid/net/Uri;)I

    move-result v10

    .line 42
    .local v10, "orientation":I
    const/4 v11, 0x0

    .line 43
    .local v11, "bitmap":Landroid/graphics/Bitmap;
    const/4 v0, 0x2

    new-array v12, v0, [I

    .line 44
    .local v12, "imageSize":[I
    invoke-static {v9, v12}, Lcom/droidninja/imageeditengine/views/imagezoom/utils/DecodeUtils;->decodeImageBounds(Ljava/io/InputStream;[I)Z

    move-result v13

    .line 45
    .local v13, "decoded":Z
    invoke-static {v9}, Lcom/droidninja/imageeditengine/views/imagezoom/utils/IOUtils;->closeSilently(Ljava/io/Closeable;)V

    .line 47
    if-eqz v13, :cond_3

    .line 49
    if-ltz v7, :cond_2

    if-gez v8, :cond_1

    goto :goto_0

    .line 52
    :cond_1
    const/4 v0, 0x0

    aget v0, v12, v0

    const/4 v1, 0x1

    aget v1, v12, v1

    int-to-double v2, v7

    const-wide v4, 0x3ff3333333333333L    # 1.2

    mul-double/2addr v2, v4

    double-to-int v2, v2

    int-to-double v14, v8

    mul-double/2addr v14, v4

    double-to-int v3, v14

    invoke-static {v0, v1, v2, v3, v10}, Lcom/droidninja/imageeditengine/views/imagezoom/utils/DecodeUtils;->computeSampleSize(IIIII)I

    move-result v0

    move v14, v0

    .local v0, "sampleSize":I
    goto :goto_1

    .line 50
    .end local v0    # "sampleSize":I
    :cond_2
    :goto_0
    const/4 v0, 0x1

    move v14, v0

    .line 55
    .local v14, "sampleSize":I
    :goto_1
    invoke-static {}, Lcom/droidninja/imageeditengine/views/imagezoom/utils/DecodeUtils;->getDefaultOptions()Landroid/graphics/BitmapFactory$Options;

    move-result-object v15

    .line 56
    .local v15, "options":Landroid/graphics/BitmapFactory$Options;
    iput v14, v15, Landroid/graphics/BitmapFactory$Options;->inSampleSize:I

    .line 58
    const/4 v6, 0x0

    move-object/from16 v0, p0

    move-object/from16 v1, p1

    move-object v2, v15

    move/from16 v3, p2

    move/from16 v4, p3

    move v5, v10

    invoke-static/range {v0 .. v6}, Lcom/droidninja/imageeditengine/views/imagezoom/utils/DecodeUtils;->decodeBitmap(Landroid/content/Context;Landroid/net/Uri;Landroid/graphics/BitmapFactory$Options;IIII)Landroid/graphics/Bitmap;

    move-result-object v11

    .line 61
    .end local v14    # "sampleSize":I
    .end local v15    # "options":Landroid/graphics/BitmapFactory$Options;
    :cond_3
    return-object v11
.end method

.method static decodeBitmap(Landroid/content/Context;Landroid/net/Uri;Landroid/graphics/BitmapFactory$Options;IIII)Landroid/graphics/Bitmap;
    .locals 17
    .param p0, "context"    # Landroid/content/Context;
    .param p1, "uri"    # Landroid/net/Uri;
    .param p2, "options"    # Landroid/graphics/BitmapFactory$Options;
    .param p3, "maxW"    # I
    .param p4, "maxH"    # I
    .param p5, "orientation"    # I
    .param p6, "pass"    # I

    .line 67
    move-object/from16 v8, p2

    move/from16 v9, p3

    move/from16 v10, p4

    move/from16 v11, p6

    const/4 v1, 0x0

    .line 68
    .local v1, "bitmap":Landroid/graphics/Bitmap;
    const/4 v2, 0x0

    .line 71
    .local v2, "newBitmap":Landroid/graphics/Bitmap;
    const/4 v0, 0x0

    const/16 v3, 0x14

    if-le v11, v3, :cond_0

    .line 72
    return-object v0

    .line 75
    :cond_0
    invoke-static/range {p0 .. p1}, Lcom/droidninja/imageeditengine/views/imagezoom/utils/DecodeUtils;->openInputStream(Landroid/content/Context;Landroid/net/Uri;)Ljava/io/InputStream;

    move-result-object v12

    .line 76
    .local v12, "stream":Ljava/io/InputStream;
    if-nez v12, :cond_1

    return-object v0

    .line 80
    :cond_1
    :try_start_0
    invoke-static {v12, v0, v8}, Landroid/graphics/BitmapFactory;->decodeStream(Ljava/io/InputStream;Landroid/graphics/Rect;Landroid/graphics/BitmapFactory$Options;)Landroid/graphics/Bitmap;

    move-result-object v0

    move-object v1, v0

    .line 81
    invoke-static {v12}, Lcom/droidninja/imageeditengine/views/imagezoom/utils/IOUtils;->closeSilently(Ljava/io/Closeable;)V
    :try_end_0
    .catch Ljava/lang/OutOfMemoryError; {:try_start_0 .. :try_end_0} :catch_1

    .line 83
    if-eqz v1, :cond_4

    .line 84
    if-lez v9, :cond_3

    if-lez v10, :cond_3

    .line 85
    move/from16 v13, p5

    :try_start_1
    invoke-static {v1, v9, v10, v13}, Lcom/droidninja/imageeditengine/views/imagezoom/utils/BitmapUtils;->resizeBitmap(Landroid/graphics/Bitmap;III)Landroid/graphics/Bitmap;

    move-result-object v0

    move-object v2, v0

    .line 86
    if-eq v1, v2, :cond_2

    .line 87
    invoke-virtual {v1}, Landroid/graphics/Bitmap;->recycle()V
    :try_end_1
    .catch Ljava/lang/OutOfMemoryError; {:try_start_1 .. :try_end_1} :catch_0

    .line 89
    :cond_2
    move-object v1, v2

    goto :goto_0

    .line 93
    :catch_0
    move-exception v0

    goto :goto_1

    .line 84
    :cond_3
    move/from16 v13, p5

    goto :goto_0

    .line 83
    :cond_4
    move/from16 v13, p5

    .line 100
    :goto_0
    goto :goto_2

    .line 93
    :catch_1
    move-exception v0

    move/from16 v13, p5

    :goto_1
    move-object v14, v2

    move-object/from16 v16, v1

    move-object v1, v0

    move-object/from16 v0, v16

    .end local v1    # "bitmap":Landroid/graphics/Bitmap;
    .end local v2    # "newBitmap":Landroid/graphics/Bitmap;
    .local v0, "bitmap":Landroid/graphics/Bitmap;
    .local v14, "newBitmap":Landroid/graphics/Bitmap;
    move-object v15, v1

    .line 94
    .local v15, "error":Ljava/lang/OutOfMemoryError;
    invoke-static {v12}, Lcom/droidninja/imageeditengine/views/imagezoom/utils/IOUtils;->closeSilently(Ljava/io/Closeable;)V

    .line 95
    if-eqz v0, :cond_5

    .line 96
    invoke-virtual {v0}, Landroid/graphics/Bitmap;->recycle()V

    .line 98
    :cond_5
    iget v1, v8, Landroid/graphics/BitmapFactory$Options;->inSampleSize:I

    add-int/lit8 v1, v1, 0x1

    iput v1, v8, Landroid/graphics/BitmapFactory$Options;->inSampleSize:I

    .line 99
    add-int/lit8 v7, v11, 0x1

    move-object/from16 v1, p0

    move-object/from16 v2, p1

    move-object/from16 v3, p2

    move/from16 v4, p3

    move/from16 v5, p4

    move/from16 v6, p5

    invoke-static/range {v1 .. v7}, Lcom/droidninja/imageeditengine/views/imagezoom/utils/DecodeUtils;->decodeBitmap(Landroid/content/Context;Landroid/net/Uri;Landroid/graphics/BitmapFactory$Options;IIII)Landroid/graphics/Bitmap;

    move-result-object v1

    move-object v2, v14

    .line 101
    .end local v0    # "bitmap":Landroid/graphics/Bitmap;
    .end local v14    # "newBitmap":Landroid/graphics/Bitmap;
    .end local v15    # "error":Ljava/lang/OutOfMemoryError;
    .restart local v1    # "bitmap":Landroid/graphics/Bitmap;
    .restart local v2    # "newBitmap":Landroid/graphics/Bitmap;
    :goto_2
    return-object v1
.end method

.method public static decodeImageBounds(Ljava/io/InputStream;[I)Z
    .locals 4
    .param p0, "stream"    # Ljava/io/InputStream;
    .param p1, "outSize"    # [I

    .line 130
    new-instance v0, Landroid/graphics/BitmapFactory$Options;

    invoke-direct {v0}, Landroid/graphics/BitmapFactory$Options;-><init>()V

    .line 131
    .local v0, "options":Landroid/graphics/BitmapFactory$Options;
    const/4 v1, 0x1

    iput-boolean v1, v0, Landroid/graphics/BitmapFactory$Options;->inJustDecodeBounds:Z

    .line 132
    const/4 v2, 0x0

    invoke-static {p0, v2, v0}, Landroid/graphics/BitmapFactory;->decodeStream(Ljava/io/InputStream;Landroid/graphics/Rect;Landroid/graphics/BitmapFactory$Options;)Landroid/graphics/Bitmap;

    .line 133
    iget v2, v0, Landroid/graphics/BitmapFactory$Options;->outHeight:I

    const/4 v3, 0x0

    if-lez v2, :cond_0

    iget v2, v0, Landroid/graphics/BitmapFactory$Options;->outWidth:I

    if-lez v2, :cond_0

    .line 134
    iget v2, v0, Landroid/graphics/BitmapFactory$Options;->outWidth:I

    aput v2, p1, v3

    .line 135
    iget v2, v0, Landroid/graphics/BitmapFactory$Options;->outHeight:I

    aput v2, p1, v1

    .line 136
    return v1

    .line 138
    :cond_0
    return v3
.end method

.method static getDefaultOptions()Landroid/graphics/BitmapFactory$Options;
    .locals 3

    .line 237
    new-instance v0, Landroid/graphics/BitmapFactory$Options;

    invoke-direct {v0}, Landroid/graphics/BitmapFactory$Options;-><init>()V

    .line 238
    .local v0, "options":Landroid/graphics/BitmapFactory$Options;
    const/4 v1, 0x0

    iput-boolean v1, v0, Landroid/graphics/BitmapFactory$Options;->inScaled:Z

    .line 239
    sget-object v2, Landroid/graphics/Bitmap$Config;->ARGB_8888:Landroid/graphics/Bitmap$Config;

    iput-object v2, v0, Landroid/graphics/BitmapFactory$Options;->inPreferredConfig:Landroid/graphics/Bitmap$Config;

    .line 240
    iput-boolean v1, v0, Landroid/graphics/BitmapFactory$Options;->inDither:Z

    .line 241
    iput-boolean v1, v0, Landroid/graphics/BitmapFactory$Options;->inJustDecodeBounds:Z

    .line 242
    const/4 v1, 0x1

    iput-boolean v1, v0, Landroid/graphics/BitmapFactory$Options;->inPurgeable:Z

    .line 243
    iput-boolean v1, v0, Landroid/graphics/BitmapFactory$Options;->inInputShareable:Z

    .line 244
    const/16 v1, 0x4000

    new-array v1, v1, [B

    iput-object v1, v0, Landroid/graphics/BitmapFactory$Options;->inTempStorage:[B

    .line 245
    return-object v0
.end method

.method static openContentInputStream(Landroid/content/Context;Landroid/net/Uri;)Ljava/io/InputStream;
    .locals 1
    .param p0, "context"    # Landroid/content/Context;
    .param p1, "uri"    # Landroid/net/Uri;

    .line 182
    :try_start_0
    invoke-virtual {p0}, Landroid/content/Context;->getContentResolver()Landroid/content/ContentResolver;

    move-result-object v0

    invoke-virtual {v0, p1}, Landroid/content/ContentResolver;->openInputStream(Landroid/net/Uri;)Ljava/io/InputStream;

    move-result-object v0
    :try_end_0
    .catch Ljava/io/FileNotFoundException; {:try_start_0 .. :try_end_0} :catch_0

    return-object v0

    .line 183
    :catch_0
    move-exception v0

    .line 184
    .local v0, "e":Ljava/io/FileNotFoundException;
    invoke-virtual {v0}, Ljava/io/FileNotFoundException;->printStackTrace()V

    .line 186
    .end local v0    # "e":Ljava/io/FileNotFoundException;
    const/4 v0, 0x0

    return-object v0
.end method

.method static openFileInputStream(Ljava/lang/String;)Ljava/io/InputStream;
    .locals 1
    .param p0, "path"    # Ljava/lang/String;

    .line 166
    :try_start_0
    new-instance v0, Ljava/io/FileInputStream;

    invoke-direct {v0, p0}, Ljava/io/FileInputStream;-><init>(Ljava/lang/String;)V
    :try_end_0
    .catch Ljava/io/FileNotFoundException; {:try_start_0 .. :try_end_0} :catch_0

    return-object v0

    .line 167
    :catch_0
    move-exception v0

    .line 168
    .local v0, "e":Ljava/io/FileNotFoundException;
    invoke-virtual {v0}, Ljava/io/FileNotFoundException;->printStackTrace()V

    .line 170
    .end local v0    # "e":Ljava/io/FileNotFoundException;
    const/4 v0, 0x0

    return-object v0
.end method

.method public static openInputStream(Landroid/content/Context;Landroid/net/Uri;)Ljava/io/InputStream;
    .locals 3
    .param p0, "context"    # Landroid/content/Context;
    .param p1, "uri"    # Landroid/net/Uri;

    .line 113
    if-nez p1, :cond_0

    const/4 v0, 0x0

    return-object v0

    .line 114
    :cond_0
    invoke-virtual {p1}, Landroid/net/Uri;->getScheme()Ljava/lang/String;

    move-result-object v0

    .line 115
    .local v0, "scheme":Ljava/lang/String;
    const/4 v1, 0x0

    .line 116
    .local v1, "stream":Ljava/io/InputStream;
    if-eqz v0, :cond_4

    const-string v2, "file"

    invoke-virtual {v2, v0}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v2

    if-eqz v2, :cond_1

    goto :goto_0

    .line 119
    :cond_1
    const-string v2, "content"

    invoke-virtual {v2, v0}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v2

    if-eqz v2, :cond_2

    .line 121
    invoke-static {p0, p1}, Lcom/droidninja/imageeditengine/views/imagezoom/utils/DecodeUtils;->openContentInputStream(Landroid/content/Context;Landroid/net/Uri;)Ljava/io/InputStream;

    move-result-object v1

    goto :goto_1

    .line 122
    :cond_2
    const-string v2, "http"

    invoke-virtual {v2, v0}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v2

    if-nez v2, :cond_3

    const-string v2, "https"

    invoke-virtual {v2, v0}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v2

    if-eqz v2, :cond_5

    .line 124
    :cond_3
    invoke-static {p1}, Lcom/droidninja/imageeditengine/views/imagezoom/utils/DecodeUtils;->openRemoteInputStream(Landroid/net/Uri;)Ljava/io/InputStream;

    move-result-object v1

    goto :goto_1

    .line 118
    :cond_4
    :goto_0
    invoke-virtual {p1}, Landroid/net/Uri;->getPath()Ljava/lang/String;

    move-result-object v2

    invoke-static {v2}, Lcom/droidninja/imageeditengine/views/imagezoom/utils/DecodeUtils;->openFileInputStream(Ljava/lang/String;)Ljava/io/InputStream;

    move-result-object v1

    .line 126
    :cond_5
    :goto_1
    return-object v1
.end method

.method static openRemoteInputStream(Landroid/net/Uri;)Ljava/io/InputStream;
    .locals 5
    .param p0, "uri"    # Landroid/net/Uri;

    .line 198
    const/4 v0, 0x0

    :try_start_0
    new-instance v1, Ljava/net/URL;

    invoke-virtual {p0}, Landroid/net/Uri;->toString()Ljava/lang/String;

    move-result-object v2

    invoke-direct {v1, v2}, Ljava/net/URL;-><init>(Ljava/lang/String;)V
    :try_end_0
    .catch Ljava/net/MalformedURLException; {:try_start_0 .. :try_end_0} :catch_3

    .line 202
    .local v1, "finalUrl":Ljava/net/URL;
    nop

    .line 206
    :try_start_1
    invoke-virtual {v1}, Ljava/net/URL;->openConnection()Ljava/net/URLConnection;

    move-result-object v2

    check-cast v2, Ljava/net/HttpURLConnection;
    :try_end_1
    .catch Ljava/io/IOException; {:try_start_1 .. :try_end_1} :catch_2

    .line 210
    .local v2, "connection":Ljava/net/HttpURLConnection;
    nop

    .line 212
    const/4 v3, 0x0

    invoke-virtual {v2, v3}, Ljava/net/HttpURLConnection;->setInstanceFollowRedirects(Z)V

    .line 215
    :try_start_2
    invoke-virtual {v2}, Ljava/net/HttpURLConnection;->getResponseCode()I

    move-result v3
    :try_end_2
    .catch Ljava/io/IOException; {:try_start_2 .. :try_end_2} :catch_1

    .line 219
    .local v3, "code":I
    nop

    .line 222
    const/16 v4, 0x12d

    if-eq v3, v4, :cond_1

    const/16 v4, 0x12e

    if-eq v3, v4, :cond_1

    const/16 v4, 0x12f

    if-ne v3, v4, :cond_0

    goto :goto_0

    .line 229
    :cond_0
    :try_start_3
    invoke-virtual {v1}, Ljava/net/URL;->getContent()Ljava/lang/Object;

    move-result-object v4

    check-cast v4, Ljava/io/InputStream;
    :try_end_3
    .catch Ljava/io/IOException; {:try_start_3 .. :try_end_3} :catch_0

    return-object v4

    .line 230
    :catch_0
    move-exception v4

    .line 231
    .local v4, "e":Ljava/io/IOException;
    invoke-virtual {v4}, Ljava/io/IOException;->printStackTrace()V

    .line 232
    return-object v0

    .line 224
    .end local v4    # "e":Ljava/io/IOException;
    :cond_1
    :goto_0
    const-string v0, "Location"

    invoke-virtual {v2, v0}, Ljava/net/HttpURLConnection;->getHeaderField(Ljava/lang/String;)Ljava/lang/String;

    move-result-object v0

    .line 225
    .local v0, "newLocation":Ljava/lang/String;
    invoke-static {v0}, Landroid/net/Uri;->parse(Ljava/lang/String;)Landroid/net/Uri;

    move-result-object v4

    invoke-static {v4}, Lcom/droidninja/imageeditengine/views/imagezoom/utils/DecodeUtils;->openRemoteInputStream(Landroid/net/Uri;)Ljava/io/InputStream;

    move-result-object v4

    return-object v4

    .line 216
    .end local v0    # "newLocation":Ljava/lang/String;
    .end local v3    # "code":I
    :catch_1
    move-exception v3

    .line 217
    .local v3, "e":Ljava/io/IOException;
    invoke-virtual {v3}, Ljava/io/IOException;->printStackTrace()V

    .line 218
    return-object v0

    .line 207
    .end local v2    # "connection":Ljava/net/HttpURLConnection;
    .end local v3    # "e":Ljava/io/IOException;
    :catch_2
    move-exception v2

    .line 208
    .local v2, "e":Ljava/io/IOException;
    invoke-virtual {v2}, Ljava/io/IOException;->printStackTrace()V

    .line 209
    return-object v0

    .line 199
    .end local v1    # "finalUrl":Ljava/net/URL;
    .end local v2    # "e":Ljava/io/IOException;
    :catch_3
    move-exception v1

    .line 200
    .local v1, "e":Ljava/net/MalformedURLException;
    invoke-virtual {v1}, Ljava/net/MalformedURLException;->printStackTrace()V

    .line 201
    return-object v0
.end method
